<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.7.6 (Jython 2.5.3 on java1.7.0_45)" generated="20140610 12:47:37.393">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/IN_PP_MOC_006-PrepaidMOC-LongDuration-robot-suite.txt" id="s1" name="IN PP MOC 006-PrepaidMOC-LongDuration-robot-suite">
<kw type="setup" timeout="" name="suite-global-keyword-resource.Setup Suite">
<doc>This is the suite setup procedure that is called from "Suite Setup" keyword</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${CRM_PORTAL_LOGIN_URL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>http://${CRM HOST}:${CRM PORTAL PORT}/${CRM PORTAL LOGIN PATH}</arg>
</arguments>
<msg timestamp="20140610 12:47:48.783" level="INFO">${CRM_PORTAL_LOGIN_URL} = http://10.105.140.127:1084/evoweb/web/crm/257_EN</msg>
<status status="PASS" endtime="20140610 12:47:48.780" starttime="20140610 12:47:48.770"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
</arguments>
<msg timestamp="20140610 12:47:48.790" level="INFO">${CRM_PORTAL_LOGIN_URL} = http://10.105.140.127:1084/evoweb/web/crm/257_EN</msg>
<status status="PASS" endtime="20140610 12:47:48.792" starttime="20140610 12:47:48.786"></status>
</kw>
<kw type="kw" timeout="" name="${CRM_PORTAL_SUBSCRIBER_INPUT_URL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>http://${CRM HOST}:${CRM PORTAL PORT}/${CRM PORTAL DASHBOARD PATH}</arg>
</arguments>
<msg timestamp="20140610 12:47:48.807" level="INFO">${CRM_PORTAL_SUBSCRIBER_INPUT_URL} = http://10.105.140.127:1084/evoweb/web/crm/393_EN.htm</msg>
<status status="PASS" endtime="20140610 12:47:48.806" starttime="20140610 12:47:48.795"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CRM_PORTAL_SUBSCRIBER_INPUT_URL}</arg>
</arguments>
<msg timestamp="20140610 12:47:48.816" level="INFO">${CRM_PORTAL_SUBSCRIBER_INPUT_URL} = http://10.105.140.127:1084/evoweb/web/crm/393_EN.htm</msg>
<status status="PASS" endtime="20140610 12:47:48.817" starttime="20140610 12:47:48.811"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Verify that CRM is up and running ******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:48.822" starttime="20140610 12:47:48.820"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Init Browser ******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:48.828" starttime="20140610 12:47:48.824"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Open Browser">
<doc></doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>firefox</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:52.155" starttime="20140610 12:47:48.831"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>CRM Portal Screenshot</arg>
<arg>AfterBrowserInit</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:52.166" starttime="20140610 12:47:52.163"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Reset Phones ******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:52.171" starttime="20140610 12:47:52.168"></status>
</kw>
<kw type="kw" timeout="" name="suite-global-keyword-resource.Reset All Phones">
<doc>This helper for the TCs and Suite Setup script ensures that</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:47:52.275" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:47:52.278" starttime="20140610 12:47:52.267"></status>
</kw>
<status status="PASS" endtime="20140610 12:47:52.280" starttime="20140610 12:47:52.261"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:47:52.296" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:47:52.298" starttime="20140610 12:47:52.288"></status>
</kw>
<status status="PASS" endtime="20140610 12:47:52.300" starttime="20140610 12:47:52.283"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:47:52.316" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:47:52.318" starttime="20140610 12:47:52.309"></status>
</kw>
<status status="PASS" endtime="20140610 12:47:52.320" starttime="20140610 12:47:52.303"></status>
</kw>
<status status="PASS" endtime="20140610 12:47:52.322" starttime="20140610 12:47:52.231"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:47:52.384" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:47:52.385" starttime="20140610 12:47:52.325"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:52.392" starttime="20140610 12:47:52.388"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:52.398" starttime="20140610 12:47:52.394"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:52.402" starttime="20140610 12:47:52.400"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:52.407" starttime="20140610 12:47:52.404"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:52.413" starttime="20140610 12:47:52.409"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:47:52.420" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140610 12:47:59.726" level="INFO">12:47:52,854 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/./ext] for external libraries
12:47:52,857 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
12:47:55,017 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/android-remoting/robot_ars_bridge-soapui-project.xml]
12:47:56,669 INFO  [SoapUITestCaseRunner] Setting project property [arsHost] to [10.189.11.226]
12:47:56,670 INFO  [SoapUITestCaseRunner] Setting project property [arsPort] to [8080]
12:47:56,670 INFO  [SoapUITestCaseRunner] Setting project property [LowLevelOps.Voice.release.input.deviceImsi] to [232033013972240]
12:47:56,692 INFO  [SoapUITestCaseRunner] Running soapUI tests in project [Robotframework_ARS-Bridge]
12:47:56,692 INFO  [SoapUITestCaseRunner] Running TestCase [Voice.release]
12:47:56,709 INFO  [SoapUITestCaseRunner] Running soapUI testcase [Voice.release]
12:47:56,727 INFO  [SoapUITestCaseRunner] running step [00_ARS_availability_test]
12:47:57,138 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
12:47:57,138 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /androidremoting/system HTTP/1.1
12:47:57,142 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
12:47:57,144 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
12:47:57,397 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
12:47:57,397 INFO  [SoapUITestCaseRunner] running step [cancel_on_failed_step_0]
12:47:58,548 INFO  [SoapUITestCaseRunner] running step [01_release]
12:47:58,552 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
12:47:58,554 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
12:47:58,554 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /androidremoting/voice HTTP/1.1
12:47:58,558 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
12:47:58,559 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
12:47:58,577 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
12:47:58,577 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
12:47:58,577 INFO  [SoapUITestCaseRunner] Assertion [resultCode = OK] has status FAILED
12:47:58,577 ERROR [SoapUITestCaseRunner] ASSERTION FAILED -&gt; Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response
12:47:58,578 ERROR [SoapUITestCaseRunner] 01_release failed, exporting to [/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt]
12:47:58,587 INFO  [SoapUITestCaseRunner] running step [goto_finish_on_successfull_step_1]
12:47:58,704 INFO  [SoapUITestCaseRunner] running step [transfer_failedReason]
12:47:59,430 INFO  [SoapUITestCaseRunner] running step [cancel]
12:47:59,714 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION
12:47:59,716 ERROR [SoapUITestCaseRunner] cancel failed, exporting to [/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt]
12:47:59,717 INFO  [SoapUITestCaseRunner] Finished running soapUI testcase [Voice.release], time taken: 2956ms, status: FAILED
12:47:59,717 INFO  [SoapUITestCaseRunner] TestCase [Voice.release] finished with status [FAILED] in 2956ms</msg>
<msg timestamp="20140610 12:47:59.749" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 28
Size: 528
Timestamp: Tue Jun 10 12:47:58 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972240&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140610 12:47:59.752" starttime="20140610 12:47:52.418"></status>
</kw>
<msg timestamp="20140610 12:47:59.757" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140610 12:47:59.758" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 28
Size: 528
Timestamp: Tue Jun 10 12:47:58 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140610 12:47:59.755" starttime="20140610 12:47:52.415"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:47:59.791" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:47:59.790" starttime="20140610 12:47:59.786"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:47:59.798" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:47:59.797" starttime="20140610 12:47:59.793"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:47:59.804" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:47:59.803" starttime="20140610 12:47:59.800"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:47:59.816" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:47:59.826" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:47:59.827" starttime="20140610 12:47:59.811"></status>
</kw>
<msg timestamp="20140610 12:47:59.829" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:47:59.830" level="INFO">${return_log_entry} = 2014-06-10 12:47:59,714 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:47:59.828" starttime="20140610 12:47:59.807"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:59.861" starttime="20140610 12:47:59.857"></status>
</kw>
<msg timestamp="20140610 12:47:59.863" level="INFO">${return_log_entry} = 2014-06-10 12:47:59,714 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:47:59.862" starttime="20140610 12:47:59.832"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:59.882" starttime="20140610 12:47:59.878"></status>
</kw>
<msg timestamp="20140610 12:47:59.884" level="INFO">${return_log_entry} = 2014-06-10 12:47:59,714 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:47:59.883" starttime="20140610 12:47:59.866"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:59.905" starttime="20140610 12:47:59.899"></status>
</kw>
<msg timestamp="20140610 12:47:59.907" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:47:59.906" starttime="20140610 12:47:59.886"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:59.932" starttime="20140610 12:47:59.928"></status>
</kw>
<msg timestamp="20140610 12:47:59.934" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:47:59.933" starttime="20140610 12:47:59.909"></status>
</kw>
<msg timestamp="20140610 12:47:59.937" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:47:59.936" starttime="20140610 12:47:59.762"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:59.962" starttime="20140610 12:47:59.959"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:59.967" starttime="20140610 12:47:59.964"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:47:59.971" starttime="20140610 12:47:59.968"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:00.000" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:00.002" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:00.004" starttime="20140610 12:47:59.989"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:00.006" starttime="20140610 12:47:59.985"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:00.008" starttime="20140610 12:47:59.973"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:00.010" starttime="20140610 12:47:59.940"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:00.013" starttime="20140610 12:47:52.203"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:00.073" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:00.075" starttime="20140610 12:48:00.068"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:00.076" starttime="20140610 12:48:00.064"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:00.087" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:00.089" starttime="20140610 12:48:00.082"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:00.090" starttime="20140610 12:48:00.078"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:00.101" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:00.102" starttime="20140610 12:48:00.096"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:00.104" starttime="20140610 12:48:00.092"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:00.105" starttime="20140610 12:48:00.045"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:00.114" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:00.114" starttime="20140610 12:48:00.107"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:00.121" starttime="20140610 12:48:00.117"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:00.127" starttime="20140610 12:48:00.123"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:00.132" starttime="20140610 12:48:00.130"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:00.137" starttime="20140610 12:48:00.134"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:00.144" starttime="20140610 12:48:00.140"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:00.152" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140610 12:48:00.688" level="INFO">12:48:00,681 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140610 12:48:00.704" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 16
Size: 528
Timestamp: Tue Jun 10 12:48:00 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972239&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140610 12:48:00.707" starttime="20140610 12:48:00.150"></status>
</kw>
<msg timestamp="20140610 12:48:00.708" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140610 12:48:00.709" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 16
Size: 528
Timestamp: Tue Jun 10 12:48:00 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140610 12:48:00.708" starttime="20140610 12:48:00.146"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:00.734" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:00.733" starttime="20140610 12:48:00.729"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:00.740" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:00.739" starttime="20140610 12:48:00.736"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:00.746" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:00.745" starttime="20140610 12:48:00.742"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:00.756" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:00.758" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:00.759" starttime="20140610 12:48:00.751"></status>
</kw>
<msg timestamp="20140610 12:48:00.761" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:00.762" level="INFO">${return_log_entry} = 2014-06-10 12:48:00,681 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:00.760" starttime="20140610 12:48:00.748"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:00.779" starttime="20140610 12:48:00.775"></status>
</kw>
<msg timestamp="20140610 12:48:00.781" level="INFO">${return_log_entry} = 2014-06-10 12:48:00,681 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:00.780" starttime="20140610 12:48:00.764"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:00.797" starttime="20140610 12:48:00.794"></status>
</kw>
<msg timestamp="20140610 12:48:00.799" level="INFO">${return_log_entry} = 2014-06-10 12:48:00,681 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:00.798" starttime="20140610 12:48:00.783"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:00.817" starttime="20140610 12:48:00.812"></status>
</kw>
<msg timestamp="20140610 12:48:00.819" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:00.818" starttime="20140610 12:48:00.801"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:00.841" starttime="20140610 12:48:00.838"></status>
</kw>
<msg timestamp="20140610 12:48:00.843" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:00.843" starttime="20140610 12:48:00.821"></status>
</kw>
<msg timestamp="20140610 12:48:00.846" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:00.845" starttime="20140610 12:48:00.712"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:00.868" starttime="20140610 12:48:00.865"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:00.872" starttime="20140610 12:48:00.869"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:00.876" starttime="20140610 12:48:00.874"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:00.898" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:00.900" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:00.902" starttime="20140610 12:48:00.892"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:00.903" starttime="20140610 12:48:00.889"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:00.904" starttime="20140610 12:48:00.878"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:00.905" starttime="20140610 12:48:00.848"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:00.906" starttime="20140610 12:48:00.020"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:00.955" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:00.957" starttime="20140610 12:48:00.951"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:00.958" starttime="20140610 12:48:00.947"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:01.071" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:01.073" starttime="20140610 12:48:01.061"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:01.074" starttime="20140610 12:48:01.051"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:01.089" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:01.091" starttime="20140610 12:48:01.082"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:01.092" starttime="20140610 12:48:01.077"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:01.094" starttime="20140610 12:48:00.932"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:01.107" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:01.108" starttime="20140610 12:48:01.098"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:01.116" starttime="20140610 12:48:01.111"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:01.125" starttime="20140610 12:48:01.119"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:01.131" starttime="20140610 12:48:01.128"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:01.138" starttime="20140610 12:48:01.134"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:01.146" starttime="20140610 12:48:01.141"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:01.157" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140610 12:48:01.801" level="INFO">12:48:01,790 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140610 12:48:01.824" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 17
Size: 528
Timestamp: Tue Jun 10 12:48:01 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140610 12:48:01.829" starttime="20140610 12:48:01.154"></status>
</kw>
<msg timestamp="20140610 12:48:01.832" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140610 12:48:01.833" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 17
Size: 528
Timestamp: Tue Jun 10 12:48:01 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140610 12:48:01.830" starttime="20140610 12:48:01.149"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:01.867" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:01.866" starttime="20140610 12:48:01.860"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:01.876" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:01.875" starttime="20140610 12:48:01.870"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:01.884" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:01.883" starttime="20140610 12:48:01.878"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:01.899" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:01.901" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:01.903" starttime="20140610 12:48:01.892"></status>
</kw>
<msg timestamp="20140610 12:48:01.905" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:01.907" level="INFO">${return_log_entry} = 2014-06-10 12:48:01,790 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:01.904" starttime="20140610 12:48:01.887"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:01.928" starttime="20140610 12:48:01.924"></status>
</kw>
<msg timestamp="20140610 12:48:01.930" level="INFO">${return_log_entry} = 2014-06-10 12:48:01,790 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:01.929" starttime="20140610 12:48:01.910"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:01.946" starttime="20140610 12:48:01.943"></status>
</kw>
<msg timestamp="20140610 12:48:01.949" level="INFO">${return_log_entry} = 2014-06-10 12:48:01,790 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:01.947" starttime="20140610 12:48:01.932"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:01.965" starttime="20140610 12:48:01.961"></status>
</kw>
<msg timestamp="20140610 12:48:01.967" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:01.966" starttime="20140610 12:48:01.951"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:01.993" starttime="20140610 12:48:01.990"></status>
</kw>
<msg timestamp="20140610 12:48:01.995" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:01.994" starttime="20140610 12:48:01.969"></status>
</kw>
<msg timestamp="20140610 12:48:01.997" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:01.996" starttime="20140610 12:48:01.839"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:02.027" starttime="20140610 12:48:02.023"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:02.034" starttime="20140610 12:48:02.030"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:02.040" starttime="20140610 12:48:02.036"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:02.070" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:02.073" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:02.075" starttime="20140610 12:48:02.063"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:02.076" starttime="20140610 12:48:02.058"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:02.078" starttime="20140610 12:48:02.043"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:02.079" starttime="20140610 12:48:02.000"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:02.082" starttime="20140610 12:48:00.910"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:02.141" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:02.142" starttime="20140610 12:48:02.136"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:02.143" starttime="20140610 12:48:02.133"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:02.152" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:02.153" starttime="20140610 12:48:02.148"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:02.154" starttime="20140610 12:48:02.145"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:02.163" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:02.164" starttime="20140610 12:48:02.159"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:02.165" starttime="20140610 12:48:02.156"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:02.166" starttime="20140610 12:48:02.118"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:02.173" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:02.174" starttime="20140610 12:48:02.168"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:02.179" starttime="20140610 12:48:02.176"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:02.186" starttime="20140610 12:48:02.181"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:02.191" starttime="20140610 12:48:02.187"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:02.195" starttime="20140610 12:48:02.192"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:02.202" starttime="20140610 12:48:02.197"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:02.213" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140610 12:48:03.107" level="INFO">12:48:03,097 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140610 12:48:03.135" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 21
Size: 528
Timestamp: Tue Jun 10 12:48:02 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140610 12:48:03.139" starttime="20140610 12:48:02.210"></status>
</kw>
<msg timestamp="20140610 12:48:03.145" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140610 12:48:03.146" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 21
Size: 528
Timestamp: Tue Jun 10 12:48:02 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140610 12:48:03.142" starttime="20140610 12:48:02.205"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:03.179" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:03.178" starttime="20140610 12:48:03.172"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:03.188" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:03.187" starttime="20140610 12:48:03.181"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:03.196" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:03.195" starttime="20140610 12:48:03.191"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:03.212" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:03.215" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:03.216" starttime="20140610 12:48:03.205"></status>
</kw>
<msg timestamp="20140610 12:48:03.219" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:03.221" level="INFO">${return_log_entry} = 2014-06-10 12:48:03,097 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:03.218" starttime="20140610 12:48:03.199"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:03.245" starttime="20140610 12:48:03.239"></status>
</kw>
<msg timestamp="20140610 12:48:03.248" level="INFO">${return_log_entry} = 2014-06-10 12:48:03,097 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:03.247" starttime="20140610 12:48:03.224"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:03.271" starttime="20140610 12:48:03.266"></status>
</kw>
<msg timestamp="20140610 12:48:03.274" level="INFO">${return_log_entry} = 2014-06-10 12:48:03,097 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:03.273" starttime="20140610 12:48:03.251"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:03.388" starttime="20140610 12:48:03.292"></status>
</kw>
<msg timestamp="20140610 12:48:03.392" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:03.391" starttime="20140610 12:48:03.277"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:03.433" starttime="20140610 12:48:03.426"></status>
</kw>
<msg timestamp="20140610 12:48:03.436" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:03.434" starttime="20140610 12:48:03.395"></status>
</kw>
<msg timestamp="20140610 12:48:03.440" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:48:03.438" starttime="20140610 12:48:03.151"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:03.473" starttime="20140610 12:48:03.469"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:03.480" starttime="20140610 12:48:03.475"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:03.487" starttime="20140610 12:48:03.483"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:03.517" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:03.519" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:03.521" starttime="20140610 12:48:03.509"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:03.523" starttime="20140610 12:48:03.504"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:03.525" starttime="20140610 12:48:03.489"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:03.526" starttime="20140610 12:48:03.446"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:03.529" starttime="20140610 12:48:02.088"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:03.599" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:03.600" starttime="20140610 12:48:03.594"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:03.601" starttime="20140610 12:48:03.590"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:03.610" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:03.611" starttime="20140610 12:48:03.606"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:03.612" starttime="20140610 12:48:03.603"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:03.621" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:03.622" starttime="20140610 12:48:03.617"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:03.623" starttime="20140610 12:48:03.614"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:03.624" starttime="20140610 12:48:03.568"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:03.631" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:03.631" starttime="20140610 12:48:03.626"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:03.636" starttime="20140610 12:48:03.633"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:03.642" starttime="20140610 12:48:03.638"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:03.648" starttime="20140610 12:48:03.644"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:03.654" starttime="20140610 12:48:03.650"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:03.662" starttime="20140610 12:48:03.656"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:03.673" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140610 12:48:04.363" level="INFO">12:48:04,309 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
12:48:04,311 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:04.364" starttime="20140610 12:48:03.669"></status>
</kw>
<msg timestamp="20140610 12:48:04.368" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:04.369" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:04.366" starttime="20140610 12:48:03.665"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:04.393" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:04.392" starttime="20140610 12:48:04.389"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:04.398" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:04.398" starttime="20140610 12:48:04.395"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:04.404" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:04.403" starttime="20140610 12:48:04.400"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:04.413" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:04.421" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:04.422" starttime="20140610 12:48:04.408"></status>
</kw>
<msg timestamp="20140610 12:48:04.423" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:04.424" level="INFO">${return_log_entry} = 2014-06-10 12:48:04,311 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:04.423" starttime="20140610 12:48:04.405"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.441" starttime="20140610 12:48:04.436"></status>
</kw>
<msg timestamp="20140610 12:48:04.443" level="INFO">${return_log_entry} = 2014-06-10 12:48:04,311 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:04.442" starttime="20140610 12:48:04.426"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.463" starttime="20140610 12:48:04.458"></status>
</kw>
<msg timestamp="20140610 12:48:04.466" level="INFO">${return_log_entry} = 2014-06-10 12:48:04,311 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:04.465" starttime="20140610 12:48:04.446"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.483" starttime="20140610 12:48:04.479"></status>
</kw>
<msg timestamp="20140610 12:48:04.485" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:04.484" starttime="20140610 12:48:04.468"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.509" starttime="20140610 12:48:04.505"></status>
</kw>
<msg timestamp="20140610 12:48:04.510" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:04.510" starttime="20140610 12:48:04.487"></status>
</kw>
<msg timestamp="20140610 12:48:04.513" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:04.512" starttime="20140610 12:48:04.372"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:04.541" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140610 12:48:04.540" starttime="20140610 12:48:04.534"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:04.550" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:04.548" starttime="20140610 12:48:04.544"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:04.558" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:04.557" starttime="20140610 12:48:04.552"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:04.572" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:04.582" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:04.583" starttime="20140610 12:48:04.565"></status>
</kw>
<msg timestamp="20140610 12:48:04.585" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:04.585" level="INFO">${return_log_entry} = 2014-06-10 12:48:04,309 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:48:04.584" starttime="20140610 12:48:04.561"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.603" starttime="20140610 12:48:04.598"></status>
</kw>
<msg timestamp="20140610 12:48:04.606" level="INFO">${return_log_entry} = 2014-06-10 12:48:04,309 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:48:04.605" starttime="20140610 12:48:04.587"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.628" starttime="20140610 12:48:04.624"></status>
</kw>
<msg timestamp="20140610 12:48:04.631" level="INFO">${return_log_entry} = 2014-06-10 12:48:04,309 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:48:04.630" starttime="20140610 12:48:04.609"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.656" starttime="20140610 12:48:04.649"></status>
</kw>
<msg timestamp="20140610 12:48:04.659" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:04.658" starttime="20140610 12:48:04.634"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.690" starttime="20140610 12:48:04.686"></status>
</kw>
<msg timestamp="20140610 12:48:04.692" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:04.691" starttime="20140610 12:48:04.661"></status>
</kw>
<msg timestamp="20140610 12:48:04.694" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:04.693" starttime="20140610 12:48:04.515"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.712" starttime="20140610 12:48:04.709"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.715" starttime="20140610 12:48:04.713"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.720" starttime="20140610 12:48:04.717"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:04.745" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:04.746" starttime="20140610 12:48:04.734"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:04.747" starttime="20140610 12:48:04.731"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:04.748" starttime="20140610 12:48:04.722"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:04.749" starttime="20140610 12:48:04.696"></status>
</kw>
<msg timestamp="20140610 12:48:04.752" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:04.753" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:04.751" starttime="20140610 12:48:03.538"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140610 12:48:04.758" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:48:04.759" starttime="20140610 12:48:04.754"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 1</arg>
</arguments>
<msg timestamp="20140610 12:48:04.764" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:48:04.765" starttime="20140610 12:48:04.760"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:04.806" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:04.807" starttime="20140610 12:48:04.802"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:04.808" starttime="20140610 12:48:04.799"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:04.816" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:04.817" starttime="20140610 12:48:04.812"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:04.818" starttime="20140610 12:48:04.809"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:04.828" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:04.829" starttime="20140610 12:48:04.822"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:04.830" starttime="20140610 12:48:04.820"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:04.831" starttime="20140610 12:48:04.787"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:04.837" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:04.838" starttime="20140610 12:48:04.832"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.843" starttime="20140610 12:48:04.839"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.848" starttime="20140610 12:48:04.845"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.852" starttime="20140610 12:48:04.850"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.855" starttime="20140610 12:48:04.853"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:04.860" starttime="20140610 12:48:04.857"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:04.866" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140610 12:48:05.410" level="INFO">12:48:05,361 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
12:48:05,362 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:05.412" starttime="20140610 12:48:04.864"></status>
</kw>
<msg timestamp="20140610 12:48:05.415" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:05.416" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:05.414" starttime="20140610 12:48:04.862"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:05.438" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:05.438" starttime="20140610 12:48:05.434"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:05.443" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:05.443" starttime="20140610 12:48:05.440"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:05.448" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:05.447" starttime="20140610 12:48:05.445"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:05.457" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:05.458" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:05.459" starttime="20140610 12:48:05.453"></status>
</kw>
<msg timestamp="20140610 12:48:05.461" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:05.461" level="INFO">${return_log_entry} = 2014-06-10 12:48:05,362 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:05.460" starttime="20140610 12:48:05.450"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.476" starttime="20140610 12:48:05.473"></status>
</kw>
<msg timestamp="20140610 12:48:05.478" level="INFO">${return_log_entry} = 2014-06-10 12:48:05,362 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:05.477" starttime="20140610 12:48:05.463"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.492" starttime="20140610 12:48:05.489"></status>
</kw>
<msg timestamp="20140610 12:48:05.494" level="INFO">${return_log_entry} = 2014-06-10 12:48:05,362 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:05.493" starttime="20140610 12:48:05.480"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.509" starttime="20140610 12:48:05.505"></status>
</kw>
<msg timestamp="20140610 12:48:05.511" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:05.510" starttime="20140610 12:48:05.495"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.531" starttime="20140610 12:48:05.528"></status>
</kw>
<msg timestamp="20140610 12:48:05.532" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:05.532" starttime="20140610 12:48:05.512"></status>
</kw>
<msg timestamp="20140610 12:48:05.534" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:05.534" starttime="20140610 12:48:05.419"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:05.563" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140610 12:48:05.562" starttime="20140610 12:48:05.557"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:05.571" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:05.570" starttime="20140610 12:48:05.566"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:05.578" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:05.577" starttime="20140610 12:48:05.573"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:05.588" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:05.589" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:05.590" starttime="20140610 12:48:05.583"></status>
</kw>
<msg timestamp="20140610 12:48:05.591" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:05.592" level="INFO">${return_log_entry} = 2014-06-10 12:48:05,361 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:48:05.591" starttime="20140610 12:48:05.580"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.606" starttime="20140610 12:48:05.603"></status>
</kw>
<msg timestamp="20140610 12:48:05.608" level="INFO">${return_log_entry} = 2014-06-10 12:48:05,361 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:48:05.607" starttime="20140610 12:48:05.594"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.622" starttime="20140610 12:48:05.618"></status>
</kw>
<msg timestamp="20140610 12:48:05.623" level="INFO">${return_log_entry} = 2014-06-10 12:48:05,361 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:48:05.623" starttime="20140610 12:48:05.609"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.642" starttime="20140610 12:48:05.636"></status>
</kw>
<msg timestamp="20140610 12:48:05.645" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:05.644" starttime="20140610 12:48:05.625"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.674" starttime="20140610 12:48:05.670"></status>
</kw>
<msg timestamp="20140610 12:48:05.676" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:05.675" starttime="20140610 12:48:05.647"></status>
</kw>
<msg timestamp="20140610 12:48:05.678" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:05.678" starttime="20140610 12:48:05.537"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.695" starttime="20140610 12:48:05.693"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.699" starttime="20140610 12:48:05.696"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.702" starttime="20140610 12:48:05.700"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:05.720" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:05.721" starttime="20140610 12:48:05.716"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:05.722" starttime="20140610 12:48:05.713"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:05.723" starttime="20140610 12:48:05.704"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:05.724" starttime="20140610 12:48:05.680"></status>
</kw>
<msg timestamp="20140610 12:48:05.727" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:05.728" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:05.726" starttime="20140610 12:48:04.769"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140610 12:48:05.733" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:48:05.734" starttime="20140610 12:48:05.730"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 2</arg>
</arguments>
<msg timestamp="20140610 12:48:05.739" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:48:05.739" starttime="20140610 12:48:05.735"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:05.788" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:05.789" starttime="20140610 12:48:05.783"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:05.790" starttime="20140610 12:48:05.779"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:05.798" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:05.799" starttime="20140610 12:48:05.794"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:05.800" starttime="20140610 12:48:05.791"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:05.809" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:05.810" starttime="20140610 12:48:05.805"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:05.812" starttime="20140610 12:48:05.802"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:05.813" starttime="20140610 12:48:05.761"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:05.824" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:05.825" starttime="20140610 12:48:05.816"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.833" starttime="20140610 12:48:05.827"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.841" starttime="20140610 12:48:05.835"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.846" starttime="20140610 12:48:05.843"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.852" starttime="20140610 12:48:05.849"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:05.860" starttime="20140610 12:48:05.855"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:05.870" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140610 12:48:06.324" level="INFO">12:48:06,285 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
12:48:06,286 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:06.326" starttime="20140610 12:48:05.867"></status>
</kw>
<msg timestamp="20140610 12:48:06.330" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:06.331" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:06.329" starttime="20140610 12:48:05.863"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:06.350" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:06.349" starttime="20140610 12:48:06.346"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:06.355" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:06.354" starttime="20140610 12:48:06.352"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:06.360" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:06.359" starttime="20140610 12:48:06.357"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:06.369" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:06.371" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:06.372" starttime="20140610 12:48:06.365"></status>
</kw>
<msg timestamp="20140610 12:48:06.373" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:06.374" level="INFO">${return_log_entry} = 2014-06-10 12:48:06,286 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:06.373" starttime="20140610 12:48:06.362"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.388" starttime="20140610 12:48:06.385"></status>
</kw>
<msg timestamp="20140610 12:48:06.390" level="INFO">${return_log_entry} = 2014-06-10 12:48:06,286 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:06.389" starttime="20140610 12:48:06.375"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.404" starttime="20140610 12:48:06.401"></status>
</kw>
<msg timestamp="20140610 12:48:06.406" level="INFO">${return_log_entry} = 2014-06-10 12:48:06,286 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:06.405" starttime="20140610 12:48:06.392"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.422" starttime="20140610 12:48:06.418"></status>
</kw>
<msg timestamp="20140610 12:48:06.423" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:06.423" starttime="20140610 12:48:06.408"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.444" starttime="20140610 12:48:06.441"></status>
</kw>
<msg timestamp="20140610 12:48:06.445" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:06.445" starttime="20140610 12:48:06.425"></status>
</kw>
<msg timestamp="20140610 12:48:06.447" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:06.447" starttime="20140610 12:48:06.333"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:06.466" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140610 12:48:06.466" starttime="20140610 12:48:06.462"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:06.559" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:06.558" starttime="20140610 12:48:06.468"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:06.565" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:06.564" starttime="20140610 12:48:06.562"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:06.573" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:06.576" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:06.576" starttime="20140610 12:48:06.569"></status>
</kw>
<msg timestamp="20140610 12:48:06.578" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:06.579" level="INFO">${return_log_entry} = 2014-06-10 12:48:06,285 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:48:06.577" starttime="20140610 12:48:06.566"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.594" starttime="20140610 12:48:06.590"></status>
</kw>
<msg timestamp="20140610 12:48:06.595" level="INFO">${return_log_entry} = 2014-06-10 12:48:06,285 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:48:06.594" starttime="20140610 12:48:06.580"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.609" starttime="20140610 12:48:06.606"></status>
</kw>
<msg timestamp="20140610 12:48:06.611" level="INFO">${return_log_entry} = 2014-06-10 12:48:06,285 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:48:06.610" starttime="20140610 12:48:06.597"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.626" starttime="20140610 12:48:06.622"></status>
</kw>
<msg timestamp="20140610 12:48:06.627" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:06.627" starttime="20140610 12:48:06.612"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.648" starttime="20140610 12:48:06.645"></status>
</kw>
<msg timestamp="20140610 12:48:06.649" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:06.648" starttime="20140610 12:48:06.629"></status>
</kw>
<msg timestamp="20140610 12:48:06.651" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:06.650" starttime="20140610 12:48:06.450"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.667" starttime="20140610 12:48:06.665"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.671" starttime="20140610 12:48:06.668"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.674" starttime="20140610 12:48:06.672"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:06.691" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:06.692" starttime="20140610 12:48:06.687"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:06.693" starttime="20140610 12:48:06.684"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:06.694" starttime="20140610 12:48:06.675"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:06.695" starttime="20140610 12:48:06.653"></status>
</kw>
<msg timestamp="20140610 12:48:06.698" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:06.699" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:06.697" starttime="20140610 12:48:05.744"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140610 12:48:06.703" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:48:06.704" starttime="20140610 12:48:06.700"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 12</arg>
</arguments>
<msg timestamp="20140610 12:48:06.709" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:48:06.710" starttime="20140610 12:48:06.705"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:06.749" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:06.750" starttime="20140610 12:48:06.745"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:06.751" starttime="20140610 12:48:06.742"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:06.760" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:06.761" starttime="20140610 12:48:06.756"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:06.762" starttime="20140610 12:48:06.753"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:06.770" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:06.771" starttime="20140610 12:48:06.766"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:06.772" starttime="20140610 12:48:06.763"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:06.773" starttime="20140610 12:48:06.731"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:06.779" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:06.780" starttime="20140610 12:48:06.774"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.784" starttime="20140610 12:48:06.781"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.789" starttime="20140610 12:48:06.786"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.792" starttime="20140610 12:48:06.790"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.796" starttime="20140610 12:48:06.794"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:06.801" starttime="20140610 12:48:06.797"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:06.807" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140610 12:48:07.218" level="INFO">12:48:07,175 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
12:48:07,177 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:07.219" starttime="20140610 12:48:06.805"></status>
</kw>
<msg timestamp="20140610 12:48:07.223" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:07.223" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:07.221" starttime="20140610 12:48:06.802"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:07.243" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:07.243" starttime="20140610 12:48:07.237"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:07.248" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:07.247" starttime="20140610 12:48:07.245"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:07.253" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:07.252" starttime="20140610 12:48:07.250"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:07.261" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:07.263" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:07.263" starttime="20140610 12:48:07.257"></status>
</kw>
<msg timestamp="20140610 12:48:07.265" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:07.265" level="INFO">${return_log_entry} = 2014-06-10 12:48:07,177 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:07.264" starttime="20140610 12:48:07.254"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.278" starttime="20140610 12:48:07.275"></status>
</kw>
<msg timestamp="20140610 12:48:07.280" level="INFO">${return_log_entry} = 2014-06-10 12:48:07,177 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:07.279" starttime="20140610 12:48:07.267"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.294" starttime="20140610 12:48:07.290"></status>
</kw>
<msg timestamp="20140610 12:48:07.295" level="INFO">${return_log_entry} = 2014-06-10 12:48:07,177 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:07.294" starttime="20140610 12:48:07.281"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.310" starttime="20140610 12:48:07.306"></status>
</kw>
<msg timestamp="20140610 12:48:07.311" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:07.310" starttime="20140610 12:48:07.296"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.330" starttime="20140610 12:48:07.327"></status>
</kw>
<msg timestamp="20140610 12:48:07.332" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:07.331" starttime="20140610 12:48:07.312"></status>
</kw>
<msg timestamp="20140610 12:48:07.334" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:07.333" starttime="20140610 12:48:07.226"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:07.352" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140610 12:48:07.351" starttime="20140610 12:48:07.348"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:07.356" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:07.356" starttime="20140610 12:48:07.353"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:07.361" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:07.360" starttime="20140610 12:48:07.358"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:07.369" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:07.371" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:07.372" starttime="20140610 12:48:07.365"></status>
</kw>
<msg timestamp="20140610 12:48:07.373" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:07.374" level="INFO">${return_log_entry} = 2014-06-10 12:48:07,175 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:48:07.372" starttime="20140610 12:48:07.362"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.387" starttime="20140610 12:48:07.384"></status>
</kw>
<msg timestamp="20140610 12:48:07.388" level="INFO">${return_log_entry} = 2014-06-10 12:48:07,175 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:48:07.387" starttime="20140610 12:48:07.375"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.401" starttime="20140610 12:48:07.398"></status>
</kw>
<msg timestamp="20140610 12:48:07.403" level="INFO">${return_log_entry} = 2014-06-10 12:48:07,175 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:48:07.402" starttime="20140610 12:48:07.389"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.418" starttime="20140610 12:48:07.414"></status>
</kw>
<msg timestamp="20140610 12:48:07.419" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:07.418" starttime="20140610 12:48:07.404"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.438" starttime="20140610 12:48:07.435"></status>
</kw>
<msg timestamp="20140610 12:48:07.439" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:07.439" starttime="20140610 12:48:07.420"></status>
</kw>
<msg timestamp="20140610 12:48:07.441" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:07.441" starttime="20140610 12:48:07.336"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.457" starttime="20140610 12:48:07.455"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.460" starttime="20140610 12:48:07.458"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.464" starttime="20140610 12:48:07.461"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:07.480" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:07.482" starttime="20140610 12:48:07.476"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:07.482" starttime="20140610 12:48:07.474"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:07.483" starttime="20140610 12:48:07.465"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:07.484" starttime="20140610 12:48:07.443"></status>
</kw>
<msg timestamp="20140610 12:48:07.487" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:07.488" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:48:07.486" starttime="20140610 12:48:06.714"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140610 12:48:07.492" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:48:07.493" starttime="20140610 12:48:07.489"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 13</arg>
</arguments>
<msg timestamp="20140610 12:48:07.498" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:48:07.499" starttime="20140610 12:48:07.495"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140610 12:48:07.521" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140610 12:48:07.521" starttime="20140610 12:48:07.518"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:07.560" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:07.561" starttime="20140610 12:48:07.556"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:07.562" starttime="20140610 12:48:07.554"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:07.570" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:07.571" starttime="20140610 12:48:07.566"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:07.572" starttime="20140610 12:48:07.564"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:07.580" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:07.581" starttime="20140610 12:48:07.576"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:07.582" starttime="20140610 12:48:07.573"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:07.582" starttime="20140610 12:48:07.543"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:07.588" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:07.589" starttime="20140610 12:48:07.583"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.593" starttime="20140610 12:48:07.590"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.598" starttime="20140610 12:48:07.595"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.601" starttime="20140610 12:48:07.599"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.697" starttime="20140610 12:48:07.693"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.703" starttime="20140610 12:48:07.699"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.707" starttime="20140610 12:48:07.704"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:07.712" starttime="20140610 12:48:07.709"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:07.718" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140610 12:48:14.354" level="INFO">12:48:14,347 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
12:48:14,348 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:14.355" starttime="20140610 12:48:07.716"></status>
</kw>
<msg timestamp="20140610 12:48:14.358" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:14.359" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:14.357" starttime="20140610 12:48:07.714"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:14.379" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:14.378" starttime="20140610 12:48:14.374"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:14.384" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:14.383" starttime="20140610 12:48:14.380"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:14.388" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:14.387" starttime="20140610 12:48:14.385"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:14.396" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:14.402" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:14.402" starttime="20140610 12:48:14.392"></status>
</kw>
<msg timestamp="20140610 12:48:14.404" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:14.404" level="INFO">${return_log_entry} = 2014-06-10 12:48:14,348 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:14.403" starttime="20140610 12:48:14.389"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.418" starttime="20140610 12:48:14.415"></status>
</kw>
<msg timestamp="20140610 12:48:14.419" level="INFO">${return_log_entry} = 2014-06-10 12:48:14,348 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:14.419" starttime="20140610 12:48:14.406"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.432" starttime="20140610 12:48:14.429"></status>
</kw>
<msg timestamp="20140610 12:48:14.434" level="INFO">${return_log_entry} = 2014-06-10 12:48:14,348 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:14.433" starttime="20140610 12:48:14.421"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.448" starttime="20140610 12:48:14.444"></status>
</kw>
<msg timestamp="20140610 12:48:14.449" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:14.449" starttime="20140610 12:48:14.435"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.468" starttime="20140610 12:48:14.465"></status>
</kw>
<msg timestamp="20140610 12:48:14.469" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:14.469" starttime="20140610 12:48:14.451"></status>
</kw>
<msg timestamp="20140610 12:48:14.471" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:14.471" starttime="20140610 12:48:14.362"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:14.489" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140610 12:48:14.489" starttime="20140610 12:48:14.485"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:14.494" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:14.493" starttime="20140610 12:48:14.491"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:14.498" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:14.498" starttime="20140610 12:48:14.495"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:14.506" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:14.512" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:14.513" starttime="20140610 12:48:14.502"></status>
</kw>
<msg timestamp="20140610 12:48:14.515" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:14.515" level="INFO">${return_log_entry} = 2014-06-10 12:48:14,347 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:14.514" starttime="20140610 12:48:14.500"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.528" starttime="20140610 12:48:14.525"></status>
</kw>
<msg timestamp="20140610 12:48:14.530" level="INFO">${return_log_entry} = 2014-06-10 12:48:14,347 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:14.529" starttime="20140610 12:48:14.517"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.543" starttime="20140610 12:48:14.540"></status>
</kw>
<msg timestamp="20140610 12:48:14.545" level="INFO">${return_log_entry} = 2014-06-10 12:48:14,347 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:14.544" starttime="20140610 12:48:14.531"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.559" starttime="20140610 12:48:14.555"></status>
</kw>
<msg timestamp="20140610 12:48:14.560" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:14.559" starttime="20140610 12:48:14.546"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.579" starttime="20140610 12:48:14.576"></status>
</kw>
<msg timestamp="20140610 12:48:14.580" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:14.580" starttime="20140610 12:48:14.561"></status>
</kw>
<msg timestamp="20140610 12:48:14.582" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:14.581" starttime="20140610 12:48:14.474"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.597" starttime="20140610 12:48:14.595"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.600" starttime="20140610 12:48:14.598"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.604" starttime="20140610 12:48:14.601"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:14.623" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:14.624" starttime="20140610 12:48:14.616"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:14.625" starttime="20140610 12:48:14.613"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:14.625" starttime="20140610 12:48:14.605"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:14.626" starttime="20140610 12:48:14.584"></status>
</kw>
<msg timestamp="20140610 12:48:14.629" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:14.629" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:14.627" starttime="20140610 12:48:07.525"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.653" starttime="20140610 12:48:14.650"></status>
</kw>
<msg timestamp="20140610 12:48:14.654" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:14.654" starttime="20140610 12:48:14.631"></status>
</kw>
<msg timestamp="20140610 12:48:14.657" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:14.655" starttime="20140610 12:48:07.501"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140610 12:48:14.661" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:48:14.662" starttime="20140610 12:48:14.658"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140610 12:48:14.682" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140610 12:48:14.681" starttime="20140610 12:48:14.679"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:14.718" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:14.719" starttime="20140610 12:48:14.714"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:14.720" starttime="20140610 12:48:14.712"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:14.727" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:14.728" starttime="20140610 12:48:14.723"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:14.729" starttime="20140610 12:48:14.721"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:14.736" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:14.737" starttime="20140610 12:48:14.732"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:14.737" starttime="20140610 12:48:14.730"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:14.738" starttime="20140610 12:48:14.702"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:14.744" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:14.744" starttime="20140610 12:48:14.739"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.749" starttime="20140610 12:48:14.745"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.753" starttime="20140610 12:48:14.750"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.756" starttime="20140610 12:48:14.754"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.759" starttime="20140610 12:48:14.757"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.763" starttime="20140610 12:48:14.760"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.768" starttime="20140610 12:48:14.765"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:14.772" starttime="20140610 12:48:14.769"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:14.778" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140610 12:48:21.563" level="INFO">12:48:21,554 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
12:48:21,556 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:21.564" starttime="20140610 12:48:14.776"></status>
</kw>
<msg timestamp="20140610 12:48:21.567" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:21.568" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:21.566" starttime="20140610 12:48:14.774"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:21.586" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:21.585" starttime="20140610 12:48:21.582"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:21.590" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:21.589" starttime="20140610 12:48:21.587"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:21.594" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:21.594" starttime="20140610 12:48:21.591"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:21.602" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:21.603" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:21.604" starttime="20140610 12:48:21.598"></status>
</kw>
<msg timestamp="20140610 12:48:21.605" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:21.606" level="INFO">${return_log_entry} = 2014-06-10 12:48:21,556 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:21.605" starttime="20140610 12:48:21.596"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.619" starttime="20140610 12:48:21.616"></status>
</kw>
<msg timestamp="20140610 12:48:21.621" level="INFO">${return_log_entry} = 2014-06-10 12:48:21,556 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:21.620" starttime="20140610 12:48:21.607"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.633" starttime="20140610 12:48:21.631"></status>
</kw>
<msg timestamp="20140610 12:48:21.635" level="INFO">${return_log_entry} = 2014-06-10 12:48:21,556 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:21.634" starttime="20140610 12:48:21.622"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.648" starttime="20140610 12:48:21.645"></status>
</kw>
<msg timestamp="20140610 12:48:21.649" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:21.649" starttime="20140610 12:48:21.636"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.667" starttime="20140610 12:48:21.665"></status>
</kw>
<msg timestamp="20140610 12:48:21.669" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:21.668" starttime="20140610 12:48:21.651"></status>
</kw>
<msg timestamp="20140610 12:48:21.670" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:21.670" starttime="20140610 12:48:21.571"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:21.687" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140610 12:48:21.687" starttime="20140610 12:48:21.683"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:21.691" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:21.691" starttime="20140610 12:48:21.688"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:21.696" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:21.695" starttime="20140610 12:48:21.693"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:21.703" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:21.704" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:21.705" starttime="20140610 12:48:21.700"></status>
</kw>
<msg timestamp="20140610 12:48:21.706" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:21.707" level="INFO">${return_log_entry} = 2014-06-10 12:48:21,554 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:21.706" starttime="20140610 12:48:21.697"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.719" starttime="20140610 12:48:21.716"></status>
</kw>
<msg timestamp="20140610 12:48:21.721" level="INFO">${return_log_entry} = 2014-06-10 12:48:21,554 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:21.720" starttime="20140610 12:48:21.708"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.733" starttime="20140610 12:48:21.730"></status>
</kw>
<msg timestamp="20140610 12:48:21.735" level="INFO">${return_log_entry} = 2014-06-10 12:48:21,554 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:21.734" starttime="20140610 12:48:21.722"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.748" starttime="20140610 12:48:21.745"></status>
</kw>
<msg timestamp="20140610 12:48:21.750" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:21.749" starttime="20140610 12:48:21.736"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.768" starttime="20140610 12:48:21.766"></status>
</kw>
<msg timestamp="20140610 12:48:21.770" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:21.769" starttime="20140610 12:48:21.751"></status>
</kw>
<msg timestamp="20140610 12:48:21.772" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:21.771" starttime="20140610 12:48:21.673"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.786" starttime="20140610 12:48:21.784"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.789" starttime="20140610 12:48:21.787"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.792" starttime="20140610 12:48:21.790"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:21.808" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:21.809" starttime="20140610 12:48:21.804"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:21.810" starttime="20140610 12:48:21.802"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:21.811" starttime="20140610 12:48:21.793"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:21.812" starttime="20140610 12:48:21.773"></status>
</kw>
<msg timestamp="20140610 12:48:21.815" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:21.815" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:21.813" starttime="20140610 12:48:14.685"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.829" starttime="20140610 12:48:21.826"></status>
</kw>
<msg timestamp="20140610 12:48:21.830" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:21.830" starttime="20140610 12:48:21.817"></status>
</kw>
<msg timestamp="20140610 12:48:21.833" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:21.832" starttime="20140610 12:48:14.664"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140610 12:48:21.837" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:48:21.838" starttime="20140610 12:48:21.834"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140610 12:48:21.857" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140610 12:48:21.856" starttime="20140610 12:48:21.854"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:21.892" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:21.893" starttime="20140610 12:48:21.889"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:21.894" starttime="20140610 12:48:21.886"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:21.901" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:21.902" starttime="20140610 12:48:21.898"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:21.903" starttime="20140610 12:48:21.895"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:21.910" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:21.911" starttime="20140610 12:48:21.906"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:21.912" starttime="20140610 12:48:21.904"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:21.912" starttime="20140610 12:48:21.876"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:21.918" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:21.918" starttime="20140610 12:48:21.913"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.922" starttime="20140610 12:48:21.919"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.926" starttime="20140610 12:48:21.924"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.929" starttime="20140610 12:48:21.928"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.932" starttime="20140610 12:48:21.930"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.937" starttime="20140610 12:48:21.934"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.941" starttime="20140610 12:48:21.938"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:21.945" starttime="20140610 12:48:21.942"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:21.951" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140610 12:48:28.778" level="INFO">12:48:28,773 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
12:48:28,775 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:28.779" starttime="20140610 12:48:21.948"></status>
</kw>
<msg timestamp="20140610 12:48:28.782" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:28.783" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:28.781" starttime="20140610 12:48:21.946"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:28.799" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:28.799" starttime="20140610 12:48:28.796"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:28.803" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:28.803" starttime="20140610 12:48:28.800"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:28.807" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:28.807" starttime="20140610 12:48:28.805"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:28.815" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:28.816" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:28.817" starttime="20140610 12:48:28.811"></status>
</kw>
<msg timestamp="20140610 12:48:28.818" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:28.818" level="INFO">${return_log_entry} = 2014-06-10 12:48:28,775 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:28.817" starttime="20140610 12:48:28.809"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:28.831" starttime="20140610 12:48:28.828"></status>
</kw>
<msg timestamp="20140610 12:48:28.832" level="INFO">${return_log_entry} = 2014-06-10 12:48:28,775 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:28.831" starttime="20140610 12:48:28.820"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:28.844" starttime="20140610 12:48:28.841"></status>
</kw>
<msg timestamp="20140610 12:48:28.845" level="INFO">${return_log_entry} = 2014-06-10 12:48:28,775 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:28.845" starttime="20140610 12:48:28.833"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:28.859" starttime="20140610 12:48:28.855"></status>
</kw>
<msg timestamp="20140610 12:48:28.860" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:28.859" starttime="20140610 12:48:28.847"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:28.878" starttime="20140610 12:48:28.875"></status>
</kw>
<msg timestamp="20140610 12:48:28.879" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:28.879" starttime="20140610 12:48:28.861"></status>
</kw>
<msg timestamp="20140610 12:48:28.881" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:28.880" starttime="20140610 12:48:28.785"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:28.898" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140610 12:48:28.897" starttime="20140610 12:48:28.894"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:28.902" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:28.902" starttime="20140610 12:48:28.899"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:28.986" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:28.985" starttime="20140610 12:48:28.904"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:28.994" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:28.996" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:28.997" starttime="20140610 12:48:28.991"></status>
</kw>
<msg timestamp="20140610 12:48:28.998" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:28.999" level="INFO">${return_log_entry} = 2014-06-10 12:48:28,773 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:28.998" starttime="20140610 12:48:28.988"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.012" starttime="20140610 12:48:29.009"></status>
</kw>
<msg timestamp="20140610 12:48:29.013" level="INFO">${return_log_entry} = 2014-06-10 12:48:28,773 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:29.012" starttime="20140610 12:48:29.000"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.025" starttime="20140610 12:48:29.023"></status>
</kw>
<msg timestamp="20140610 12:48:29.027" level="INFO">${return_log_entry} = 2014-06-10 12:48:28,773 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:29.026" starttime="20140610 12:48:29.014"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.040" starttime="20140610 12:48:29.036"></status>
</kw>
<msg timestamp="20140610 12:48:29.041" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:29.040" starttime="20140610 12:48:29.028"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.058" starttime="20140610 12:48:29.056"></status>
</kw>
<msg timestamp="20140610 12:48:29.060" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:29.059" starttime="20140610 12:48:29.042"></status>
</kw>
<msg timestamp="20140610 12:48:29.062" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:29.061" starttime="20140610 12:48:28.883"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.077" starttime="20140610 12:48:29.075"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.080" starttime="20140610 12:48:29.078"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.083" starttime="20140610 12:48:29.081"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:29.099" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:29.100" starttime="20140610 12:48:29.094"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:29.101" starttime="20140610 12:48:29.092"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:29.101" starttime="20140610 12:48:29.084"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:29.102" starttime="20140610 12:48:29.064"></status>
</kw>
<msg timestamp="20140610 12:48:29.105" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:29.106" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:29.103" starttime="20140610 12:48:21.860"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.119" starttime="20140610 12:48:29.116"></status>
</kw>
<msg timestamp="20140610 12:48:29.120" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:29.120" starttime="20140610 12:48:29.107"></status>
</kw>
<msg timestamp="20140610 12:48:29.123" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:29.121" starttime="20140610 12:48:21.840"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140610 12:48:29.127" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:48:29.128" starttime="20140610 12:48:29.124"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140610 12:48:29.147" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140610 12:48:29.146" starttime="20140610 12:48:29.144"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:29.181" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:29.182" starttime="20140610 12:48:29.177"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:29.183" starttime="20140610 12:48:29.175"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:29.189" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:29.191" starttime="20140610 12:48:29.186"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:29.191" starttime="20140610 12:48:29.184"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:29.199" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:29.200" starttime="20140610 12:48:29.195"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:29.201" starttime="20140610 12:48:29.193"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:29.201" starttime="20140610 12:48:29.165"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:29.206" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:29.207" starttime="20140610 12:48:29.202"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.211" starttime="20140610 12:48:29.208"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.215" starttime="20140610 12:48:29.212"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.218" starttime="20140610 12:48:29.217"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.222" starttime="20140610 12:48:29.220"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.226" starttime="20140610 12:48:29.223"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.230" starttime="20140610 12:48:29.228"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:29.235" starttime="20140610 12:48:29.232"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:29.240" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140610 12:48:36.121" level="INFO">12:48:36,112 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
12:48:36,115 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:36.122" starttime="20140610 12:48:29.238"></status>
</kw>
<msg timestamp="20140610 12:48:36.125" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:36.126" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:36.124" starttime="20140610 12:48:29.236"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:36.141" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:36.140" starttime="20140610 12:48:36.137"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:36.146" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:36.146" starttime="20140610 12:48:36.142"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:36.150" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:36.150" starttime="20140610 12:48:36.148"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:36.156" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:36.158" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:36.158" starttime="20140610 12:48:36.154"></status>
</kw>
<msg timestamp="20140610 12:48:36.160" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:36.160" level="INFO">${return_log_entry} = 2014-06-10 12:48:36,115 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:36.159" starttime="20140610 12:48:36.152"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.171" starttime="20140610 12:48:36.168"></status>
</kw>
<msg timestamp="20140610 12:48:36.172" level="INFO">${return_log_entry} = 2014-06-10 12:48:36,115 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:36.171" starttime="20140610 12:48:36.161"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.183" starttime="20140610 12:48:36.180"></status>
</kw>
<msg timestamp="20140610 12:48:36.184" level="INFO">${return_log_entry} = 2014-06-10 12:48:36,115 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:36.184" starttime="20140610 12:48:36.173"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.195" starttime="20140610 12:48:36.193"></status>
</kw>
<msg timestamp="20140610 12:48:36.197" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:36.196" starttime="20140610 12:48:36.185"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.212" starttime="20140610 12:48:36.210"></status>
</kw>
<msg timestamp="20140610 12:48:36.214" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:36.213" starttime="20140610 12:48:36.198"></status>
</kw>
<msg timestamp="20140610 12:48:36.215" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:36.215" starttime="20140610 12:48:36.128"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:36.229" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140610 12:48:36.229" starttime="20140610 12:48:36.226"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:36.233" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:36.232" starttime="20140610 12:48:36.230"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:36.237" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:36.236" starttime="20140610 12:48:36.234"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:36.243" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:36.244" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:36.245" starttime="20140610 12:48:36.240"></status>
</kw>
<msg timestamp="20140610 12:48:36.246" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:36.246" level="INFO">${return_log_entry} = 2014-06-10 12:48:36,112 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:36.245" starttime="20140610 12:48:36.238"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.257" starttime="20140610 12:48:36.255"></status>
</kw>
<msg timestamp="20140610 12:48:36.258" level="INFO">${return_log_entry} = 2014-06-10 12:48:36,112 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:36.258" starttime="20140610 12:48:36.248"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.269" starttime="20140610 12:48:36.267"></status>
</kw>
<msg timestamp="20140610 12:48:36.271" level="INFO">${return_log_entry} = 2014-06-10 12:48:36,112 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:36.270" starttime="20140610 12:48:36.260"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.286" starttime="20140610 12:48:36.282"></status>
</kw>
<msg timestamp="20140610 12:48:36.288" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:36.287" starttime="20140610 12:48:36.272"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.311" starttime="20140610 12:48:36.308"></status>
</kw>
<msg timestamp="20140610 12:48:36.313" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:36.313" starttime="20140610 12:48:36.290"></status>
</kw>
<msg timestamp="20140610 12:48:36.316" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:36.315" starttime="20140610 12:48:36.217"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.333" starttime="20140610 12:48:36.331"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.337" starttime="20140610 12:48:36.335"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.341" starttime="20140610 12:48:36.339"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:36.358" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:36.359" starttime="20140610 12:48:36.355"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:36.360" starttime="20140610 12:48:36.353"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:36.361" starttime="20140610 12:48:36.343"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:36.361" starttime="20140610 12:48:36.318"></status>
</kw>
<msg timestamp="20140610 12:48:36.364" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:36.364" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:48:36.362" starttime="20140610 12:48:29.150"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.376" starttime="20140610 12:48:36.374"></status>
</kw>
<msg timestamp="20140610 12:48:36.378" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:36.377" starttime="20140610 12:48:36.365"></status>
</kw>
<msg timestamp="20140610 12:48:36.380" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:36.378" starttime="20140610 12:48:29.130"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140610 12:48:36.383" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:48:36.384" starttime="20140610 12:48:36.381"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:36.385" starttime="20140610 12:47:52.177"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Setup phone 1 subscriber accounts (only MainAccount shall have a credit) ******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.388" starttime="20140610 12:48:36.386"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'!='true'</arg>
<arg>CRCE Clear All Balances By Imsi</arg>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.395" starttime="20140610 12:48:36.389"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'!='true'</arg>
<arg>CRCE Set Main Balance By Imsi</arg>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>10000000</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.403" starttime="20140610 12:48:36.397"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Prepare 2 Testsubscribers for FAKING ******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.406" starttime="20140610 12:48:36.404"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'=='true'</arg>
<arg>Prepare Fake Subscribers</arg>
</arguments>
<kw type="kw" timeout="" name="suite-global-keyword-resource.Prepare Fake Subscribers">
<doc>cretes 2 test subscribers for faking calls (in development mode)</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create 2 test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.505" starttime="20140610 12:48:36.503"></status>
</kw>
<kw type="kw" timeout="" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<msg timestamp="20140610 12:48:36.509" level="INFO">${INITIAL_BALANCE} = 10000000</msg>
<status status="PASS" endtime="20140610 12:48:36.508" starttime="20140610 12:48:36.507"></status>
</kw>
<kw type="kw" timeout="" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:36.541" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:36.542" starttime="20140610 12:48:36.537"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:36.543" starttime="20140610 12:48:36.535"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:36.549" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:36.550" starttime="20140610 12:48:36.546"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:36.550" starttime="20140610 12:48:36.544"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:36.556" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:36.557" starttime="20140610 12:48:36.553"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:36.558" starttime="20140610 12:48:36.551"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:36.558" starttime="20140610 12:48:36.527"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:36.563" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:36.563" starttime="20140610 12:48:36.559"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.567" starttime="20140610 12:48:36.564"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.571" starttime="20140610 12:48:36.568"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.576" starttime="20140610 12:48:36.572"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.580" starttime="20140610 12:48:36.577"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.584" starttime="20140610 12:48:36.581"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.590" starttime="20140610 12:48:36.586"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.594" starttime="20140610 12:48:36.591"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.598" starttime="20140610 12:48:36.596"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.602" starttime="20140610 12:48:36.600"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.606" starttime="20140610 12:48:36.604"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.610" starttime="20140610 12:48:36.608"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:36.614" starttime="20140610 12:48:36.611"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:36.619" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000']</msg>
<msg timestamp="20140610 12:48:40.746" level="INFO">Progress: 1 - Loading Definition from cache
Retrieving document at 'http://10.105.140.125:8080/profiler/subscriber?wsdl'.
Progress: 1 - Loading Definition from cache
Retrieving document at 'http://10.105.140.125:8080/profiler/provisioning?wsdl'.
Progress: 1 - Loading Definition from cache
Retrieving document at 'http://10.105.140.125:8080/accounting/accounts?wsdl'.
Progress: 1 - Loading Definition from cache
Retrieving document at 'http://10.105.140.125:8080/accounting/account_administration?wsdl'.
12:48:40,738 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:40.748" starttime="20140610 12:48:36.617"></status>
</kw>
<msg timestamp="20140610 12:48:40.751" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:40.751" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:40.749" starttime="20140610 12:48:36.615"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:40.766" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:40.766" starttime="20140610 12:48:40.763"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:40.770" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:40.769" starttime="20140610 12:48:40.767"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:40.773" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:40.773" starttime="20140610 12:48:40.771"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:40.780" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:40.786" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:40.786" starttime="20140610 12:48:40.777"></status>
</kw>
<msg timestamp="20140610 12:48:40.788" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:40.788" level="INFO">${return_log_entry} = 2014-06-10 12:48:40,738 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:40.787" starttime="20140610 12:48:40.775"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:40.800" starttime="20140610 12:48:40.797"></status>
</kw>
<msg timestamp="20140610 12:48:40.801" level="INFO">${return_log_entry} = 2014-06-10 12:48:40,738 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:40.800" starttime="20140610 12:48:40.789"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:40.812" starttime="20140610 12:48:40.809"></status>
</kw>
<msg timestamp="20140610 12:48:40.813" level="INFO">${return_log_entry} = 2014-06-10 12:48:40,738 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:40.812" starttime="20140610 12:48:40.802"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:40.825" starttime="20140610 12:48:40.822"></status>
</kw>
<msg timestamp="20140610 12:48:40.826" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:40.825" starttime="20140610 12:48:40.814"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:40.842" starttime="20140610 12:48:40.839"></status>
</kw>
<msg timestamp="20140610 12:48:40.843" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:40.842" starttime="20140610 12:48:40.827"></status>
</kw>
<msg timestamp="20140610 12:48:40.844" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:40.844" starttime="20140610 12:48:40.754"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:40.856" starttime="20140610 12:48:40.854"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:40.859" starttime="20140610 12:48:40.857"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:40.861" starttime="20140610 12:48:40.860"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:40.879" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:40.880" starttime="20140610 12:48:40.872"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:40.881" starttime="20140610 12:48:40.869"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:40.882" starttime="20140610 12:48:40.862"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:40.882" starttime="20140610 12:48:40.846"></status>
</kw>
<msg timestamp="20140610 12:48:40.885" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20140610 12:48:40.883" starttime="20140610 12:48:36.512"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20140610 12:48:40.888" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:48:40.888" starttime="20140610 12:48:40.886"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_ATTACHED_ONNET_PHONE_1_IMSI} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
</arguments>
<msg timestamp="20140610 12:48:40.892" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_IMSI} = 530052041010000</msg>
<status status="PASS" endtime="20140610 12:48:40.892" starttime="20140610 12:48:40.890"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<msg timestamp="20140610 12:48:40.896" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN} = 642041010000</msg>
<status status="PASS" endtime="20140610 12:48:40.895" starttime="20140610 12:48:40.893"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_DESTINATION_IMSI} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}+1</arg>
</arguments>
<msg timestamp="20140610 12:48:40.915" level="INFO">${FAKE_DESTINATION_IMSI} = 530052041010001</msg>
<status status="PASS" endtime="20140610 12:48:40.914" starttime="20140610 12:48:40.897"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_DESTINATION_MSISDN} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}+1</arg>
</arguments>
<msg timestamp="20140610 12:48:40.923" level="INFO">${FAKE_DESTINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140610 12:48:40.922" starttime="20140610 12:48:40.916"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_ORIGINATION_MSISDN} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FAKE_DESTINATION_MSISDN}</arg>
</arguments>
<msg timestamp="20140610 12:48:40.926" level="INFO">${FAKE_ORIGINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140610 12:48:40.926" starttime="20140610 12:48:40.924"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Setup their acounts (only MainAccount shall have a credit) *******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:40.929" starttime="20140610 12:48:40.927"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances By Imsi">
<doc>Same as "CRCE Clear All Balances" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId *****</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.031" starttime="20140610 12:48:41.029"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.061" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:41.062" starttime="20140610 12:48:41.058"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:41.063" starttime="20140610 12:48:41.056"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.068" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:41.069" starttime="20140610 12:48:41.066"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:41.070" starttime="20140610 12:48:41.064"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.076" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:41.077" starttime="20140610 12:48:41.073"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:41.078" starttime="20140610 12:48:41.071"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:41.078" starttime="20140610 12:48:41.048"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.083" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:41.083" starttime="20140610 12:48:41.079"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.087" starttime="20140610 12:48:41.084"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.091" starttime="20140610 12:48:41.088"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.095" starttime="20140610 12:48:41.092"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.097" starttime="20140610 12:48:41.096"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.100" starttime="20140610 12:48:41.099"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.104" starttime="20140610 12:48:41.101"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:41.109" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000']</msg>
<msg timestamp="20140610 12:48:41.435" level="INFO">12:48:41,408 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
12:48:41,411 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
12:48:41,414 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12887
12:48:41,417 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000
12:48:41,419 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
12:48:41,422 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
12:48:41,425 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
12:48:41,428 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140610 12:48:41.436" starttime="20140610 12:48:41.107"></status>
</kw>
<msg timestamp="20140610 12:48:41.438" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:41.438" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:41.437" starttime="20140610 12:48:41.105"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:41.452" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:41.452" starttime="20140610 12:48:41.449"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.456" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:41.456" starttime="20140610 12:48:41.453"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.460" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:41.459" starttime="20140610 12:48:41.457"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.466" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:41.473" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:41.474" starttime="20140610 12:48:41.463"></status>
</kw>
<msg timestamp="20140610 12:48:41.475" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:41.476" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,408 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:41.474" starttime="20140610 12:48:41.461"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.488" starttime="20140610 12:48:41.485"></status>
</kw>
<msg timestamp="20140610 12:48:41.489" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,408 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:41.488" starttime="20140610 12:48:41.477"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.501" starttime="20140610 12:48:41.498"></status>
</kw>
<msg timestamp="20140610 12:48:41.502" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,408 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:41.501" starttime="20140610 12:48:41.490"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.514" starttime="20140610 12:48:41.511"></status>
</kw>
<msg timestamp="20140610 12:48:41.516" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:41.515" starttime="20140610 12:48:41.503"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.533" starttime="20140610 12:48:41.530"></status>
</kw>
<msg timestamp="20140610 12:48:41.534" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:41.533" starttime="20140610 12:48:41.517"></status>
</kw>
<msg timestamp="20140610 12:48:41.535" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:41.535" starttime="20140610 12:48:41.440"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:41.550" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140610 12:48:41.549" starttime="20140610 12:48:41.546"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.554" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:41.553" starttime="20140610 12:48:41.551"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.557" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:41.557" starttime="20140610 12:48:41.555"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.564" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:41.570" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:41.571" starttime="20140610 12:48:41.561"></status>
</kw>
<msg timestamp="20140610 12:48:41.572" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:41.573" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,411 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140610 12:48:41.572" starttime="20140610 12:48:41.559"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.584" starttime="20140610 12:48:41.581"></status>
</kw>
<msg timestamp="20140610 12:48:41.585" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,411 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140610 12:48:41.584" starttime="20140610 12:48:41.574"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.596" starttime="20140610 12:48:41.594"></status>
</kw>
<msg timestamp="20140610 12:48:41.598" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,411 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140610 12:48:41.597" starttime="20140610 12:48:41.586"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.610" starttime="20140610 12:48:41.607"></status>
</kw>
<msg timestamp="20140610 12:48:41.611" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140610 12:48:41.611" starttime="20140610 12:48:41.599"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.629" starttime="20140610 12:48:41.626"></status>
</kw>
<msg timestamp="20140610 12:48:41.630" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140610 12:48:41.630" starttime="20140610 12:48:41.612"></status>
</kw>
<msg timestamp="20140610 12:48:41.632" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140610 12:48:41.631" starttime="20140610 12:48:41.538"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:41.646" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140610 12:48:41.645" starttime="20140610 12:48:41.642"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.650" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:41.649" starttime="20140610 12:48:41.647"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.653" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:41.653" starttime="20140610 12:48:41.651"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.659" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:41.666" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:41.666" starttime="20140610 12:48:41.657"></status>
</kw>
<msg timestamp="20140610 12:48:41.668" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:41.668" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,417 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140610 12:48:41.667" starttime="20140610 12:48:41.655"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.679" starttime="20140610 12:48:41.676"></status>
</kw>
<msg timestamp="20140610 12:48:41.680" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,417 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140610 12:48:41.680" starttime="20140610 12:48:41.669"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.692" starttime="20140610 12:48:41.689"></status>
</kw>
<msg timestamp="20140610 12:48:41.693" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,417 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140610 12:48:41.692" starttime="20140610 12:48:41.681"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.705" starttime="20140610 12:48:41.702"></status>
</kw>
<msg timestamp="20140610 12:48:41.706" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140610 12:48:41.706" starttime="20140610 12:48:41.694"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.723" starttime="20140610 12:48:41.721"></status>
</kw>
<msg timestamp="20140610 12:48:41.724" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140610 12:48:41.724" starttime="20140610 12:48:41.707"></status>
</kw>
<msg timestamp="20140610 12:48:41.726" level="INFO">${msisdn} = 642041010000</msg>
<status status="PASS" endtime="20140610 12:48:41.725" starttime="20140610 12:48:41.634"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:41.741" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140610 12:48:41.740" starttime="20140610 12:48:41.737"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.745" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:41.744" starttime="20140610 12:48:41.742"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.748" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:41.748" starttime="20140610 12:48:41.746"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.754" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:41.761" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:41.761" starttime="20140610 12:48:41.752"></status>
</kw>
<msg timestamp="20140610 12:48:41.763" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:41.763" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,414 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12887</msg>
<status status="PASS" endtime="20140610 12:48:41.762" starttime="20140610 12:48:41.750"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.774" starttime="20140610 12:48:41.771"></status>
</kw>
<msg timestamp="20140610 12:48:41.775" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,414 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12887</msg>
<status status="PASS" endtime="20140610 12:48:41.775" starttime="20140610 12:48:41.764"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.786" starttime="20140610 12:48:41.784"></status>
</kw>
<msg timestamp="20140610 12:48:41.788" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,414 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12887</msg>
<status status="PASS" endtime="20140610 12:48:41.787" starttime="20140610 12:48:41.776"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.799" starttime="20140610 12:48:41.796"></status>
</kw>
<msg timestamp="20140610 12:48:41.801" level="INFO">${resultCode} = 12887</msg>
<status status="PASS" endtime="20140610 12:48:41.800" starttime="20140610 12:48:41.789"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.817" starttime="20140610 12:48:41.815"></status>
</kw>
<msg timestamp="20140610 12:48:41.818" level="INFO">${resultCode} = 12887</msg>
<status status="PASS" endtime="20140610 12:48:41.818" starttime="20140610 12:48:41.802"></status>
</kw>
<msg timestamp="20140610 12:48:41.820" level="INFO">${id} = 12887</msg>
<status status="PASS" endtime="20140610 12:48:41.819" starttime="20140610 12:48:41.728"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:41.834" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140610 12:48:41.834" starttime="20140610 12:48:41.831"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.838" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:41.837" starttime="20140610 12:48:41.835"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.841" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:41.841" starttime="20140610 12:48:41.839"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:41.848" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:41.854" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:41.855" starttime="20140610 12:48:41.845"></status>
</kw>
<msg timestamp="20140610 12:48:41.856" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:41.856" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,419 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:41.855" starttime="20140610 12:48:41.843"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.953" starttime="20140610 12:48:41.949"></status>
</kw>
<msg timestamp="20140610 12:48:41.954" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,419 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:41.954" starttime="20140610 12:48:41.858"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.966" starttime="20140610 12:48:41.963"></status>
</kw>
<msg timestamp="20140610 12:48:41.967" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,419 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:41.966" starttime="20140610 12:48:41.955"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.978" starttime="20140610 12:48:41.976"></status>
</kw>
<msg timestamp="20140610 12:48:41.980" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:41.979" starttime="20140610 12:48:41.968"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:41.995" starttime="20140610 12:48:41.993"></status>
</kw>
<msg timestamp="20140610 12:48:41.997" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:41.996" starttime="20140610 12:48:41.981"></status>
</kw>
<msg timestamp="20140610 12:48:41.998" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:41.997" starttime="20140610 12:48:41.822"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:42.014" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140610 12:48:42.013" starttime="20140610 12:48:42.010"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:42.018" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:42.018" starttime="20140610 12:48:42.015"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:42.022" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:42.021" starttime="20140610 12:48:42.019"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:42.030" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:42.040" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:42.041" starttime="20140610 12:48:42.025"></status>
</kw>
<msg timestamp="20140610 12:48:42.043" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:42.044" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,422 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140610 12:48:42.043" starttime="20140610 12:48:42.023"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.060" starttime="20140610 12:48:42.056"></status>
</kw>
<msg timestamp="20140610 12:48:42.061" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,422 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140610 12:48:42.061" starttime="20140610 12:48:42.046"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.078" starttime="20140610 12:48:42.075"></status>
</kw>
<msg timestamp="20140610 12:48:42.080" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,422 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140610 12:48:42.080" starttime="20140610 12:48:42.063"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.098" starttime="20140610 12:48:42.094"></status>
</kw>
<msg timestamp="20140610 12:48:42.100" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140610 12:48:42.100" starttime="20140610 12:48:42.082"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.125" starttime="20140610 12:48:42.121"></status>
</kw>
<msg timestamp="20140610 12:48:42.127" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140610 12:48:42.126" starttime="20140610 12:48:42.102"></status>
</kw>
<msg timestamp="20140610 12:48:42.129" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140610 12:48:42.128" starttime="20140610 12:48:42.001"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:42.151" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140610 12:48:42.150" starttime="20140610 12:48:42.146"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:42.157" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:42.156" starttime="20140610 12:48:42.153"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:42.163" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:42.162" starttime="20140610 12:48:42.159"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:42.173" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:42.183" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:42.184" starttime="20140610 12:48:42.168"></status>
</kw>
<msg timestamp="20140610 12:48:42.186" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:42.187" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,425 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:42.185" starttime="20140610 12:48:42.165"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.203" starttime="20140610 12:48:42.200"></status>
</kw>
<msg timestamp="20140610 12:48:42.205" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,425 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:42.204" starttime="20140610 12:48:42.189"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.222" starttime="20140610 12:48:42.218"></status>
</kw>
<msg timestamp="20140610 12:48:42.224" level="INFO">${return_log_entry} = 2014-06-10 12:48:41,425 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:42.223" starttime="20140610 12:48:42.207"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.242" starttime="20140610 12:48:42.237"></status>
</kw>
<msg timestamp="20140610 12:48:42.244" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:42.243" starttime="20140610 12:48:42.226"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.272" starttime="20140610 12:48:42.265"></status>
</kw>
<msg timestamp="20140610 12:48:42.274" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:42.273" starttime="20140610 12:48:42.245"></status>
</kw>
<msg timestamp="20140610 12:48:42.276" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:42.276" starttime="20140610 12:48:42.132"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.297" starttime="20140610 12:48:42.294"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.300" starttime="20140610 12:48:42.298"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.304" starttime="20140610 12:48:42.302"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:42.332" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:42.333" starttime="20140610 12:48:42.319"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:42.334" starttime="20140610 12:48:42.316"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:42.335" starttime="20140610 12:48:42.306"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:42.336" starttime="20140610 12:48:42.280"></status>
</kw>
<msg timestamp="20140610 12:48:42.342" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:42.343" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140610 12:48:42.343" level="INFO">${msisdnDummy} = 642041010000</msg>
<msg timestamp="20140610 12:48:42.344" level="INFO">${subscriberId} = 12887</msg>
<msg timestamp="20140610 12:48:42.345" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140610 12:48:42.345" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140610 12:48:42.346" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:42.340" starttime="20140610 12:48:41.035"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.357" starttime="20140610 12:48:42.348"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Clear All Balances" *****</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.361" starttime="20140610 12:48:42.358"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances">
<doc>Sets passed subscribers balance of all accounts to zero</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve all accountIds ***</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.382" starttime="20140610 12:48:42.380"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, @{accountIds} = subscriber-admin-support-resource.CRCE Get Accounts">
<doc>This is a delegator to the CRCE webservice operation getAccounts and returnes the list of the subscriber's acountIds</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:42.426" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:42.427" starttime="20140610 12:48:42.422"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:42.428" starttime="20140610 12:48:42.419"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:42.437" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:42.439" starttime="20140610 12:48:42.433"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:42.440" starttime="20140610 12:48:42.430"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:42.448" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:42.450" starttime="20140610 12:48:42.444"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:42.451" starttime="20140610 12:48:42.441"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:42.451" starttime="20140610 12:48:42.407"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:42.458" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:42.458" starttime="20140610 12:48:42.453"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.464" starttime="20140610 12:48:42.460"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.471" starttime="20140610 12:48:42.466"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.477" starttime="20140610 12:48:42.473"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.481" starttime="20140610 12:48:42.479"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getAccounts</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.486" starttime="20140610 12:48:42.483"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getAccounts.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:42.493" starttime="20140610 12:48:42.488"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:42.505" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887']</msg>
<msg timestamp="20140610 12:48:43.388" level="INFO">12:48:43,376 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK
12:48:43,379 INFO  [log] LowLevelOps.getAccounts.output.accountIds=12888;12891;12890;12889</msg>
<status status="PASS" endtime="20140610 12:48:43.389" starttime="20140610 12:48:42.503"></status>
</kw>
<msg timestamp="20140610 12:48:43.392" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:43.392" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:43.390" starttime="20140610 12:48:42.495"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:43.484" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:43.484" starttime="20140610 12:48:43.478"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:43.488" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:43.487" starttime="20140610 12:48:43.485"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:43.491" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:43.491" starttime="20140610 12:48:43.489"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:43.497" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:43.503" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:43.504" starttime="20140610 12:48:43.495"></status>
</kw>
<msg timestamp="20140610 12:48:43.505" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:43.506" level="INFO">${return_log_entry} = 2014-06-10 12:48:43,376 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:43.505" starttime="20140610 12:48:43.493"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.517" starttime="20140610 12:48:43.515"></status>
</kw>
<msg timestamp="20140610 12:48:43.518" level="INFO">${return_log_entry} = 2014-06-10 12:48:43,376 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:43.518" starttime="20140610 12:48:43.507"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.529" starttime="20140610 12:48:43.526"></status>
</kw>
<msg timestamp="20140610 12:48:43.530" level="INFO">${return_log_entry} = 2014-06-10 12:48:43,376 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:43.529" starttime="20140610 12:48:43.519"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.541" starttime="20140610 12:48:43.538"></status>
</kw>
<msg timestamp="20140610 12:48:43.542" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:43.542" starttime="20140610 12:48:43.531"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.557" starttime="20140610 12:48:43.555"></status>
</kw>
<msg timestamp="20140610 12:48:43.558" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:43.558" starttime="20140610 12:48:43.543"></status>
</kw>
<msg timestamp="20140610 12:48:43.560" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:43.559" starttime="20140610 12:48:43.394"></status>
</kw>
<kw type="kw" timeout="" name="${csvAccountIds} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.accountIds</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:43.574" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.accountIds=</msg>
<status status="PASS" endtime="20140610 12:48:43.573" starttime="20140610 12:48:43.570"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:43.577" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:43.577" starttime="20140610 12:48:43.575"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:43.582" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:43.581" starttime="20140610 12:48:43.578"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:43.590" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:43.596" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:43.596" starttime="20140610 12:48:43.587"></status>
</kw>
<msg timestamp="20140610 12:48:43.598" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:43.598" level="INFO">${return_log_entry} = 2014-06-10 12:48:43,379 INFO  [log] LowLevelOps.getAccounts.output.accountIds=12888;12891;12890;12889</msg>
<status status="PASS" endtime="20140610 12:48:43.597" starttime="20140610 12:48:43.584"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.610" starttime="20140610 12:48:43.607"></status>
</kw>
<msg timestamp="20140610 12:48:43.611" level="INFO">${return_log_entry} = 2014-06-10 12:48:43,379 INFO  [log] LowLevelOps.getAccounts.output.accountIds=12888;12891;12890;12889</msg>
<status status="PASS" endtime="20140610 12:48:43.610" starttime="20140610 12:48:43.600"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.621" starttime="20140610 12:48:43.619"></status>
</kw>
<msg timestamp="20140610 12:48:43.622" level="INFO">${return_log_entry} = 2014-06-10 12:48:43,379 INFO  [log] LowLevelOps.getAccounts.output.accountIds=12888;12891;12890;12889</msg>
<status status="PASS" endtime="20140610 12:48:43.622" starttime="20140610 12:48:43.612"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.634" starttime="20140610 12:48:43.631"></status>
</kw>
<msg timestamp="20140610 12:48:43.635" level="INFO">${resultCode} = 12888;12891;12890;12889</msg>
<status status="PASS" endtime="20140610 12:48:43.634" starttime="20140610 12:48:43.624"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.650" starttime="20140610 12:48:43.648"></status>
</kw>
<msg timestamp="20140610 12:48:43.652" level="INFO">${resultCode} = 12888;12891;12890;12889</msg>
<status status="PASS" endtime="20140610 12:48:43.651" starttime="20140610 12:48:43.636"></status>
</kw>
<msg timestamp="20140610 12:48:43.653" level="INFO">${csvAccountIds} = 12888;12891;12890;12889</msg>
<status status="PASS" endtime="20140610 12:48:43.653" starttime="20140610 12:48:43.562"></status>
</kw>
<kw type="kw" timeout="" name="@{accountIds} = String.Split String">
<doc>Splits the `string` using `separator` as a delimiter string.</doc>
<arguments>
<arg>${csvAccountIds}</arg>
<arg>;</arg>
</arguments>
<msg timestamp="20140610 12:48:43.657" level="INFO">@{accountIds} = [ 12888 | 12891 | 12890 | 12889 ]</msg>
<status status="PASS" endtime="20140610 12:48:43.656" starttime="20140610 12:48:43.654"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetAccounts</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.668" starttime="20140610 12:48:43.667"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.671" starttime="20140610 12:48:43.669"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.673" starttime="20140610 12:48:43.672"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:43.690" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetAccounts*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetAccounts*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:43.691" starttime="20140610 12:48:43.683"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:43.692" starttime="20140610 12:48:43.681"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:43.692" starttime="20140610 12:48:43.674"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:43.693" starttime="20140610 12:48:43.659"></status>
</kw>
<msg timestamp="20140610 12:48:43.696" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:43.697" level="INFO">@{accountIds} = [ 12888 | 12891 | 12890 | 12889 ]</msg>
<status status="PASS" endtime="20140610 12:48:43.695" starttime="20140610 12:48:42.387"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying accounts of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.704" starttime="20140610 12:48:43.698"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Clear each account balance ***</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.706" starttime="20140610 12:48:43.705"></status>
</kw>
<kw type="for" timeout="" name="${accountId} IN [ @{accountIds} ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" timeout="" name="${accountId} = 12888">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140610 12:48:43.724" level="INFO">CRCE Set Balance( subscriberId=12887, accountId=12888, balance=0)</msg>
<status status="PASS" endtime="20140610 12:48:43.725" starttime="20140610 12:48:43.721"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:43.741" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:43.741" starttime="20140610 12:48:43.738"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:43.742" starttime="20140610 12:48:43.736"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:43.748" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:43.749" starttime="20140610 12:48:43.745"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:43.749" starttime="20140610 12:48:43.743"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:43.755" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:43.756" starttime="20140610 12:48:43.752"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:43.756" starttime="20140610 12:48:43.750"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:43.757" starttime="20140610 12:48:43.728"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:43.763" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:43.763" starttime="20140610 12:48:43.758"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.767" starttime="20140610 12:48:43.764"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.770" starttime="20140610 12:48:43.768"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.774" starttime="20140610 12:48:43.772"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.778" starttime="20140610 12:48:43.775"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.781" starttime="20140610 12:48:43.779"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.785" starttime="20140610 12:48:43.782"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.788" starttime="20140610 12:48:43.786"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:43.792" starttime="20140610 12:48:43.790"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:43.797" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140610 12:48:44.078" level="INFO">12:48:44,070 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:44.078" starttime="20140610 12:48:43.795"></status>
</kw>
<msg timestamp="20140610 12:48:44.081" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:44.082" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:44.080" starttime="20140610 12:48:43.793"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:44.095" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:44.095" starttime="20140610 12:48:44.092"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:44.099" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:44.098" starttime="20140610 12:48:44.096"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:44.102" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:44.102" starttime="20140610 12:48:44.100"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:44.108" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:44.113" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:44.114" starttime="20140610 12:48:44.105"></status>
</kw>
<msg timestamp="20140610 12:48:44.115" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:44.116" level="INFO">${return_log_entry} = 2014-06-10 12:48:44,070 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:44.115" starttime="20140610 12:48:44.103"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.126" starttime="20140610 12:48:44.124"></status>
</kw>
<msg timestamp="20140610 12:48:44.127" level="INFO">${return_log_entry} = 2014-06-10 12:48:44,070 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:44.127" starttime="20140610 12:48:44.117"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.138" starttime="20140610 12:48:44.136"></status>
</kw>
<msg timestamp="20140610 12:48:44.139" level="INFO">${return_log_entry} = 2014-06-10 12:48:44,070 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:44.139" starttime="20140610 12:48:44.128"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.150" starttime="20140610 12:48:44.148"></status>
</kw>
<msg timestamp="20140610 12:48:44.152" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:44.151" starttime="20140610 12:48:44.140"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.167" starttime="20140610 12:48:44.165"></status>
</kw>
<msg timestamp="20140610 12:48:44.168" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:44.168" starttime="20140610 12:48:44.153"></status>
</kw>
<msg timestamp="20140610 12:48:44.170" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:44.169" starttime="20140610 12:48:44.084"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.181" starttime="20140610 12:48:44.180"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.183" starttime="20140610 12:48:44.182"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.186" starttime="20140610 12:48:44.184"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:44.203" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:44.204" starttime="20140610 12:48:44.196"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.205" starttime="20140610 12:48:44.194"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.205" starttime="20140610 12:48:44.187"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.206" starttime="20140610 12:48:44.171"></status>
</kw>
<msg timestamp="20140610 12:48:44.208" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:44.206" starttime="20140610 12:48:43.710"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.215" starttime="20140610 12:48:44.209"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.215" starttime="20140610 12:48:43.708"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 12891">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140610 12:48:44.233" level="INFO">CRCE Set Balance( subscriberId=12887, accountId=12891, balance=0)</msg>
<status status="PASS" endtime="20140610 12:48:44.234" starttime="20140610 12:48:44.230"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:44.249" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:44.250" starttime="20140610 12:48:44.247"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.251" starttime="20140610 12:48:44.245"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:44.257" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:44.257" starttime="20140610 12:48:44.254"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.258" starttime="20140610 12:48:44.252"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:44.264" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:44.265" starttime="20140610 12:48:44.261"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.265" starttime="20140610 12:48:44.259"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.266" starttime="20140610 12:48:44.237"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:44.270" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:44.270" starttime="20140610 12:48:44.267"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.274" starttime="20140610 12:48:44.272"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.278" starttime="20140610 12:48:44.275"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.354" starttime="20140610 12:48:44.279"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.358" starttime="20140610 12:48:44.356"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.361" starttime="20140610 12:48:44.359"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.364" starttime="20140610 12:48:44.362"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.368" starttime="20140610 12:48:44.366"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.372" starttime="20140610 12:48:44.369"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:44.377" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140610 12:48:44.651" level="INFO">12:48:44,643 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:44.652" starttime="20140610 12:48:44.375"></status>
</kw>
<msg timestamp="20140610 12:48:44.654" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:44.654" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:44.653" starttime="20140610 12:48:44.373"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:44.669" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:44.669" starttime="20140610 12:48:44.666"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:44.673" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:44.672" starttime="20140610 12:48:44.670"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:44.676" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:44.676" starttime="20140610 12:48:44.674"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:44.682" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:44.683" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:44.684" starttime="20140610 12:48:44.679"></status>
</kw>
<msg timestamp="20140610 12:48:44.685" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:44.685" level="INFO">${return_log_entry} = 2014-06-10 12:48:44,643 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:44.684" starttime="20140610 12:48:44.677"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.697" starttime="20140610 12:48:44.694"></status>
</kw>
<msg timestamp="20140610 12:48:44.698" level="INFO">${return_log_entry} = 2014-06-10 12:48:44,643 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:44.697" starttime="20140610 12:48:44.687"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.708" starttime="20140610 12:48:44.706"></status>
</kw>
<msg timestamp="20140610 12:48:44.709" level="INFO">${return_log_entry} = 2014-06-10 12:48:44,643 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:44.709" starttime="20140610 12:48:44.699"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.721" starttime="20140610 12:48:44.718"></status>
</kw>
<msg timestamp="20140610 12:48:44.722" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:44.721" starttime="20140610 12:48:44.711"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.737" starttime="20140610 12:48:44.735"></status>
</kw>
<msg timestamp="20140610 12:48:44.739" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:44.738" starttime="20140610 12:48:44.723"></status>
</kw>
<msg timestamp="20140610 12:48:44.740" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:44.740" starttime="20140610 12:48:44.657"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.751" starttime="20140610 12:48:44.750"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.754" starttime="20140610 12:48:44.752"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.756" starttime="20140610 12:48:44.755"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:44.769" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:44.770" starttime="20140610 12:48:44.766"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.771" starttime="20140610 12:48:44.764"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.772" starttime="20140610 12:48:44.757"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.772" starttime="20140610 12:48:44.742"></status>
</kw>
<msg timestamp="20140610 12:48:44.774" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:44.773" starttime="20140610 12:48:44.219"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.781" starttime="20140610 12:48:44.775"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.781" starttime="20140610 12:48:44.216"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 12890">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140610 12:48:44.799" level="INFO">CRCE Set Balance( subscriberId=12887, accountId=12890, balance=0)</msg>
<status status="PASS" endtime="20140610 12:48:44.799" starttime="20140610 12:48:44.795"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:44.815" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:44.816" starttime="20140610 12:48:44.812"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.817" starttime="20140610 12:48:44.810"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:44.822" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:44.823" starttime="20140610 12:48:44.820"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.824" starttime="20140610 12:48:44.818"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:44.829" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:44.830" starttime="20140610 12:48:44.827"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.831" starttime="20140610 12:48:44.825"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:44.832" starttime="20140610 12:48:44.802"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:44.836" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:44.836" starttime="20140610 12:48:44.833"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.840" starttime="20140610 12:48:44.838"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.844" starttime="20140610 12:48:44.841"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.848" starttime="20140610 12:48:44.845"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.851" starttime="20140610 12:48:44.849"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.853" starttime="20140610 12:48:44.852"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.857" starttime="20140610 12:48:44.854"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.861" starttime="20140610 12:48:44.858"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:44.864" starttime="20140610 12:48:44.862"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:44.869" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140610 12:48:45.135" level="INFO">12:48:45,130 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:45.136" starttime="20140610 12:48:44.867"></status>
</kw>
<msg timestamp="20140610 12:48:45.140" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:45.140" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:45.138" starttime="20140610 12:48:44.866"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:45.154" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:45.153" starttime="20140610 12:48:45.151"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:45.157" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:45.157" starttime="20140610 12:48:45.155"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:45.161" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:45.160" starttime="20140610 12:48:45.158"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:45.167" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:45.168" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:45.168" starttime="20140610 12:48:45.164"></status>
</kw>
<msg timestamp="20140610 12:48:45.169" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:45.170" level="INFO">${return_log_entry} = 2014-06-10 12:48:45,130 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:45.169" starttime="20140610 12:48:45.162"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.180" starttime="20140610 12:48:45.178"></status>
</kw>
<msg timestamp="20140610 12:48:45.181" level="INFO">${return_log_entry} = 2014-06-10 12:48:45,130 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:45.181" starttime="20140610 12:48:45.171"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.192" starttime="20140610 12:48:45.190"></status>
</kw>
<msg timestamp="20140610 12:48:45.193" level="INFO">${return_log_entry} = 2014-06-10 12:48:45,130 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:45.193" starttime="20140610 12:48:45.182"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.204" starttime="20140610 12:48:45.201"></status>
</kw>
<msg timestamp="20140610 12:48:45.205" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:45.205" starttime="20140610 12:48:45.194"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.220" starttime="20140610 12:48:45.218"></status>
</kw>
<msg timestamp="20140610 12:48:45.222" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:45.221" starttime="20140610 12:48:45.206"></status>
</kw>
<msg timestamp="20140610 12:48:45.223" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:45.223" starttime="20140610 12:48:45.142"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.234" starttime="20140610 12:48:45.233"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.237" starttime="20140610 12:48:45.235"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.239" starttime="20140610 12:48:45.238"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:45.253" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:45.254" starttime="20140610 12:48:45.249"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.254" starttime="20140610 12:48:45.247"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.255" starttime="20140610 12:48:45.240"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.255" starttime="20140610 12:48:45.225"></status>
</kw>
<msg timestamp="20140610 12:48:45.258" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:45.256" starttime="20140610 12:48:44.785"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.264" starttime="20140610 12:48:45.259"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.265" starttime="20140610 12:48:44.782"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 12889">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140610 12:48:45.344" level="INFO">CRCE Set Balance( subscriberId=12887, accountId=12889, balance=0)</msg>
<status status="PASS" endtime="20140610 12:48:45.344" starttime="20140610 12:48:45.341"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:45.361" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:45.362" starttime="20140610 12:48:45.358"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.362" starttime="20140610 12:48:45.356"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:45.368" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:45.369" starttime="20140610 12:48:45.365"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.369" starttime="20140610 12:48:45.363"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:45.375" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:45.376" starttime="20140610 12:48:45.372"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.377" starttime="20140610 12:48:45.370"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.377" starttime="20140610 12:48:45.348"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:45.382" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:45.382" starttime="20140610 12:48:45.378"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.386" starttime="20140610 12:48:45.383"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.390" starttime="20140610 12:48:45.387"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.394" starttime="20140610 12:48:45.391"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.396" starttime="20140610 12:48:45.395"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.398" starttime="20140610 12:48:45.397"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.402" starttime="20140610 12:48:45.399"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.406" starttime="20140610 12:48:45.403"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.410" starttime="20140610 12:48:45.407"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:45.415" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140610 12:48:45.691" level="INFO">12:48:45,682 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:45.692" starttime="20140610 12:48:45.413"></status>
</kw>
<msg timestamp="20140610 12:48:45.693" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:45.693" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:45.692" starttime="20140610 12:48:45.411"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:45.708" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:45.707" starttime="20140610 12:48:45.705"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:45.711" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:45.711" starttime="20140610 12:48:45.709"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:45.715" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:45.714" starttime="20140610 12:48:45.712"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:45.721" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:45.722" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:45.723" starttime="20140610 12:48:45.718"></status>
</kw>
<msg timestamp="20140610 12:48:45.724" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:45.725" level="INFO">${return_log_entry} = 2014-06-10 12:48:45,682 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:45.724" starttime="20140610 12:48:45.716"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.736" starttime="20140610 12:48:45.734"></status>
</kw>
<msg timestamp="20140610 12:48:45.737" level="INFO">${return_log_entry} = 2014-06-10 12:48:45,682 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:45.737" starttime="20140610 12:48:45.726"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.749" starttime="20140610 12:48:45.746"></status>
</kw>
<msg timestamp="20140610 12:48:45.750" level="INFO">${return_log_entry} = 2014-06-10 12:48:45,682 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:45.749" starttime="20140610 12:48:45.739"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.762" starttime="20140610 12:48:45.759"></status>
</kw>
<msg timestamp="20140610 12:48:45.763" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:45.762" starttime="20140610 12:48:45.751"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.778" starttime="20140610 12:48:45.776"></status>
</kw>
<msg timestamp="20140610 12:48:45.780" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:45.779" starttime="20140610 12:48:45.764"></status>
</kw>
<msg timestamp="20140610 12:48:45.781" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:45.781" starttime="20140610 12:48:45.696"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.793" starttime="20140610 12:48:45.791"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.795" starttime="20140610 12:48:45.793"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.797" starttime="20140610 12:48:45.796"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:45.811" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:45.812" starttime="20140610 12:48:45.807"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.812" starttime="20140610 12:48:45.805"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.813" starttime="20140610 12:48:45.798"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.813" starttime="20140610 12:48:45.783"></status>
</kw>
<msg timestamp="20140610 12:48:45.815" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:45.814" starttime="20140610 12:48:45.269"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.821" starttime="20140610 12:48:45.816"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.822" starttime="20140610 12:48:45.266"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.822" starttime="20140610 12:48:43.707"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.824" starttime="20140610 12:48:42.364"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.825" starttime="20140610 12:48:40.931"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances By Imsi">
<doc>Same as "CRCE Clear All Balances" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_DESTINATION_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId *****</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.838" starttime="20140610 12:48:45.837"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:45.866" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:45.867" starttime="20140610 12:48:45.863"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.867" starttime="20140610 12:48:45.861"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:45.873" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:45.874" starttime="20140610 12:48:45.870"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.874" starttime="20140610 12:48:45.868"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:45.880" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:45.881" starttime="20140610 12:48:45.877"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.881" starttime="20140610 12:48:45.876"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:45.882" starttime="20140610 12:48:45.854"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:45.886" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:45.887" starttime="20140610 12:48:45.883"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.890" starttime="20140610 12:48:45.888"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.894" starttime="20140610 12:48:45.891"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.898" starttime="20140610 12:48:45.895"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.900" starttime="20140610 12:48:45.899"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.902" starttime="20140610 12:48:45.901"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:45.906" starttime="20140610 12:48:45.903"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:45.910" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001']</msg>
<msg timestamp="20140610 12:48:46.212" level="INFO">12:48:46,181 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
12:48:46,184 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
12:48:46,188 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12892
12:48:46,192 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001
12:48:46,195 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
12:48:46,199 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
12:48:46,202 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
12:48:46,206 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140610 12:48:46.213" starttime="20140610 12:48:45.909"></status>
</kw>
<msg timestamp="20140610 12:48:46.216" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:46.216" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:46.215" starttime="20140610 12:48:45.907"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:46.229" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:46.229" starttime="20140610 12:48:46.226"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.232" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:46.232" starttime="20140610 12:48:46.230"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.236" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:46.235" starttime="20140610 12:48:46.233"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.241" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:46.243" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:46.243" starttime="20140610 12:48:46.239"></status>
</kw>
<msg timestamp="20140610 12:48:46.244" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:46.245" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,181 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:46.244" starttime="20140610 12:48:46.237"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.255" starttime="20140610 12:48:46.253"></status>
</kw>
<msg timestamp="20140610 12:48:46.256" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,181 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:46.255" starttime="20140610 12:48:46.246"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.266" starttime="20140610 12:48:46.264"></status>
</kw>
<msg timestamp="20140610 12:48:46.267" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,181 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:46.267" starttime="20140610 12:48:46.257"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.278" starttime="20140610 12:48:46.275"></status>
</kw>
<msg timestamp="20140610 12:48:46.279" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:46.279" starttime="20140610 12:48:46.268"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.354" starttime="20140610 12:48:46.351"></status>
</kw>
<msg timestamp="20140610 12:48:46.355" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:46.354" starttime="20140610 12:48:46.337"></status>
</kw>
<msg timestamp="20140610 12:48:46.356" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:46.356" starttime="20140610 12:48:46.218"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:46.370" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140610 12:48:46.369" starttime="20140610 12:48:46.367"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.373" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:46.373" starttime="20140610 12:48:46.371"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.377" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:46.376" starttime="20140610 12:48:46.374"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.382" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:46.383" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:46.384" starttime="20140610 12:48:46.380"></status>
</kw>
<msg timestamp="20140610 12:48:46.385" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:46.385" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,184 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140610 12:48:46.385" starttime="20140610 12:48:46.378"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.396" starttime="20140610 12:48:46.393"></status>
</kw>
<msg timestamp="20140610 12:48:46.397" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,184 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140610 12:48:46.396" starttime="20140610 12:48:46.387"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.407" starttime="20140610 12:48:46.405"></status>
</kw>
<msg timestamp="20140610 12:48:46.408" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,184 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140610 12:48:46.408" starttime="20140610 12:48:46.398"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.419" starttime="20140610 12:48:46.416"></status>
</kw>
<msg timestamp="20140610 12:48:46.420" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140610 12:48:46.420" starttime="20140610 12:48:46.409"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.435" starttime="20140610 12:48:46.433"></status>
</kw>
<msg timestamp="20140610 12:48:46.436" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140610 12:48:46.436" starttime="20140610 12:48:46.421"></status>
</kw>
<msg timestamp="20140610 12:48:46.437" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140610 12:48:46.437" starttime="20140610 12:48:46.359"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:46.450" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140610 12:48:46.450" starttime="20140610 12:48:46.447"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.454" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:46.453" starttime="20140610 12:48:46.451"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.457" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:46.456" starttime="20140610 12:48:46.454"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.462" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:46.464" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:46.464" starttime="20140610 12:48:46.460"></status>
</kw>
<msg timestamp="20140610 12:48:46.465" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:46.466" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,192 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140610 12:48:46.465" starttime="20140610 12:48:46.458"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.475" starttime="20140610 12:48:46.473"></status>
</kw>
<msg timestamp="20140610 12:48:46.476" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,192 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140610 12:48:46.476" starttime="20140610 12:48:46.467"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.487" starttime="20140610 12:48:46.485"></status>
</kw>
<msg timestamp="20140610 12:48:46.488" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,192 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140610 12:48:46.488" starttime="20140610 12:48:46.478"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.499" starttime="20140610 12:48:46.496"></status>
</kw>
<msg timestamp="20140610 12:48:46.500" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140610 12:48:46.500" starttime="20140610 12:48:46.489"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.515" starttime="20140610 12:48:46.513"></status>
</kw>
<msg timestamp="20140610 12:48:46.516" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140610 12:48:46.515" starttime="20140610 12:48:46.501"></status>
</kw>
<msg timestamp="20140610 12:48:46.517" level="INFO">${msisdn} = 642041010001</msg>
<status status="PASS" endtime="20140610 12:48:46.517" starttime="20140610 12:48:46.439"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:46.530" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140610 12:48:46.530" starttime="20140610 12:48:46.527"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.533" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:46.533" starttime="20140610 12:48:46.531"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.537" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:46.536" starttime="20140610 12:48:46.534"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.542" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:46.544" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:46.544" starttime="20140610 12:48:46.540"></status>
</kw>
<msg timestamp="20140610 12:48:46.545" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:46.546" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,188 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12892</msg>
<status status="PASS" endtime="20140610 12:48:46.545" starttime="20140610 12:48:46.538"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.555" starttime="20140610 12:48:46.553"></status>
</kw>
<msg timestamp="20140610 12:48:46.556" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,188 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12892</msg>
<status status="PASS" endtime="20140610 12:48:46.556" starttime="20140610 12:48:46.547"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.567" starttime="20140610 12:48:46.565"></status>
</kw>
<msg timestamp="20140610 12:48:46.568" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,188 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12892</msg>
<status status="PASS" endtime="20140610 12:48:46.567" starttime="20140610 12:48:46.558"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.579" starttime="20140610 12:48:46.576"></status>
</kw>
<msg timestamp="20140610 12:48:46.580" level="INFO">${resultCode} = 12892</msg>
<status status="PASS" endtime="20140610 12:48:46.579" starttime="20140610 12:48:46.569"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.594" starttime="20140610 12:48:46.592"></status>
</kw>
<msg timestamp="20140610 12:48:46.596" level="INFO">${resultCode} = 12892</msg>
<status status="PASS" endtime="20140610 12:48:46.595" starttime="20140610 12:48:46.581"></status>
</kw>
<msg timestamp="20140610 12:48:46.597" level="INFO">${id} = 12892</msg>
<status status="PASS" endtime="20140610 12:48:46.597" starttime="20140610 12:48:46.519"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:46.610" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140610 12:48:46.609" starttime="20140610 12:48:46.607"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.613" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:46.613" starttime="20140610 12:48:46.611"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.616" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:46.616" starttime="20140610 12:48:46.614"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.623" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:46.624" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:46.625" starttime="20140610 12:48:46.620"></status>
</kw>
<msg timestamp="20140610 12:48:46.626" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:46.626" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,195 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:46.625" starttime="20140610 12:48:46.618"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.636" starttime="20140610 12:48:46.634"></status>
</kw>
<msg timestamp="20140610 12:48:46.637" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,195 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:46.637" starttime="20140610 12:48:46.628"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.648" starttime="20140610 12:48:46.646"></status>
</kw>
<msg timestamp="20140610 12:48:46.649" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,195 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:46.649" starttime="20140610 12:48:46.639"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.660" starttime="20140610 12:48:46.658"></status>
</kw>
<msg timestamp="20140610 12:48:46.661" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:46.661" starttime="20140610 12:48:46.650"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.677" starttime="20140610 12:48:46.674"></status>
</kw>
<msg timestamp="20140610 12:48:46.678" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:46.677" starttime="20140610 12:48:46.662"></status>
</kw>
<msg timestamp="20140610 12:48:46.679" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:46.679" starttime="20140610 12:48:46.599"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:46.692" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140610 12:48:46.692" starttime="20140610 12:48:46.689"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.695" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:46.695" starttime="20140610 12:48:46.693"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.699" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:46.698" starttime="20140610 12:48:46.696"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.704" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:46.706" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:46.706" starttime="20140610 12:48:46.701"></status>
</kw>
<msg timestamp="20140610 12:48:46.707" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:46.708" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,199 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140610 12:48:46.707" starttime="20140610 12:48:46.700"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.718" starttime="20140610 12:48:46.715"></status>
</kw>
<msg timestamp="20140610 12:48:46.719" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,199 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140610 12:48:46.718" starttime="20140610 12:48:46.709"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.731" starttime="20140610 12:48:46.729"></status>
</kw>
<msg timestamp="20140610 12:48:46.732" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,199 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140610 12:48:46.732" starttime="20140610 12:48:46.720"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.744" starttime="20140610 12:48:46.741"></status>
</kw>
<msg timestamp="20140610 12:48:46.745" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140610 12:48:46.745" starttime="20140610 12:48:46.733"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.760" starttime="20140610 12:48:46.758"></status>
</kw>
<msg timestamp="20140610 12:48:46.762" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140610 12:48:46.761" starttime="20140610 12:48:46.746"></status>
</kw>
<msg timestamp="20140610 12:48:46.763" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140610 12:48:46.763" starttime="20140610 12:48:46.681"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:46.776" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140610 12:48:46.776" starttime="20140610 12:48:46.773"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.780" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:46.779" starttime="20140610 12:48:46.778"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.783" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:46.783" starttime="20140610 12:48:46.781"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.789" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:46.790" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:46.791" starttime="20140610 12:48:46.786"></status>
</kw>
<msg timestamp="20140610 12:48:46.792" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:46.793" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,202 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:46.792" starttime="20140610 12:48:46.784"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.803" starttime="20140610 12:48:46.801"></status>
</kw>
<msg timestamp="20140610 12:48:46.804" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,202 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:46.803" starttime="20140610 12:48:46.794"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.814" starttime="20140610 12:48:46.812"></status>
</kw>
<msg timestamp="20140610 12:48:46.816" level="INFO">${return_log_entry} = 2014-06-10 12:48:46,202 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:46.815" starttime="20140610 12:48:46.805"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.827" starttime="20140610 12:48:46.824"></status>
</kw>
<msg timestamp="20140610 12:48:46.828" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:46.827" starttime="20140610 12:48:46.817"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.844" starttime="20140610 12:48:46.841"></status>
</kw>
<msg timestamp="20140610 12:48:46.845" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:46.844" starttime="20140610 12:48:46.829"></status>
</kw>
<msg timestamp="20140610 12:48:46.846" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:46.846" starttime="20140610 12:48:46.765"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.857" starttime="20140610 12:48:46.856"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.860" starttime="20140610 12:48:46.858"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.862" starttime="20140610 12:48:46.860"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:46.885" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:46.887" starttime="20140610 12:48:46.880"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:46.888" starttime="20140610 12:48:46.877"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:46.888" starttime="20140610 12:48:46.867"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:46.889" starttime="20140610 12:48:46.848"></status>
</kw>
<msg timestamp="20140610 12:48:46.896" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:46.896" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140610 12:48:46.897" level="INFO">${msisdnDummy} = 642041010001</msg>
<msg timestamp="20140610 12:48:46.897" level="INFO">${subscriberId} = 12892</msg>
<msg timestamp="20140610 12:48:46.898" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140610 12:48:46.899" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140610 12:48:46.899" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:46.893" starttime="20140610 12:48:45.842"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.910" starttime="20140610 12:48:46.901"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Clear All Balances" *****</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.913" starttime="20140610 12:48:46.911"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances">
<doc>Sets passed subscribers balance of all accounts to zero</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve all accountIds ***</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:46.933" starttime="20140610 12:48:46.931"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, @{accountIds} = subscriber-admin-support-resource.CRCE Get Accounts">
<doc>This is a delegator to the CRCE webservice operation getAccounts and returnes the list of the subscriber's acountIds</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.982" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:46.984" starttime="20140610 12:48:46.978"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:46.985" starttime="20140610 12:48:46.970"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:46.993" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:46.994" starttime="20140610 12:48:46.989"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:46.995" starttime="20140610 12:48:46.986"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:47.004" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:47.005" starttime="20140610 12:48:46.999"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:47.007" starttime="20140610 12:48:46.997"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:47.009" starttime="20140610 12:48:46.958"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:47.016" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:47.016" starttime="20140610 12:48:47.011"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.020" starttime="20140610 12:48:47.017"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.024" starttime="20140610 12:48:47.021"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.090" starttime="20140610 12:48:47.025"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.093" starttime="20140610 12:48:47.092"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getAccounts</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.096" starttime="20140610 12:48:47.094"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getAccounts.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.099" starttime="20140610 12:48:47.097"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:47.103" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892']</msg>
<msg timestamp="20140610 12:48:47.606" level="INFO">12:48:47,589 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK
12:48:47,593 INFO  [log] LowLevelOps.getAccounts.output.accountIds=12893;12896;12895;12894</msg>
<status status="PASS" endtime="20140610 12:48:47.607" starttime="20140610 12:48:47.102"></status>
</kw>
<msg timestamp="20140610 12:48:47.608" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:47.608" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:47.607" starttime="20140610 12:48:47.100"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:47.627" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:47.626" starttime="20140610 12:48:47.623"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:47.632" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:47.631" starttime="20140610 12:48:47.629"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:47.637" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:47.636" starttime="20140610 12:48:47.633"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:47.645" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:47.647" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:47.648" starttime="20140610 12:48:47.641"></status>
</kw>
<msg timestamp="20140610 12:48:47.650" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:47.651" level="INFO">${return_log_entry} = 2014-06-10 12:48:47,589 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:47.649" starttime="20140610 12:48:47.638"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.667" starttime="20140610 12:48:47.664"></status>
</kw>
<msg timestamp="20140610 12:48:47.669" level="INFO">${return_log_entry} = 2014-06-10 12:48:47,589 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:47.668" starttime="20140610 12:48:47.652"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.684" starttime="20140610 12:48:47.681"></status>
</kw>
<msg timestamp="20140610 12:48:47.686" level="INFO">${return_log_entry} = 2014-06-10 12:48:47,589 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:47.685" starttime="20140610 12:48:47.670"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.703" starttime="20140610 12:48:47.698"></status>
</kw>
<msg timestamp="20140610 12:48:47.705" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:47.704" starttime="20140610 12:48:47.688"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.728" starttime="20140610 12:48:47.724"></status>
</kw>
<msg timestamp="20140610 12:48:47.729" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:47.729" starttime="20140610 12:48:47.707"></status>
</kw>
<msg timestamp="20140610 12:48:47.732" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:47.731" starttime="20140610 12:48:47.612"></status>
</kw>
<kw type="kw" timeout="" name="${csvAccountIds} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.accountIds</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:47.752" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.accountIds=</msg>
<status status="PASS" endtime="20140610 12:48:47.751" starttime="20140610 12:48:47.747"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:47.757" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:47.757" starttime="20140610 12:48:47.754"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:47.763" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:47.762" starttime="20140610 12:48:47.759"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:47.772" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:47.774" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:47.775" starttime="20140610 12:48:47.768"></status>
</kw>
<msg timestamp="20140610 12:48:47.776" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:47.777" level="INFO">${return_log_entry} = 2014-06-10 12:48:47,593 INFO  [log] LowLevelOps.getAccounts.output.accountIds=12893;12896;12895;12894</msg>
<status status="PASS" endtime="20140610 12:48:47.776" starttime="20140610 12:48:47.765"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.792" starttime="20140610 12:48:47.789"></status>
</kw>
<msg timestamp="20140610 12:48:47.794" level="INFO">${return_log_entry} = 2014-06-10 12:48:47,593 INFO  [log] LowLevelOps.getAccounts.output.accountIds=12893;12896;12895;12894</msg>
<status status="PASS" endtime="20140610 12:48:47.793" starttime="20140610 12:48:47.779"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.810" starttime="20140610 12:48:47.807"></status>
</kw>
<msg timestamp="20140610 12:48:47.812" level="INFO">${return_log_entry} = 2014-06-10 12:48:47,593 INFO  [log] LowLevelOps.getAccounts.output.accountIds=12893;12896;12895;12894</msg>
<status status="PASS" endtime="20140610 12:48:47.811" starttime="20140610 12:48:47.796"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.828" starttime="20140610 12:48:47.824"></status>
</kw>
<msg timestamp="20140610 12:48:47.829" level="INFO">${resultCode} = 12893;12896;12895;12894</msg>
<status status="PASS" endtime="20140610 12:48:47.829" starttime="20140610 12:48:47.813"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.851" starttime="20140610 12:48:47.848"></status>
</kw>
<msg timestamp="20140610 12:48:47.853" level="INFO">${resultCode} = 12893;12896;12895;12894</msg>
<status status="PASS" endtime="20140610 12:48:47.852" starttime="20140610 12:48:47.831"></status>
</kw>
<msg timestamp="20140610 12:48:47.855" level="INFO">${csvAccountIds} = 12893;12896;12895;12894</msg>
<status status="PASS" endtime="20140610 12:48:47.854" starttime="20140610 12:48:47.735"></status>
</kw>
<kw type="kw" timeout="" name="@{accountIds} = String.Split String">
<doc>Splits the `string` using `separator` as a delimiter string.</doc>
<arguments>
<arg>${csvAccountIds}</arg>
<arg>;</arg>
</arguments>
<msg timestamp="20140610 12:48:47.861" level="INFO">@{accountIds} = [ 12893 | 12896 | 12895 | 12894 ]</msg>
<status status="PASS" endtime="20140610 12:48:47.860" starttime="20140610 12:48:47.857"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetAccounts</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.877" starttime="20140610 12:48:47.875"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.881" starttime="20140610 12:48:47.879"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.884" starttime="20140610 12:48:47.882"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:47.905" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetAccounts*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetAccounts*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:47.906" starttime="20140610 12:48:47.900"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:47.907" starttime="20140610 12:48:47.896"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:47.908" starttime="20140610 12:48:47.886"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:47.908" starttime="20140610 12:48:47.863"></status>
</kw>
<msg timestamp="20140610 12:48:47.913" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:47.913" level="INFO">@{accountIds} = [ 12893 | 12896 | 12895 | 12894 ]</msg>
<status status="PASS" endtime="20140610 12:48:47.910" starttime="20140610 12:48:46.939"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying accounts of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.923" starttime="20140610 12:48:47.915"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Clear each account balance ***</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:47.926" starttime="20140610 12:48:47.925"></status>
</kw>
<kw type="for" timeout="" name="${accountId} IN [ @{accountIds} ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" timeout="" name="${accountId} = 12893">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140610 12:48:47.954" level="INFO">CRCE Set Balance( subscriberId=12892, accountId=12893, balance=0)</msg>
<status status="PASS" endtime="20140610 12:48:47.955" starttime="20140610 12:48:47.948"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:47.978" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:47.979" starttime="20140610 12:48:47.974"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:47.980" starttime="20140610 12:48:47.971"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:47.988" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:47.989" starttime="20140610 12:48:47.985"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:47.990" starttime="20140610 12:48:47.982"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:47.999" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:48.000" starttime="20140610 12:48:47.995"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:48.003" starttime="20140610 12:48:47.992"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:48.005" starttime="20140610 12:48:47.960"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:48.013" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:48.014" starttime="20140610 12:48:48.008"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.020" starttime="20140610 12:48:48.015"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.026" starttime="20140610 12:48:48.022"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.032" starttime="20140610 12:48:48.028"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.036" starttime="20140610 12:48:48.034"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.040" starttime="20140610 12:48:48.038"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.047" starttime="20140610 12:48:48.042"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.053" starttime="20140610 12:48:48.048"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.059" starttime="20140610 12:48:48.055"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:48.066" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140610 12:48:48.458" level="INFO">12:48:48,453 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:48.459" starttime="20140610 12:48:48.064"></status>
</kw>
<msg timestamp="20140610 12:48:48.460" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:48.460" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:48.459" starttime="20140610 12:48:48.061"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:48.473" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:48.473" starttime="20140610 12:48:48.470"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:48.477" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:48.477" starttime="20140610 12:48:48.475"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:48.481" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:48.480" starttime="20140610 12:48:48.478"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:48.486" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:48.487" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:48.488" starttime="20140610 12:48:48.483"></status>
</kw>
<msg timestamp="20140610 12:48:48.489" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:48.489" level="INFO">${return_log_entry} = 2014-06-10 12:48:48,453 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:48.488" starttime="20140610 12:48:48.482"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.571" starttime="20140610 12:48:48.567"></status>
</kw>
<msg timestamp="20140610 12:48:48.573" level="INFO">${return_log_entry} = 2014-06-10 12:48:48,453 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:48.572" starttime="20140610 12:48:48.490"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.584" starttime="20140610 12:48:48.582"></status>
</kw>
<msg timestamp="20140610 12:48:48.585" level="INFO">${return_log_entry} = 2014-06-10 12:48:48,453 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:48.585" starttime="20140610 12:48:48.574"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.596" starttime="20140610 12:48:48.593"></status>
</kw>
<msg timestamp="20140610 12:48:48.597" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:48.596" starttime="20140610 12:48:48.586"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.611" starttime="20140610 12:48:48.609"></status>
</kw>
<msg timestamp="20140610 12:48:48.612" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:48.612" starttime="20140610 12:48:48.597"></status>
</kw>
<msg timestamp="20140610 12:48:48.613" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:48.613" starttime="20140610 12:48:48.462"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.639" starttime="20140610 12:48:48.636"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.642" starttime="20140610 12:48:48.640"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.646" starttime="20140610 12:48:48.643"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:48.665" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:48.667" starttime="20140610 12:48:48.660"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:48.668" starttime="20140610 12:48:48.658"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:48.668" starttime="20140610 12:48:48.647"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:48.669" starttime="20140610 12:48:48.624"></status>
</kw>
<msg timestamp="20140610 12:48:48.672" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:48.670" starttime="20140610 12:48:47.933"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.682" starttime="20140610 12:48:48.674"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:48.683" starttime="20140610 12:48:47.929"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 12896">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140610 12:48:48.711" level="INFO">CRCE Set Balance( subscriberId=12892, accountId=12896, balance=0)</msg>
<status status="PASS" endtime="20140610 12:48:48.711" starttime="20140610 12:48:48.706"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:48.727" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:48.728" starttime="20140610 12:48:48.724"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:48.728" starttime="20140610 12:48:48.723"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:48.734" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:48.734" starttime="20140610 12:48:48.731"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:48.735" starttime="20140610 12:48:48.729"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:48.740" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:48.741" starttime="20140610 12:48:48.737"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:48.741" starttime="20140610 12:48:48.736"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:48.742" starttime="20140610 12:48:48.716"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:48.746" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:48.746" starttime="20140610 12:48:48.743"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.750" starttime="20140610 12:48:48.747"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.753" starttime="20140610 12:48:48.751"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.757" starttime="20140610 12:48:48.754"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.759" starttime="20140610 12:48:48.758"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.761" starttime="20140610 12:48:48.760"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.765" starttime="20140610 12:48:48.762"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.768" starttime="20140610 12:48:48.766"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:48.772" starttime="20140610 12:48:48.769"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:48.776" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140610 12:48:49.046" level="INFO">12:48:49,036 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:49.047" starttime="20140610 12:48:48.774"></status>
</kw>
<msg timestamp="20140610 12:48:49.050" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:49.050" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:49.048" starttime="20140610 12:48:48.773"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:49.063" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:49.062" starttime="20140610 12:48:49.060"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:49.066" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:49.066" starttime="20140610 12:48:49.064"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:49.069" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:49.069" starttime="20140610 12:48:49.067"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:49.074" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:49.075" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:49.076" starttime="20140610 12:48:49.072"></status>
</kw>
<msg timestamp="20140610 12:48:49.077" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:49.078" level="INFO">${return_log_entry} = 2014-06-10 12:48:49,036 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:49.077" starttime="20140610 12:48:49.070"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.088" starttime="20140610 12:48:49.086"></status>
</kw>
<msg timestamp="20140610 12:48:49.089" level="INFO">${return_log_entry} = 2014-06-10 12:48:49,036 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:49.088" starttime="20140610 12:48:49.079"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.099" starttime="20140610 12:48:49.097"></status>
</kw>
<msg timestamp="20140610 12:48:49.100" level="INFO">${return_log_entry} = 2014-06-10 12:48:49,036 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:49.100" starttime="20140610 12:48:49.090"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.110" starttime="20140610 12:48:49.108"></status>
</kw>
<msg timestamp="20140610 12:48:49.112" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:49.111" starttime="20140610 12:48:49.101"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.126" starttime="20140610 12:48:49.124"></status>
</kw>
<msg timestamp="20140610 12:48:49.127" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:49.127" starttime="20140610 12:48:49.113"></status>
</kw>
<msg timestamp="20140610 12:48:49.129" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:49.128" starttime="20140610 12:48:49.052"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.139" starttime="20140610 12:48:49.138"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.142" starttime="20140610 12:48:49.140"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.144" starttime="20140610 12:48:49.142"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:49.156" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:49.157" starttime="20140610 12:48:49.153"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.157" starttime="20140610 12:48:49.151"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.158" starttime="20140610 12:48:49.145"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.158" starttime="20140610 12:48:49.130"></status>
</kw>
<msg timestamp="20140610 12:48:49.160" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:49.159" starttime="20140610 12:48:48.689"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.167" starttime="20140610 12:48:49.161"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.167" starttime="20140610 12:48:48.685"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 12895">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140610 12:48:49.183" level="INFO">CRCE Set Balance( subscriberId=12892, accountId=12895, balance=0)</msg>
<status status="PASS" endtime="20140610 12:48:49.184" starttime="20140610 12:48:49.181"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:49.198" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:49.199" starttime="20140610 12:48:49.196"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.200" starttime="20140610 12:48:49.194"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:49.205" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:49.206" starttime="20140610 12:48:49.202"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.206" starttime="20140610 12:48:49.201"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:49.211" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:49.212" starttime="20140610 12:48:49.209"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.212" starttime="20140610 12:48:49.207"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.213" starttime="20140610 12:48:49.187"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:49.217" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:49.217" starttime="20140610 12:48:49.214"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.221" starttime="20140610 12:48:49.218"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.224" starttime="20140610 12:48:49.222"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.228" starttime="20140610 12:48:49.225"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.230" starttime="20140610 12:48:49.229"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.232" starttime="20140610 12:48:49.231"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.236" starttime="20140610 12:48:49.233"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.239" starttime="20140610 12:48:49.237"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.243" starttime="20140610 12:48:49.240"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:49.247" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140610 12:48:49.524" level="INFO">12:48:49,518 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:49.524" starttime="20140610 12:48:49.246"></status>
</kw>
<msg timestamp="20140610 12:48:49.525" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:49.526" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:49.525" starttime="20140610 12:48:49.244"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:49.538" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:49.538" starttime="20140610 12:48:49.535"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:49.541" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:49.541" starttime="20140610 12:48:49.539"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:49.601" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:49.600" starttime="20140610 12:48:49.542"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:49.608" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:49.609" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:49.610" starttime="20140610 12:48:49.604"></status>
</kw>
<msg timestamp="20140610 12:48:49.611" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:49.611" level="INFO">${return_log_entry} = 2014-06-10 12:48:49,518 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:49.611" starttime="20140610 12:48:49.602"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.622" starttime="20140610 12:48:49.620"></status>
</kw>
<msg timestamp="20140610 12:48:49.623" level="INFO">${return_log_entry} = 2014-06-10 12:48:49,518 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:49.622" starttime="20140610 12:48:49.612"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.632" starttime="20140610 12:48:49.630"></status>
</kw>
<msg timestamp="20140610 12:48:49.633" level="INFO">${return_log_entry} = 2014-06-10 12:48:49,518 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:49.633" starttime="20140610 12:48:49.624"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.644" starttime="20140610 12:48:49.641"></status>
</kw>
<msg timestamp="20140610 12:48:49.645" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:49.644" starttime="20140610 12:48:49.634"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.659" starttime="20140610 12:48:49.657"></status>
</kw>
<msg timestamp="20140610 12:48:49.660" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:49.660" starttime="20140610 12:48:49.646"></status>
</kw>
<msg timestamp="20140610 12:48:49.662" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:49.661" starttime="20140610 12:48:49.528"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.672" starttime="20140610 12:48:49.671"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.674" starttime="20140610 12:48:49.673"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.676" starttime="20140610 12:48:49.675"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:49.689" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:49.690" starttime="20140610 12:48:49.686"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.690" starttime="20140610 12:48:49.684"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.691" starttime="20140610 12:48:49.677"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.691" starttime="20140610 12:48:49.663"></status>
</kw>
<msg timestamp="20140610 12:48:49.692" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:49.692" starttime="20140610 12:48:49.171"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.699" starttime="20140610 12:48:49.693"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.700" starttime="20140610 12:48:49.168"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 12894">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140610 12:48:49.715" level="INFO">CRCE Set Balance( subscriberId=12892, accountId=12894, balance=0)</msg>
<status status="PASS" endtime="20140610 12:48:49.716" starttime="20140610 12:48:49.712"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:49.730" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:49.731" starttime="20140610 12:48:49.727"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.731" starttime="20140610 12:48:49.726"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:49.737" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:49.738" starttime="20140610 12:48:49.734"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.738" starttime="20140610 12:48:49.732"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:49.743" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:49.744" starttime="20140610 12:48:49.741"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.745" starttime="20140610 12:48:49.739"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:49.745" starttime="20140610 12:48:49.718"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:49.749" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:49.750" starttime="20140610 12:48:49.746"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.753" starttime="20140610 12:48:49.751"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.757" starttime="20140610 12:48:49.754"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.761" starttime="20140610 12:48:49.759"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.764" starttime="20140610 12:48:49.762"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.766" starttime="20140610 12:48:49.765"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.769" starttime="20140610 12:48:49.767"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.773" starttime="20140610 12:48:49.770"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:49.776" starttime="20140610 12:48:49.774"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:49.780" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140610 12:48:50.061" level="INFO">12:48:50,051 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:50.061" starttime="20140610 12:48:49.779"></status>
</kw>
<msg timestamp="20140610 12:48:50.064" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:50.064" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:50.063" starttime="20140610 12:48:49.777"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:50.077" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:50.077" starttime="20140610 12:48:50.074"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.080" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:50.080" starttime="20140610 12:48:50.078"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.084" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:50.083" starttime="20140610 12:48:50.081"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.089" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:50.090" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:50.091" starttime="20140610 12:48:50.086"></status>
</kw>
<msg timestamp="20140610 12:48:50.092" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:50.092" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,051 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:50.091" starttime="20140610 12:48:50.085"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.102" starttime="20140610 12:48:50.100"></status>
</kw>
<msg timestamp="20140610 12:48:50.103" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,051 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:50.103" starttime="20140610 12:48:50.093"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.114" starttime="20140610 12:48:50.111"></status>
</kw>
<msg timestamp="20140610 12:48:50.115" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,051 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:50.114" starttime="20140610 12:48:50.104"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.126" starttime="20140610 12:48:50.123"></status>
</kw>
<msg timestamp="20140610 12:48:50.127" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:50.127" starttime="20140610 12:48:50.116"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.142" starttime="20140610 12:48:50.140"></status>
</kw>
<msg timestamp="20140610 12:48:50.143" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:50.143" starttime="20140610 12:48:50.128"></status>
</kw>
<msg timestamp="20140610 12:48:50.145" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:50.144" starttime="20140610 12:48:50.066"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.155" starttime="20140610 12:48:50.154"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.158" starttime="20140610 12:48:50.156"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.160" starttime="20140610 12:48:50.159"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:50.173" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:50.174" starttime="20140610 12:48:50.170"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:50.175" starttime="20140610 12:48:50.168"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:50.175" starttime="20140610 12:48:50.161"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:50.176" starttime="20140610 12:48:50.146"></status>
</kw>
<msg timestamp="20140610 12:48:50.178" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:50.177" starttime="20140610 12:48:49.702"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.184" starttime="20140610 12:48:50.179"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:50.185" starttime="20140610 12:48:49.700"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:50.186" starttime="20140610 12:48:47.927"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:50.187" starttime="20140610 12:48:46.916"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:50.188" starttime="20140610 12:48:45.827"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance By Imsi">
<doc>Same as "CRCE Set Main Balance" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>10000000</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId for the passed imsi ***</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.201" starttime="20140610 12:48:50.200"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.228" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:50.229" starttime="20140610 12:48:50.225"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:50.229" starttime="20140610 12:48:50.223"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.235" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:50.236" starttime="20140610 12:48:50.232"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:50.236" starttime="20140610 12:48:50.230"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.242" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:50.243" starttime="20140610 12:48:50.239"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:50.243" starttime="20140610 12:48:50.237"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:50.244" starttime="20140610 12:48:50.216"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.248" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:50.248" starttime="20140610 12:48:50.244"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.252" starttime="20140610 12:48:50.249"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.256" starttime="20140610 12:48:50.253"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.259" starttime="20140610 12:48:50.257"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.262" starttime="20140610 12:48:50.260"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.264" starttime="20140610 12:48:50.263"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.268" starttime="20140610 12:48:50.265"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:50.272" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000']</msg>
<msg timestamp="20140610 12:48:50.586" level="INFO">12:48:50,548 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
12:48:50,553 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
12:48:50,558 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12887
12:48:50,563 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000
12:48:50,567 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
12:48:50,572 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
12:48:50,576 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
12:48:50,581 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140610 12:48:50.642" starttime="20140610 12:48:50.270"></status>
</kw>
<msg timestamp="20140610 12:48:50.644" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:50.644" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:50.643" starttime="20140610 12:48:50.269"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:50.658" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:50.658" starttime="20140610 12:48:50.655"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.662" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:50.661" starttime="20140610 12:48:50.659"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.665" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:50.664" starttime="20140610 12:48:50.662"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.670" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:50.671" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:50.671" starttime="20140610 12:48:50.667"></status>
</kw>
<msg timestamp="20140610 12:48:50.673" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:50.673" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,548 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:50.672" starttime="20140610 12:48:50.666"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.683" starttime="20140610 12:48:50.681"></status>
</kw>
<msg timestamp="20140610 12:48:50.684" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,548 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:50.684" starttime="20140610 12:48:50.674"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.694" starttime="20140610 12:48:50.692"></status>
</kw>
<msg timestamp="20140610 12:48:50.695" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,548 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:50.694" starttime="20140610 12:48:50.685"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.705" starttime="20140610 12:48:50.703"></status>
</kw>
<msg timestamp="20140610 12:48:50.706" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:50.706" starttime="20140610 12:48:50.696"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.720" starttime="20140610 12:48:50.718"></status>
</kw>
<msg timestamp="20140610 12:48:50.721" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:50.720" starttime="20140610 12:48:50.707"></status>
</kw>
<msg timestamp="20140610 12:48:50.722" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:50.722" starttime="20140610 12:48:50.647"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:50.735" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140610 12:48:50.734" starttime="20140610 12:48:50.732"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.738" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:50.737" starttime="20140610 12:48:50.735"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.741" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:50.740" starttime="20140610 12:48:50.738"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.746" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:50.747" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:50.748" starttime="20140610 12:48:50.744"></status>
</kw>
<msg timestamp="20140610 12:48:50.749" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:50.749" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,553 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140610 12:48:50.748" starttime="20140610 12:48:50.742"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.758" starttime="20140610 12:48:50.756"></status>
</kw>
<msg timestamp="20140610 12:48:50.759" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,553 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140610 12:48:50.759" starttime="20140610 12:48:50.750"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.769" starttime="20140610 12:48:50.767"></status>
</kw>
<msg timestamp="20140610 12:48:50.770" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,553 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140610 12:48:50.769" starttime="20140610 12:48:50.760"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.780" starttime="20140610 12:48:50.777"></status>
</kw>
<msg timestamp="20140610 12:48:50.781" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140610 12:48:50.780" starttime="20140610 12:48:50.771"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.795" starttime="20140610 12:48:50.793"></status>
</kw>
<msg timestamp="20140610 12:48:50.796" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140610 12:48:50.795" starttime="20140610 12:48:50.782"></status>
</kw>
<msg timestamp="20140610 12:48:50.797" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140610 12:48:50.796" starttime="20140610 12:48:50.724"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:50.809" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140610 12:48:50.809" starttime="20140610 12:48:50.806"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.812" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:50.812" starttime="20140610 12:48:50.810"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.815" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:50.815" starttime="20140610 12:48:50.813"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.820" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:50.821" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:50.822" starttime="20140610 12:48:50.818"></status>
</kw>
<msg timestamp="20140610 12:48:50.823" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:50.823" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,563 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140610 12:48:50.822" starttime="20140610 12:48:50.816"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.833" starttime="20140610 12:48:50.831"></status>
</kw>
<msg timestamp="20140610 12:48:50.834" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,563 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140610 12:48:50.833" starttime="20140610 12:48:50.824"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.843" starttime="20140610 12:48:50.841"></status>
</kw>
<msg timestamp="20140610 12:48:50.844" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,563 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140610 12:48:50.844" starttime="20140610 12:48:50.835"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.854" starttime="20140610 12:48:50.852"></status>
</kw>
<msg timestamp="20140610 12:48:50.855" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140610 12:48:50.855" starttime="20140610 12:48:50.845"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.869" starttime="20140610 12:48:50.867"></status>
</kw>
<msg timestamp="20140610 12:48:50.870" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140610 12:48:50.870" starttime="20140610 12:48:50.856"></status>
</kw>
<msg timestamp="20140610 12:48:50.871" level="INFO">${msisdn} = 642041010000</msg>
<status status="PASS" endtime="20140610 12:48:50.871" starttime="20140610 12:48:50.799"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:50.884" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140610 12:48:50.883" starttime="20140610 12:48:50.881"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.887" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:50.886" starttime="20140610 12:48:50.885"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.890" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:50.889" starttime="20140610 12:48:50.888"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.895" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:50.896" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:50.897" starttime="20140610 12:48:50.892"></status>
</kw>
<msg timestamp="20140610 12:48:50.898" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:50.898" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,558 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12887</msg>
<status status="PASS" endtime="20140610 12:48:50.897" starttime="20140610 12:48:50.891"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.907" starttime="20140610 12:48:50.905"></status>
</kw>
<msg timestamp="20140610 12:48:50.908" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,558 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12887</msg>
<status status="PASS" endtime="20140610 12:48:50.908" starttime="20140610 12:48:50.899"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.918" starttime="20140610 12:48:50.916"></status>
</kw>
<msg timestamp="20140610 12:48:50.919" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,558 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12887</msg>
<status status="PASS" endtime="20140610 12:48:50.919" starttime="20140610 12:48:50.909"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.929" starttime="20140610 12:48:50.927"></status>
</kw>
<msg timestamp="20140610 12:48:50.930" level="INFO">${resultCode} = 12887</msg>
<status status="PASS" endtime="20140610 12:48:50.930" starttime="20140610 12:48:50.920"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.944" starttime="20140610 12:48:50.942"></status>
</kw>
<msg timestamp="20140610 12:48:50.945" level="INFO">${resultCode} = 12887</msg>
<status status="PASS" endtime="20140610 12:48:50.945" starttime="20140610 12:48:50.931"></status>
</kw>
<msg timestamp="20140610 12:48:50.947" level="INFO">${id} = 12887</msg>
<status status="PASS" endtime="20140610 12:48:50.946" starttime="20140610 12:48:50.873"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:50.959" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140610 12:48:50.958" starttime="20140610 12:48:50.956"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.962" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:50.962" starttime="20140610 12:48:50.960"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.965" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:50.965" starttime="20140610 12:48:50.963"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:50.970" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:50.972" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:50.972" starttime="20140610 12:48:50.968"></status>
</kw>
<msg timestamp="20140610 12:48:50.973" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:50.974" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,567 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:50.973" starttime="20140610 12:48:50.966"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.983" starttime="20140610 12:48:50.981"></status>
</kw>
<msg timestamp="20140610 12:48:50.984" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,567 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:50.984" starttime="20140610 12:48:50.975"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:50.994" starttime="20140610 12:48:50.992"></status>
</kw>
<msg timestamp="20140610 12:48:50.995" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,567 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:50.994" starttime="20140610 12:48:50.985"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.005" starttime="20140610 12:48:51.002"></status>
</kw>
<msg timestamp="20140610 12:48:51.007" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:51.006" starttime="20140610 12:48:50.996"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.021" starttime="20140610 12:48:51.019"></status>
</kw>
<msg timestamp="20140610 12:48:51.022" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:51.021" starttime="20140610 12:48:51.008"></status>
</kw>
<msg timestamp="20140610 12:48:51.024" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:51.023" starttime="20140610 12:48:50.948"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:51.037" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140610 12:48:51.036" starttime="20140610 12:48:51.034"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.040" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:51.040" starttime="20140610 12:48:51.038"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.043" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:51.043" starttime="20140610 12:48:51.041"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.048" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:51.049" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:51.050" starttime="20140610 12:48:51.046"></status>
</kw>
<msg timestamp="20140610 12:48:51.051" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:51.051" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,572 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140610 12:48:51.050" starttime="20140610 12:48:51.044"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.060" starttime="20140610 12:48:51.058"></status>
</kw>
<msg timestamp="20140610 12:48:51.061" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,572 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140610 12:48:51.061" starttime="20140610 12:48:51.052"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.071" starttime="20140610 12:48:51.069"></status>
</kw>
<msg timestamp="20140610 12:48:51.072" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,572 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140610 12:48:51.071" starttime="20140610 12:48:51.062"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.082" starttime="20140610 12:48:51.080"></status>
</kw>
<msg timestamp="20140610 12:48:51.083" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140610 12:48:51.082" starttime="20140610 12:48:51.073"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.097" starttime="20140610 12:48:51.095"></status>
</kw>
<msg timestamp="20140610 12:48:51.098" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140610 12:48:51.097" starttime="20140610 12:48:51.084"></status>
</kw>
<msg timestamp="20140610 12:48:51.099" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140610 12:48:51.099" starttime="20140610 12:48:51.026"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:51.112" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140610 12:48:51.111" starttime="20140610 12:48:51.109"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.115" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:51.114" starttime="20140610 12:48:51.113"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.118" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:51.117" starttime="20140610 12:48:51.116"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.123" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:51.124" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:51.124" starttime="20140610 12:48:51.120"></status>
</kw>
<msg timestamp="20140610 12:48:51.125" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:51.126" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,576 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:51.125" starttime="20140610 12:48:51.119"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.135" starttime="20140610 12:48:51.133"></status>
</kw>
<msg timestamp="20140610 12:48:51.136" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,576 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:51.136" starttime="20140610 12:48:51.127"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.145" starttime="20140610 12:48:51.143"></status>
</kw>
<msg timestamp="20140610 12:48:51.146" level="INFO">${return_log_entry} = 2014-06-10 12:48:50,576 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:51.146" starttime="20140610 12:48:51.137"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.156" starttime="20140610 12:48:51.154"></status>
</kw>
<msg timestamp="20140610 12:48:51.157" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:51.157" starttime="20140610 12:48:51.147"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.171" starttime="20140610 12:48:51.169"></status>
</kw>
<msg timestamp="20140610 12:48:51.172" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:51.172" starttime="20140610 12:48:51.158"></status>
</kw>
<msg timestamp="20140610 12:48:51.173" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:51.173" starttime="20140610 12:48:51.101"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.184" starttime="20140610 12:48:51.182"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.186" starttime="20140610 12:48:51.185"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.188" starttime="20140610 12:48:51.187"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:51.200" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:51.201" starttime="20140610 12:48:51.197"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:51.201" starttime="20140610 12:48:51.195"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:51.202" starttime="20140610 12:48:51.189"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:51.202" starttime="20140610 12:48:51.175"></status>
</kw>
<msg timestamp="20140610 12:48:51.206" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:51.206" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140610 12:48:51.207" level="INFO">${msisdnDummy} = 642041010000</msg>
<msg timestamp="20140610 12:48:51.207" level="INFO">${subscriberId} = 12887</msg>
<msg timestamp="20140610 12:48:51.207" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140610 12:48:51.208" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140610 12:48:51.208" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:51.205" starttime="20140610 12:48:50.205"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.214" starttime="20140610 12:48:51.209"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Set Main Balance" ***</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.216" starttime="20140610 12:48:51.215"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance">
<doc>Sets the passed subscriber's main account balance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve accountId of main account ***</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.229" starttime="20140610 12:48:51.228"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${accountId}, ${balanceDummy}, ${categoryDummy}, ${currencyIdDummy} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.254" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:51.255" starttime="20140610 12:48:51.252"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:51.256" starttime="20140610 12:48:51.250"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.261" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:51.261" starttime="20140610 12:48:51.258"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:51.262" starttime="20140610 12:48:51.256"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.267" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:51.268" starttime="20140610 12:48:51.264"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:51.268" starttime="20140610 12:48:51.263"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:51.269" starttime="20140610 12:48:51.243"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.274" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:51.274" starttime="20140610 12:48:51.271"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.329" starttime="20140610 12:48:51.275"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.334" starttime="20140610 12:48:51.331"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.338" starttime="20140610 12:48:51.335"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.340" starttime="20140610 12:48:51.339"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.342" starttime="20140610 12:48:51.341"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.346" starttime="20140610 12:48:51.343"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:51.350" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887']</msg>
<msg timestamp="20140610 12:48:51.638" level="INFO">12:48:51,608 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
12:48:51,613 INFO  [log] LowLevelOps.getMainAccount.output.accountId=12888
12:48:51,618 INFO  [log] LowLevelOps.getMainAccount.output.balance=0
12:48:51,623 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
12:48:51,628 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140610 12:48:51.639" starttime="20140610 12:48:51.348"></status>
</kw>
<msg timestamp="20140610 12:48:51.640" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:51.640" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:51.639" starttime="20140610 12:48:51.347"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:51.653" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:51.652" starttime="20140610 12:48:51.650"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.656" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:51.656" starttime="20140610 12:48:51.654"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.659" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:51.659" starttime="20140610 12:48:51.657"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.665" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:51.670" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:51.671" starttime="20140610 12:48:51.662"></status>
</kw>
<msg timestamp="20140610 12:48:51.672" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:51.672" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,608 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:51.671" starttime="20140610 12:48:51.660"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.682" starttime="20140610 12:48:51.680"></status>
</kw>
<msg timestamp="20140610 12:48:51.683" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,608 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:51.683" starttime="20140610 12:48:51.673"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.693" starttime="20140610 12:48:51.691"></status>
</kw>
<msg timestamp="20140610 12:48:51.694" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,608 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:51.693" starttime="20140610 12:48:51.684"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.704" starttime="20140610 12:48:51.701"></status>
</kw>
<msg timestamp="20140610 12:48:51.705" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:51.704" starttime="20140610 12:48:51.695"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.719" starttime="20140610 12:48:51.717"></status>
</kw>
<msg timestamp="20140610 12:48:51.720" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:51.719" starttime="20140610 12:48:51.706"></status>
</kw>
<msg timestamp="20140610 12:48:51.721" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:51.721" starttime="20140610 12:48:51.642"></status>
</kw>
<kw type="kw" timeout="" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:51.733" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20140610 12:48:51.733" starttime="20140610 12:48:51.731"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.737" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:51.736" starttime="20140610 12:48:51.734"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.740" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:51.739" starttime="20140610 12:48:51.737"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.745" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:51.750" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:51.751" starttime="20140610 12:48:51.742"></status>
</kw>
<msg timestamp="20140610 12:48:51.752" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:51.752" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,613 INFO  [log] LowLevelOps.getMainAccount.output.accountId=12888</msg>
<status status="PASS" endtime="20140610 12:48:51.751" starttime="20140610 12:48:51.741"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.761" starttime="20140610 12:48:51.759"></status>
</kw>
<msg timestamp="20140610 12:48:51.762" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,613 INFO  [log] LowLevelOps.getMainAccount.output.accountId=12888</msg>
<status status="PASS" endtime="20140610 12:48:51.762" starttime="20140610 12:48:51.753"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.772" starttime="20140610 12:48:51.770"></status>
</kw>
<msg timestamp="20140610 12:48:51.773" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,613 INFO  [log] LowLevelOps.getMainAccount.output.accountId=12888</msg>
<status status="PASS" endtime="20140610 12:48:51.773" starttime="20140610 12:48:51.763"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.783" starttime="20140610 12:48:51.781"></status>
</kw>
<msg timestamp="20140610 12:48:51.785" level="INFO">${resultCode} = 12888</msg>
<status status="PASS" endtime="20140610 12:48:51.784" starttime="20140610 12:48:51.774"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.802" starttime="20140610 12:48:51.800"></status>
</kw>
<msg timestamp="20140610 12:48:51.803" level="INFO">${resultCode} = 12888</msg>
<status status="PASS" endtime="20140610 12:48:51.803" starttime="20140610 12:48:51.787"></status>
</kw>
<msg timestamp="20140610 12:48:51.804" level="INFO">${accountId} = 12888</msg>
<status status="PASS" endtime="20140610 12:48:51.804" starttime="20140610 12:48:51.723"></status>
</kw>
<kw type="kw" timeout="" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:51.817" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20140610 12:48:51.816" starttime="20140610 12:48:51.814"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.820" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:51.819" starttime="20140610 12:48:51.818"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.823" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:51.823" starttime="20140610 12:48:51.821"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.830" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:51.838" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:51.839" starttime="20140610 12:48:51.826"></status>
</kw>
<msg timestamp="20140610 12:48:51.841" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:51.842" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,618 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140610 12:48:51.840" starttime="20140610 12:48:51.824"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.855" starttime="20140610 12:48:51.852"></status>
</kw>
<msg timestamp="20140610 12:48:51.857" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,618 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140610 12:48:51.856" starttime="20140610 12:48:51.843"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.867" starttime="20140610 12:48:51.865"></status>
</kw>
<msg timestamp="20140610 12:48:51.868" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,618 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140610 12:48:51.868" starttime="20140610 12:48:51.858"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.878" starttime="20140610 12:48:51.876"></status>
</kw>
<msg timestamp="20140610 12:48:51.879" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140610 12:48:51.879" starttime="20140610 12:48:51.869"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.893" starttime="20140610 12:48:51.891"></status>
</kw>
<msg timestamp="20140610 12:48:51.894" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140610 12:48:51.894" starttime="20140610 12:48:51.880"></status>
</kw>
<msg timestamp="20140610 12:48:51.895" level="INFO">${balance} = 0</msg>
<status status="PASS" endtime="20140610 12:48:51.895" starttime="20140610 12:48:51.806"></status>
</kw>
<kw type="kw" timeout="" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:51.908" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20140610 12:48:51.907" starttime="20140610 12:48:51.905"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.912" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:51.911" starttime="20140610 12:48:51.909"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.915" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:51.914" starttime="20140610 12:48:51.913"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.920" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:51.926" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:51.926" starttime="20140610 12:48:51.917"></status>
</kw>
<msg timestamp="20140610 12:48:51.928" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:51.928" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,623 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140610 12:48:51.927" starttime="20140610 12:48:51.916"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.937" starttime="20140610 12:48:51.935"></status>
</kw>
<msg timestamp="20140610 12:48:51.938" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,623 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140610 12:48:51.938" starttime="20140610 12:48:51.929"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.948" starttime="20140610 12:48:51.946"></status>
</kw>
<msg timestamp="20140610 12:48:51.949" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,623 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140610 12:48:51.948" starttime="20140610 12:48:51.939"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.962" starttime="20140610 12:48:51.958"></status>
</kw>
<msg timestamp="20140610 12:48:51.963" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140610 12:48:51.962" starttime="20140610 12:48:51.950"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:51.977" starttime="20140610 12:48:51.975"></status>
</kw>
<msg timestamp="20140610 12:48:51.978" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140610 12:48:51.978" starttime="20140610 12:48:51.964"></status>
</kw>
<msg timestamp="20140610 12:48:51.979" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20140610 12:48:51.979" starttime="20140610 12:48:51.897"></status>
</kw>
<kw type="kw" timeout="" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:51.992" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20140610 12:48:51.991" starttime="20140610 12:48:51.989"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.995" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:51.994" starttime="20140610 12:48:51.992"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:51.998" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:51.997" starttime="20140610 12:48:51.996"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:52.003" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:52.009" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:52.010" starttime="20140610 12:48:52.001"></status>
</kw>
<msg timestamp="20140610 12:48:52.012" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:52.012" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,628 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140610 12:48:52.010" starttime="20140610 12:48:51.999"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.022" starttime="20140610 12:48:52.020"></status>
</kw>
<msg timestamp="20140610 12:48:52.023" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,628 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140610 12:48:52.022" starttime="20140610 12:48:52.013"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.032" starttime="20140610 12:48:52.030"></status>
</kw>
<msg timestamp="20140610 12:48:52.033" level="INFO">${return_log_entry} = 2014-06-10 12:48:51,628 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140610 12:48:52.033" starttime="20140610 12:48:52.024"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.043" starttime="20140610 12:48:52.041"></status>
</kw>
<msg timestamp="20140610 12:48:52.044" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140610 12:48:52.044" starttime="20140610 12:48:52.034"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.058" starttime="20140610 12:48:52.056"></status>
</kw>
<msg timestamp="20140610 12:48:52.059" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140610 12:48:52.059" starttime="20140610 12:48:52.045"></status>
</kw>
<msg timestamp="20140610 12:48:52.061" level="INFO">${currencyId} = 1</msg>
<status status="PASS" endtime="20140610 12:48:52.060" starttime="20140610 12:48:51.981"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.072" starttime="20140610 12:48:52.071"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.074" starttime="20140610 12:48:52.073"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.076" starttime="20140610 12:48:52.075"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:52.092" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:52.093" starttime="20140610 12:48:52.085"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.094" starttime="20140610 12:48:52.084"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.094" starttime="20140610 12:48:52.077"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.095" starttime="20140610 12:48:52.063"></status>
</kw>
<msg timestamp="20140610 12:48:52.098" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:52.098" level="INFO">${accountId} = 12888</msg>
<msg timestamp="20140610 12:48:52.099" level="INFO">${balanceDummy} = 0</msg>
<msg timestamp="20140610 12:48:52.099" level="INFO">${categoryDummy} = MAIN</msg>
<msg timestamp="20140610 12:48:52.099" level="INFO">${currencyIdDummy} = 1</msg>
<status status="PASS" endtime="20140610 12:48:52.097" starttime="20140610 12:48:51.232"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying main account of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.106" starttime="20140610 12:48:52.100"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Set new balance ***</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.108" starttime="20140610 12:48:52.107"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140610 12:48:52.123" level="INFO">CRCE Set Balance( subscriberId=12887, accountId=12888, balance=10000000)</msg>
<status status="PASS" endtime="20140610 12:48:52.123" starttime="20140610 12:48:52.120"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:52.138" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:52.139" starttime="20140610 12:48:52.135"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.140" starttime="20140610 12:48:52.134"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:52.145" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:52.146" starttime="20140610 12:48:52.142"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.146" starttime="20140610 12:48:52.141"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:52.151" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:52.153" starttime="20140610 12:48:52.149"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.153" starttime="20140610 12:48:52.147"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.154" starttime="20140610 12:48:52.126"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:52.157" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:52.158" starttime="20140610 12:48:52.154"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.161" starttime="20140610 12:48:52.159"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.165" starttime="20140610 12:48:52.162"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.168" starttime="20140610 12:48:52.166"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.170" starttime="20140610 12:48:52.169"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.173" starttime="20140610 12:48:52.171"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.176" starttime="20140610 12:48:52.173"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.180" starttime="20140610 12:48:52.177"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.183" starttime="20140610 12:48:52.181"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:52.255" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000']</msg>
<msg timestamp="20140610 12:48:52.547" level="INFO">12:48:52,536 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:52.548" starttime="20140610 12:48:52.252"></status>
</kw>
<msg timestamp="20140610 12:48:52.549" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:52.549" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:52.548" starttime="20140610 12:48:52.184"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:52.562" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:52.562" starttime="20140610 12:48:52.559"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:52.565" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:52.565" starttime="20140610 12:48:52.563"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:52.568" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:52.568" starttime="20140610 12:48:52.566"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:52.574" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:52.575" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:52.576" starttime="20140610 12:48:52.572"></status>
</kw>
<msg timestamp="20140610 12:48:52.577" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:52.577" level="INFO">${return_log_entry} = 2014-06-10 12:48:52,536 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:52.576" starttime="20140610 12:48:52.569"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.587" starttime="20140610 12:48:52.585"></status>
</kw>
<msg timestamp="20140610 12:48:52.588" level="INFO">${return_log_entry} = 2014-06-10 12:48:52,536 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:52.588" starttime="20140610 12:48:52.578"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.597" starttime="20140610 12:48:52.595"></status>
</kw>
<msg timestamp="20140610 12:48:52.598" level="INFO">${return_log_entry} = 2014-06-10 12:48:52,536 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:52.598" starttime="20140610 12:48:52.589"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.608" starttime="20140610 12:48:52.606"></status>
</kw>
<msg timestamp="20140610 12:48:52.609" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:52.609" starttime="20140610 12:48:52.599"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.623" starttime="20140610 12:48:52.621"></status>
</kw>
<msg timestamp="20140610 12:48:52.624" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:52.623" starttime="20140610 12:48:52.610"></status>
</kw>
<msg timestamp="20140610 12:48:52.625" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:52.625" starttime="20140610 12:48:52.552"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.636" starttime="20140610 12:48:52.634"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.638" starttime="20140610 12:48:52.637"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.640" starttime="20140610 12:48:52.639"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:52.652" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:52.653" starttime="20140610 12:48:52.649"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.654" starttime="20140610 12:48:52.647"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.654" starttime="20140610 12:48:52.641"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.654" starttime="20140610 12:48:52.626"></status>
</kw>
<msg timestamp="20140610 12:48:52.656" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:52.655" starttime="20140610 12:48:52.110"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Setting balance of main accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.662" starttime="20140610 12:48:52.656"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.662" starttime="20140610 12:48:51.218"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.664" starttime="20140610 12:48:50.191"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance By Imsi">
<doc>Same as "CRCE Set Main Balance" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_DESTINATION_IMSI}</arg>
<arg>10000000</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId for the passed imsi ***</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.676" starttime="20140610 12:48:52.675"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:52.701" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:52.702" starttime="20140610 12:48:52.698"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.702" starttime="20140610 12:48:52.697"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:52.707" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:52.708" starttime="20140610 12:48:52.705"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.708" starttime="20140610 12:48:52.703"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:52.713" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:52.714" starttime="20140610 12:48:52.711"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.714" starttime="20140610 12:48:52.709"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:52.715" starttime="20140610 12:48:52.690"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:52.719" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:52.719" starttime="20140610 12:48:52.716"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.722" starttime="20140610 12:48:52.720"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.726" starttime="20140610 12:48:52.723"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.729" starttime="20140610 12:48:52.727"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.731" starttime="20140610 12:48:52.730"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.733" starttime="20140610 12:48:52.732"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:52.737" starttime="20140610 12:48:52.734"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:52.741" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001']</msg>
<msg timestamp="20140610 12:48:53.048" level="INFO">12:48:53,006 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
12:48:53,011 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
12:48:53,016 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12892
12:48:53,021 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001
12:48:53,026 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
12:48:53,031 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
12:48:53,036 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
12:48:53,042 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140610 12:48:53.049" starttime="20140610 12:48:52.739"></status>
</kw>
<msg timestamp="20140610 12:48:53.052" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:53.052" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:53.050" starttime="20140610 12:48:52.738"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:53.064" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:53.063" starttime="20140610 12:48:53.061"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.067" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:53.066" starttime="20140610 12:48:53.065"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.070" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:53.069" starttime="20140610 12:48:53.068"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.075" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:53.076" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:53.077" starttime="20140610 12:48:53.073"></status>
</kw>
<msg timestamp="20140610 12:48:53.078" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:53.078" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,006 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:53.078" starttime="20140610 12:48:53.071"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.088" starttime="20140610 12:48:53.086"></status>
</kw>
<msg timestamp="20140610 12:48:53.089" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,006 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:53.088" starttime="20140610 12:48:53.079"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.098" starttime="20140610 12:48:53.096"></status>
</kw>
<msg timestamp="20140610 12:48:53.099" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,006 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:53.099" starttime="20140610 12:48:53.090"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.110" starttime="20140610 12:48:53.107"></status>
</kw>
<msg timestamp="20140610 12:48:53.111" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:53.110" starttime="20140610 12:48:53.100"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.125" starttime="20140610 12:48:53.123"></status>
</kw>
<msg timestamp="20140610 12:48:53.126" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:53.126" starttime="20140610 12:48:53.112"></status>
</kw>
<msg timestamp="20140610 12:48:53.127" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:53.127" starttime="20140610 12:48:53.054"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:53.140" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140610 12:48:53.140" starttime="20140610 12:48:53.137"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.143" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:53.143" starttime="20140610 12:48:53.141"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.146" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:53.146" starttime="20140610 12:48:53.144"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.151" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:53.153" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:53.153" starttime="20140610 12:48:53.149"></status>
</kw>
<msg timestamp="20140610 12:48:53.154" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:53.155" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,011 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140610 12:48:53.154" starttime="20140610 12:48:53.147"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.164" starttime="20140610 12:48:53.162"></status>
</kw>
<msg timestamp="20140610 12:48:53.165" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,011 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140610 12:48:53.164" starttime="20140610 12:48:53.155"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.174" starttime="20140610 12:48:53.172"></status>
</kw>
<msg timestamp="20140610 12:48:53.175" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,011 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140610 12:48:53.175" starttime="20140610 12:48:53.166"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.185" starttime="20140610 12:48:53.183"></status>
</kw>
<msg timestamp="20140610 12:48:53.186" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140610 12:48:53.186" starttime="20140610 12:48:53.176"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.200" starttime="20140610 12:48:53.198"></status>
</kw>
<msg timestamp="20140610 12:48:53.201" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140610 12:48:53.201" starttime="20140610 12:48:53.187"></status>
</kw>
<msg timestamp="20140610 12:48:53.203" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140610 12:48:53.202" starttime="20140610 12:48:53.129"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:53.215" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140610 12:48:53.214" starttime="20140610 12:48:53.212"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.218" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:53.217" starttime="20140610 12:48:53.216"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.221" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:53.220" starttime="20140610 12:48:53.219"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.226" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:53.227" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:53.228" starttime="20140610 12:48:53.224"></status>
</kw>
<msg timestamp="20140610 12:48:53.229" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:53.229" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,021 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140610 12:48:53.228" starttime="20140610 12:48:53.222"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.346" starttime="20140610 12:48:53.342"></status>
</kw>
<msg timestamp="20140610 12:48:53.347" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,021 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140610 12:48:53.346" starttime="20140610 12:48:53.230"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.357" starttime="20140610 12:48:53.354"></status>
</kw>
<msg timestamp="20140610 12:48:53.358" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,021 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140610 12:48:53.357" starttime="20140610 12:48:53.348"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.368" starttime="20140610 12:48:53.365"></status>
</kw>
<msg timestamp="20140610 12:48:53.369" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140610 12:48:53.368" starttime="20140610 12:48:53.359"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.383" starttime="20140610 12:48:53.381"></status>
</kw>
<msg timestamp="20140610 12:48:53.384" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140610 12:48:53.384" starttime="20140610 12:48:53.370"></status>
</kw>
<msg timestamp="20140610 12:48:53.386" level="INFO">${msisdn} = 642041010001</msg>
<status status="PASS" endtime="20140610 12:48:53.385" starttime="20140610 12:48:53.204"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:53.399" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140610 12:48:53.398" starttime="20140610 12:48:53.396"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.402" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:53.401" starttime="20140610 12:48:53.399"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.405" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:53.404" starttime="20140610 12:48:53.403"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.410" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:53.411" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:53.411" starttime="20140610 12:48:53.407"></status>
</kw>
<msg timestamp="20140610 12:48:53.412" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:53.413" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,016 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12892</msg>
<status status="PASS" endtime="20140610 12:48:53.412" starttime="20140610 12:48:53.406"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.423" starttime="20140610 12:48:53.420"></status>
</kw>
<msg timestamp="20140610 12:48:53.424" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,016 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12892</msg>
<status status="PASS" endtime="20140610 12:48:53.423" starttime="20140610 12:48:53.414"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.433" starttime="20140610 12:48:53.431"></status>
</kw>
<msg timestamp="20140610 12:48:53.434" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,016 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=12892</msg>
<status status="PASS" endtime="20140610 12:48:53.434" starttime="20140610 12:48:53.425"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.444" starttime="20140610 12:48:53.442"></status>
</kw>
<msg timestamp="20140610 12:48:53.445" level="INFO">${resultCode} = 12892</msg>
<status status="PASS" endtime="20140610 12:48:53.445" starttime="20140610 12:48:53.435"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.459" starttime="20140610 12:48:53.457"></status>
</kw>
<msg timestamp="20140610 12:48:53.460" level="INFO">${resultCode} = 12892</msg>
<status status="PASS" endtime="20140610 12:48:53.460" starttime="20140610 12:48:53.446"></status>
</kw>
<msg timestamp="20140610 12:48:53.461" level="INFO">${id} = 12892</msg>
<status status="PASS" endtime="20140610 12:48:53.461" starttime="20140610 12:48:53.388"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:53.473" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140610 12:48:53.473" starttime="20140610 12:48:53.471"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.476" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:53.476" starttime="20140610 12:48:53.474"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.479" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:53.479" starttime="20140610 12:48:53.477"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.484" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:53.485" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:53.486" starttime="20140610 12:48:53.482"></status>
</kw>
<msg timestamp="20140610 12:48:53.487" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:53.487" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,026 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:53.486" starttime="20140610 12:48:53.480"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.496" starttime="20140610 12:48:53.494"></status>
</kw>
<msg timestamp="20140610 12:48:53.497" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,026 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:53.496" starttime="20140610 12:48:53.488"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.506" starttime="20140610 12:48:53.504"></status>
</kw>
<msg timestamp="20140610 12:48:53.507" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,026 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:53.507" starttime="20140610 12:48:53.498"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.517" starttime="20140610 12:48:53.515"></status>
</kw>
<msg timestamp="20140610 12:48:53.518" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:53.518" starttime="20140610 12:48:53.508"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.532" starttime="20140610 12:48:53.530"></status>
</kw>
<msg timestamp="20140610 12:48:53.533" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:53.532" starttime="20140610 12:48:53.519"></status>
</kw>
<msg timestamp="20140610 12:48:53.534" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140610 12:48:53.533" starttime="20140610 12:48:53.463"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:53.547" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140610 12:48:53.546" starttime="20140610 12:48:53.543"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.550" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:53.549" starttime="20140610 12:48:53.547"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.552" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:53.552" starttime="20140610 12:48:53.550"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.557" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:53.558" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:53.559" starttime="20140610 12:48:53.555"></status>
</kw>
<msg timestamp="20140610 12:48:53.560" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:53.560" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,031 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140610 12:48:53.560" starttime="20140610 12:48:53.553"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.569" starttime="20140610 12:48:53.567"></status>
</kw>
<msg timestamp="20140610 12:48:53.570" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,031 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140610 12:48:53.570" starttime="20140610 12:48:53.561"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.579" starttime="20140610 12:48:53.578"></status>
</kw>
<msg timestamp="20140610 12:48:53.580" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,031 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140610 12:48:53.580" starttime="20140610 12:48:53.571"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.590" starttime="20140610 12:48:53.588"></status>
</kw>
<msg timestamp="20140610 12:48:53.591" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140610 12:48:53.591" starttime="20140610 12:48:53.581"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.606" starttime="20140610 12:48:53.604"></status>
</kw>
<msg timestamp="20140610 12:48:53.607" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140610 12:48:53.606" starttime="20140610 12:48:53.592"></status>
</kw>
<msg timestamp="20140610 12:48:53.608" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140610 12:48:53.607" starttime="20140610 12:48:53.535"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:53.620" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140610 12:48:53.620" starttime="20140610 12:48:53.617"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.623" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:53.623" starttime="20140610 12:48:53.621"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.626" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:53.626" starttime="20140610 12:48:53.624"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.631" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:53.632" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:53.633" starttime="20140610 12:48:53.629"></status>
</kw>
<msg timestamp="20140610 12:48:53.634" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:53.634" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,036 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:53.633" starttime="20140610 12:48:53.627"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.643" starttime="20140610 12:48:53.641"></status>
</kw>
<msg timestamp="20140610 12:48:53.644" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,036 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:53.644" starttime="20140610 12:48:53.635"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.654" starttime="20140610 12:48:53.652"></status>
</kw>
<msg timestamp="20140610 12:48:53.655" level="INFO">${return_log_entry} = 2014-06-10 12:48:53,036 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:53.654" starttime="20140610 12:48:53.645"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.665" starttime="20140610 12:48:53.662"></status>
</kw>
<msg timestamp="20140610 12:48:53.666" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:53.665" starttime="20140610 12:48:53.656"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.680" starttime="20140610 12:48:53.678"></status>
</kw>
<msg timestamp="20140610 12:48:53.681" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:53.680" starttime="20140610 12:48:53.667"></status>
</kw>
<msg timestamp="20140610 12:48:53.682" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:53.682" starttime="20140610 12:48:53.610"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.692" starttime="20140610 12:48:53.691"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.695" starttime="20140610 12:48:53.693"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.697" starttime="20140610 12:48:53.695"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:53.709" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:53.710" starttime="20140610 12:48:53.706"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:53.711" starttime="20140610 12:48:53.705"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:53.711" starttime="20140610 12:48:53.697"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:53.711" starttime="20140610 12:48:53.684"></status>
</kw>
<msg timestamp="20140610 12:48:53.715" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:53.715" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140610 12:48:53.716" level="INFO">${msisdnDummy} = 642041010001</msg>
<msg timestamp="20140610 12:48:53.716" level="INFO">${subscriberId} = 12892</msg>
<msg timestamp="20140610 12:48:53.716" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140610 12:48:53.717" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140610 12:48:53.717" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140610 12:48:53.714" starttime="20140610 12:48:52.679"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.723" starttime="20140610 12:48:53.718"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Set Main Balance" ***</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.725" starttime="20140610 12:48:53.724"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance">
<doc>Sets the passed subscriber's main account balance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve accountId of main account ***</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.737" starttime="20140610 12:48:53.736"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${accountId}, ${balanceDummy}, ${categoryDummy}, ${currencyIdDummy} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.762" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:53.762" starttime="20140610 12:48:53.759"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:53.763" starttime="20140610 12:48:53.757"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.768" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:53.769" starttime="20140610 12:48:53.765"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:53.769" starttime="20140610 12:48:53.764"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.774" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:53.775" starttime="20140610 12:48:53.772"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:53.775" starttime="20140610 12:48:53.770"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:53.776" starttime="20140610 12:48:53.751"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:53.780" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:53.780" starttime="20140610 12:48:53.777"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.783" starttime="20140610 12:48:53.781"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.787" starttime="20140610 12:48:53.784"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.790" starttime="20140610 12:48:53.788"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.792" starttime="20140610 12:48:53.791"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.794" starttime="20140610 12:48:53.793"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:53.798" starttime="20140610 12:48:53.795"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:53.802" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12892']</msg>
<msg timestamp="20140610 12:48:54.101" level="INFO">12:48:54,067 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
12:48:54,073 INFO  [log] LowLevelOps.getMainAccount.output.accountId=12893
12:48:54,079 INFO  [log] LowLevelOps.getMainAccount.output.balance=0
12:48:54,085 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
12:48:54,091 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140610 12:48:54.102" starttime="20140610 12:48:53.801"></status>
</kw>
<msg timestamp="20140610 12:48:54.105" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:54.105" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:54.104" starttime="20140610 12:48:53.799"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:54.117" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:54.117" starttime="20140610 12:48:54.114"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.120" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:54.120" starttime="20140610 12:48:54.118"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.123" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:54.123" starttime="20140610 12:48:54.121"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.128" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:54.129" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:54.130" starttime="20140610 12:48:54.126"></status>
</kw>
<msg timestamp="20140610 12:48:54.131" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:54.131" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,067 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:54.130" starttime="20140610 12:48:54.124"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.140" starttime="20140610 12:48:54.138"></status>
</kw>
<msg timestamp="20140610 12:48:54.141" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,067 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:54.141" starttime="20140610 12:48:54.132"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.151" starttime="20140610 12:48:54.149"></status>
</kw>
<msg timestamp="20140610 12:48:54.152" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,067 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:54.152" starttime="20140610 12:48:54.142"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.198" starttime="20140610 12:48:54.194"></status>
</kw>
<msg timestamp="20140610 12:48:54.199" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:54.199" starttime="20140610 12:48:54.153"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.213" starttime="20140610 12:48:54.211"></status>
</kw>
<msg timestamp="20140610 12:48:54.214" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:54.213" starttime="20140610 12:48:54.200"></status>
</kw>
<msg timestamp="20140610 12:48:54.215" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:54.214" starttime="20140610 12:48:54.107"></status>
</kw>
<kw type="kw" timeout="" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:54.228" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20140610 12:48:54.227" starttime="20140610 12:48:54.225"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.231" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:54.230" starttime="20140610 12:48:54.228"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.234" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:54.233" starttime="20140610 12:48:54.232"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.239" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:54.240" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:54.240" starttime="20140610 12:48:54.236"></status>
</kw>
<msg timestamp="20140610 12:48:54.241" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:54.242" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,073 INFO  [log] LowLevelOps.getMainAccount.output.accountId=12893</msg>
<status status="PASS" endtime="20140610 12:48:54.241" starttime="20140610 12:48:54.235"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.251" starttime="20140610 12:48:54.249"></status>
</kw>
<msg timestamp="20140610 12:48:54.252" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,073 INFO  [log] LowLevelOps.getMainAccount.output.accountId=12893</msg>
<status status="PASS" endtime="20140610 12:48:54.251" starttime="20140610 12:48:54.243"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.261" starttime="20140610 12:48:54.259"></status>
</kw>
<msg timestamp="20140610 12:48:54.262" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,073 INFO  [log] LowLevelOps.getMainAccount.output.accountId=12893</msg>
<status status="PASS" endtime="20140610 12:48:54.261" starttime="20140610 12:48:54.253"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.272" starttime="20140610 12:48:54.269"></status>
</kw>
<msg timestamp="20140610 12:48:54.273" level="INFO">${resultCode} = 12893</msg>
<status status="PASS" endtime="20140610 12:48:54.272" starttime="20140610 12:48:54.263"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.286" starttime="20140610 12:48:54.284"></status>
</kw>
<msg timestamp="20140610 12:48:54.287" level="INFO">${resultCode} = 12893</msg>
<status status="PASS" endtime="20140610 12:48:54.287" starttime="20140610 12:48:54.273"></status>
</kw>
<msg timestamp="20140610 12:48:54.288" level="INFO">${accountId} = 12893</msg>
<status status="PASS" endtime="20140610 12:48:54.288" starttime="20140610 12:48:54.217"></status>
</kw>
<kw type="kw" timeout="" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:54.300" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20140610 12:48:54.300" starttime="20140610 12:48:54.298"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.303" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:54.303" starttime="20140610 12:48:54.301"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.306" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:54.306" starttime="20140610 12:48:54.304"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.311" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:54.312" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:54.313" starttime="20140610 12:48:54.309"></status>
</kw>
<msg timestamp="20140610 12:48:54.314" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:54.314" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,079 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140610 12:48:54.314" starttime="20140610 12:48:54.307"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.323" starttime="20140610 12:48:54.321"></status>
</kw>
<msg timestamp="20140610 12:48:54.324" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,079 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140610 12:48:54.324" starttime="20140610 12:48:54.315"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.334" starttime="20140610 12:48:54.332"></status>
</kw>
<msg timestamp="20140610 12:48:54.335" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,079 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140610 12:48:54.334" starttime="20140610 12:48:54.325"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.345" starttime="20140610 12:48:54.342"></status>
</kw>
<msg timestamp="20140610 12:48:54.346" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140610 12:48:54.345" starttime="20140610 12:48:54.336"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.359" starttime="20140610 12:48:54.357"></status>
</kw>
<msg timestamp="20140610 12:48:54.360" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140610 12:48:54.360" starttime="20140610 12:48:54.346"></status>
</kw>
<msg timestamp="20140610 12:48:54.361" level="INFO">${balance} = 0</msg>
<status status="PASS" endtime="20140610 12:48:54.361" starttime="20140610 12:48:54.290"></status>
</kw>
<kw type="kw" timeout="" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:54.374" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20140610 12:48:54.373" starttime="20140610 12:48:54.371"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.377" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:54.376" starttime="20140610 12:48:54.375"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.380" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:54.379" starttime="20140610 12:48:54.378"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.385" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:54.386" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:54.386" starttime="20140610 12:48:54.382"></status>
</kw>
<msg timestamp="20140610 12:48:54.387" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:54.388" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,085 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140610 12:48:54.387" starttime="20140610 12:48:54.381"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.396" starttime="20140610 12:48:54.395"></status>
</kw>
<msg timestamp="20140610 12:48:54.397" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,085 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140610 12:48:54.397" starttime="20140610 12:48:54.389"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.407" starttime="20140610 12:48:54.405"></status>
</kw>
<msg timestamp="20140610 12:48:54.408" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,085 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140610 12:48:54.408" starttime="20140610 12:48:54.399"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.418" starttime="20140610 12:48:54.415"></status>
</kw>
<msg timestamp="20140610 12:48:54.419" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140610 12:48:54.418" starttime="20140610 12:48:54.409"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.432" starttime="20140610 12:48:54.430"></status>
</kw>
<msg timestamp="20140610 12:48:54.433" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140610 12:48:54.433" starttime="20140610 12:48:54.419"></status>
</kw>
<msg timestamp="20140610 12:48:54.434" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20140610 12:48:54.434" starttime="20140610 12:48:54.363"></status>
</kw>
<kw type="kw" timeout="" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:54.446" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20140610 12:48:54.446" starttime="20140610 12:48:54.444"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.449" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:54.449" starttime="20140610 12:48:54.447"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.452" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:54.452" starttime="20140610 12:48:54.450"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.457" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:54.458" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:54.459" starttime="20140610 12:48:54.455"></status>
</kw>
<msg timestamp="20140610 12:48:54.460" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:54.460" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,091 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140610 12:48:54.459" starttime="20140610 12:48:54.453"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.469" starttime="20140610 12:48:54.467"></status>
</kw>
<msg timestamp="20140610 12:48:54.470" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,091 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140610 12:48:54.470" starttime="20140610 12:48:54.461"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.479" starttime="20140610 12:48:54.477"></status>
</kw>
<msg timestamp="20140610 12:48:54.480" level="INFO">${return_log_entry} = 2014-06-10 12:48:54,091 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140610 12:48:54.480" starttime="20140610 12:48:54.471"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.490" starttime="20140610 12:48:54.488"></status>
</kw>
<msg timestamp="20140610 12:48:54.491" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140610 12:48:54.491" starttime="20140610 12:48:54.481"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.505" starttime="20140610 12:48:54.503"></status>
</kw>
<msg timestamp="20140610 12:48:54.506" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140610 12:48:54.505" starttime="20140610 12:48:54.492"></status>
</kw>
<msg timestamp="20140610 12:48:54.507" level="INFO">${currencyId} = 1</msg>
<status status="PASS" endtime="20140610 12:48:54.506" starttime="20140610 12:48:54.436"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.517" starttime="20140610 12:48:54.516"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.519" starttime="20140610 12:48:54.518"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.521" starttime="20140610 12:48:54.520"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:54.533" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:54.534" starttime="20140610 12:48:54.530"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:54.534" starttime="20140610 12:48:54.528"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:54.535" starttime="20140610 12:48:54.522"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:54.535" starttime="20140610 12:48:54.508"></status>
</kw>
<msg timestamp="20140610 12:48:54.538" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:48:54.539" level="INFO">${accountId} = 12893</msg>
<msg timestamp="20140610 12:48:54.539" level="INFO">${balanceDummy} = 0</msg>
<msg timestamp="20140610 12:48:54.539" level="INFO">${categoryDummy} = MAIN</msg>
<msg timestamp="20140610 12:48:54.539" level="INFO">${currencyIdDummy} = 1</msg>
<status status="PASS" endtime="20140610 12:48:54.537" starttime="20140610 12:48:53.740"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying main account of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.545" starttime="20140610 12:48:54.540"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Set new balance ***</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:54.548" starttime="20140610 12:48:54.547"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140610 12:48:54.563" level="INFO">CRCE Set Balance( subscriberId=12892, accountId=12893, balance=10000000)</msg>
<status status="PASS" endtime="20140610 12:48:54.563" starttime="20140610 12:48:54.560"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.577" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:54.578" starttime="20140610 12:48:54.575"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:54.579" starttime="20140610 12:48:54.573"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.584" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:54.585" starttime="20140610 12:48:54.581"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:54.585" starttime="20140610 12:48:54.580"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.590" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:48:54.591" starttime="20140610 12:48:54.588"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:54.591" starttime="20140610 12:48:54.586"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:54.592" starttime="20140610 12:48:54.566"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:48:54.595" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:48:56.224" starttime="20140610 12:48:54.593"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.230" starttime="20140610 12:48:56.227"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.234" starttime="20140610 12:48:56.231"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcecWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.237" starttime="20140610 12:48:56.235"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.239" starttime="20140610 12:48:56.238"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.241" starttime="20140610 12:48:56.240"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.245" starttime="20140610 12:48:56.242"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.248" starttime="20140610 12:48:56.246"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.251" starttime="20140610 12:48:56.249"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:48:56.255" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=10000000']</msg>
<msg timestamp="20140610 12:48:56.527" level="INFO">12:48:56,517 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:56.527" starttime="20140610 12:48:56.254"></status>
</kw>
<msg timestamp="20140610 12:48:56.528" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:56.529" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:48:56.528" starttime="20140610 12:48:56.252"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:48:56.542" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:48:56.541" starttime="20140610 12:48:56.539"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:56.545" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:48:56.544" starttime="20140610 12:48:56.542"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:48:56.547" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:48:56.547" starttime="20140610 12:48:56.545"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:48:56.552" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:48:56.554" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:48:56.554" starttime="20140610 12:48:56.550"></status>
</kw>
<msg timestamp="20140610 12:48:56.555" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:48:56.555" level="INFO">${return_log_entry} = 2014-06-10 12:48:56,517 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:56.555" starttime="20140610 12:48:56.548"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.565" starttime="20140610 12:48:56.563"></status>
</kw>
<msg timestamp="20140610 12:48:56.566" level="INFO">${return_log_entry} = 2014-06-10 12:48:56,517 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:56.566" starttime="20140610 12:48:56.556"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.575" starttime="20140610 12:48:56.573"></status>
</kw>
<msg timestamp="20140610 12:48:56.576" level="INFO">${return_log_entry} = 2014-06-10 12:48:56,517 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:48:56.576" starttime="20140610 12:48:56.567"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.586" starttime="20140610 12:48:56.584"></status>
</kw>
<msg timestamp="20140610 12:48:56.587" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:56.587" starttime="20140610 12:48:56.577"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.601" starttime="20140610 12:48:56.599"></status>
</kw>
<msg timestamp="20140610 12:48:56.602" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:56.602" starttime="20140610 12:48:56.588"></status>
</kw>
<msg timestamp="20140610 12:48:56.603" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:56.603" starttime="20140610 12:48:56.531"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.614" starttime="20140610 12:48:56.612"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.616" starttime="20140610 12:48:56.614"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.617" starttime="20140610 12:48:56.616"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:48:56.629" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:48:56.630" starttime="20140610 12:48:56.626"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:56.631" starttime="20140610 12:48:56.625"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:56.631" starttime="20140610 12:48:56.618"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:56.632" starttime="20140610 12:48:56.605"></status>
</kw>
<msg timestamp="20140610 12:48:56.634" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:48:56.632" starttime="20140610 12:48:54.551"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Setting balance of main accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.640" starttime="20140610 12:48:56.634"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:56.640" starttime="20140610 12:48:53.727"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:56.641" starttime="20140610 12:48:52.666"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Expose corresponding suite global variables *******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.644" starttime="20140610 12:48:56.643"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<msg timestamp="20140610 12:48:56.647" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_IMSI} = 530052041010000</msg>
<status status="PASS" endtime="20140610 12:48:56.647" starttime="20140610 12:48:56.645"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN}</arg>
</arguments>
<msg timestamp="20140610 12:48:56.649" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN} = 642041010000</msg>
<status status="PASS" endtime="20140610 12:48:56.650" starttime="20140610 12:48:56.648"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_DESTINATION_IMSI}</arg>
</arguments>
<msg timestamp="20140610 12:48:56.652" level="INFO">${FAKE_DESTINATION_IMSI} = 530052041010001</msg>
<status status="PASS" endtime="20140610 12:48:56.653" starttime="20140610 12:48:56.651"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_DESTINATION_MSISDN}</arg>
</arguments>
<msg timestamp="20140610 12:48:56.655" level="INFO">${FAKE_DESTINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140610 12:48:56.655" starttime="20140610 12:48:56.653"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_ORIGINATION_MSISDN}</arg>
</arguments>
<msg timestamp="20140610 12:48:56.658" level="INFO">${FAKE_ORIGINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140610 12:48:56.658" starttime="20140610 12:48:56.656"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:56.659" starttime="20140610 12:48:36.495"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:56.660" starttime="20140610 12:48:36.407"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:56.661" starttime="20140610 12:47:48.715"></status>
</kw>
<test id="s1-t1" timeout="" name="Run Prepaid MOC Long Duration">
<kw type="kw" timeout="" name="Run Voice Call And Check Phone 1 Ticket">
<doc>Runs a call between the passed devices and checks if a CRM ticket was written for Phone 1</doc>
<arguments>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
<arg>${ATTACHED_PHONE_2_MSISDN_FORMAT1}</arg>
</arguments>
<kw type="kw" timeout="" name="${phone1_imsi} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'=='true'</arg>
<arg>Set Variable</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.693" starttime="20140610 12:48:56.691"></status>
</kw>
<msg timestamp="20140610 12:48:56.694" level="INFO">${phone1_imsi} = 530052041010000</msg>
<status status="PASS" endtime="20140610 12:48:56.694" starttime="20140610 12:48:56.685"></status>
</kw>
<kw type="kw" timeout="" name="${marker_ticket_timestamp}, ${type_dummy} = crm_support-resource.CRM Get Latest Ticket">
<doc>queries the passed subscriber's latest CRM ticket</doc>
<arguments>
<arg>${phone1_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Login">
<doc>Logs into the CRM portal via login page</doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>${CRM_PORTAL_USER}</arg>
<arg>${CRM_PORTAL_PSWD}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Ensure beeing in Login page ******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:56.713" starttime="20140610 12:48:56.712"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140610 12:48:59.569" level="INFO">${isLoginPage} = false</msg>
<status status="PASS" endtime="20140610 12:48:59.567" starttime="20140610 12:48:56.714"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>CRM Portal Logout</arg>
</arguments>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Logout">
<doc>Clicks the logout button of the current page if it is available</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogout</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:59.590" starttime="20140610 12:48:59.584"></status>
</kw>
<kw type="kw" timeout="" name="${pageContainsLogout} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<msg timestamp="20140610 12:48:59.609" level="INFO">${pageContainsLogout} = false</msg>
<status status="PASS" endtime="20140610 12:48:59.608" starttime="20140610 12:48:59.592"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pageContainsLogout}'=='true'</arg>
<arg>Click Element</arg>
<arg>id=logout</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:59.616" starttime="20140610 12:48:59.610"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogout</arg>
</arguments>
<status status="PASS" endtime="20140610 12:48:59.623" starttime="20140610 12:48:59.617"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:59.624" starttime="20140610 12:48:59.577"></status>
</kw>
<status status="PASS" endtime="20140610 12:48:59.624" starttime="20140610 12:48:59.571"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140610 12:48:59.641" level="INFO">${isLoginPage} = false</msg>
<status status="PASS" endtime="20140610 12:48:59.641" starttime="20140610 12:48:59.625"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>Go To</arg>
<arg>${crm_portal_login_url}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Go To">
<doc></doc>
<arguments>
<arg>${crm_portal_login_url}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:00.131" starttime="20140610 12:48:59.648"></status>
</kw>
<status status="PASS" endtime="20140610 12:49:00.134" starttime="20140610 12:48:59.642"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
<arg>timeout=10s</arg>
<arg>error=Login Page not displayed</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:00.236" starttime="20140610 12:49:00.136"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** log in to CRM as Customer Care user ******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:00.239" starttime="20140610 12:49:00.238"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogin</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:00.245" starttime="20140610 12:49:00.240"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=username</arg>
<arg>${crm_portal_user}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:00.342" starttime="20140610 12:49:00.246"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=password</arg>
<arg>${crm_portal_pswd}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:00.438" starttime="20140610 12:49:00.344"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:02.063" starttime="20140610 12:49:00.439"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogin</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:02.073" starttime="20140610 12:49:02.066"></status>
</kw>
<status status="PASS" endtime="20140610 12:49:02.074" starttime="20140610 12:48:56.704"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** CRM: in dashboard enter IMSI and press Submit</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:02.077" starttime="20140610 12:49:02.075"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterInput</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:02.083" starttime="20140610 12:49:02.078"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=filter_imsi</arg>
<arg>${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:02.229" starttime="20140610 12:49:02.084"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** in History tab, get the interesting cells of the first data row</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:02.233" starttime="20140610 12:49:02.231"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterSubmit</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:02.240" starttime="20140610 12:49:02.234"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Submit']</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:03.913" starttime="20140610 12:49:02.241"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
<arg>timeout=10s</arg>
<arg>error=History Tab NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:04.023" starttime="20140610 12:49:03.917"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:04.230" starttime="20140610 12:49:04.026"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Select Frame">
<doc></doc>
<arguments>
<arg>contentiframe</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:04.296" starttime="20140610 12:49:04.233"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
<arg>timeout=10s</arg>
<arg>error=History Search button NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:04.672" starttime="20140610 12:49:04.298"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:04.788" starttime="20140610 12:49:04.674"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>timeout=10s</arg>
<arg>error=History Table not displayed</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:05.630" starttime="20140610 12:49:04.790"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_NEWEST_ROW} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140610 12:49:05.636" level="INFO">${HISTORY_NEWEST_ROW} = 2</msg>
<status status="PASS" endtime="20140610 12:49:05.636" starttime="20140610 12:49:05.634"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_DATETIME_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20140610 12:49:05.640" level="INFO">${HISTORY_DATETIME_COL} = 1</msg>
<status status="PASS" endtime="20140610 12:49:05.640" starttime="20140610 12:49:05.638"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CALLINGCALLED_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140610 12:49:05.643" level="INFO">${HISTORY_CALLINGCALLED_COL} = 2</msg>
<status status="PASS" endtime="20140610 12:49:05.643" starttime="20140610 12:49:05.641"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_TYPE_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20140610 12:49:05.647" level="INFO">${HISTORY_TYPE_COL} = 5</msg>
<status status="PASS" endtime="20140610 12:49:05.646" starttime="20140610 12:49:05.645"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CANNEL_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>9</arg>
</arguments>
<msg timestamp="20140610 12:49:05.652" level="INFO">${HISTORY_CANNEL_COL} = 9</msg>
<status status="PASS" endtime="20140610 12:49:05.652" starttime="20140610 12:49:05.649"></status>
</kw>
<kw type="kw" timeout="" name="${datetime} = InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_DATETIME_COL}</arg>
</arguments>
<msg timestamp="20140610 12:49:05.780" level="INFO">${datetime} = 11/06/2014 - 00:46:29</msg>
<status status="PASS" endtime="20140610 12:49:05.779" starttime="20140610 12:49:05.654"></status>
</kw>
<kw type="kw" timeout="" name="${callingcalled} = InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CALLINGCALLED_COL}</arg>
</arguments>
<msg timestamp="20140610 12:49:05.910" level="INFO">${callingcalled} = </msg>
<status status="PASS" endtime="20140610 12:49:05.909" starttime="20140610 12:49:05.781"></status>
</kw>
<kw type="kw" timeout="" name="${type} = InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_TYPE_COL}</arg>
</arguments>
<msg timestamp="20140610 12:49:06.014" level="INFO">${type} = tariffPlanTopup</msg>
<status status="PASS" endtime="20140610 12:49:06.012" starttime="20140610 12:49:05.912"></status>
</kw>
<kw type="kw" timeout="" name="${channel} = InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CANNEL_COL}</arg>
</arguments>
<msg timestamp="20140610 12:49:06.119" level="INFO">${channel} = AUTOMATIC</msg>
<status status="PASS" endtime="20140610 12:49:06.118" starttime="20140610 12:49:06.016"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Unselect Frame">
<doc></doc>
<arguments>
</arguments>
<status status="PASS" endtime="20140610 12:49:06.135" starttime="20140610 12:49:06.121"></status>
</kw>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Logout">
<doc>Clicks the logout button of the current page if it is available</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogout</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:06.151" starttime="20140610 12:49:06.146"></status>
</kw>
<kw type="kw" timeout="" name="${pageContainsLogout} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<msg timestamp="20140610 12:49:06.167" level="INFO">${pageContainsLogout} = true</msg>
<status status="PASS" endtime="20140610 12:49:06.166" starttime="20140610 12:49:06.153"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pageContainsLogout}'=='true'</arg>
<arg>Click Element</arg>
<arg>id=logout</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:06.669" starttime="20140610 12:49:06.174"></status>
</kw>
<status status="PASS" endtime="20140610 12:49:06.671" starttime="20140610 12:49:06.168"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogout</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:06.680" starttime="20140610 12:49:06.673"></status>
</kw>
<status status="PASS" endtime="20140610 12:49:06.680" starttime="20140610 12:49:06.137"></status>
</kw>
<msg timestamp="20140610 12:49:06.683" level="INFO">${marker_ticket_timestamp} = 11/06/2014 - 00:46:29</msg>
<msg timestamp="20140610 12:49:06.684" level="INFO">${type_dummy} = [u'', u'tariffPlanTopup', u'AUTOMATIC']</msg>
<status status="PASS" endtime="20140610 12:49:06.682" starttime="20140610 12:48:56.696"></status>
</kw>
<kw type="kw" timeout="" name="Run Voice Call">
<doc>executes a 3 slices voice call between 2 Phones</doc>
<arguments>
<arg>${cg_device_imsi}</arg>
<arg>${cd_device_imsi}</arg>
<arg>${dial_msisdn}</arg>
</arguments>
<kw type="kw" timeout="" name="${call_duration_millis} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>3*1000*${MOC_SLICE_SIZE_SECS}</arg>
</arguments>
<msg timestamp="20140610 12:49:06.701" level="INFO">${call_duration_millis} = 180000</msg>
<status status="PASS" endtime="20140610 12:49:06.700" starttime="20140610 12:49:06.694"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Voice Call">
<doc>executes a voice call between 2 Android Phones attached to an Android Remoting Server.</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${cg_device_imsi}</arg>
<arg>${cd_device_imsi}</arg>
<arg>${dial_msisdn}</arg>
<arg>${call_duration_millis}</arg>
<arg>released_by_cg=true</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:49:06.755" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:49:06.756" starttime="20140610 12:49:06.752"></status>
</kw>
<status status="PASS" endtime="20140610 12:49:06.757" starttime="20140610 12:49:06.751"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:49:06.762" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:49:06.763" starttime="20140610 12:49:06.760"></status>
</kw>
<status status="PASS" endtime="20140610 12:49:06.764" starttime="20140610 12:49:06.758"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:49:06.769" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:49:06.770" starttime="20140610 12:49:06.767"></status>
</kw>
<status status="PASS" endtime="20140610 12:49:06.771" starttime="20140610 12:49:06.765"></status>
</kw>
<status status="PASS" endtime="20140610 12:49:06.771" starttime="20140610 12:49:06.743"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:49:06.776" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:49:06.776" starttime="20140610 12:49:06.772"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:06.780" starttime="20140610 12:49:06.777"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:06.783" starttime="20140610 12:49:06.781"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:06.785" starttime="20140610 12:49:06.784"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Call</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:06.788" starttime="20140610 12:49:06.786"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.cgDeviceImsi=${cg_device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:06.791" starttime="20140610 12:49:06.789"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.cdDeviceImsi=${cd_device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:06.795" starttime="20140610 12:49:06.792"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.dialMsisdn=${dial_msisdn}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:06.798" starttime="20140610 12:49:06.796"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.callDurationMillis=${call_duration_millis}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:06.802" starttime="20140610 12:49:06.799"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.releasedByCg=${released_by_cg}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:49:06.805" starttime="20140610 12:49:06.803"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:49:06.809" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Call.input.cgDeviceImsi=232033013972240', u'Testcases.Call.input.cdDeviceImsi=232033013972239', u'Testcases.Call.input.dialMsisdn=0676844901416', u'Testcases.Call.input.callDurationMillis=180000', u'Testcases.Call.input.releasedByCg=true']</msg>
<msg timestamp="20140610 12:52:15.991" level="INFO">12:52:15,954 INFO  [log] Testcases.Call.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:15.993" starttime="20140610 12:49:06.808"></status>
</kw>
<msg timestamp="20140610 12:52:15.995" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:15.996" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:52:15.994" starttime="20140610 12:49:06.807"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Call.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:16.011" level="INFO">${return_marker} = Testcases.Call.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:52:16.010" starttime="20140610 12:52:16.008"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:16.014" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:16.014" starttime="20140610 12:52:16.012"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:16.018" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:16.017" starttime="20140610 12:52:16.015"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:16.023" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:16.028" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:16.029" starttime="20140610 12:52:16.021"></status>
</kw>
<msg timestamp="20140610 12:52:16.030" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:16.030" level="INFO">${return_log_entry} = 2014-06-10 12:52:15,954 INFO  [log] Testcases.Call.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:16.029" starttime="20140610 12:52:16.019"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:16.041" starttime="20140610 12:52:16.038"></status>
</kw>
<msg timestamp="20140610 12:52:16.042" level="INFO">${return_log_entry} = 2014-06-10 12:52:15,954 INFO  [log] Testcases.Call.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:16.041" starttime="20140610 12:52:16.031"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:16.051" starttime="20140610 12:52:16.049"></status>
</kw>
<msg timestamp="20140610 12:52:16.052" level="INFO">${return_log_entry} = 2014-06-10 12:52:15,954 INFO  [log] Testcases.Call.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:16.052" starttime="20140610 12:52:16.043"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:16.062" starttime="20140610 12:52:16.060"></status>
</kw>
<msg timestamp="20140610 12:52:16.064" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:16.063" starttime="20140610 12:52:16.053"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:16.077" starttime="20140610 12:52:16.075"></status>
</kw>
<msg timestamp="20140610 12:52:16.078" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:16.078" starttime="20140610 12:52:16.065"></status>
</kw>
<msg timestamp="20140610 12:52:16.080" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:16.079" starttime="20140610 12:52:15.998"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Call</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:16.092" starttime="20140610 12:52:16.090"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:16.094" starttime="20140610 12:52:16.093"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:16.097" starttime="20140610 12:52:16.095"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:52:16.112" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Call*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Call*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:52:16.113" starttime="20140610 12:52:16.106"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:16.113" starttime="20140610 12:52:16.104"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:16.114" starttime="20140610 12:52:16.098"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:16.114" starttime="20140610 12:52:16.082"></status>
</kw>
<msg timestamp="20140610 12:52:16.116" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:16.115" starttime="20140610 12:49:06.705"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20140610 12:52:16.119" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:16.120" starttime="20140610 12:52:16.117"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'=='true'</arg>
<arg>Fake Voice Call Impact On Testbed</arg>
</arguments>
<kw type="kw" timeout="" name="Fake Voice Call Impact On Testbed">
<doc>Runs a CG MOC 30s session for the faked phone 1</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${rc} = cg_support-resource.CG Run MOC 1s">
<doc>Runs a standard MOC 1s session</doc>
<arguments>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN}</arg>
<arg>${FAKE_DESTINATION_MSISDN}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" timeout="" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session for the passed cgs file</doc>
<arguments>
<arg>moc1s</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" timeout="" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20140610 12:52:16.168" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv</msg>
<status status="PASS" endtime="20140610 12:52:16.167" starttime="20140610 12:52:16.165"></status>
</kw>
<kw type="kw" timeout="" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20140610 12:52:16.172" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv</msg>
<status status="PASS" endtime="20140610 12:52:16.171" starttime="20140610 12:52:16.169"></status>
</kw>
<kw type="kw" timeout="" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20140610 12:52:16.176" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini</msg>
<status status="PASS" endtime="20140610 12:52:16.175" starttime="20140610 12:52:16.173"></status>
</kw>
<kw type="kw" timeout="" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20140610 12:52:16.180" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/moc1s.cgs</msg>
<status status="PASS" endtime="20140610 12:52:16.179" starttime="20140610 12:52:16.177"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:16.182" starttime="20140610 12:52:16.181"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20140610 12:52:16.187" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:16.188" starttime="20140610 12:52:16.183"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:16.190" starttime="20140610 12:52:16.189"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20140610 12:52:16.194" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:16.195" starttime="20140610 12:52:16.191"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20140610 12:52:16.201" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:16.202" starttime="20140610 12:52:16.196"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:16.204" starttime="20140610 12:52:16.203"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20140610 12:52:16.208" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:16.209" starttime="20140610 12:52:16.205"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20140610 12:52:16.217" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:16.218" starttime="20140610 12:52:16.210"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:16.220" starttime="20140610 12:52:16.219"></status>
</kw>
<kw type="kw" timeout="" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20140610 12:52:16.245" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-5.2.0.jar /opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/moc1s.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini -s /opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv -f /opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20140610 12:52:23.054" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20140610 12:52:23.052" starttime="20140610 12:52:16.222"></status>
</kw>
<msg timestamp="20140610 12:52:23.056" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20140610 12:52:23.055" starttime="20140610 12:52:16.151"></status>
</kw>
<msg timestamp="20140610 12:52:23.058" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20140610 12:52:23.057" starttime="20140610 12:52:16.136"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=Faking CG session failed</arg>
</arguments>
<msg timestamp="20140610 12:52:23.062" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:23.063" starttime="20140610 12:52:23.060"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:23.064" starttime="20140610 12:52:16.127"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:23.065" starttime="20140610 12:52:16.121"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:23.066" starttime="20140610 12:49:06.685"></status>
</kw>
<kw type="kw" timeout="" name="crm_support-resource.CRM New Ticket Should Exist">
<doc>checks whether a previous call of device_imsi resulted in a CRM history ticket</doc>
<arguments>
<arg>${phone1_imsi}</arg>
<arg>${marker_ticket_timestamp}</arg>
<arg>ticket_type=Voice</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Parameters: device_imsi=${device_imsi} marker_timestamp=${marker_timestamp} (ticket_type)=${ticket_type} (ticket_channel)=${ticket_channel} (calling_called_number)=${calling_called_number}</arg>
</arguments>
<msg timestamp="20140610 12:52:23.089" level="INFO">Parameters: device_imsi=530052041010000 marker_timestamp=11/06/2014 - 00:46:29 (ticket_type)=Voice (ticket_channel)= (calling_called_number)=</msg>
<status status="PASS" endtime="20140610 12:52:23.090" starttime="20140610 12:52:23.085"></status>
</kw>
<kw type="kw" timeout="" name="${current_datetime}, ${current_calling_called_number}, ${current_type}, ${current_channel} = crm_support-resource.CRM Get Latest Ticket">
<doc>queries the passed subscriber's latest CRM ticket</doc>
<arguments>
<arg>${device_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Login">
<doc>Logs into the CRM portal via login page</doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>${CRM_PORTAL_USER}</arg>
<arg>${CRM_PORTAL_PSWD}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Ensure beeing in Login page ******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:23.114" starttime="20140610 12:52:23.113"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140610 12:52:23.145" level="INFO">${isLoginPage} = true</msg>
<status status="PASS" endtime="20140610 12:52:23.144" starttime="20140610 12:52:23.115"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>CRM Portal Logout</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:23.151" starttime="20140610 12:52:23.146"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140610 12:52:23.171" level="INFO">${isLoginPage} = true</msg>
<status status="PASS" endtime="20140610 12:52:23.171" starttime="20140610 12:52:23.152"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>Go To</arg>
<arg>${crm_portal_login_url}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:23.178" starttime="20140610 12:52:23.172"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
<arg>timeout=10s</arg>
<arg>error=Login Page not displayed</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:23.198" starttime="20140610 12:52:23.180"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** log in to CRM as Customer Care user ******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:23.200" starttime="20140610 12:52:23.199"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogin</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:23.207" starttime="20140610 12:52:23.202"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=username</arg>
<arg>${crm_portal_user}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:23.299" starttime="20140610 12:52:23.208"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=password</arg>
<arg>${crm_portal_pswd}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:23.389" starttime="20140610 12:52:23.300"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:24.731" starttime="20140610 12:52:23.391"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogin</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:24.741" starttime="20140610 12:52:24.735"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:24.742" starttime="20140610 12:52:23.102"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** CRM: in dashboard enter IMSI and press Submit</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:24.745" starttime="20140610 12:52:24.744"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterInput</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:24.769" starttime="20140610 12:52:24.746"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=filter_imsi</arg>
<arg>${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:24.865" starttime="20140610 12:52:24.771"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** in History tab, get the interesting cells of the first data row</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:24.869" starttime="20140610 12:52:24.867"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterSubmit</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:24.878" starttime="20140610 12:52:24.871"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Submit']</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:26.582" starttime="20140610 12:52:24.879"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
<arg>timeout=10s</arg>
<arg>error=History Tab NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:26.703" starttime="20140610 12:52:26.585"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:26.924" starttime="20140610 12:52:26.705"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Select Frame">
<doc></doc>
<arguments>
<arg>contentiframe</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:26.986" starttime="20140610 12:52:26.925"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
<arg>timeout=10s</arg>
<arg>error=History Search button NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:27.308" starttime="20140610 12:52:26.988"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:27.424" starttime="20140610 12:52:27.312"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>timeout=10s</arg>
<arg>error=History Table not displayed</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:28.165" starttime="20140610 12:52:27.426"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_NEWEST_ROW} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140610 12:52:28.169" level="INFO">${HISTORY_NEWEST_ROW} = 2</msg>
<status status="PASS" endtime="20140610 12:52:28.169" starttime="20140610 12:52:28.167"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_DATETIME_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20140610 12:52:28.172" level="INFO">${HISTORY_DATETIME_COL} = 1</msg>
<status status="PASS" endtime="20140610 12:52:28.172" starttime="20140610 12:52:28.170"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CALLINGCALLED_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140610 12:52:28.175" level="INFO">${HISTORY_CALLINGCALLED_COL} = 2</msg>
<status status="PASS" endtime="20140610 12:52:28.175" starttime="20140610 12:52:28.173"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_TYPE_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20140610 12:52:28.178" level="INFO">${HISTORY_TYPE_COL} = 5</msg>
<status status="PASS" endtime="20140610 12:52:28.177" starttime="20140610 12:52:28.176"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CANNEL_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>9</arg>
</arguments>
<msg timestamp="20140610 12:52:28.180" level="INFO">${HISTORY_CANNEL_COL} = 9</msg>
<status status="PASS" endtime="20140610 12:52:28.180" starttime="20140610 12:52:28.179"></status>
</kw>
<kw type="kw" timeout="" name="${datetime} = InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_DATETIME_COL}</arg>
</arguments>
<msg timestamp="20140610 12:52:28.321" level="INFO">${datetime} = 11/06/2014 - 00:52:18</msg>
<status status="PASS" endtime="20140610 12:52:28.320" starttime="20140610 12:52:28.181"></status>
</kw>
<kw type="kw" timeout="" name="${callingcalled} = InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CALLINGCALLED_COL}</arg>
</arguments>
<msg timestamp="20140610 12:52:28.409" level="INFO">${callingcalled} = 642041010001</msg>
<status status="PASS" endtime="20140610 12:52:28.408" starttime="20140610 12:52:28.323"></status>
</kw>
<kw type="kw" timeout="" name="${type} = InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_TYPE_COL}</arg>
</arguments>
<msg timestamp="20140610 12:52:28.510" level="INFO">${type} = Voice</msg>
<status status="PASS" endtime="20140610 12:52:28.510" starttime="20140610 12:52:28.410"></status>
</kw>
<kw type="kw" timeout="" name="${channel} = InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CANNEL_COL}</arg>
</arguments>
<msg timestamp="20140610 12:52:28.634" level="INFO">${channel} = MOC</msg>
<status status="PASS" endtime="20140610 12:52:28.633" starttime="20140610 12:52:28.512"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Unselect Frame">
<doc></doc>
<arguments>
</arguments>
<status status="PASS" endtime="20140610 12:52:28.650" starttime="20140610 12:52:28.636"></status>
</kw>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Logout">
<doc>Clicks the logout button of the current page if it is available</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogout</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:28.665" starttime="20140610 12:52:28.660"></status>
</kw>
<kw type="kw" timeout="" name="${pageContainsLogout} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<msg timestamp="20140610 12:52:28.680" level="INFO">${pageContainsLogout} = true</msg>
<status status="PASS" endtime="20140610 12:52:28.680" starttime="20140610 12:52:28.667"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pageContainsLogout}'=='true'</arg>
<arg>Click Element</arg>
<arg>id=logout</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.207" starttime="20140610 12:52:28.687"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.210" starttime="20140610 12:52:28.681"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogout</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.219" starttime="20140610 12:52:29.213"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.220" starttime="20140610 12:52:28.652"></status>
</kw>
<msg timestamp="20140610 12:52:29.224" level="INFO">${current_datetime} = 11/06/2014 - 00:52:18</msg>
<msg timestamp="20140610 12:52:29.224" level="INFO">${current_calling_called_number} = 642041010001</msg>
<msg timestamp="20140610 12:52:29.224" level="INFO">${current_type} = Voice</msg>
<msg timestamp="20140610 12:52:29.225" level="INFO">${current_channel} = MOC</msg>
<status status="PASS" endtime="20140610 12:52:29.222" starttime="20140610 12:52:23.092"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Not Be Equal As Strings">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${current_datetime}</arg>
<arg>${marker_timestamp}</arg>
<arg>msg=No ticket written for IMSI ${device_imsi}</arg>
</arguments>
<msg timestamp="20140610 12:52:29.229" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:29.230" starttime="20140610 12:52:29.226"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'$ticket_type}'!='${EMPTY}'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${current_type}</arg>
<arg>${ticket_type}</arg>
<arg>msg=No ${ticket_type} ticket written for IMSI ${device_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${current_type}</arg>
<arg>${ticket_type}</arg>
<arg>msg=No ${ticket_type} ticket written for IMSI ${device_imsi}</arg>
</arguments>
<msg timestamp="20140610 12:52:29.240" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:29.241" starttime="20140610 12:52:29.237"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.241" starttime="20140610 12:52:29.231"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ticket_channel}'!='${EMPTY}'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${current_channel}</arg>
<arg>${ticket_channel}</arg>
<arg>msg=No ${ticket_channel} channel ticket written for IMSI ${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.248" starttime="20140610 12:52:29.242"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${calling_called_number}'!='${EMPTY}'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${current_calling_called_number}</arg>
<arg>${calling_called_number}</arg>
<arg>msg=No ${calling_called_number} Calling/Called ticket written for IMSI ${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.256" starttime="20140610 12:52:29.250"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.256" starttime="20140610 12:52:23.074"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.258" starttime="20140610 12:48:56.677"></status>
</kw>
<doc>Runs a 3 slices on-net Phone 1 Call to on-net Phone 2 by dialing Phone 2 MSISDN format 1
Plus ticket existance check for Phone 1 subscriber
=========================================================</doc>
<tags>
<tag>End2EndTest</tag>
<tag>experimental</tag>
<tag>TNZ_supported</tag>
<tag>walter.heincz</tag>
</tags>
<status status="PASS" critical="yes" endtime="20140610 12:52:29.260" starttime="20140610 12:48:56.662"></status>
</test>
<kw type="teardown" timeout="" name="suite-global-keyword-resource.Teardown Suite">
<doc>This is the suite teardown procedure that is called from "Suite Teardown" keyword</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Logout">
<doc>Clicks the logout button of the current page if it is available</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogout</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.284" starttime="20140610 12:52:29.279"></status>
</kw>
<kw type="kw" timeout="" name="${pageContainsLogout} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<msg timestamp="20140610 12:52:29.307" level="INFO">${pageContainsLogout} = false</msg>
<status status="PASS" endtime="20140610 12:52:29.307" starttime="20140610 12:52:29.285"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pageContainsLogout}'=='true'</arg>
<arg>Click Element</arg>
<arg>id=logout</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.314" starttime="20140610 12:52:29.308"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogout</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.320" starttime="20140610 12:52:29.315"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.321" starttime="20140610 12:52:29.272"></status>
</kw>
<kw type="kw" timeout="" name="suite-global-keyword-resource.Reset All Phones">
<doc>This helper for the TCs and Suite Setup script ensures that</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:29.355" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:29.356" starttime="20140610 12:52:29.353"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.357" starttime="20140610 12:52:29.351"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:29.362" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:29.363" starttime="20140610 12:52:29.359"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.364" starttime="20140610 12:52:29.358"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:29.369" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:29.370" starttime="20140610 12:52:29.366"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.370" starttime="20140610 12:52:29.365"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.371" starttime="20140610 12:52:29.343"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:52:29.375" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:52:29.375" starttime="20140610 12:52:29.372"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.379" starttime="20140610 12:52:29.376"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.382" starttime="20140610 12:52:29.380"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.385" starttime="20140610 12:52:29.383"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.387" starttime="20140610 12:52:29.386"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.391" starttime="20140610 12:52:29.388"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:52:29.395" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140610 12:52:29.712" level="INFO">12:52:29,703 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140610 12:52:29.729" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 10
Size: 528
Timestamp: Tue Jun 10 12:52:29 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972240&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140610 12:52:29.732" starttime="20140610 12:52:29.394"></status>
</kw>
<msg timestamp="20140610 12:52:29.736" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140610 12:52:29.736" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 10
Size: 528
Timestamp: Tue Jun 10 12:52:29 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140610 12:52:29.733" starttime="20140610 12:52:29.392"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:29.750" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:52:29.748" starttime="20140610 12:52:29.746"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:29.754" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:29.753" starttime="20140610 12:52:29.752"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:29.757" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:29.756" starttime="20140610 12:52:29.755"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:29.762" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:29.763" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:29.764" starttime="20140610 12:52:29.760"></status>
</kw>
<msg timestamp="20140610 12:52:29.765" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:29.765" level="INFO">${return_log_entry} = 2014-06-10 12:52:29,703 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:29.764" starttime="20140610 12:52:29.758"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.775" starttime="20140610 12:52:29.773"></status>
</kw>
<msg timestamp="20140610 12:52:29.776" level="INFO">${return_log_entry} = 2014-06-10 12:52:29,703 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:29.776" starttime="20140610 12:52:29.766"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.786" starttime="20140610 12:52:29.784"></status>
</kw>
<msg timestamp="20140610 12:52:29.787" level="INFO">${return_log_entry} = 2014-06-10 12:52:29,703 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:29.786" starttime="20140610 12:52:29.777"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.796" starttime="20140610 12:52:29.794"></status>
</kw>
<msg timestamp="20140610 12:52:29.797" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:29.797" starttime="20140610 12:52:29.788"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.811" starttime="20140610 12:52:29.809"></status>
</kw>
<msg timestamp="20140610 12:52:29.812" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:29.812" starttime="20140610 12:52:29.799"></status>
</kw>
<msg timestamp="20140610 12:52:29.813" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:29.813" starttime="20140610 12:52:29.738"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.824" starttime="20140610 12:52:29.823"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.827" starttime="20140610 12:52:29.825"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.829" starttime="20140610 12:52:29.828"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:52:29.842" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:29.843" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:29.844" starttime="20140610 12:52:29.839"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.845" starttime="20140610 12:52:29.837"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.845" starttime="20140610 12:52:29.830"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.846" starttime="20140610 12:52:29.815"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.846" starttime="20140610 12:52:29.332"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:29.871" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:29.872" starttime="20140610 12:52:29.868"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.873" starttime="20140610 12:52:29.867"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:29.878" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:29.879" starttime="20140610 12:52:29.875"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.879" starttime="20140610 12:52:29.874"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:29.884" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:29.885" starttime="20140610 12:52:29.882"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.886" starttime="20140610 12:52:29.880"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:29.886" starttime="20140610 12:52:29.860"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:52:29.890" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:52:29.890" starttime="20140610 12:52:29.887"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.894" starttime="20140610 12:52:29.891"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.898" starttime="20140610 12:52:29.895"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.900" starttime="20140610 12:52:29.898"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.902" starttime="20140610 12:52:29.901"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:29.906" starttime="20140610 12:52:29.903"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:52:29.910" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140610 12:52:30.249" level="INFO">12:52:30,239 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140610 12:52:30.264" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 10
Size: 528
Timestamp: Tue Jun 10 12:52:30 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972239&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140610 12:52:30.266" starttime="20140610 12:52:29.908"></status>
</kw>
<msg timestamp="20140610 12:52:30.269" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140610 12:52:30.269" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 10
Size: 528
Timestamp: Tue Jun 10 12:52:30 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140610 12:52:30.268" starttime="20140610 12:52:29.907"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:30.283" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:52:30.282" starttime="20140610 12:52:30.280"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:30.286" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:30.286" starttime="20140610 12:52:30.284"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:30.289" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:30.289" starttime="20140610 12:52:30.287"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:30.295" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:30.296" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:30.297" starttime="20140610 12:52:30.292"></status>
</kw>
<msg timestamp="20140610 12:52:30.298" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:30.298" level="INFO">${return_log_entry} = 2014-06-10 12:52:30,239 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:30.297" starttime="20140610 12:52:30.290"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.309" starttime="20140610 12:52:30.307"></status>
</kw>
<msg timestamp="20140610 12:52:30.310" level="INFO">${return_log_entry} = 2014-06-10 12:52:30,239 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:30.310" starttime="20140610 12:52:30.299"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.320" starttime="20140610 12:52:30.318"></status>
</kw>
<msg timestamp="20140610 12:52:30.321" level="INFO">${return_log_entry} = 2014-06-10 12:52:30,239 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:30.321" starttime="20140610 12:52:30.311"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.332" starttime="20140610 12:52:30.330"></status>
</kw>
<msg timestamp="20140610 12:52:30.333" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:30.333" starttime="20140610 12:52:30.323"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.348" starttime="20140610 12:52:30.346"></status>
</kw>
<msg timestamp="20140610 12:52:30.349" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:30.349" starttime="20140610 12:52:30.334"></status>
</kw>
<msg timestamp="20140610 12:52:30.351" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:30.350" starttime="20140610 12:52:30.271"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.362" starttime="20140610 12:52:30.360"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.364" starttime="20140610 12:52:30.363"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.366" starttime="20140610 12:52:30.365"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:52:30.381" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:30.382" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:30.383" starttime="20140610 12:52:30.377"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.384" starttime="20140610 12:52:30.375"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.384" starttime="20140610 12:52:30.367"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.385" starttime="20140610 12:52:30.352"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.386" starttime="20140610 12:52:29.849"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:30.412" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:30.412" starttime="20140610 12:52:30.409"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.413" starttime="20140610 12:52:30.407"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:30.418" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:30.419" starttime="20140610 12:52:30.416"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.420" starttime="20140610 12:52:30.414"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:30.426" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:30.426" starttime="20140610 12:52:30.423"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.427" starttime="20140610 12:52:30.421"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.428" starttime="20140610 12:52:30.400"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:52:30.432" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:52:30.432" starttime="20140610 12:52:30.428"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.436" starttime="20140610 12:52:30.433"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.439" starttime="20140610 12:52:30.437"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.442" starttime="20140610 12:52:30.440"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.444" starttime="20140610 12:52:30.443"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.447" starttime="20140610 12:52:30.445"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:52:30.452" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140610 12:52:30.762" level="INFO">12:52:30,753 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140610 12:52:30.776" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 10
Size: 528
Timestamp: Tue Jun 10 12:52:30 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140610 12:52:30.779" starttime="20140610 12:52:30.450"></status>
</kw>
<msg timestamp="20140610 12:52:30.780" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140610 12:52:30.780" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 10
Size: 528
Timestamp: Tue Jun 10 12:52:30 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140610 12:52:30.779" starttime="20140610 12:52:30.449"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:30.794" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:52:30.794" starttime="20140610 12:52:30.791"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:30.797" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:30.797" starttime="20140610 12:52:30.795"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:30.800" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:30.800" starttime="20140610 12:52:30.798"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:30.806" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:30.807" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:30.808" starttime="20140610 12:52:30.803"></status>
</kw>
<msg timestamp="20140610 12:52:30.809" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:30.809" level="INFO">${return_log_entry} = 2014-06-10 12:52:30,753 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:30.808" starttime="20140610 12:52:30.801"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.818" starttime="20140610 12:52:30.816"></status>
</kw>
<msg timestamp="20140610 12:52:30.819" level="INFO">${return_log_entry} = 2014-06-10 12:52:30,753 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:30.819" starttime="20140610 12:52:30.810"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.829" starttime="20140610 12:52:30.827"></status>
</kw>
<msg timestamp="20140610 12:52:30.830" level="INFO">${return_log_entry} = 2014-06-10 12:52:30,753 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:30.829" starttime="20140610 12:52:30.820"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.840" starttime="20140610 12:52:30.837"></status>
</kw>
<msg timestamp="20140610 12:52:30.841" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:30.840" starttime="20140610 12:52:30.831"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.854" starttime="20140610 12:52:30.852"></status>
</kw>
<msg timestamp="20140610 12:52:30.855" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:30.855" starttime="20140610 12:52:30.842"></status>
</kw>
<msg timestamp="20140610 12:52:30.857" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:30.856" starttime="20140610 12:52:30.782"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.867" starttime="20140610 12:52:30.866"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.892" starttime="20140610 12:52:30.891"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.895" starttime="20140610 12:52:30.893"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:52:30.910" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:30.911" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:30.912" starttime="20140610 12:52:30.905"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.912" starttime="20140610 12:52:30.903"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.913" starttime="20140610 12:52:30.895"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.913" starttime="20140610 12:52:30.858"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.914" starttime="20140610 12:52:30.389"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:30.939" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:30.940" starttime="20140610 12:52:30.936"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.940" starttime="20140610 12:52:30.935"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:30.946" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:30.946" starttime="20140610 12:52:30.943"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.947" starttime="20140610 12:52:30.941"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:30.952" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:30.953" starttime="20140610 12:52:30.950"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.954" starttime="20140610 12:52:30.948"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:30.954" starttime="20140610 12:52:30.927"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:52:30.958" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:52:30.958" starttime="20140610 12:52:30.955"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.962" starttime="20140610 12:52:30.959"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.965" starttime="20140610 12:52:30.963"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.968" starttime="20140610 12:52:30.966"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.970" starttime="20140610 12:52:30.968"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:30.973" starttime="20140610 12:52:30.971"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:52:30.977" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140610 12:52:31.295" level="INFO">12:52:31,286 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140610 12:52:31.310" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 10
Size: 528
Timestamp: Tue Jun 10 12:52:31 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140610 12:52:31.312" starttime="20140610 12:52:30.976"></status>
</kw>
<msg timestamp="20140610 12:52:31.315" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140610 12:52:31.315" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 10
Size: 528
Timestamp: Tue Jun 10 12:52:31 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140610 12:52:31.314" starttime="20140610 12:52:30.974"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:31.328" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:52:31.328" starttime="20140610 12:52:31.325"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:31.331" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:31.331" starttime="20140610 12:52:31.329"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:31.334" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:31.334" starttime="20140610 12:52:31.332"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:31.340" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:31.341" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:31.341" starttime="20140610 12:52:31.337"></status>
</kw>
<msg timestamp="20140610 12:52:31.342" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:31.343" level="INFO">${return_log_entry} = 2014-06-10 12:52:31,286 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:31.342" starttime="20140610 12:52:31.335"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.353" starttime="20140610 12:52:31.350"></status>
</kw>
<msg timestamp="20140610 12:52:31.354" level="INFO">${return_log_entry} = 2014-06-10 12:52:31,286 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:31.353" starttime="20140610 12:52:31.344"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.363" starttime="20140610 12:52:31.361"></status>
</kw>
<msg timestamp="20140610 12:52:31.364" level="INFO">${return_log_entry} = 2014-06-10 12:52:31,286 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:31.364" starttime="20140610 12:52:31.355"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.374" starttime="20140610 12:52:31.372"></status>
</kw>
<msg timestamp="20140610 12:52:31.376" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:31.375" starttime="20140610 12:52:31.365"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.391" starttime="20140610 12:52:31.389"></status>
</kw>
<msg timestamp="20140610 12:52:31.392" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:31.392" starttime="20140610 12:52:31.377"></status>
</kw>
<msg timestamp="20140610 12:52:31.394" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140610 12:52:31.393" starttime="20140610 12:52:31.317"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.404" starttime="20140610 12:52:31.403"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.406" starttime="20140610 12:52:31.405"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.409" starttime="20140610 12:52:31.407"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:52:31.421" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:31.423" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:31.424" starttime="20140610 12:52:31.418"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:31.424" starttime="20140610 12:52:31.416"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:31.425" starttime="20140610 12:52:31.410"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:31.425" starttime="20140610 12:52:31.395"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:31.426" starttime="20140610 12:52:30.917"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:31.452" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:31.453" starttime="20140610 12:52:31.449"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:31.453" starttime="20140610 12:52:31.448"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:31.459" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:31.459" starttime="20140610 12:52:31.456"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:31.460" starttime="20140610 12:52:31.454"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:31.466" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:31.466" starttime="20140610 12:52:31.463"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:31.467" starttime="20140610 12:52:31.461"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:31.467" starttime="20140610 12:52:31.440"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:52:31.471" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:52:31.471" starttime="20140610 12:52:31.468"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.475" starttime="20140610 12:52:31.472"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.478" starttime="20140610 12:52:31.476"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.481" starttime="20140610 12:52:31.479"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.483" starttime="20140610 12:52:31.481"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.486" starttime="20140610 12:52:31.484"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:52:31.490" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140610 12:52:31.834" level="INFO">12:52:31,791 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
12:52:31,796 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:31.834" starttime="20140610 12:52:31.489"></status>
</kw>
<msg timestamp="20140610 12:52:31.835" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:31.836" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:52:31.835" starttime="20140610 12:52:31.487"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:31.848" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:52:31.848" starttime="20140610 12:52:31.845"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:31.851" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:31.851" starttime="20140610 12:52:31.849"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:31.854" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:31.854" starttime="20140610 12:52:31.852"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:31.860" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:31.861" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:31.861" starttime="20140610 12:52:31.857"></status>
</kw>
<msg timestamp="20140610 12:52:31.862" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:31.863" level="INFO">${return_log_entry} = 2014-06-10 12:52:31,796 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:31.862" starttime="20140610 12:52:31.856"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.901" starttime="20140610 12:52:31.899"></status>
</kw>
<msg timestamp="20140610 12:52:31.902" level="INFO">${return_log_entry} = 2014-06-10 12:52:31,796 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:31.902" starttime="20140610 12:52:31.891"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.912" starttime="20140610 12:52:31.910"></status>
</kw>
<msg timestamp="20140610 12:52:31.913" level="INFO">${return_log_entry} = 2014-06-10 12:52:31,796 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:31.912" starttime="20140610 12:52:31.903"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.923" starttime="20140610 12:52:31.920"></status>
</kw>
<msg timestamp="20140610 12:52:31.924" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:31.923" starttime="20140610 12:52:31.914"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.937" starttime="20140610 12:52:31.935"></status>
</kw>
<msg timestamp="20140610 12:52:31.938" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:31.938" starttime="20140610 12:52:31.925"></status>
</kw>
<msg timestamp="20140610 12:52:31.939" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:31.939" starttime="20140610 12:52:31.838"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:31.953" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140610 12:52:31.952" starttime="20140610 12:52:31.950"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:31.956" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:31.956" starttime="20140610 12:52:31.954"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:31.959" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:31.959" starttime="20140610 12:52:31.957"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:31.965" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:31.966" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:31.966" starttime="20140610 12:52:31.962"></status>
</kw>
<msg timestamp="20140610 12:52:31.968" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:31.968" level="INFO">${return_log_entry} = 2014-06-10 12:52:31,791 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:52:31.967" starttime="20140610 12:52:31.960"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.977" starttime="20140610 12:52:31.975"></status>
</kw>
<msg timestamp="20140610 12:52:31.978" level="INFO">${return_log_entry} = 2014-06-10 12:52:31,791 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:52:31.978" starttime="20140610 12:52:31.969"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.987" starttime="20140610 12:52:31.985"></status>
</kw>
<msg timestamp="20140610 12:52:31.988" level="INFO">${return_log_entry} = 2014-06-10 12:52:31,791 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:52:31.988" starttime="20140610 12:52:31.979"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:31.998" starttime="20140610 12:52:31.996"></status>
</kw>
<msg timestamp="20140610 12:52:31.999" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:31.999" starttime="20140610 12:52:31.989"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.013" starttime="20140610 12:52:32.011"></status>
</kw>
<msg timestamp="20140610 12:52:32.014" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:32.014" starttime="20140610 12:52:32.000"></status>
</kw>
<msg timestamp="20140610 12:52:32.016" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:32.015" starttime="20140610 12:52:31.942"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.027" starttime="20140610 12:52:32.026"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.029" starttime="20140610 12:52:32.028"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.032" starttime="20140610 12:52:32.030"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:52:32.044" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:52:32.045" starttime="20140610 12:52:32.041"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:32.045" starttime="20140610 12:52:32.039"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:32.046" starttime="20140610 12:52:32.033"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:32.046" starttime="20140610 12:52:32.018"></status>
</kw>
<msg timestamp="20140610 12:52:32.048" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:52:32.049" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:32.047" starttime="20140610 12:52:31.430"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140610 12:52:32.052" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:32.052" starttime="20140610 12:52:32.050"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 1</arg>
</arguments>
<msg timestamp="20140610 12:52:32.055" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:32.056" starttime="20140610 12:52:32.053"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:32.081" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:32.082" starttime="20140610 12:52:32.078"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:32.083" starttime="20140610 12:52:32.077"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:32.088" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:32.089" starttime="20140610 12:52:32.085"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:32.089" starttime="20140610 12:52:32.084"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:32.095" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:32.096" starttime="20140610 12:52:32.092"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:32.096" starttime="20140610 12:52:32.090"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:32.097" starttime="20140610 12:52:32.069"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:52:32.100" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:52:32.101" starttime="20140610 12:52:32.097"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.104" starttime="20140610 12:52:32.102"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.108" starttime="20140610 12:52:32.105"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.110" starttime="20140610 12:52:32.109"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.113" starttime="20140610 12:52:32.111"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.117" starttime="20140610 12:52:32.114"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:52:32.122" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140610 12:52:32.467" level="INFO">12:52:32,425 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
12:52:32,430 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:32.467" starttime="20140610 12:52:32.120"></status>
</kw>
<msg timestamp="20140610 12:52:32.468" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:32.469" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:52:32.468" starttime="20140610 12:52:32.118"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:32.482" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:52:32.481" starttime="20140610 12:52:32.479"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:32.485" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:32.485" starttime="20140610 12:52:32.483"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:32.488" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:32.488" starttime="20140610 12:52:32.486"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:32.494" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:32.495" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:32.495" starttime="20140610 12:52:32.491"></status>
</kw>
<msg timestamp="20140610 12:52:32.496" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:32.497" level="INFO">${return_log_entry} = 2014-06-10 12:52:32,430 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:32.496" starttime="20140610 12:52:32.489"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.506" starttime="20140610 12:52:32.504"></status>
</kw>
<msg timestamp="20140610 12:52:32.507" level="INFO">${return_log_entry} = 2014-06-10 12:52:32,430 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:32.507" starttime="20140610 12:52:32.498"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.516" starttime="20140610 12:52:32.514"></status>
</kw>
<msg timestamp="20140610 12:52:32.517" level="INFO">${return_log_entry} = 2014-06-10 12:52:32,430 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:32.517" starttime="20140610 12:52:32.508"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.527" starttime="20140610 12:52:32.525"></status>
</kw>
<msg timestamp="20140610 12:52:32.528" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:32.528" starttime="20140610 12:52:32.518"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.542" starttime="20140610 12:52:32.540"></status>
</kw>
<msg timestamp="20140610 12:52:32.543" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:32.543" starttime="20140610 12:52:32.529"></status>
</kw>
<msg timestamp="20140610 12:52:32.545" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:32.544" starttime="20140610 12:52:32.471"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:32.557" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140610 12:52:32.557" starttime="20140610 12:52:32.555"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:32.561" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:32.560" starttime="20140610 12:52:32.558"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:32.564" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:32.563" starttime="20140610 12:52:32.562"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:32.569" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:32.571" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:32.571" starttime="20140610 12:52:32.567"></status>
</kw>
<msg timestamp="20140610 12:52:32.572" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:32.573" level="INFO">${return_log_entry} = 2014-06-10 12:52:32,425 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:52:32.572" starttime="20140610 12:52:32.565"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.582" starttime="20140610 12:52:32.580"></status>
</kw>
<msg timestamp="20140610 12:52:32.583" level="INFO">${return_log_entry} = 2014-06-10 12:52:32,425 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:52:32.582" starttime="20140610 12:52:32.574"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.593" starttime="20140610 12:52:32.591"></status>
</kw>
<msg timestamp="20140610 12:52:32.594" level="INFO">${return_log_entry} = 2014-06-10 12:52:32,425 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:52:32.593" starttime="20140610 12:52:32.584"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.604" starttime="20140610 12:52:32.601"></status>
</kw>
<msg timestamp="20140610 12:52:32.605" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:32.604" starttime="20140610 12:52:32.595"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.618" starttime="20140610 12:52:32.616"></status>
</kw>
<msg timestamp="20140610 12:52:32.619" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:32.619" starttime="20140610 12:52:32.606"></status>
</kw>
<msg timestamp="20140610 12:52:32.620" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:32.620" starttime="20140610 12:52:32.546"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.631" starttime="20140610 12:52:32.630"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.633" starttime="20140610 12:52:32.632"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.635" starttime="20140610 12:52:32.634"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:52:32.647" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:52:32.648" starttime="20140610 12:52:32.644"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:32.649" starttime="20140610 12:52:32.642"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:32.649" starttime="20140610 12:52:32.636"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:32.650" starttime="20140610 12:52:32.622"></status>
</kw>
<msg timestamp="20140610 12:52:32.651" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:52:32.652" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:32.651" starttime="20140610 12:52:32.059"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140610 12:52:32.655" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:32.655" starttime="20140610 12:52:32.653"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 2</arg>
</arguments>
<msg timestamp="20140610 12:52:32.658" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:32.659" starttime="20140610 12:52:32.656"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:32.684" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:32.685" starttime="20140610 12:52:32.681"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:32.685" starttime="20140610 12:52:32.680"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:32.691" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:32.691" starttime="20140610 12:52:32.688"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:32.692" starttime="20140610 12:52:32.686"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:32.697" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:32.698" starttime="20140610 12:52:32.695"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:32.699" starttime="20140610 12:52:32.693"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:32.699" starttime="20140610 12:52:32.672"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:52:32.703" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:52:32.703" starttime="20140610 12:52:32.700"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.707" starttime="20140610 12:52:32.704"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.710" starttime="20140610 12:52:32.708"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.713" starttime="20140610 12:52:32.711"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.715" starttime="20140610 12:52:32.713"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:32.718" starttime="20140610 12:52:32.716"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:52:32.723" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140610 12:52:33.095" level="INFO">12:52:33,053 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
12:52:33,058 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:33.096" starttime="20140610 12:52:32.721"></status>
</kw>
<msg timestamp="20140610 12:52:33.099" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:33.099" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:52:33.098" starttime="20140610 12:52:32.719"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:33.113" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:52:33.113" starttime="20140610 12:52:33.110"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.116" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:33.116" starttime="20140610 12:52:33.114"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.119" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:33.119" starttime="20140610 12:52:33.117"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.124" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:33.126" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:33.126" starttime="20140610 12:52:33.122"></status>
</kw>
<msg timestamp="20140610 12:52:33.127" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:33.128" level="INFO">${return_log_entry} = 2014-06-10 12:52:33,058 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:33.127" starttime="20140610 12:52:33.120"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.138" starttime="20140610 12:52:33.136"></status>
</kw>
<msg timestamp="20140610 12:52:33.139" level="INFO">${return_log_entry} = 2014-06-10 12:52:33,058 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:33.138" starttime="20140610 12:52:33.129"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.148" starttime="20140610 12:52:33.146"></status>
</kw>
<msg timestamp="20140610 12:52:33.149" level="INFO">${return_log_entry} = 2014-06-10 12:52:33,058 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:33.149" starttime="20140610 12:52:33.140"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.159" starttime="20140610 12:52:33.156"></status>
</kw>
<msg timestamp="20140610 12:52:33.160" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:33.159" starttime="20140610 12:52:33.150"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.173" starttime="20140610 12:52:33.171"></status>
</kw>
<msg timestamp="20140610 12:52:33.174" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:33.174" starttime="20140610 12:52:33.161"></status>
</kw>
<msg timestamp="20140610 12:52:33.175" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:33.175" starttime="20140610 12:52:33.102"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:33.188" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140610 12:52:33.187" starttime="20140610 12:52:33.185"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.191" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:33.190" starttime="20140610 12:52:33.189"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.194" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:33.193" starttime="20140610 12:52:33.192"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.199" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:33.200" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:33.201" starttime="20140610 12:52:33.197"></status>
</kw>
<msg timestamp="20140610 12:52:33.202" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:33.202" level="INFO">${return_log_entry} = 2014-06-10 12:52:33,053 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:52:33.201" starttime="20140610 12:52:33.195"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.211" starttime="20140610 12:52:33.209"></status>
</kw>
<msg timestamp="20140610 12:52:33.212" level="INFO">${return_log_entry} = 2014-06-10 12:52:33,053 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:52:33.212" starttime="20140610 12:52:33.203"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.221" starttime="20140610 12:52:33.219"></status>
</kw>
<msg timestamp="20140610 12:52:33.222" level="INFO">${return_log_entry} = 2014-06-10 12:52:33,053 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:52:33.222" starttime="20140610 12:52:33.213"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.232" starttime="20140610 12:52:33.230"></status>
</kw>
<msg timestamp="20140610 12:52:33.233" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:33.232" starttime="20140610 12:52:33.223"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.246" starttime="20140610 12:52:33.244"></status>
</kw>
<msg timestamp="20140610 12:52:33.247" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:33.247" starttime="20140610 12:52:33.234"></status>
</kw>
<msg timestamp="20140610 12:52:33.248" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:33.248" starttime="20140610 12:52:33.177"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.259" starttime="20140610 12:52:33.258"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.261" starttime="20140610 12:52:33.260"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.263" starttime="20140610 12:52:33.262"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:52:33.275" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:52:33.276" starttime="20140610 12:52:33.272"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:33.276" starttime="20140610 12:52:33.270"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:33.277" starttime="20140610 12:52:33.264"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:33.277" starttime="20140610 12:52:33.250"></status>
</kw>
<msg timestamp="20140610 12:52:33.279" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:52:33.280" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:33.278" starttime="20140610 12:52:32.662"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140610 12:52:33.283" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:33.283" starttime="20140610 12:52:33.281"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 12</arg>
</arguments>
<msg timestamp="20140610 12:52:33.286" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:33.287" starttime="20140610 12:52:33.284"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.312" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:33.313" starttime="20140610 12:52:33.309"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:33.313" starttime="20140610 12:52:33.308"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.319" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:33.320" starttime="20140610 12:52:33.316"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:33.320" starttime="20140610 12:52:33.314"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.325" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:33.326" starttime="20140610 12:52:33.323"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:33.327" starttime="20140610 12:52:33.321"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:33.327" starttime="20140610 12:52:33.300"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.331" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:52:33.331" starttime="20140610 12:52:33.328"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.335" starttime="20140610 12:52:33.332"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.338" starttime="20140610 12:52:33.336"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.340" starttime="20140610 12:52:33.339"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.342" starttime="20140610 12:52:33.341"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.346" starttime="20140610 12:52:33.343"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:52:33.350" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140610 12:52:33.690" level="INFO">12:52:33,650 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
12:52:33,656 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:33.691" starttime="20140610 12:52:33.348"></status>
</kw>
<msg timestamp="20140610 12:52:33.692" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:33.692" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:52:33.691" starttime="20140610 12:52:33.347"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:33.704" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:52:33.704" starttime="20140610 12:52:33.702"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.707" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:33.707" starttime="20140610 12:52:33.705"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.710" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:33.710" starttime="20140610 12:52:33.708"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.716" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:33.717" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:33.717" starttime="20140610 12:52:33.713"></status>
</kw>
<msg timestamp="20140610 12:52:33.718" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:33.719" level="INFO">${return_log_entry} = 2014-06-10 12:52:33,656 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:33.718" starttime="20140610 12:52:33.711"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.727" starttime="20140610 12:52:33.725"></status>
</kw>
<msg timestamp="20140610 12:52:33.729" level="INFO">${return_log_entry} = 2014-06-10 12:52:33,656 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:33.728" starttime="20140610 12:52:33.720"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.738" starttime="20140610 12:52:33.736"></status>
</kw>
<msg timestamp="20140610 12:52:33.739" level="INFO">${return_log_entry} = 2014-06-10 12:52:33,656 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:33.738" starttime="20140610 12:52:33.730"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.749" starttime="20140610 12:52:33.746"></status>
</kw>
<msg timestamp="20140610 12:52:33.750" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:33.749" starttime="20140610 12:52:33.740"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.764" starttime="20140610 12:52:33.762"></status>
</kw>
<msg timestamp="20140610 12:52:33.765" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:33.765" starttime="20140610 12:52:33.752"></status>
</kw>
<msg timestamp="20140610 12:52:33.766" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:33.766" starttime="20140610 12:52:33.694"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:33.779" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140610 12:52:33.778" starttime="20140610 12:52:33.776"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.782" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:33.781" starttime="20140610 12:52:33.780"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.813" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:33.813" starttime="20140610 12:52:33.810"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.819" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:33.820" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:33.821" starttime="20140610 12:52:33.816"></status>
</kw>
<msg timestamp="20140610 12:52:33.822" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:33.822" level="INFO">${return_log_entry} = 2014-06-10 12:52:33,650 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:52:33.822" starttime="20140610 12:52:33.815"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.832" starttime="20140610 12:52:33.830"></status>
</kw>
<msg timestamp="20140610 12:52:33.833" level="INFO">${return_log_entry} = 2014-06-10 12:52:33,650 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:52:33.833" starttime="20140610 12:52:33.823"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.842" starttime="20140610 12:52:33.840"></status>
</kw>
<msg timestamp="20140610 12:52:33.843" level="INFO">${return_log_entry} = 2014-06-10 12:52:33,650 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140610 12:52:33.843" starttime="20140610 12:52:33.834"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.853" starttime="20140610 12:52:33.851"></status>
</kw>
<msg timestamp="20140610 12:52:33.854" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:33.854" starttime="20140610 12:52:33.844"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.867" starttime="20140610 12:52:33.866"></status>
</kw>
<msg timestamp="20140610 12:52:33.868" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:33.868" starttime="20140610 12:52:33.855"></status>
</kw>
<msg timestamp="20140610 12:52:33.870" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:33.869" starttime="20140610 12:52:33.768"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.880" starttime="20140610 12:52:33.879"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.882" starttime="20140610 12:52:33.881"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.884" starttime="20140610 12:52:33.883"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:52:33.896" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:52:33.897" starttime="20140610 12:52:33.893"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:33.898" starttime="20140610 12:52:33.891"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:33.898" starttime="20140610 12:52:33.885"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:33.899" starttime="20140610 12:52:33.871"></status>
</kw>
<msg timestamp="20140610 12:52:33.900" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:52:33.900" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140610 12:52:33.900" starttime="20140610 12:52:33.290"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140610 12:52:33.903" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:33.904" starttime="20140610 12:52:33.901"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 13</arg>
</arguments>
<msg timestamp="20140610 12:52:33.907" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:33.907" starttime="20140610 12:52:33.905"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140610 12:52:33.921" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140610 12:52:33.921" starttime="20140610 12:52:33.919"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.947" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:33.975" starttime="20140610 12:52:33.944"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:33.976" starttime="20140610 12:52:33.943"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.981" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:33.982" starttime="20140610 12:52:33.979"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:33.983" starttime="20140610 12:52:33.977"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.988" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:33.989" starttime="20140610 12:52:33.985"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:33.989" starttime="20140610 12:52:33.984"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:33.990" starttime="20140610 12:52:33.935"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:52:33.994" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:52:33.994" starttime="20140610 12:52:33.991"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:33.997" starttime="20140610 12:52:33.995"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:34.001" starttime="20140610 12:52:33.998"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:34.004" starttime="20140610 12:52:34.003"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:34.006" starttime="20140610 12:52:34.005"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:34.010" starttime="20140610 12:52:34.007"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:34.014" starttime="20140610 12:52:34.011"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:34.017" starttime="20140610 12:52:34.015"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:52:34.021" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140610 12:52:40.873" level="INFO">12:52:40,856 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
12:52:40,863 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:40.874" starttime="20140610 12:52:34.020"></status>
</kw>
<msg timestamp="20140610 12:52:40.876" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:40.876" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:52:40.875" starttime="20140610 12:52:34.018"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:40.889" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:52:40.889" starttime="20140610 12:52:40.886"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:40.892" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:40.892" starttime="20140610 12:52:40.890"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:40.895" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:40.895" starttime="20140610 12:52:40.893"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:40.901" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:40.902" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:40.902" starttime="20140610 12:52:40.898"></status>
</kw>
<msg timestamp="20140610 12:52:40.904" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:40.904" level="INFO">${return_log_entry} = 2014-06-10 12:52:40,863 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:40.903" starttime="20140610 12:52:40.897"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:40.914" starttime="20140610 12:52:40.912"></status>
</kw>
<msg timestamp="20140610 12:52:40.916" level="INFO">${return_log_entry} = 2014-06-10 12:52:40,863 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:40.915" starttime="20140610 12:52:40.905"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:40.925" starttime="20140610 12:52:40.923"></status>
</kw>
<msg timestamp="20140610 12:52:40.926" level="INFO">${return_log_entry} = 2014-06-10 12:52:40,863 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:40.926" starttime="20140610 12:52:40.917"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:40.938" starttime="20140610 12:52:40.935"></status>
</kw>
<msg timestamp="20140610 12:52:40.939" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:40.938" starttime="20140610 12:52:40.927"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:40.952" starttime="20140610 12:52:40.950"></status>
</kw>
<msg timestamp="20140610 12:52:40.953" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:40.953" starttime="20140610 12:52:40.940"></status>
</kw>
<msg timestamp="20140610 12:52:40.955" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:40.954" starttime="20140610 12:52:40.878"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:40.968" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140610 12:52:40.967" starttime="20140610 12:52:40.965"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:40.971" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:40.970" starttime="20140610 12:52:40.969"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:40.974" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:40.973" starttime="20140610 12:52:40.972"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:40.979" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:40.980" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:40.981" starttime="20140610 12:52:40.977"></status>
</kw>
<msg timestamp="20140610 12:52:40.982" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:40.982" level="INFO">${return_log_entry} = 2014-06-10 12:52:40,856 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:40.982" starttime="20140610 12:52:40.975"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:40.991" starttime="20140610 12:52:40.989"></status>
</kw>
<msg timestamp="20140610 12:52:40.992" level="INFO">${return_log_entry} = 2014-06-10 12:52:40,856 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:40.992" starttime="20140610 12:52:40.983"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:41.002" starttime="20140610 12:52:41.000"></status>
</kw>
<msg timestamp="20140610 12:52:41.004" level="INFO">${return_log_entry} = 2014-06-10 12:52:40,856 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:41.002" starttime="20140610 12:52:40.993"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:41.014" starttime="20140610 12:52:41.011"></status>
</kw>
<msg timestamp="20140610 12:52:41.015" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:41.014" starttime="20140610 12:52:41.005"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:41.028" starttime="20140610 12:52:41.026"></status>
</kw>
<msg timestamp="20140610 12:52:41.029" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:41.029" starttime="20140610 12:52:41.016"></status>
</kw>
<msg timestamp="20140610 12:52:41.031" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:41.030" starttime="20140610 12:52:40.956"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:41.043" starttime="20140610 12:52:41.041"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:41.045" starttime="20140610 12:52:41.044"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:41.047" starttime="20140610 12:52:41.046"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:52:41.059" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:52:41.060" starttime="20140610 12:52:41.056"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:41.060" starttime="20140610 12:52:41.054"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:41.061" starttime="20140610 12:52:41.048"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:41.061" starttime="20140610 12:52:41.033"></status>
</kw>
<msg timestamp="20140610 12:52:41.064" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:52:41.064" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:41.062" starttime="20140610 12:52:33.924"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:41.074" starttime="20140610 12:52:41.072"></status>
</kw>
<msg timestamp="20140610 12:52:41.075" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:41.074" starttime="20140610 12:52:41.065"></status>
</kw>
<msg timestamp="20140610 12:52:41.077" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:41.076" starttime="20140610 12:52:33.909"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140610 12:52:41.080" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:41.080" starttime="20140610 12:52:41.078"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140610 12:52:41.094" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140610 12:52:41.094" starttime="20140610 12:52:41.092"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:41.120" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:41.121" starttime="20140610 12:52:41.117"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:41.121" starttime="20140610 12:52:41.116"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:41.127" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:41.127" starttime="20140610 12:52:41.124"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:41.128" starttime="20140610 12:52:41.122"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:41.133" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:41.134" starttime="20140610 12:52:41.131"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:41.135" starttime="20140610 12:52:41.129"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:41.135" starttime="20140610 12:52:41.108"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:52:41.139" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:52:41.139" starttime="20140610 12:52:41.136"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:41.142" starttime="20140610 12:52:41.140"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:41.146" starttime="20140610 12:52:41.144"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:41.148" starttime="20140610 12:52:41.147"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:41.150" starttime="20140610 12:52:41.149"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:41.153" starttime="20140610 12:52:41.151"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:41.157" starttime="20140610 12:52:41.154"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:41.160" starttime="20140610 12:52:41.158"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:52:41.164" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140610 12:52:48.112" level="INFO">12:52:48,095 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
12:52:48,101 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:48.113" starttime="20140610 12:52:41.163"></status>
</kw>
<msg timestamp="20140610 12:52:48.115" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:48.116" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:52:48.114" starttime="20140610 12:52:41.161"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:48.131" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:52:48.130" starttime="20140610 12:52:48.128"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:48.134" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:48.133" starttime="20140610 12:52:48.132"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:48.137" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:48.136" starttime="20140610 12:52:48.135"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:48.142" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:48.143" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:48.144" starttime="20140610 12:52:48.140"></status>
</kw>
<msg timestamp="20140610 12:52:48.145" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:48.145" level="INFO">${return_log_entry} = 2014-06-10 12:52:48,101 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:48.144" starttime="20140610 12:52:48.138"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.155" starttime="20140610 12:52:48.153"></status>
</kw>
<msg timestamp="20140610 12:52:48.156" level="INFO">${return_log_entry} = 2014-06-10 12:52:48,101 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:48.156" starttime="20140610 12:52:48.146"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.165" starttime="20140610 12:52:48.163"></status>
</kw>
<msg timestamp="20140610 12:52:48.166" level="INFO">${return_log_entry} = 2014-06-10 12:52:48,101 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:48.166" starttime="20140610 12:52:48.157"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.176" starttime="20140610 12:52:48.174"></status>
</kw>
<msg timestamp="20140610 12:52:48.177" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:48.176" starttime="20140610 12:52:48.167"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.190" starttime="20140610 12:52:48.188"></status>
</kw>
<msg timestamp="20140610 12:52:48.191" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:48.191" starttime="20140610 12:52:48.178"></status>
</kw>
<msg timestamp="20140610 12:52:48.192" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:48.192" starttime="20140610 12:52:48.119"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:48.204" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140610 12:52:48.204" starttime="20140610 12:52:48.202"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:48.207" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:48.207" starttime="20140610 12:52:48.205"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:48.210" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:48.210" starttime="20140610 12:52:48.208"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:48.215" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:48.217" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:48.217" starttime="20140610 12:52:48.213"></status>
</kw>
<msg timestamp="20140610 12:52:48.218" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:48.218" level="INFO">${return_log_entry} = 2014-06-10 12:52:48,095 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:48.218" starttime="20140610 12:52:48.211"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.227" starttime="20140610 12:52:48.226"></status>
</kw>
<msg timestamp="20140610 12:52:48.228" level="INFO">${return_log_entry} = 2014-06-10 12:52:48,095 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:48.228" starttime="20140610 12:52:48.219"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.238" starttime="20140610 12:52:48.236"></status>
</kw>
<msg timestamp="20140610 12:52:48.239" level="INFO">${return_log_entry} = 2014-06-10 12:52:48,095 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:48.238" starttime="20140610 12:52:48.229"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.250" starttime="20140610 12:52:48.247"></status>
</kw>
<msg timestamp="20140610 12:52:48.251" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:48.250" starttime="20140610 12:52:48.240"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.264" starttime="20140610 12:52:48.262"></status>
</kw>
<msg timestamp="20140610 12:52:48.265" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:48.265" starttime="20140610 12:52:48.252"></status>
</kw>
<msg timestamp="20140610 12:52:48.266" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:48.266" starttime="20140610 12:52:48.194"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.277" starttime="20140610 12:52:48.275"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.279" starttime="20140610 12:52:48.278"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.281" starttime="20140610 12:52:48.280"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:52:48.292" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:52:48.293" starttime="20140610 12:52:48.290"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:48.294" starttime="20140610 12:52:48.288"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:48.294" starttime="20140610 12:52:48.282"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:48.295" starttime="20140610 12:52:48.268"></status>
</kw>
<msg timestamp="20140610 12:52:48.297" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:52:48.297" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:48.296" starttime="20140610 12:52:41.097"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.307" starttime="20140610 12:52:48.305"></status>
</kw>
<msg timestamp="20140610 12:52:48.308" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:48.308" starttime="20140610 12:52:48.298"></status>
</kw>
<msg timestamp="20140610 12:52:48.310" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:48.309" starttime="20140610 12:52:41.082"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140610 12:52:48.313" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:48.313" starttime="20140610 12:52:48.311"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140610 12:52:48.327" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140610 12:52:48.326" starttime="20140610 12:52:48.325"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:48.352" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:48.353" starttime="20140610 12:52:48.349"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:48.353" starttime="20140610 12:52:48.348"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:48.358" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:48.359" starttime="20140610 12:52:48.356"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:48.360" starttime="20140610 12:52:48.354"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:48.365" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:48.366" starttime="20140610 12:52:48.362"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:48.366" starttime="20140610 12:52:48.361"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:48.367" starttime="20140610 12:52:48.340"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:52:48.371" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:52:48.371" starttime="20140610 12:52:48.367"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.374" starttime="20140610 12:52:48.372"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.378" starttime="20140610 12:52:48.375"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.380" starttime="20140610 12:52:48.378"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.382" starttime="20140610 12:52:48.381"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.385" starttime="20140610 12:52:48.383"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.388" starttime="20140610 12:52:48.386"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:48.392" starttime="20140610 12:52:48.389"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:52:48.396" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140610 12:52:56.060" level="INFO">12:52:56,042 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
12:52:56,049 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:56.061" starttime="20140610 12:52:48.394"></status>
</kw>
<msg timestamp="20140610 12:52:56.063" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:56.064" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:52:56.062" starttime="20140610 12:52:48.393"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:56.077" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:52:56.077" starttime="20140610 12:52:56.074"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:56.080" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:56.080" starttime="20140610 12:52:56.078"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:56.083" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:56.083" starttime="20140610 12:52:56.081"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:56.088" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:56.089" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:56.090" starttime="20140610 12:52:56.086"></status>
</kw>
<msg timestamp="20140610 12:52:56.091" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:56.091" level="INFO">${return_log_entry} = 2014-06-10 12:52:56,049 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:56.090" starttime="20140610 12:52:56.084"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.101" starttime="20140610 12:52:56.099"></status>
</kw>
<msg timestamp="20140610 12:52:56.102" level="INFO">${return_log_entry} = 2014-06-10 12:52:56,049 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:56.102" starttime="20140610 12:52:56.092"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.111" starttime="20140610 12:52:56.109"></status>
</kw>
<msg timestamp="20140610 12:52:56.112" level="INFO">${return_log_entry} = 2014-06-10 12:52:56,049 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:52:56.112" starttime="20140610 12:52:56.103"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.121" starttime="20140610 12:52:56.119"></status>
</kw>
<msg timestamp="20140610 12:52:56.122" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:56.122" starttime="20140610 12:52:56.113"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.136" starttime="20140610 12:52:56.134"></status>
</kw>
<msg timestamp="20140610 12:52:56.137" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:56.136" starttime="20140610 12:52:56.123"></status>
</kw>
<msg timestamp="20140610 12:52:56.138" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:56.137" starttime="20140610 12:52:56.066"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:52:56.150" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140610 12:52:56.150" starttime="20140610 12:52:56.147"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:56.153" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:52:56.153" starttime="20140610 12:52:56.151"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:52:56.156" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:52:56.156" starttime="20140610 12:52:56.154"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:52:56.161" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:52:56.162" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:52:56.163" starttime="20140610 12:52:56.159"></status>
</kw>
<msg timestamp="20140610 12:52:56.164" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:52:56.164" level="INFO">${return_log_entry} = 2014-06-10 12:52:56,042 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:56.163" starttime="20140610 12:52:56.157"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.173" starttime="20140610 12:52:56.171"></status>
</kw>
<msg timestamp="20140610 12:52:56.174" level="INFO">${return_log_entry} = 2014-06-10 12:52:56,042 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:56.174" starttime="20140610 12:52:56.165"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.183" starttime="20140610 12:52:56.181"></status>
</kw>
<msg timestamp="20140610 12:52:56.184" level="INFO">${return_log_entry} = 2014-06-10 12:52:56,042 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:56.184" starttime="20140610 12:52:56.175"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.194" starttime="20140610 12:52:56.191"></status>
</kw>
<msg timestamp="20140610 12:52:56.194" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:56.194" starttime="20140610 12:52:56.185"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.208" starttime="20140610 12:52:56.206"></status>
</kw>
<msg timestamp="20140610 12:52:56.209" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:56.208" starttime="20140610 12:52:56.195"></status>
</kw>
<msg timestamp="20140610 12:52:56.210" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:56.209" starttime="20140610 12:52:56.139"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.220" starttime="20140610 12:52:56.219"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.222" starttime="20140610 12:52:56.221"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.224" starttime="20140610 12:52:56.223"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:52:56.236" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:52:56.237" starttime="20140610 12:52:56.233"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:56.237" starttime="20140610 12:52:56.231"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:56.238" starttime="20140610 12:52:56.225"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:56.238" starttime="20140610 12:52:56.211"></status>
</kw>
<msg timestamp="20140610 12:52:56.241" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:52:56.241" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:52:56.239" starttime="20140610 12:52:48.329"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.251" starttime="20140610 12:52:56.249"></status>
</kw>
<msg timestamp="20140610 12:52:56.252" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:56.251" starttime="20140610 12:52:56.242"></status>
</kw>
<msg timestamp="20140610 12:52:56.253" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:52:56.252" starttime="20140610 12:52:48.315"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140610 12:52:56.256" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:52:56.257" starttime="20140610 12:52:56.254"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140610 12:52:56.270" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140610 12:52:56.270" starttime="20140610 12:52:56.268"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:56.295" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:56.296" starttime="20140610 12:52:56.292"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:56.296" starttime="20140610 12:52:56.291"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:56.301" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:56.302" starttime="20140610 12:52:56.299"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:56.303" starttime="20140610 12:52:56.297"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140610 12:52:56.308" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140610 12:52:56.309" starttime="20140610 12:52:56.305"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:56.309" starttime="20140610 12:52:56.304"></status>
</kw>
<status status="PASS" endtime="20140610 12:52:56.310" starttime="20140610 12:52:56.283"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140610 12:52:56.313" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140610 12:52:56.314" starttime="20140610 12:52:56.310"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.317" starttime="20140610 12:52:56.315"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.320" starttime="20140610 12:52:56.318"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.322" starttime="20140610 12:52:56.321"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.324" starttime="20140610 12:52:56.323"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.328" starttime="20140610 12:52:56.325"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.331" starttime="20140610 12:52:56.329"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:52:56.334" starttime="20140610 12:52:56.332"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140610 12:52:56.338" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12891', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12890', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12889', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12896', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12895', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12894', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12887', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12887', u'LowLevelOps.setBalance.input.accountId=12888', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=12892', u'crceHost=10.105.140.125', u'crcePort=8080', u'crcecWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=12892', u'LowLevelOps.setBalance.input.accountId=12893', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140610 12:53:02.781" level="INFO">12:53:02,767 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
12:53:02,773 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:53:02.782" starttime="20140610 12:52:56.337"></status>
</kw>
<msg timestamp="20140610 12:53:02.784" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:53:02.785" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140610 12:53:02.783" starttime="20140610 12:52:56.335"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:53:02.797" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140610 12:53:02.796" starttime="20140610 12:53:02.794"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:53:02.800" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:53:02.800" starttime="20140610 12:53:02.798"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:53:02.803" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:53:02.803" starttime="20140610 12:53:02.801"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:53:02.808" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:53:02.809" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:53:02.810" starttime="20140610 12:53:02.806"></status>
</kw>
<msg timestamp="20140610 12:53:02.811" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:53:02.811" level="INFO">${return_log_entry} = 2014-06-10 12:53:02,773 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:53:02.810" starttime="20140610 12:53:02.804"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:53:02.820" starttime="20140610 12:53:02.818"></status>
</kw>
<msg timestamp="20140610 12:53:02.821" level="INFO">${return_log_entry} = 2014-06-10 12:53:02,773 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:53:02.820" starttime="20140610 12:53:02.812"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:53:02.830" starttime="20140610 12:53:02.828"></status>
</kw>
<msg timestamp="20140610 12:53:02.831" level="INFO">${return_log_entry} = 2014-06-10 12:53:02,773 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140610 12:53:02.831" starttime="20140610 12:53:02.822"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:53:02.841" starttime="20140610 12:53:02.838"></status>
</kw>
<msg timestamp="20140610 12:53:02.842" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:53:02.841" starttime="20140610 12:53:02.832"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:53:02.855" starttime="20140610 12:53:02.853"></status>
</kw>
<msg timestamp="20140610 12:53:02.856" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:53:02.855" starttime="20140610 12:53:02.843"></status>
</kw>
<msg timestamp="20140610 12:53:02.857" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:53:02.857" starttime="20140610 12:53:02.786"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140610 12:53:02.869" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140610 12:53:02.869" starttime="20140610 12:53:02.866"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:53:02.872" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140610 12:53:02.872" starttime="20140610 12:53:02.870"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140610 12:53:02.875" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140610 12:53:02.875" starttime="20140610 12:53:02.873"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140610 12:53:02.880" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140610 12:53:02.882" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140610 12:53:02.882" starttime="20140610 12:53:02.878"></status>
</kw>
<msg timestamp="20140610 12:53:02.883" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140610 12:53:02.884" level="INFO">${return_log_entry} = 2014-06-10 12:53:02,767 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:53:02.883" starttime="20140610 12:53:02.876"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:53:02.892" starttime="20140610 12:53:02.890"></status>
</kw>
<msg timestamp="20140610 12:53:02.893" level="INFO">${return_log_entry} = 2014-06-10 12:53:02,767 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:53:02.893" starttime="20140610 12:53:02.885"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:53:02.903" starttime="20140610 12:53:02.901"></status>
</kw>
<msg timestamp="20140610 12:53:02.903" level="INFO">${return_log_entry} = 2014-06-10 12:53:02,767 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:53:02.903" starttime="20140610 12:53:02.895"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:53:02.913" starttime="20140610 12:53:02.911"></status>
</kw>
<msg timestamp="20140610 12:53:02.914" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:53:02.914" starttime="20140610 12:53:02.905"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:53:02.928" starttime="20140610 12:53:02.926"></status>
</kw>
<msg timestamp="20140610 12:53:02.929" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:53:02.929" starttime="20140610 12:53:02.916"></status>
</kw>
<msg timestamp="20140610 12:53:02.930" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:53:02.930" starttime="20140610 12:53:02.858"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:53:02.941" starttime="20140610 12:53:02.940"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:53:02.943" starttime="20140610 12:53:02.942"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:53:02.945" starttime="20140610 12:53:02.944"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140610 12:53:02.956" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MOC/IN_PP_MOC_006-PrepaidMOC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140610 12:53:02.957" starttime="20140610 12:53:02.954"></status>
</kw>
<status status="PASS" endtime="20140610 12:53:02.958" starttime="20140610 12:53:02.952"></status>
</kw>
<status status="PASS" endtime="20140610 12:53:02.958" starttime="20140610 12:53:02.946"></status>
</kw>
<status status="PASS" endtime="20140610 12:53:02.959" starttime="20140610 12:53:02.932"></status>
</kw>
<msg timestamp="20140610 12:53:02.961" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140610 12:53:02.961" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140610 12:53:02.960" starttime="20140610 12:52:56.272"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140610 12:53:02.971" starttime="20140610 12:53:02.969"></status>
</kw>
<msg timestamp="20140610 12:53:02.972" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:53:02.972" starttime="20140610 12:53:02.962"></status>
</kw>
<msg timestamp="20140610 12:53:02.974" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140610 12:53:02.973" starttime="20140610 12:52:56.259"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140610 12:53:02.977" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140610 12:53:02.977" starttime="20140610 12:53:02.975"></status>
</kw>
<status status="PASS" endtime="20140610 12:53:02.978" starttime="20140610 12:52:29.322"></status>
</kw>
<status status="PASS" endtime="20140610 12:53:02.979" starttime="20140610 12:52:29.265"></status>
</kw>
<doc>This is an end-to-end testing implementation of the IN_PP_MOC_006 - Prepaid MOC - Long Duration TC
ATTENTION: This is an exact copy of IN_PP_MOC_005-PrepaidMOC-ShortDuration-robot-suite.txt except that the slice amount was raised from 1 to 3 (see call_duration_millis in "Run Voice Call")
Although it would be more efficient (from point of maintainability) to combine both TCs in one Robot suite file
this redundant duplication seemed acceptable to reach the goal of "Having each Excel TC in a separate file titeled with the TC name"
---------------------------------------------------------------
Run Prepaid MOC Short Duration

===============================================================================
Run with arguments:
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/MEX-resource.txt
============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20140610 12:53:02.980" starttime="20140610 12:47:37.401"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" info="" doc="" combined="" fail="0" links="">End2EndTest</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">experimental</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">TNZ_supported</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">walter.heincz</stat>
</tag>
<suite>
<stat pass="1" id="s1" fail="0" name="IN PP MOC 006-PrepaidMOC-LongDuration-robot-suite">IN PP MOC 006-PrepaidMOC-LongDuration-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
