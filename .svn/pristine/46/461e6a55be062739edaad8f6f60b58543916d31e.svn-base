<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.7.6 (Jython 2.5.3 on java1.7.0_45)" generated="20140618 14:26:01.724">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/IN_PP_MTC_001-PrepaidMTC-ShortDuration-robot-suite.txt" id="s1" name="IN PP MTC 001-PrepaidMTC-ShortDuration-robot-suite">
<kw type="setup" timeout="" name="suite-global-keyword-resource.Setup Suite">
<doc>This is the suite setup procedure that is called from "Suite Setup" keyword</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${CRM_PORTAL_LOGIN_URL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>http://${CRM HOST}:${CRM PORTAL PORT}/${CRM PORTAL LOGIN PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:08.600" level="INFO">${CRM_PORTAL_LOGIN_URL} = http://10.105.140.127:1084/evoweb/web/crm/257_EN</msg>
<status status="PASS" endtime="20140618 14:26:08.599" starttime="20140618 14:26:08.591"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
</arguments>
<msg timestamp="20140618 14:26:08.607" level="INFO">${CRM_PORTAL_LOGIN_URL} = http://10.105.140.127:1084/evoweb/web/crm/257_EN</msg>
<status status="PASS" endtime="20140618 14:26:08.608" starttime="20140618 14:26:08.603"></status>
</kw>
<kw type="kw" timeout="" name="${CRM_PORTAL_SUBSCRIBER_INPUT_URL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>http://${CRM HOST}:${CRM PORTAL PORT}/${CRM PORTAL DASHBOARD PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:08.618" level="INFO">${CRM_PORTAL_SUBSCRIBER_INPUT_URL} = http://10.105.140.127:1084/evoweb/web/crm/393_EN.htm</msg>
<status status="PASS" endtime="20140618 14:26:08.617" starttime="20140618 14:26:08.611"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CRM_PORTAL_SUBSCRIBER_INPUT_URL}</arg>
</arguments>
<msg timestamp="20140618 14:26:08.625" level="INFO">${CRM_PORTAL_SUBSCRIBER_INPUT_URL} = http://10.105.140.127:1084/evoweb/web/crm/393_EN.htm</msg>
<status status="PASS" endtime="20140618 14:26:08.626" starttime="20140618 14:26:08.621"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Verify that CRM is up and running ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:08.631" starttime="20140618 14:26:08.628"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Init Browser ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:08.636" starttime="20140618 14:26:08.634"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Open Browser</arg>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>firefox</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:08.642" starttime="20140618 14:26:08.639"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>CRM Portal Screenshot</arg>
<arg>AfterBrowserInit</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:08.647" starttime="20140618 14:26:08.644"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Reset Phones ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:08.653" starttime="20140618 14:26:08.650"></status>
</kw>
<kw type="kw" timeout="" name="suite-global-keyword-resource.Reset All Phones">
<doc>This helper for the TCs and Suite Setup script ensures that</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:26:08.720" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972240</msg>
<status status="PASS" endtime="20140618 14:26:08.721" starttime="20140618 14:26:08.713"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:08.764" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:08.766" starttime="20140618 14:26:08.757"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:08.768" starttime="20140618 14:26:08.752"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:08.781" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:08.784" starttime="20140618 14:26:08.775"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:08.785" starttime="20140618 14:26:08.770"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:08.799" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:08.803" starttime="20140618 14:26:08.793"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:08.805" starttime="20140618 14:26:08.788"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:08.806" starttime="20140618 14:26:08.728"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:09.683" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:26:09.685" starttime="20140618 14:26:08.809"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:09.694" starttime="20140618 14:26:09.690"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:09.700" starttime="20140618 14:26:09.696"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:09.704" starttime="20140618 14:26:09.702"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:09.709" starttime="20140618 14:26:09.706"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:09.714" starttime="20140618 14:26:09.711"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:26:09.722" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140618 14:26:17.812" level="INFO">14:26:10,161 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/./ext] for external libraries
14:26:10,164 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
14:26:12,520 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/android-remoting/robot_ars_bridge-soapui-project.xml]
14:26:14,303 INFO  [SoapUITestCaseRunner] Setting project property [arsHost] to [10.189.11.226]
14:26:14,303 INFO  [SoapUITestCaseRunner] Setting project property [arsPort] to [8080]
14:26:14,303 INFO  [SoapUITestCaseRunner] Setting project property [LowLevelOps.Voice.release.input.deviceImsi] to [232033013972240]
14:26:14,326 INFO  [SoapUITestCaseRunner] Running soapUI tests in project [Robotframework_ARS-Bridge]
14:26:14,326 INFO  [SoapUITestCaseRunner] Running TestCase [Voice.release]
14:26:14,343 INFO  [SoapUITestCaseRunner] Running soapUI testcase [Voice.release]
14:26:14,361 INFO  [SoapUITestCaseRunner] running step [00_ARS_availability_test]
14:26:15,095 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:26:15,096 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /androidremoting/system HTTP/1.1
14:26:15,115 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:26:15,131 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:26:15,504 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:26:15,504 INFO  [SoapUITestCaseRunner] running step [cancel_on_failed_step_0]
14:26:16,673 INFO  [SoapUITestCaseRunner] running step [01_release]
14:26:16,676 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:26:16,678 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:26:16,678 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /androidremoting/voice HTTP/1.1
14:26:16,683 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:26:16,683 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:26:16,695 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:26:16,695 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:26:16,696 INFO  [SoapUITestCaseRunner] Assertion [resultCode = OK] has status FAILED
14:26:16,696 ERROR [SoapUITestCaseRunner] ASSERTION FAILED -&gt; Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response
14:26:16,696 ERROR [SoapUITestCaseRunner] 01_release failed, exporting to [/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt]
14:26:16,702 INFO  [SoapUITestCaseRunner] running step [goto_finish_on_successfull_step_1]
14:26:16,831 INFO  [SoapUITestCaseRunner] running step [transfer_failedReason]
14:26:17,579 INFO  [SoapUITestCaseRunner] running step [cancel]
14:26:17,797 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION
14:26:17,800 ERROR [SoapUITestCaseRunner] cancel failed, exporting to [/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt]
14:26:17,801 INFO  [SoapUITestCaseRunner] Finished running soapUI testcase [Voice.release], time taken: 3407ms, status: FAILED
14:26:17,801 INFO  [SoapUITestCaseRunner] TestCase [Voice.release] finished with status [FAILED] in 3407ms</msg>
<msg timestamp="20140618 14:26:17.837" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 21
Size: 528
Timestamp: Wed Jun 18 14:26:16 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972240&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:26:17.840" starttime="20140618 14:26:09.720"></status>
</kw>
<msg timestamp="20140618 14:26:17.845" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:26:17.846" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 21
Size: 528
Timestamp: Wed Jun 18 14:26:16 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:26:17.843" starttime="20140618 14:26:09.717"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:17.977" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:26:17.976" starttime="20140618 14:26:17.969"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:17.987" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:17.986" starttime="20140618 14:26:17.981"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:17.996" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:17.995" starttime="20140618 14:26:17.990"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:18.015" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:18.029" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:18.030" starttime="20140618 14:26:18.007"></status>
</kw>
<msg timestamp="20140618 14:26:18.033" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:18.035" level="INFO">${return_log_entry} = 2014-06-18 14:26:17,797 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:18.032" starttime="20140618 14:26:18.000"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:18.080" starttime="20140618 14:26:18.075"></status>
</kw>
<msg timestamp="20140618 14:26:18.083" level="INFO">${return_log_entry} = 2014-06-18 14:26:17,797 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:18.082" starttime="20140618 14:26:18.038"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:18.109" starttime="20140618 14:26:18.104"></status>
</kw>
<msg timestamp="20140618 14:26:18.112" level="INFO">${return_log_entry} = 2014-06-18 14:26:17,797 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:18.110" starttime="20140618 14:26:18.087"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:18.138" starttime="20140618 14:26:18.131"></status>
</kw>
<msg timestamp="20140618 14:26:18.141" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:18.140" starttime="20140618 14:26:18.115"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:18.169" starttime="20140618 14:26:18.164"></status>
</kw>
<msg timestamp="20140618 14:26:18.171" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:18.170" starttime="20140618 14:26:18.144"></status>
</kw>
<msg timestamp="20140618 14:26:18.175" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:18.173" starttime="20140618 14:26:17.850"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:18.202" starttime="20140618 14:26:18.199"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:18.207" starttime="20140618 14:26:18.204"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:18.211" starttime="20140618 14:26:18.208"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:26:18.237" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:18.239" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:18.240" starttime="20140618 14:26:18.228"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:18.241" starttime="20140618 14:26:18.224"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:18.242" starttime="20140618 14:26:18.213"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:18.243" starttime="20140618 14:26:18.179"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:18.245" starttime="20140618 14:26:08.683"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:26:18.285" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140618 14:26:18.286" starttime="20140618 14:26:18.278"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:18.322" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:18.323" starttime="20140618 14:26:18.317"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:18.324" starttime="20140618 14:26:18.312"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:18.336" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:18.337" starttime="20140618 14:26:18.332"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:18.338" starttime="20140618 14:26:18.327"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:18.348" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:18.349" starttime="20140618 14:26:18.343"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:18.350" starttime="20140618 14:26:18.340"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:18.351" starttime="20140618 14:26:18.293"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:18.358" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:26:18.359" starttime="20140618 14:26:18.352"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:18.365" starttime="20140618 14:26:18.361"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:18.370" starttime="20140618 14:26:18.367"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:18.374" starttime="20140618 14:26:18.372"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:18.379" starttime="20140618 14:26:18.376"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:18.384" starttime="20140618 14:26:18.380"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:26:18.391" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140618 14:26:18.969" level="INFO">14:26:18,962 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140618 14:26:18.987" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 19
Size: 528
Timestamp: Wed Jun 18 14:26:18 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972239&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:26:18.990" starttime="20140618 14:26:18.389"></status>
</kw>
<msg timestamp="20140618 14:26:18.991" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:26:18.992" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 19
Size: 528
Timestamp: Wed Jun 18 14:26:18 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:26:18.991" starttime="20140618 14:26:18.386"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:19.021" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:26:19.019" starttime="20140618 14:26:19.013"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:19.030" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:19.029" starttime="20140618 14:26:19.024"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:19.040" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:19.038" starttime="20140618 14:26:19.033"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:19.056" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:19.059" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:19.060" starttime="20140618 14:26:19.049"></status>
</kw>
<msg timestamp="20140618 14:26:19.063" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:19.064" level="INFO">${return_log_entry} = 2014-06-18 14:26:18,962 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:19.062" starttime="20140618 14:26:19.043"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:19.087" starttime="20140618 14:26:19.082"></status>
</kw>
<msg timestamp="20140618 14:26:19.089" level="INFO">${return_log_entry} = 2014-06-18 14:26:18,962 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:19.088" starttime="20140618 14:26:19.068"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:19.113" starttime="20140618 14:26:19.108"></status>
</kw>
<msg timestamp="20140618 14:26:19.116" level="INFO">${return_log_entry} = 2014-06-18 14:26:18,962 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:19.115" starttime="20140618 14:26:19.092"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:19.143" starttime="20140618 14:26:19.136"></status>
</kw>
<msg timestamp="20140618 14:26:19.145" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:19.144" starttime="20140618 14:26:19.120"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:19.180" starttime="20140618 14:26:19.175"></status>
</kw>
<msg timestamp="20140618 14:26:19.183" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:19.182" starttime="20140618 14:26:19.149"></status>
</kw>
<msg timestamp="20140618 14:26:19.188" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:19.186" starttime="20140618 14:26:18.995"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:19.222" starttime="20140618 14:26:19.217"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:19.228" starttime="20140618 14:26:19.224"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:19.235" starttime="20140618 14:26:19.231"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:26:19.267" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:19.270" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:19.272" starttime="20140618 14:26:19.258"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:19.274" starttime="20140618 14:26:19.253"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:19.276" starttime="20140618 14:26:19.238"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:19.277" starttime="20140618 14:26:19.192"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:19.280" starttime="20140618 14:26:18.249"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:26:19.323" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:26:19.325" starttime="20140618 14:26:19.317"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:19.366" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:19.368" starttime="20140618 14:26:19.359"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:19.369" starttime="20140618 14:26:19.354"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:19.383" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:19.384" starttime="20140618 14:26:19.377"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:19.385" starttime="20140618 14:26:19.372"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:19.395" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:19.396" starttime="20140618 14:26:19.391"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:19.397" starttime="20140618 14:26:19.387"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:19.398" starttime="20140618 14:26:19.332"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:19.405" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:26:19.406" starttime="20140618 14:26:19.400"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:19.412" starttime="20140618 14:26:19.408"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:19.417" starttime="20140618 14:26:19.414"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:19.421" starttime="20140618 14:26:19.419"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:19.426" starttime="20140618 14:26:19.423"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:19.431" starttime="20140618 14:26:19.427"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:26:19.438" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:26:20.075" level="INFO">14:26:20,063 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140618 14:26:20.104" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 15
Size: 528
Timestamp: Wed Jun 18 14:26:19 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:26:20.109" starttime="20140618 14:26:19.436"></status>
</kw>
<msg timestamp="20140618 14:26:20.116" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:26:20.118" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 15
Size: 528
Timestamp: Wed Jun 18 14:26:19 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:26:20.113" starttime="20140618 14:26:19.433"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:20.154" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:26:20.153" starttime="20140618 14:26:20.146"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:20.163" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:20.161" starttime="20140618 14:26:20.157"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:20.171" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:20.170" starttime="20140618 14:26:20.165"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:20.187" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:20.189" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:20.191" starttime="20140618 14:26:20.180"></status>
</kw>
<msg timestamp="20140618 14:26:20.193" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:20.194" level="INFO">${return_log_entry} = 2014-06-18 14:26:20,063 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:20.192" starttime="20140618 14:26:20.174"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:20.218" starttime="20140618 14:26:20.213"></status>
</kw>
<msg timestamp="20140618 14:26:20.221" level="INFO">${return_log_entry} = 2014-06-18 14:26:20,063 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:20.220" starttime="20140618 14:26:20.197"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:20.243" starttime="20140618 14:26:20.238"></status>
</kw>
<msg timestamp="20140618 14:26:20.246" level="INFO">${return_log_entry} = 2014-06-18 14:26:20,063 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:20.245" starttime="20140618 14:26:20.224"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:20.270" starttime="20140618 14:26:20.263"></status>
</kw>
<msg timestamp="20140618 14:26:20.272" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:20.271" starttime="20140618 14:26:20.249"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:20.304" starttime="20140618 14:26:20.299"></status>
</kw>
<msg timestamp="20140618 14:26:20.307" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:20.306" starttime="20140618 14:26:20.275"></status>
</kw>
<msg timestamp="20140618 14:26:20.310" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:20.309" starttime="20140618 14:26:20.122"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:20.339" starttime="20140618 14:26:20.335"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:20.346" starttime="20140618 14:26:20.341"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:20.352" starttime="20140618 14:26:20.348"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:26:20.381" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:20.383" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:20.386" starttime="20140618 14:26:20.373"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:20.388" starttime="20140618 14:26:20.368"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:20.389" starttime="20140618 14:26:20.354"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:20.391" starttime="20140618 14:26:20.314"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:20.393" starttime="20140618 14:26:19.287"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:26:20.431" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:26:20.432" starttime="20140618 14:26:20.424"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:20.471" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:20.473" starttime="20140618 14:26:20.464"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:20.475" starttime="20140618 14:26:20.458"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:20.489" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:20.491" starttime="20140618 14:26:20.482"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:20.493" starttime="20140618 14:26:20.478"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:20.507" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:20.509" starttime="20140618 14:26:20.500"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:20.511" starttime="20140618 14:26:20.496"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:20.512" starttime="20140618 14:26:20.439"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:20.523" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:26:20.524" starttime="20140618 14:26:20.515"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:20.533" starttime="20140618 14:26:20.527"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:20.542" starttime="20140618 14:26:20.536"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:20.548" starttime="20140618 14:26:20.544"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:20.555" starttime="20140618 14:26:20.551"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:20.563" starttime="20140618 14:26:20.557"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:26:20.575" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:26:21.215" level="INFO">14:26:21,207 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140618 14:26:21.235" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 26
Size: 528
Timestamp: Wed Jun 18 14:26:20 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:26:21.238" starttime="20140618 14:26:20.570"></status>
</kw>
<msg timestamp="20140618 14:26:21.241" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:26:21.242" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 26
Size: 528
Timestamp: Wed Jun 18 14:26:20 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:26:21.240" starttime="20140618 14:26:20.566"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:21.264" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:26:21.263" starttime="20140618 14:26:21.260"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:21.269" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:21.269" starttime="20140618 14:26:21.266"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:21.275" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:21.274" starttime="20140618 14:26:21.271"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:21.284" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:21.286" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:21.287" starttime="20140618 14:26:21.280"></status>
</kw>
<msg timestamp="20140618 14:26:21.288" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:21.289" level="INFO">${return_log_entry} = 2014-06-18 14:26:21,207 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:21.288" starttime="20140618 14:26:21.277"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:21.304" starttime="20140618 14:26:21.301"></status>
</kw>
<msg timestamp="20140618 14:26:21.306" level="INFO">${return_log_entry} = 2014-06-18 14:26:21,207 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:21.305" starttime="20140618 14:26:21.291"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:21.322" starttime="20140618 14:26:21.318"></status>
</kw>
<msg timestamp="20140618 14:26:21.323" level="INFO">${return_log_entry} = 2014-06-18 14:26:21,207 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:21.323" starttime="20140618 14:26:21.308"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:21.340" starttime="20140618 14:26:21.336"></status>
</kw>
<msg timestamp="20140618 14:26:21.342" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:21.341" starttime="20140618 14:26:21.325"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:21.364" starttime="20140618 14:26:21.360"></status>
</kw>
<msg timestamp="20140618 14:26:21.365" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:21.365" starttime="20140618 14:26:21.344"></status>
</kw>
<msg timestamp="20140618 14:26:21.368" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:26:21.367" starttime="20140618 14:26:21.245"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:21.387" starttime="20140618 14:26:21.385"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:21.391" starttime="20140618 14:26:21.389"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:21.395" starttime="20140618 14:26:21.393"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:26:21.414" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:21.416" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:21.417" starttime="20140618 14:26:21.409"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:21.418" starttime="20140618 14:26:21.406"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:21.419" starttime="20140618 14:26:21.397"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:21.420" starttime="20140618 14:26:21.370"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:21.421" starttime="20140618 14:26:20.400"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:26:21.447" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972240</msg>
<status status="PASS" endtime="20140618 14:26:21.448" starttime="20140618 14:26:21.443"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:21.473" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:21.474" starttime="20140618 14:26:21.469"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:21.475" starttime="20140618 14:26:21.465"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:21.484" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:21.485" starttime="20140618 14:26:21.480"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:21.486" starttime="20140618 14:26:21.477"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:21.495" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:21.496" starttime="20140618 14:26:21.491"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:21.497" starttime="20140618 14:26:21.488"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:21.498" starttime="20140618 14:26:21.452"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:21.504" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:26:21.505" starttime="20140618 14:26:21.499"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:21.513" starttime="20140618 14:26:21.507"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:21.522" starttime="20140618 14:26:21.516"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:21.528" starttime="20140618 14:26:21.524"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:21.534" starttime="20140618 14:26:21.530"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:21.543" starttime="20140618 14:26:21.537"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:26:21.640" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140618 14:26:22.238" level="INFO">14:26:22,178 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:26:22,179 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:22.240" starttime="20140618 14:26:21.634"></status>
</kw>
<msg timestamp="20140618 14:26:22.243" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:22.244" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:26:22.242" starttime="20140618 14:26:21.545"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:22.266" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:26:22.265" starttime="20140618 14:26:22.262"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:22.271" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:22.270" starttime="20140618 14:26:22.268"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:22.276" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:22.276" starttime="20140618 14:26:22.273"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:22.286" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:22.293" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:22.294" starttime="20140618 14:26:22.281"></status>
</kw>
<msg timestamp="20140618 14:26:22.296" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:22.297" level="INFO">${return_log_entry} = 2014-06-18 14:26:22,179 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:22.295" starttime="20140618 14:26:22.278"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.312" starttime="20140618 14:26:22.309"></status>
</kw>
<msg timestamp="20140618 14:26:22.314" level="INFO">${return_log_entry} = 2014-06-18 14:26:22,179 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:22.313" starttime="20140618 14:26:22.298"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.331" starttime="20140618 14:26:22.326"></status>
</kw>
<msg timestamp="20140618 14:26:22.334" level="INFO">${return_log_entry} = 2014-06-18 14:26:22,179 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:22.333" starttime="20140618 14:26:22.316"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.357" starttime="20140618 14:26:22.351"></status>
</kw>
<msg timestamp="20140618 14:26:22.360" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:22.359" starttime="20140618 14:26:22.337"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.382" starttime="20140618 14:26:22.379"></status>
</kw>
<msg timestamp="20140618 14:26:22.384" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:22.383" starttime="20140618 14:26:22.362"></status>
</kw>
<msg timestamp="20140618 14:26:22.386" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:22.386" starttime="20140618 14:26:22.248"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:22.407" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:26:22.407" starttime="20140618 14:26:22.403"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:22.414" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:22.413" starttime="20140618 14:26:22.409"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:22.419" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:22.418" starttime="20140618 14:26:22.415"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:22.428" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:22.436" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:22.437" starttime="20140618 14:26:22.424"></status>
</kw>
<msg timestamp="20140618 14:26:22.438" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:22.439" level="INFO">${return_log_entry} = 2014-06-18 14:26:22,178 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:26:22.438" starttime="20140618 14:26:22.421"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.456" starttime="20140618 14:26:22.451"></status>
</kw>
<msg timestamp="20140618 14:26:22.459" level="INFO">${return_log_entry} = 2014-06-18 14:26:22,178 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:26:22.458" starttime="20140618 14:26:22.441"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.481" starttime="20140618 14:26:22.476"></status>
</kw>
<msg timestamp="20140618 14:26:22.483" level="INFO">${return_log_entry} = 2014-06-18 14:26:22,178 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:26:22.482" starttime="20140618 14:26:22.462"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.505" starttime="20140618 14:26:22.500"></status>
</kw>
<msg timestamp="20140618 14:26:22.508" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:22.507" starttime="20140618 14:26:22.486"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.530" starttime="20140618 14:26:22.527"></status>
</kw>
<msg timestamp="20140618 14:26:22.531" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:22.531" starttime="20140618 14:26:22.510"></status>
</kw>
<msg timestamp="20140618 14:26:22.534" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:22.533" starttime="20140618 14:26:22.389"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.557" starttime="20140618 14:26:22.553"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.563" starttime="20140618 14:26:22.559"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.569" starttime="20140618 14:26:22.565"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:26:22.597" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:26:22.599" starttime="20140618 14:26:22.587"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:22.599" starttime="20140618 14:26:22.584"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:22.600" starttime="20140618 14:26:22.571"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:22.601" starttime="20140618 14:26:22.536"></status>
</kw>
<msg timestamp="20140618 14:26:22.605" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:26:22.605" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:22.603" starttime="20140618 14:26:21.426"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140618 14:26:22.610" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:26:22.611" starttime="20140618 14:26:22.607"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 1</arg>
</arguments>
<msg timestamp="20140618 14:26:22.616" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:26:22.617" starttime="20140618 14:26:22.613"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:26:22.643" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140618 14:26:22.643" starttime="20140618 14:26:22.638"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:22.676" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:22.678" starttime="20140618 14:26:22.670"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:22.680" starttime="20140618 14:26:22.666"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:22.692" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:22.694" starttime="20140618 14:26:22.686"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:22.695" starttime="20140618 14:26:22.682"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:22.707" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:22.709" starttime="20140618 14:26:22.702"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:22.711" starttime="20140618 14:26:22.698"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:22.712" starttime="20140618 14:26:22.647"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:22.720" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:26:22.720" starttime="20140618 14:26:22.714"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.726" starttime="20140618 14:26:22.722"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.731" starttime="20140618 14:26:22.728"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.735" starttime="20140618 14:26:22.733"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.739" starttime="20140618 14:26:22.737"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:22.744" starttime="20140618 14:26:22.740"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:26:22.750" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140618 14:26:23.183" level="INFO">14:26:23,138 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:26:23,139 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:23.184" starttime="20140618 14:26:22.748"></status>
</kw>
<msg timestamp="20140618 14:26:23.188" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:23.189" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:26:23.186" starttime="20140618 14:26:22.746"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:23.214" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:26:23.213" starttime="20140618 14:26:23.207"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:23.222" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:23.221" starttime="20140618 14:26:23.216"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:23.229" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:23.228" starttime="20140618 14:26:23.224"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:23.243" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:23.245" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:23.247" starttime="20140618 14:26:23.237"></status>
</kw>
<msg timestamp="20140618 14:26:23.249" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:23.250" level="INFO">${return_log_entry} = 2014-06-18 14:26:23,139 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:23.248" starttime="20140618 14:26:23.232"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.355" starttime="20140618 14:26:23.350"></status>
</kw>
<msg timestamp="20140618 14:26:23.357" level="INFO">${return_log_entry} = 2014-06-18 14:26:23,139 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:23.356" starttime="20140618 14:26:23.251"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.372" starttime="20140618 14:26:23.368"></status>
</kw>
<msg timestamp="20140618 14:26:23.375" level="INFO">${return_log_entry} = 2014-06-18 14:26:23,139 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:23.373" starttime="20140618 14:26:23.358"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.398" starttime="20140618 14:26:23.392"></status>
</kw>
<msg timestamp="20140618 14:26:23.400" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:23.399" starttime="20140618 14:26:23.377"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.421" starttime="20140618 14:26:23.418"></status>
</kw>
<msg timestamp="20140618 14:26:23.423" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:23.422" starttime="20140618 14:26:23.402"></status>
</kw>
<msg timestamp="20140618 14:26:23.425" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:23.424" starttime="20140618 14:26:23.191"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:23.445" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:26:23.444" starttime="20140618 14:26:23.440"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:23.450" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:23.449" starttime="20140618 14:26:23.446"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:23.456" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:23.455" starttime="20140618 14:26:23.452"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:23.465" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:23.466" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:23.467" starttime="20140618 14:26:23.461"></status>
</kw>
<msg timestamp="20140618 14:26:23.468" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:23.469" level="INFO">${return_log_entry} = 2014-06-18 14:26:23,138 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:26:23.468" starttime="20140618 14:26:23.457"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.483" starttime="20140618 14:26:23.479"></status>
</kw>
<msg timestamp="20140618 14:26:23.484" level="INFO">${return_log_entry} = 2014-06-18 14:26:23,138 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:26:23.483" starttime="20140618 14:26:23.471"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.501" starttime="20140618 14:26:23.496"></status>
</kw>
<msg timestamp="20140618 14:26:23.503" level="INFO">${return_log_entry} = 2014-06-18 14:26:23,138 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:26:23.502" starttime="20140618 14:26:23.486"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.526" starttime="20140618 14:26:23.520"></status>
</kw>
<msg timestamp="20140618 14:26:23.528" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:23.527" starttime="20140618 14:26:23.506"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.555" starttime="20140618 14:26:23.552"></status>
</kw>
<msg timestamp="20140618 14:26:23.556" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:23.555" starttime="20140618 14:26:23.531"></status>
</kw>
<msg timestamp="20140618 14:26:23.558" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:23.558" starttime="20140618 14:26:23.428"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.579" starttime="20140618 14:26:23.576"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.583" starttime="20140618 14:26:23.580"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.587" starttime="20140618 14:26:23.584"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:26:23.604" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:26:23.605" starttime="20140618 14:26:23.600"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:23.606" starttime="20140618 14:26:23.597"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:23.607" starttime="20140618 14:26:23.588"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:23.608" starttime="20140618 14:26:23.560"></status>
</kw>
<msg timestamp="20140618 14:26:23.611" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:26:23.612" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:23.609" starttime="20140618 14:26:22.621"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140618 14:26:23.617" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:26:23.617" starttime="20140618 14:26:23.613"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 2</arg>
</arguments>
<msg timestamp="20140618 14:26:23.622" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:26:23.623" starttime="20140618 14:26:23.619"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:26:23.645" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:26:23.646" starttime="20140618 14:26:23.641"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:23.672" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:23.674" starttime="20140618 14:26:23.666"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:23.675" starttime="20140618 14:26:23.662"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:23.688" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:23.690" starttime="20140618 14:26:23.682"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:23.692" starttime="20140618 14:26:23.678"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:23.705" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:23.706" starttime="20140618 14:26:23.699"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:23.708" starttime="20140618 14:26:23.694"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:23.709" starttime="20140618 14:26:23.651"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:23.719" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:26:23.720" starttime="20140618 14:26:23.711"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.727" starttime="20140618 14:26:23.722"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.735" starttime="20140618 14:26:23.730"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.740" starttime="20140618 14:26:23.737"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.744" starttime="20140618 14:26:23.741"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:23.752" starttime="20140618 14:26:23.746"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:26:23.762" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:26:24.354" level="INFO">14:26:24,290 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:26:24,292 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:24.356" starttime="20140618 14:26:23.758"></status>
</kw>
<msg timestamp="20140618 14:26:24.361" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:24.362" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:26:24.359" starttime="20140618 14:26:23.754"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:24.391" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:26:24.390" starttime="20140618 14:26:24.384"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:24.400" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:24.398" starttime="20140618 14:26:24.394"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:24.407" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:24.406" starttime="20140618 14:26:24.402"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:24.420" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:24.423" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:24.424" starttime="20140618 14:26:24.414"></status>
</kw>
<msg timestamp="20140618 14:26:24.427" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:24.428" level="INFO">${return_log_entry} = 2014-06-18 14:26:24,292 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:24.426" starttime="20140618 14:26:24.410"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:24.448" starttime="20140618 14:26:24.444"></status>
</kw>
<msg timestamp="20140618 14:26:24.451" level="INFO">${return_log_entry} = 2014-06-18 14:26:24,292 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:24.450" starttime="20140618 14:26:24.431"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:24.472" starttime="20140618 14:26:24.467"></status>
</kw>
<msg timestamp="20140618 14:26:24.475" level="INFO">${return_log_entry} = 2014-06-18 14:26:24,292 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:24.474" starttime="20140618 14:26:24.453"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:24.498" starttime="20140618 14:26:24.492"></status>
</kw>
<msg timestamp="20140618 14:26:24.500" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:24.499" starttime="20140618 14:26:24.477"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:24.530" starttime="20140618 14:26:24.525"></status>
</kw>
<msg timestamp="20140618 14:26:24.533" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:24.532" starttime="20140618 14:26:24.502"></status>
</kw>
<msg timestamp="20140618 14:26:24.536" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:24.535" starttime="20140618 14:26:24.366"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:24.565" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:26:24.564" starttime="20140618 14:26:24.559"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:24.573" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:24.572" starttime="20140618 14:26:24.568"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:24.580" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:24.579" starttime="20140618 14:26:24.575"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:24.593" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:24.595" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:24.596" starttime="20140618 14:26:24.587"></status>
</kw>
<msg timestamp="20140618 14:26:24.599" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:24.600" level="INFO">${return_log_entry} = 2014-06-18 14:26:24,290 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:26:24.598" starttime="20140618 14:26:24.582"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:24.620" starttime="20140618 14:26:24.615"></status>
</kw>
<msg timestamp="20140618 14:26:24.622" level="INFO">${return_log_entry} = 2014-06-18 14:26:24,290 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:26:24.621" starttime="20140618 14:26:24.602"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:24.643" starttime="20140618 14:26:24.638"></status>
</kw>
<msg timestamp="20140618 14:26:24.645" level="INFO">${return_log_entry} = 2014-06-18 14:26:24,290 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:26:24.644" starttime="20140618 14:26:24.625"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:24.667" starttime="20140618 14:26:24.661"></status>
</kw>
<msg timestamp="20140618 14:26:24.669" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:24.669" starttime="20140618 14:26:24.647"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:24.698" starttime="20140618 14:26:24.694"></status>
</kw>
<msg timestamp="20140618 14:26:24.700" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:24.699" starttime="20140618 14:26:24.672"></status>
</kw>
<msg timestamp="20140618 14:26:24.704" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:24.703" starttime="20140618 14:26:24.540"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:24.727" starttime="20140618 14:26:24.724"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:24.733" starttime="20140618 14:26:24.729"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:24.738" starttime="20140618 14:26:24.734"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:26:24.764" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:26:24.766" starttime="20140618 14:26:24.757"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:24.767" starttime="20140618 14:26:24.753"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:24.769" starttime="20140618 14:26:24.740"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:24.770" starttime="20140618 14:26:24.707"></status>
</kw>
<msg timestamp="20140618 14:26:24.775" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:26:24.776" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:24.773" starttime="20140618 14:26:23.627"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140618 14:26:24.784" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:26:24.785" starttime="20140618 14:26:24.779"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 12</arg>
</arguments>
<msg timestamp="20140618 14:26:24.792" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:26:24.794" starttime="20140618 14:26:24.787"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:26:24.827" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:26:24.829" starttime="20140618 14:26:24.821"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:24.951" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:24.953" starttime="20140618 14:26:24.941"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:24.954" starttime="20140618 14:26:24.852"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:24.966" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:24.968" starttime="20140618 14:26:24.961"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:24.969" starttime="20140618 14:26:24.956"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:24.982" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:24.983" starttime="20140618 14:26:24.976"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:24.985" starttime="20140618 14:26:24.971"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:24.986" starttime="20140618 14:26:24.835"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:24.995" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:26:24.996" starttime="20140618 14:26:24.988"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.004" starttime="20140618 14:26:24.998"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.012" starttime="20140618 14:26:25.007"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.018" starttime="20140618 14:26:25.015"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.023" starttime="20140618 14:26:25.020"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.030" starttime="20140618 14:26:25.026"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:26:25.036" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:26:25.440" level="INFO">14:26:25,398 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:26:25,400 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:25.440" starttime="20140618 14:26:25.034"></status>
</kw>
<msg timestamp="20140618 14:26:25.442" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:25.443" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:26:25.441" starttime="20140618 14:26:25.032"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:25.470" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:26:25.469" starttime="20140618 14:26:25.461"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:25.477" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:25.476" starttime="20140618 14:26:25.472"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:25.483" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:25.482" starttime="20140618 14:26:25.479"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:25.491" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:25.493" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:25.494" starttime="20140618 14:26:25.488"></status>
</kw>
<msg timestamp="20140618 14:26:25.495" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:25.496" level="INFO">${return_log_entry} = 2014-06-18 14:26:25,400 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:25.494" starttime="20140618 14:26:25.485"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.510" starttime="20140618 14:26:25.507"></status>
</kw>
<msg timestamp="20140618 14:26:25.512" level="INFO">${return_log_entry} = 2014-06-18 14:26:25,400 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:25.511" starttime="20140618 14:26:25.497"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.529" starttime="20140618 14:26:25.526"></status>
</kw>
<msg timestamp="20140618 14:26:25.530" level="INFO">${return_log_entry} = 2014-06-18 14:26:25,400 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:25.530" starttime="20140618 14:26:25.513"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.545" starttime="20140618 14:26:25.541"></status>
</kw>
<msg timestamp="20140618 14:26:25.546" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:25.546" starttime="20140618 14:26:25.532"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.566" starttime="20140618 14:26:25.563"></status>
</kw>
<msg timestamp="20140618 14:26:25.567" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:25.567" starttime="20140618 14:26:25.548"></status>
</kw>
<msg timestamp="20140618 14:26:25.569" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:25.568" starttime="20140618 14:26:25.446"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:25.590" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:26:25.589" starttime="20140618 14:26:25.584"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:25.598" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:25.597" starttime="20140618 14:26:25.593"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:25.605" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:25.604" starttime="20140618 14:26:25.600"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:25.618" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:25.620" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:25.622" starttime="20140618 14:26:25.612"></status>
</kw>
<msg timestamp="20140618 14:26:25.624" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:25.625" level="INFO">${return_log_entry} = 2014-06-18 14:26:25,398 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:26:25.623" starttime="20140618 14:26:25.608"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.645" starttime="20140618 14:26:25.641"></status>
</kw>
<msg timestamp="20140618 14:26:25.647" level="INFO">${return_log_entry} = 2014-06-18 14:26:25,398 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:26:25.646" starttime="20140618 14:26:25.628"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.667" starttime="20140618 14:26:25.663"></status>
</kw>
<msg timestamp="20140618 14:26:25.670" level="INFO">${return_log_entry} = 2014-06-18 14:26:25,398 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:26:25.669" starttime="20140618 14:26:25.649"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.692" starttime="20140618 14:26:25.686"></status>
</kw>
<msg timestamp="20140618 14:26:25.694" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:25.693" starttime="20140618 14:26:25.672"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.722" starttime="20140618 14:26:25.718"></status>
</kw>
<msg timestamp="20140618 14:26:25.725" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:25.724" starttime="20140618 14:26:25.696"></status>
</kw>
<msg timestamp="20140618 14:26:25.728" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:25.727" starttime="20140618 14:26:25.571"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.751" starttime="20140618 14:26:25.748"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.756" starttime="20140618 14:26:25.753"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.762" starttime="20140618 14:26:25.758"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:26:25.789" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:26:25.791" starttime="20140618 14:26:25.783"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:25.793" starttime="20140618 14:26:25.779"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:25.795" starttime="20140618 14:26:25.765"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:25.796" starttime="20140618 14:26:25.731"></status>
</kw>
<msg timestamp="20140618 14:26:25.801" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:26:25.801" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:26:25.798" starttime="20140618 14:26:24.799"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140618 14:26:25.808" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:26:25.810" starttime="20140618 14:26:25.804"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 13</arg>
</arguments>
<msg timestamp="20140618 14:26:25.817" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:26:25.818" starttime="20140618 14:26:25.812"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:26:25.850" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:26:25.849" starttime="20140618 14:26:25.846"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:25.908" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:25.910" starttime="20140618 14:26:25.902"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:25.911" starttime="20140618 14:26:25.898"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:25.923" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:25.925" starttime="20140618 14:26:25.917"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:25.926" starttime="20140618 14:26:25.913"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:25.937" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:25.939" starttime="20140618 14:26:25.932"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:25.940" starttime="20140618 14:26:25.928"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:25.941" starttime="20140618 14:26:25.882"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:25.951" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:26:25.952" starttime="20140618 14:26:25.943"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.959" starttime="20140618 14:26:25.954"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.966" starttime="20140618 14:26:25.961"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.971" starttime="20140618 14:26:25.968"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.976" starttime="20140618 14:26:25.973"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.983" starttime="20140618 14:26:25.978"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.990" starttime="20140618 14:26:25.985"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:25.998" starttime="20140618 14:26:25.993"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:26:26.008" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:26:33.466" level="INFO">14:26:33,435 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:26:33,456 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:33.469" starttime="20140618 14:26:26.005"></status>
</kw>
<msg timestamp="20140618 14:26:33.475" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:33.476" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:26:33.472" starttime="20140618 14:26:26.000"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:33.508" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:26:33.507" starttime="20140618 14:26:33.501"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:33.516" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:33.515" starttime="20140618 14:26:33.510"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:33.523" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:33.522" starttime="20140618 14:26:33.518"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:33.537" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:33.545" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:33.546" starttime="20140618 14:26:33.530"></status>
</kw>
<msg timestamp="20140618 14:26:33.549" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:33.550" level="INFO">${return_log_entry} = 2014-06-18 14:26:33,456 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:33.548" starttime="20140618 14:26:33.526"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.572" starttime="20140618 14:26:33.568"></status>
</kw>
<msg timestamp="20140618 14:26:33.574" level="INFO">${return_log_entry} = 2014-06-18 14:26:33,456 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:33.573" starttime="20140618 14:26:33.553"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.593" starttime="20140618 14:26:33.589"></status>
</kw>
<msg timestamp="20140618 14:26:33.595" level="INFO">${return_log_entry} = 2014-06-18 14:26:33,456 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:33.594" starttime="20140618 14:26:33.576"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.615" starttime="20140618 14:26:33.610"></status>
</kw>
<msg timestamp="20140618 14:26:33.617" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:33.616" starttime="20140618 14:26:33.597"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.643" starttime="20140618 14:26:33.639"></status>
</kw>
<msg timestamp="20140618 14:26:33.646" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:33.645" starttime="20140618 14:26:33.619"></status>
</kw>
<msg timestamp="20140618 14:26:33.649" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:33.648" starttime="20140618 14:26:33.481"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:33.676" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:26:33.675" starttime="20140618 14:26:33.670"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:33.683" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:33.682" starttime="20140618 14:26:33.679"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:33.690" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:33.689" starttime="20140618 14:26:33.685"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:33.702" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:33.710" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:33.711" starttime="20140618 14:26:33.697"></status>
</kw>
<msg timestamp="20140618 14:26:33.714" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:33.715" level="INFO">${return_log_entry} = 2014-06-18 14:26:33,435 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:33.713" starttime="20140618 14:26:33.692"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.733" starttime="20140618 14:26:33.729"></status>
</kw>
<msg timestamp="20140618 14:26:33.735" level="INFO">${return_log_entry} = 2014-06-18 14:26:33,435 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:33.734" starttime="20140618 14:26:33.717"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.752" starttime="20140618 14:26:33.749"></status>
</kw>
<msg timestamp="20140618 14:26:33.754" level="INFO">${return_log_entry} = 2014-06-18 14:26:33,435 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:33.753" starttime="20140618 14:26:33.737"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.768" starttime="20140618 14:26:33.764"></status>
</kw>
<msg timestamp="20140618 14:26:33.769" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:33.768" starttime="20140618 14:26:33.755"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.788" starttime="20140618 14:26:33.785"></status>
</kw>
<msg timestamp="20140618 14:26:33.789" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:33.788" starttime="20140618 14:26:33.770"></status>
</kw>
<msg timestamp="20140618 14:26:33.791" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:33.790" starttime="20140618 14:26:33.652"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.806" starttime="20140618 14:26:33.804"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.809" starttime="20140618 14:26:33.807"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.812" starttime="20140618 14:26:33.810"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:26:33.831" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:26:33.832" starttime="20140618 14:26:33.824"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:33.833" starttime="20140618 14:26:33.822"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:33.834" starttime="20140618 14:26:33.814"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:33.834" starttime="20140618 14:26:33.793"></status>
</kw>
<msg timestamp="20140618 14:26:33.837" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:26:33.838" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:33.836" starttime="20140618 14:26:25.855"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.862" starttime="20140618 14:26:33.859"></status>
</kw>
<msg timestamp="20140618 14:26:33.863" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:33.863" starttime="20140618 14:26:33.839"></status>
</kw>
<msg timestamp="20140618 14:26:33.866" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:33.864" starttime="20140618 14:26:25.822"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140618 14:26:33.870" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:26:33.871" starttime="20140618 14:26:33.867"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:26:33.891" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:26:33.891" starttime="20140618 14:26:33.888"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:33.928" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:33.929" starttime="20140618 14:26:33.925"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:33.930" starttime="20140618 14:26:33.922"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:33.937" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:33.938" starttime="20140618 14:26:33.934"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:33.939" starttime="20140618 14:26:33.931"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:33.946" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:33.947" starttime="20140618 14:26:33.943"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:33.948" starttime="20140618 14:26:33.940"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:33.949" starttime="20140618 14:26:33.912"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:33.954" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:26:33.955" starttime="20140618 14:26:33.950"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.959" starttime="20140618 14:26:33.956"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.964" starttime="20140618 14:26:33.961"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.967" starttime="20140618 14:26:33.965"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.970" starttime="20140618 14:26:33.968"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.975" starttime="20140618 14:26:33.971"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.979" starttime="20140618 14:26:33.976"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:33.984" starttime="20140618 14:26:33.980"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:26:33.989" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:26:41.692" level="INFO">14:26:41,687 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:26:41,689 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:41.693" starttime="20140618 14:26:33.987"></status>
</kw>
<msg timestamp="20140618 14:26:41.696" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:41.696" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:26:41.694" starttime="20140618 14:26:33.985"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:41.713" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:26:41.713" starttime="20140618 14:26:41.710"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:41.718" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:41.717" starttime="20140618 14:26:41.715"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:41.722" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:41.721" starttime="20140618 14:26:41.719"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:41.729" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:41.731" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:41.731" starttime="20140618 14:26:41.726"></status>
</kw>
<msg timestamp="20140618 14:26:41.733" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:41.733" level="INFO">${return_log_entry} = 2014-06-18 14:26:41,689 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:41.732" starttime="20140618 14:26:41.723"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:41.745" starttime="20140618 14:26:41.743"></status>
</kw>
<msg timestamp="20140618 14:26:41.747" level="INFO">${return_log_entry} = 2014-06-18 14:26:41,689 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:41.746" starttime="20140618 14:26:41.735"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:41.760" starttime="20140618 14:26:41.757"></status>
</kw>
<msg timestamp="20140618 14:26:41.761" level="INFO">${return_log_entry} = 2014-06-18 14:26:41,689 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:41.760" starttime="20140618 14:26:41.748"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:41.774" starttime="20140618 14:26:41.771"></status>
</kw>
<msg timestamp="20140618 14:26:41.776" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:41.775" starttime="20140618 14:26:41.762"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:41.794" starttime="20140618 14:26:41.791"></status>
</kw>
<msg timestamp="20140618 14:26:41.795" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:41.795" starttime="20140618 14:26:41.777"></status>
</kw>
<msg timestamp="20140618 14:26:41.797" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:41.797" starttime="20140618 14:26:41.699"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:41.815" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:26:41.814" starttime="20140618 14:26:41.811"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:41.819" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:41.819" starttime="20140618 14:26:41.816"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:41.823" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:41.823" starttime="20140618 14:26:41.820"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:41.831" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:41.832" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:41.833" starttime="20140618 14:26:41.828"></status>
</kw>
<msg timestamp="20140618 14:26:41.834" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:41.835" level="INFO">${return_log_entry} = 2014-06-18 14:26:41,687 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:41.834" starttime="20140618 14:26:41.825"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:41.847" starttime="20140618 14:26:41.845"></status>
</kw>
<msg timestamp="20140618 14:26:41.849" level="INFO">${return_log_entry} = 2014-06-18 14:26:41,687 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:41.848" starttime="20140618 14:26:41.836"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:41.942" starttime="20140618 14:26:41.938"></status>
</kw>
<msg timestamp="20140618 14:26:41.944" level="INFO">${return_log_entry} = 2014-06-18 14:26:41,687 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:41.943" starttime="20140618 14:26:41.850"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:41.958" starttime="20140618 14:26:41.954"></status>
</kw>
<msg timestamp="20140618 14:26:41.959" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:41.958" starttime="20140618 14:26:41.945"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:41.978" starttime="20140618 14:26:41.975"></status>
</kw>
<msg timestamp="20140618 14:26:41.979" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:41.978" starttime="20140618 14:26:41.960"></status>
</kw>
<msg timestamp="20140618 14:26:41.981" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:41.980" starttime="20140618 14:26:41.799"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:41.997" starttime="20140618 14:26:41.995"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:42.000" starttime="20140618 14:26:41.998"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:42.004" starttime="20140618 14:26:42.002"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:26:42.021" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:26:42.022" starttime="20140618 14:26:42.017"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:42.023" starttime="20140618 14:26:42.014"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:42.023" starttime="20140618 14:26:42.005"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:42.024" starttime="20140618 14:26:41.983"></status>
</kw>
<msg timestamp="20140618 14:26:42.028" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:26:42.028" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:42.026" starttime="20140618 14:26:33.895"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:42.042" starttime="20140618 14:26:42.040"></status>
</kw>
<msg timestamp="20140618 14:26:42.044" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:42.043" starttime="20140618 14:26:42.030"></status>
</kw>
<msg timestamp="20140618 14:26:42.046" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:42.045" starttime="20140618 14:26:33.873"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140618 14:26:42.050" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:26:42.051" starttime="20140618 14:26:42.048"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:26:42.071" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:26:42.071" starttime="20140618 14:26:42.068"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:42.107" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:42.109" starttime="20140618 14:26:42.104"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:42.109" starttime="20140618 14:26:42.101"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:42.117" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:42.118" starttime="20140618 14:26:42.113"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:42.118" starttime="20140618 14:26:42.111"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:42.126" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:42.127" starttime="20140618 14:26:42.122"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:42.127" starttime="20140618 14:26:42.120"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:42.128" starttime="20140618 14:26:42.091"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:42.134" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:26:42.134" starttime="20140618 14:26:42.129"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:42.138" starttime="20140618 14:26:42.135"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:42.143" starttime="20140618 14:26:42.140"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:42.146" starttime="20140618 14:26:42.144"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:42.149" starttime="20140618 14:26:42.148"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:42.154" starttime="20140618 14:26:42.151"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:42.158" starttime="20140618 14:26:42.155"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:42.163" starttime="20140618 14:26:42.160"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:26:42.169" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:26:48.785" level="INFO">14:26:48,777 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:26:48,779 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:48.786" starttime="20140618 14:26:42.167"></status>
</kw>
<msg timestamp="20140618 14:26:48.789" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:48.790" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:26:48.788" starttime="20140618 14:26:42.164"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:48.809" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:26:48.809" starttime="20140618 14:26:48.803"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:48.814" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:48.814" starttime="20140618 14:26:48.811"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:48.818" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:48.818" starttime="20140618 14:26:48.815"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:48.825" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:48.827" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:48.827" starttime="20140618 14:26:48.822"></status>
</kw>
<msg timestamp="20140618 14:26:48.829" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:48.829" level="INFO">${return_log_entry} = 2014-06-18 14:26:48,779 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:48.828" starttime="20140618 14:26:48.820"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:48.841" starttime="20140618 14:26:48.839"></status>
</kw>
<msg timestamp="20140618 14:26:48.843" level="INFO">${return_log_entry} = 2014-06-18 14:26:48,779 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:48.842" starttime="20140618 14:26:48.830"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:48.855" starttime="20140618 14:26:48.852"></status>
</kw>
<msg timestamp="20140618 14:26:48.856" level="INFO">${return_log_entry} = 2014-06-18 14:26:48,779 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:48.856" starttime="20140618 14:26:48.844"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:48.869" starttime="20140618 14:26:48.866"></status>
</kw>
<msg timestamp="20140618 14:26:48.870" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:48.870" starttime="20140618 14:26:48.857"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:48.887" starttime="20140618 14:26:48.885"></status>
</kw>
<msg timestamp="20140618 14:26:48.889" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:48.888" starttime="20140618 14:26:48.872"></status>
</kw>
<msg timestamp="20140618 14:26:48.890" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:48.890" starttime="20140618 14:26:48.792"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:48.907" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:26:48.907" starttime="20140618 14:26:48.904"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:48.912" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:48.911" starttime="20140618 14:26:48.909"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:48.916" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:48.915" starttime="20140618 14:26:48.913"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:48.923" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:48.924" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:48.925" starttime="20140618 14:26:48.920"></status>
</kw>
<msg timestamp="20140618 14:26:48.926" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:48.927" level="INFO">${return_log_entry} = 2014-06-18 14:26:48,777 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:48.925" starttime="20140618 14:26:48.917"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:48.939" starttime="20140618 14:26:48.937"></status>
</kw>
<msg timestamp="20140618 14:26:48.941" level="INFO">${return_log_entry} = 2014-06-18 14:26:48,777 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:48.940" starttime="20140618 14:26:48.928"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:48.953" starttime="20140618 14:26:48.950"></status>
</kw>
<msg timestamp="20140618 14:26:48.954" level="INFO">${return_log_entry} = 2014-06-18 14:26:48,777 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:48.954" starttime="20140618 14:26:48.942"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:48.968" starttime="20140618 14:26:48.964"></status>
</kw>
<msg timestamp="20140618 14:26:48.969" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:48.969" starttime="20140618 14:26:48.956"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:48.988" starttime="20140618 14:26:48.985"></status>
</kw>
<msg timestamp="20140618 14:26:48.989" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:48.988" starttime="20140618 14:26:48.971"></status>
</kw>
<msg timestamp="20140618 14:26:48.991" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:48.990" starttime="20140618 14:26:48.893"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:49.006" starttime="20140618 14:26:49.004"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:49.009" starttime="20140618 14:26:49.007"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:49.012" starttime="20140618 14:26:49.010"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:26:49.028" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:26:49.029" starttime="20140618 14:26:49.024"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:49.030" starttime="20140618 14:26:49.021"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:49.031" starttime="20140618 14:26:49.013"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:49.031" starttime="20140618 14:26:48.993"></status>
</kw>
<msg timestamp="20140618 14:26:49.035" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:26:49.035" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:49.033" starttime="20140618 14:26:42.074"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:49.048" starttime="20140618 14:26:49.046"></status>
</kw>
<msg timestamp="20140618 14:26:49.050" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:49.049" starttime="20140618 14:26:49.036"></status>
</kw>
<msg timestamp="20140618 14:26:49.052" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:49.051" starttime="20140618 14:26:42.054"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140618 14:26:49.056" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:26:49.057" starttime="20140618 14:26:49.054"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:26:49.076" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:26:49.075" starttime="20140618 14:26:49.073"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:49.111" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:49.112" starttime="20140618 14:26:49.107"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:49.113" starttime="20140618 14:26:49.105"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:49.119" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:49.120" starttime="20140618 14:26:49.116"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:49.121" starttime="20140618 14:26:49.114"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:49.127" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:49.128" starttime="20140618 14:26:49.124"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:49.129" starttime="20140618 14:26:49.122"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:49.129" starttime="20140618 14:26:49.095"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:49.134" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:26:49.135" starttime="20140618 14:26:49.130"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:49.139" starttime="20140618 14:26:49.136"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:49.143" starttime="20140618 14:26:49.140"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:49.146" starttime="20140618 14:26:49.144"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:49.149" starttime="20140618 14:26:49.147"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:49.241" starttime="20140618 14:26:49.150"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:49.246" starttime="20140618 14:26:49.243"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:49.250" starttime="20140618 14:26:49.248"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:26:49.256" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:26:56.203" level="INFO">14:26:56,194 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:26:56,197 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:56.204" starttime="20140618 14:26:49.254"></status>
</kw>
<msg timestamp="20140618 14:26:56.207" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:56.208" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:26:56.206" starttime="20140618 14:26:49.252"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:56.227" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:26:56.226" starttime="20140618 14:26:56.223"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.231" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:56.230" starttime="20140618 14:26:56.228"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.235" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:56.234" starttime="20140618 14:26:56.232"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.242" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:56.243" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:56.243" starttime="20140618 14:26:56.238"></status>
</kw>
<msg timestamp="20140618 14:26:56.245" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:56.245" level="INFO">${return_log_entry} = 2014-06-18 14:26:56,197 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:56.244" starttime="20140618 14:26:56.236"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.257" starttime="20140618 14:26:56.254"></status>
</kw>
<msg timestamp="20140618 14:26:56.258" level="INFO">${return_log_entry} = 2014-06-18 14:26:56,197 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:56.258" starttime="20140618 14:26:56.246"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.269" starttime="20140618 14:26:56.267"></status>
</kw>
<msg timestamp="20140618 14:26:56.270" level="INFO">${return_log_entry} = 2014-06-18 14:26:56,197 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:56.270" starttime="20140618 14:26:56.259"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.282" starttime="20140618 14:26:56.279"></status>
</kw>
<msg timestamp="20140618 14:26:56.283" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:56.283" starttime="20140618 14:26:56.272"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.299" starttime="20140618 14:26:56.297"></status>
</kw>
<msg timestamp="20140618 14:26:56.300" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:56.300" starttime="20140618 14:26:56.284"></status>
</kw>
<msg timestamp="20140618 14:26:56.302" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:56.301" starttime="20140618 14:26:56.211"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:56.318" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:26:56.318" starttime="20140618 14:26:56.315"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.322" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:56.322" starttime="20140618 14:26:56.319"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.326" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:56.325" starttime="20140618 14:26:56.323"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.333" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:56.334" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:56.334" starttime="20140618 14:26:56.330"></status>
</kw>
<msg timestamp="20140618 14:26:56.336" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:56.336" level="INFO">${return_log_entry} = 2014-06-18 14:26:56,194 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:56.335" starttime="20140618 14:26:56.327"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.347" starttime="20140618 14:26:56.345"></status>
</kw>
<msg timestamp="20140618 14:26:56.349" level="INFO">${return_log_entry} = 2014-06-18 14:26:56,194 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:56.348" starttime="20140618 14:26:56.337"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.360" starttime="20140618 14:26:56.358"></status>
</kw>
<msg timestamp="20140618 14:26:56.362" level="INFO">${return_log_entry} = 2014-06-18 14:26:56,194 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:56.361" starttime="20140618 14:26:56.350"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.374" starttime="20140618 14:26:56.371"></status>
</kw>
<msg timestamp="20140618 14:26:56.375" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:56.375" starttime="20140618 14:26:56.363"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.392" starttime="20140618 14:26:56.390"></status>
</kw>
<msg timestamp="20140618 14:26:56.394" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:56.393" starttime="20140618 14:26:56.377"></status>
</kw>
<msg timestamp="20140618 14:26:56.395" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:56.395" starttime="20140618 14:26:56.304"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.409" starttime="20140618 14:26:56.408"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.412" starttime="20140618 14:26:56.410"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.415" starttime="20140618 14:26:56.413"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:26:56.429" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:26:56.430" starttime="20140618 14:26:56.426"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:56.431" starttime="20140618 14:26:56.423"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:56.432" starttime="20140618 14:26:56.416"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:56.432" starttime="20140618 14:26:56.397"></status>
</kw>
<msg timestamp="20140618 14:26:56.435" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:26:56.435" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:26:56.433" starttime="20140618 14:26:49.079"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.448" starttime="20140618 14:26:56.445"></status>
</kw>
<msg timestamp="20140618 14:26:56.449" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:56.448" starttime="20140618 14:26:56.437"></status>
</kw>
<msg timestamp="20140618 14:26:56.451" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:56.450" starttime="20140618 14:26:49.060"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140618 14:26:56.455" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:26:56.455" starttime="20140618 14:26:56.452"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:56.456" starttime="20140618 14:26:08.656"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Setup phone 1 subscriber accounts (only MainAccount shall have a credit) ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.459" starttime="20140618 14:26:56.458"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'!='true'</arg>
<arg>CRCE Clear All Balances By Imsi</arg>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.467" starttime="20140618 14:26:56.460"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'!='true'</arg>
<arg>CRCE Set Main Balance By Imsi</arg>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>10000000</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.475" starttime="20140618 14:26:56.468"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Prepare 2 Testsubscribers for FAKING ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.478" starttime="20140618 14:26:56.476"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'=='true'</arg>
<arg>Prepare Fake Subscribers</arg>
</arguments>
<kw type="kw" timeout="" name="suite-global-keyword-resource.Prepare Fake Subscribers">
<doc>cretes 2 test subscribers for faking calls (in development mode)</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create 2 test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.496" starttime="20140618 14:26:56.494"></status>
</kw>
<kw type="kw" timeout="" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<msg timestamp="20140618 14:26:56.499" level="INFO">${INITIAL_BALANCE} = 10000000</msg>
<status status="PASS" endtime="20140618 14:26:56.498" starttime="20140618 14:26:56.497"></status>
</kw>
<kw type="kw" timeout="" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.518" level="INFO">msg=crce_host=10.105.140.125</msg>
<status status="PASS" endtime="20140618 14:26:56.518" starttime="20140618 14:26:56.515"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.521" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20140618 14:26:56.522" starttime="20140618 14:26:56.519"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.525" level="INFO">msg=crce_webservicesBasePath=/</msg>
<status status="PASS" endtime="20140618 14:26:56.526" starttime="20140618 14:26:56.523"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.529" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20140618 14:26:56.530" starttime="20140618 14:26:56.527"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.533" level="INFO">msg=imsiRangeStart=530052041010000</msg>
<status status="PASS" endtime="20140618 14:26:56.534" starttime="20140618 14:26:56.531"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.537" level="INFO">msg=msisdnRangeStart=642041010000</msg>
<status status="PASS" endtime="20140618 14:26:56.537" starttime="20140618 14:26:56.534"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.541" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:26:56.541" starttime="20140618 14:26:56.538"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.545" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20140618 14:26:56.545" starttime="20140618 14:26:56.542"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.548" level="INFO">msg=tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:26:56.549" starttime="20140618 14:26:56.546"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.552" level="INFO">msg=balance=10000000</msg>
<status status="PASS" endtime="20140618 14:26:56.553" starttime="20140618 14:26:56.550"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.569" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:56.570" starttime="20140618 14:26:56.566"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:56.571" starttime="20140618 14:26:56.564"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.577" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:56.578" starttime="20140618 14:26:56.574"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:56.579" starttime="20140618 14:26:56.572"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.584" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:56.585" starttime="20140618 14:26:56.582"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:56.586" starttime="20140618 14:26:56.580"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:56.587" starttime="20140618 14:26:56.556"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:56.591" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:26:56.591" starttime="20140618 14:26:56.588"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.595" starttime="20140618 14:26:56.592"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.599" starttime="20140618 14:26:56.596"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.603" starttime="20140618 14:26:56.600"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.606" starttime="20140618 14:26:56.604"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.608" starttime="20140618 14:26:56.607"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.612" starttime="20140618 14:26:56.609"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.616" starttime="20140618 14:26:56.613"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.620" starttime="20140618 14:26:56.617"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.624" starttime="20140618 14:26:56.621"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.628" starttime="20140618 14:26:56.625"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.632" starttime="20140618 14:26:56.629"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:56.636" starttime="20140618 14:26:56.633"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:26:56.641" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000']</msg>
<msg timestamp="20140618 14:26:58.863" level="INFO">14:26:58,855 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:58.864" starttime="20140618 14:26:56.639"></status>
</kw>
<msg timestamp="20140618 14:26:58.867" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:58.867" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:26:58.866" starttime="20140618 14:26:56.637"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:58.886" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:26:58.886" starttime="20140618 14:26:58.882"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:58.890" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:58.889" starttime="20140618 14:26:58.887"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:58.893" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:58.893" starttime="20140618 14:26:58.891"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:58.900" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:58.906" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:58.906" starttime="20140618 14:26:58.897"></status>
</kw>
<msg timestamp="20140618 14:26:58.908" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:58.908" level="INFO">${return_log_entry} = 2014-06-18 14:26:58,855 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:58.907" starttime="20140618 14:26:58.895"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:58.919" starttime="20140618 14:26:58.917"></status>
</kw>
<msg timestamp="20140618 14:26:58.921" level="INFO">${return_log_entry} = 2014-06-18 14:26:58,855 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:58.920" starttime="20140618 14:26:58.909"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:58.932" starttime="20140618 14:26:58.929"></status>
</kw>
<msg timestamp="20140618 14:26:58.933" level="INFO">${return_log_entry} = 2014-06-18 14:26:58,855 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:58.932" starttime="20140618 14:26:58.922"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:58.944" starttime="20140618 14:26:58.942"></status>
</kw>
<msg timestamp="20140618 14:26:58.946" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:58.945" starttime="20140618 14:26:58.934"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:58.961" starttime="20140618 14:26:58.959"></status>
</kw>
<msg timestamp="20140618 14:26:58.962" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:58.962" starttime="20140618 14:26:58.947"></status>
</kw>
<msg timestamp="20140618 14:26:58.964" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:58.963" starttime="20140618 14:26:58.870"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:58.976" starttime="20140618 14:26:58.975"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:58.979" starttime="20140618 14:26:58.977"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:58.981" starttime="20140618 14:26:58.980"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:26:59.000" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:26:59.001" starttime="20140618 14:26:58.992"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:59.002" starttime="20140618 14:26:58.990"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:59.004" starttime="20140618 14:26:58.982"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:59.005" starttime="20140618 14:26:58.966"></status>
</kw>
<msg timestamp="20140618 14:26:59.008" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20140618 14:26:59.007" starttime="20140618 14:26:56.503"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20140618 14:26:59.011" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:26:59.012" starttime="20140618 14:26:59.009"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_ATTACHED_ONNET_PHONE_1_IMSI} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.015" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_IMSI} = 530052041010000</msg>
<status status="PASS" endtime="20140618 14:26:59.015" starttime="20140618 14:26:59.013"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.019" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:26:59.018" starttime="20140618 14:26:59.016"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_DESTINATION_IMSI} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}+1</arg>
</arguments>
<msg timestamp="20140618 14:26:59.039" level="INFO">${FAKE_DESTINATION_IMSI} = 530052041010001</msg>
<status status="PASS" endtime="20140618 14:26:59.038" starttime="20140618 14:26:59.020"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_DESTINATION_MSISDN} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}+1</arg>
</arguments>
<msg timestamp="20140618 14:26:59.046" level="INFO">${FAKE_DESTINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:26:59.046" starttime="20140618 14:26:59.040"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_ORIGINATION_MSISDN} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FAKE_DESTINATION_MSISDN}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.050" level="INFO">${FAKE_ORIGINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:26:59.050" starttime="20140618 14:26:59.048"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Setup their acounts (only MainAccount shall have a credit) *******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.053" starttime="20140618 14:26:59.051"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances By Imsi">
<doc>Same as "CRCE Clear All Balances" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId *****</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.067" starttime="20140618 14:26:59.065"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.184" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:59.185" starttime="20140618 14:26:59.181"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:59.185" starttime="20140618 14:26:59.179"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.191" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:59.192" starttime="20140618 14:26:59.189"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:59.193" starttime="20140618 14:26:59.187"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.199" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:26:59.200" starttime="20140618 14:26:59.196"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:59.200" starttime="20140618 14:26:59.194"></status>
</kw>
<status status="PASS" endtime="20140618 14:26:59.201" starttime="20140618 14:26:59.171"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.205" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:26:59.205" starttime="20140618 14:26:59.202"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.209" starttime="20140618 14:26:59.207"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.213" starttime="20140618 14:26:59.210"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.217" starttime="20140618 14:26:59.214"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.220" starttime="20140618 14:26:59.218"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.222" starttime="20140618 14:26:59.221"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.226" starttime="20140618 14:26:59.223"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:26:59.231" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000']</msg>
<msg timestamp="20140618 14:26:59.576" level="INFO">14:26:59,546 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
14:26:59,550 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
14:26:59,553 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14767
14:26:59,556 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000
14:26:59,559 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
14:26:59,562 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
14:26:59,565 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
14:26:59,568 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140618 14:26:59.577" starttime="20140618 14:26:59.229"></status>
</kw>
<msg timestamp="20140618 14:26:59.578" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:59.579" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:26:59.578" starttime="20140618 14:26:59.227"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:59.593" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:26:59.593" starttime="20140618 14:26:59.590"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.597" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:59.597" starttime="20140618 14:26:59.595"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.601" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:59.600" starttime="20140618 14:26:59.598"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.607" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:59.614" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:59.615" starttime="20140618 14:26:59.604"></status>
</kw>
<msg timestamp="20140618 14:26:59.616" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:59.616" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,546 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:59.615" starttime="20140618 14:26:59.602"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.628" starttime="20140618 14:26:59.626"></status>
</kw>
<msg timestamp="20140618 14:26:59.629" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,546 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:59.629" starttime="20140618 14:26:59.617"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.641" starttime="20140618 14:26:59.638"></status>
</kw>
<msg timestamp="20140618 14:26:59.642" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,546 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:26:59.641" starttime="20140618 14:26:59.631"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.654" starttime="20140618 14:26:59.651"></status>
</kw>
<msg timestamp="20140618 14:26:59.655" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:59.655" starttime="20140618 14:26:59.643"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.672" starttime="20140618 14:26:59.670"></status>
</kw>
<msg timestamp="20140618 14:26:59.673" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:59.673" starttime="20140618 14:26:59.657"></status>
</kw>
<msg timestamp="20140618 14:26:59.675" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:26:59.674" starttime="20140618 14:26:59.581"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:59.689" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140618 14:26:59.689" starttime="20140618 14:26:59.686"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.693" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:59.692" starttime="20140618 14:26:59.690"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.697" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:59.696" starttime="20140618 14:26:59.694"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.703" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:59.709" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:59.710" starttime="20140618 14:26:59.700"></status>
</kw>
<msg timestamp="20140618 14:26:59.711" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:59.712" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,550 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:26:59.711" starttime="20140618 14:26:59.698"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.723" starttime="20140618 14:26:59.720"></status>
</kw>
<msg timestamp="20140618 14:26:59.724" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,550 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:26:59.724" starttime="20140618 14:26:59.713"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.736" starttime="20140618 14:26:59.733"></status>
</kw>
<msg timestamp="20140618 14:26:59.737" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,550 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:26:59.736" starttime="20140618 14:26:59.725"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.749" starttime="20140618 14:26:59.746"></status>
</kw>
<msg timestamp="20140618 14:26:59.750" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:26:59.750" starttime="20140618 14:26:59.738"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.767" starttime="20140618 14:26:59.764"></status>
</kw>
<msg timestamp="20140618 14:26:59.768" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:26:59.767" starttime="20140618 14:26:59.751"></status>
</kw>
<msg timestamp="20140618 14:26:59.769" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140618 14:26:59.769" starttime="20140618 14:26:59.677"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:59.784" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140618 14:26:59.784" starttime="20140618 14:26:59.781"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.788" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:59.788" starttime="20140618 14:26:59.786"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.792" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:59.791" starttime="20140618 14:26:59.789"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.798" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:59.805" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:59.805" starttime="20140618 14:26:59.795"></status>
</kw>
<msg timestamp="20140618 14:26:59.807" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:59.807" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,556 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140618 14:26:59.806" starttime="20140618 14:26:59.793"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.818" starttime="20140618 14:26:59.816"></status>
</kw>
<msg timestamp="20140618 14:26:59.819" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,556 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140618 14:26:59.819" starttime="20140618 14:26:59.808"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.830" starttime="20140618 14:26:59.828"></status>
</kw>
<msg timestamp="20140618 14:26:59.832" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,556 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140618 14:26:59.831" starttime="20140618 14:26:59.820"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.844" starttime="20140618 14:26:59.841"></status>
</kw>
<msg timestamp="20140618 14:26:59.845" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:26:59.845" starttime="20140618 14:26:59.833"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.861" starttime="20140618 14:26:59.859"></status>
</kw>
<msg timestamp="20140618 14:26:59.863" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:26:59.862" starttime="20140618 14:26:59.846"></status>
</kw>
<msg timestamp="20140618 14:26:59.864" level="INFO">${msisdn} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:26:59.864" starttime="20140618 14:26:59.772"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:59.879" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140618 14:26:59.878" starttime="20140618 14:26:59.876"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.882" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:59.882" starttime="20140618 14:26:59.880"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.886" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:59.885" starttime="20140618 14:26:59.884"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.892" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:59.898" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:59.899" starttime="20140618 14:26:59.890"></status>
</kw>
<msg timestamp="20140618 14:26:59.900" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:59.901" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,553 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14767</msg>
<status status="PASS" endtime="20140618 14:26:59.900" starttime="20140618 14:26:59.887"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.911" starttime="20140618 14:26:59.909"></status>
</kw>
<msg timestamp="20140618 14:26:59.913" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,553 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14767</msg>
<status status="PASS" endtime="20140618 14:26:59.912" starttime="20140618 14:26:59.902"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.924" starttime="20140618 14:26:59.921"></status>
</kw>
<msg timestamp="20140618 14:26:59.925" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,553 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14767</msg>
<status status="PASS" endtime="20140618 14:26:59.924" starttime="20140618 14:26:59.914"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.936" starttime="20140618 14:26:59.934"></status>
</kw>
<msg timestamp="20140618 14:26:59.938" level="INFO">${resultCode} = 14767</msg>
<status status="PASS" endtime="20140618 14:26:59.937" starttime="20140618 14:26:59.926"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:26:59.953" starttime="20140618 14:26:59.951"></status>
</kw>
<msg timestamp="20140618 14:26:59.955" level="INFO">${resultCode} = 14767</msg>
<status status="PASS" endtime="20140618 14:26:59.954" starttime="20140618 14:26:59.939"></status>
</kw>
<msg timestamp="20140618 14:26:59.956" level="INFO">${id} = 14767</msg>
<status status="PASS" endtime="20140618 14:26:59.955" starttime="20140618 14:26:59.866"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:26:59.970" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140618 14:26:59.970" starttime="20140618 14:26:59.967"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.974" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:26:59.973" starttime="20140618 14:26:59.971"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.977" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:26:59.977" starttime="20140618 14:26:59.975"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:26:59.983" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:26:59.989" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:26:59.990" starttime="20140618 14:26:59.981"></status>
</kw>
<msg timestamp="20140618 14:26:59.991" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:26:59.992" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,559 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:26:59.991" starttime="20140618 14:26:59.979"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.002" starttime="20140618 14:27:00.000"></status>
</kw>
<msg timestamp="20140618 14:27:00.005" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,559 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:00.003" starttime="20140618 14:26:59.993"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.016" starttime="20140618 14:27:00.014"></status>
</kw>
<msg timestamp="20140618 14:27:00.017" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,559 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:00.016" starttime="20140618 14:27:00.006"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.029" starttime="20140618 14:27:00.026"></status>
</kw>
<msg timestamp="20140618 14:27:00.030" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:00.029" starttime="20140618 14:27:00.018"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.045" starttime="20140618 14:27:00.043"></status>
</kw>
<msg timestamp="20140618 14:27:00.047" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:00.046" starttime="20140618 14:27:00.031"></status>
</kw>
<msg timestamp="20140618 14:27:00.049" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:00.047" starttime="20140618 14:26:59.958"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:00.063" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140618 14:27:00.063" starttime="20140618 14:27:00.060"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:00.067" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:00.067" starttime="20140618 14:27:00.065"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:00.071" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:00.070" starttime="20140618 14:27:00.068"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:00.077" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:00.083" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:00.084" starttime="20140618 14:27:00.074"></status>
</kw>
<msg timestamp="20140618 14:27:00.085" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:00.086" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,562 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:27:00.084" starttime="20140618 14:27:00.072"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.179" starttime="20140618 14:27:00.175"></status>
</kw>
<msg timestamp="20140618 14:27:00.180" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,562 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:27:00.179" starttime="20140618 14:27:00.087"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.191" starttime="20140618 14:27:00.189"></status>
</kw>
<msg timestamp="20140618 14:27:00.192" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,562 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:27:00.191" starttime="20140618 14:27:00.181"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.203" starttime="20140618 14:27:00.200"></status>
</kw>
<msg timestamp="20140618 14:27:00.204" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:27:00.204" starttime="20140618 14:27:00.193"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.219" starttime="20140618 14:27:00.217"></status>
</kw>
<msg timestamp="20140618 14:27:00.221" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:27:00.220" starttime="20140618 14:27:00.205"></status>
</kw>
<msg timestamp="20140618 14:27:00.222" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140618 14:27:00.221" starttime="20140618 14:27:00.051"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:00.237" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140618 14:27:00.236" starttime="20140618 14:27:00.234"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:00.240" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:00.240" starttime="20140618 14:27:00.238"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:00.244" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:00.243" starttime="20140618 14:27:00.241"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:00.249" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:00.255" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:00.256" starttime="20140618 14:27:00.247"></status>
</kw>
<msg timestamp="20140618 14:27:00.257" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:00.258" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,565 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:00.257" starttime="20140618 14:27:00.245"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.268" starttime="20140618 14:27:00.266"></status>
</kw>
<msg timestamp="20140618 14:27:00.269" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,565 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:00.269" starttime="20140618 14:27:00.259"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.280" starttime="20140618 14:27:00.277"></status>
</kw>
<msg timestamp="20140618 14:27:00.281" level="INFO">${return_log_entry} = 2014-06-18 14:26:59,565 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:00.280" starttime="20140618 14:27:00.270"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.292" starttime="20140618 14:27:00.289"></status>
</kw>
<msg timestamp="20140618 14:27:00.293" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:00.293" starttime="20140618 14:27:00.282"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.308" starttime="20140618 14:27:00.306"></status>
</kw>
<msg timestamp="20140618 14:27:00.310" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:00.309" starttime="20140618 14:27:00.294"></status>
</kw>
<msg timestamp="20140618 14:27:00.311" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:00.310" starttime="20140618 14:27:00.225"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.323" starttime="20140618 14:27:00.322"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.325" starttime="20140618 14:27:00.324"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.328" starttime="20140618 14:27:00.326"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:00.346" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:00.347" starttime="20140618 14:27:00.338"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:00.348" starttime="20140618 14:27:00.336"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:00.348" starttime="20140618 14:27:00.329"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:00.349" starttime="20140618 14:27:00.313"></status>
</kw>
<msg timestamp="20140618 14:27:00.353" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:27:00.353" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140618 14:27:00.353" level="INFO">${msisdnDummy} = 642041010000</msg>
<msg timestamp="20140618 14:27:00.354" level="INFO">${subscriberId} = 14767</msg>
<msg timestamp="20140618 14:27:00.354" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140618 14:27:00.354" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140618 14:27:00.355" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:00.351" starttime="20140618 14:26:59.071"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.362" starttime="20140618 14:27:00.356"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Clear All Balances" *****</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.364" starttime="20140618 14:27:00.363"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances">
<doc>Sets passed subscribers balance of all accounts to zero</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve all accountIds ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.378" starttime="20140618 14:27:00.376"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, @{accountIds} = subscriber-admin-support-resource.CRCE Get Accounts">
<doc>This is a delegator to the CRCE webservice operation getAccounts and returnes the list of the subscriber's acountIds</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:00.405" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:00.406" starttime="20140618 14:27:00.402"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:00.407" starttime="20140618 14:27:00.401"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:00.413" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:00.413" starttime="20140618 14:27:00.410"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:00.414" starttime="20140618 14:27:00.408"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:00.420" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:00.421" starttime="20140618 14:27:00.417"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:00.421" starttime="20140618 14:27:00.415"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:00.422" starttime="20140618 14:27:00.393"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:00.426" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:00.426" starttime="20140618 14:27:00.423"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.430" starttime="20140618 14:27:00.427"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.434" starttime="20140618 14:27:00.431"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.438" starttime="20140618 14:27:00.435"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.443" starttime="20140618 14:27:00.442"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getAccounts</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.446" starttime="20140618 14:27:00.444"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getAccounts.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:00.449" starttime="20140618 14:27:00.447"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:00.454" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767']</msg>
<msg timestamp="20140618 14:27:01.154" level="INFO">14:27:01,143 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK
14:27:01,146 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14768;14771;14770;14769</msg>
<status status="PASS" endtime="20140618 14:27:01.155" starttime="20140618 14:27:00.452"></status>
</kw>
<msg timestamp="20140618 14:27:01.157" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:01.158" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:01.156" starttime="20140618 14:27:00.451"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:01.173" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:01.172" starttime="20140618 14:27:01.168"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:01.177" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:01.176" starttime="20140618 14:27:01.174"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:01.181" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:01.180" starttime="20140618 14:27:01.178"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:01.186" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:01.192" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:01.192" starttime="20140618 14:27:01.184"></status>
</kw>
<msg timestamp="20140618 14:27:01.194" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:01.194" level="INFO">${return_log_entry} = 2014-06-18 14:27:01,143 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:01.193" starttime="20140618 14:27:01.182"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.204" starttime="20140618 14:27:01.202"></status>
</kw>
<msg timestamp="20140618 14:27:01.205" level="INFO">${return_log_entry} = 2014-06-18 14:27:01,143 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:01.205" starttime="20140618 14:27:01.195"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.216" starttime="20140618 14:27:01.214"></status>
</kw>
<msg timestamp="20140618 14:27:01.217" level="INFO">${return_log_entry} = 2014-06-18 14:27:01,143 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:01.216" starttime="20140618 14:27:01.206"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.228" starttime="20140618 14:27:01.225"></status>
</kw>
<msg timestamp="20140618 14:27:01.229" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:01.229" starttime="20140618 14:27:01.218"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.245" starttime="20140618 14:27:01.242"></status>
</kw>
<msg timestamp="20140618 14:27:01.246" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:01.245" starttime="20140618 14:27:01.230"></status>
</kw>
<msg timestamp="20140618 14:27:01.247" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:01.247" starttime="20140618 14:27:01.160"></status>
</kw>
<kw type="kw" timeout="" name="${csvAccountIds} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.accountIds</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:01.261" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.accountIds=</msg>
<status status="PASS" endtime="20140618 14:27:01.261" starttime="20140618 14:27:01.258"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:01.265" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:01.264" starttime="20140618 14:27:01.262"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:01.268" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:01.267" starttime="20140618 14:27:01.266"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:01.274" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:01.279" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:01.280" starttime="20140618 14:27:01.271"></status>
</kw>
<msg timestamp="20140618 14:27:01.281" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:01.281" level="INFO">${return_log_entry} = 2014-06-18 14:27:01,146 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14768;14771;14770;14769</msg>
<status status="PASS" endtime="20140618 14:27:01.280" starttime="20140618 14:27:01.269"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.292" starttime="20140618 14:27:01.289"></status>
</kw>
<msg timestamp="20140618 14:27:01.293" level="INFO">${return_log_entry} = 2014-06-18 14:27:01,146 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14768;14771;14770;14769</msg>
<status status="PASS" endtime="20140618 14:27:01.292" starttime="20140618 14:27:01.283"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.303" starttime="20140618 14:27:01.301"></status>
</kw>
<msg timestamp="20140618 14:27:01.304" level="INFO">${return_log_entry} = 2014-06-18 14:27:01,146 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14768;14771;14770;14769</msg>
<status status="PASS" endtime="20140618 14:27:01.304" starttime="20140618 14:27:01.294"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.316" starttime="20140618 14:27:01.313"></status>
</kw>
<msg timestamp="20140618 14:27:01.317" level="INFO">${resultCode} = 14768;14771;14770;14769</msg>
<status status="PASS" endtime="20140618 14:27:01.316" starttime="20140618 14:27:01.305"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.405" starttime="20140618 14:27:01.401"></status>
</kw>
<msg timestamp="20140618 14:27:01.406" level="INFO">${resultCode} = 14768;14771;14770;14769</msg>
<status status="PASS" endtime="20140618 14:27:01.406" starttime="20140618 14:27:01.318"></status>
</kw>
<msg timestamp="20140618 14:27:01.407" level="INFO">${csvAccountIds} = 14768;14771;14770;14769</msg>
<status status="PASS" endtime="20140618 14:27:01.407" starttime="20140618 14:27:01.249"></status>
</kw>
<kw type="kw" timeout="" name="@{accountIds} = String.Split String">
<doc>Splits the `string` using `separator` as a delimiter string.</doc>
<arguments>
<arg>${csvAccountIds}</arg>
<arg>;</arg>
</arguments>
<msg timestamp="20140618 14:27:01.411" level="INFO">@{accountIds} = [ 14768 | 14771 | 14770 | 14769 ]</msg>
<status status="PASS" endtime="20140618 14:27:01.411" starttime="20140618 14:27:01.408"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetAccounts</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.424" starttime="20140618 14:27:01.422"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.426" starttime="20140618 14:27:01.425"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.428" starttime="20140618 14:27:01.427"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:01.445" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetAccounts*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetAccounts*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:01.446" starttime="20140618 14:27:01.438"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:01.447" starttime="20140618 14:27:01.436"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:01.447" starttime="20140618 14:27:01.429"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:01.448" starttime="20140618 14:27:01.414"></status>
</kw>
<msg timestamp="20140618 14:27:01.452" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:27:01.452" level="INFO">@{accountIds} = [ 14768 | 14771 | 14770 | 14769 ]</msg>
<status status="PASS" endtime="20140618 14:27:01.450" starttime="20140618 14:27:00.381"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying accounts of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.459" starttime="20140618 14:27:01.453"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Clear each account balance ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.461" starttime="20140618 14:27:01.460"></status>
</kw>
<kw type="for" timeout="" name="${accountId} IN [ @{accountIds} ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" timeout="" name="${accountId} = 14768">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:27:01.480" level="INFO">CRCE Set Balance( subscriberId=14767, accountId=14768, balance=0)</msg>
<status status="PASS" endtime="20140618 14:27:01.480" starttime="20140618 14:27:01.477"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:01.496" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:01.497" starttime="20140618 14:27:01.493"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:01.498" starttime="20140618 14:27:01.491"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:01.503" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:01.504" starttime="20140618 14:27:01.501"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:01.505" starttime="20140618 14:27:01.499"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:01.511" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:01.511" starttime="20140618 14:27:01.508"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:01.512" starttime="20140618 14:27:01.506"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:01.512" starttime="20140618 14:27:01.484"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:01.518" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:01.519" starttime="20140618 14:27:01.513"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.522" starttime="20140618 14:27:01.520"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.526" starttime="20140618 14:27:01.524"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.530" starttime="20140618 14:27:01.527"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.533" starttime="20140618 14:27:01.531"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.536" starttime="20140618 14:27:01.534"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.540" starttime="20140618 14:27:01.538"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.544" starttime="20140618 14:27:01.542"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.548" starttime="20140618 14:27:01.545"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:01.553" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:27:01.847" level="INFO">14:27:01,839 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:01.847" starttime="20140618 14:27:01.551"></status>
</kw>
<msg timestamp="20140618 14:27:01.849" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:01.849" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:01.848" starttime="20140618 14:27:01.550"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:01.863" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:01.862" starttime="20140618 14:27:01.860"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:01.866" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:01.866" starttime="20140618 14:27:01.864"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:01.870" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:01.869" starttime="20140618 14:27:01.867"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:01.876" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:01.881" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:01.882" starttime="20140618 14:27:01.873"></status>
</kw>
<msg timestamp="20140618 14:27:01.883" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:01.883" level="INFO">${return_log_entry} = 2014-06-18 14:27:01,839 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:01.882" starttime="20140618 14:27:01.871"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.894" starttime="20140618 14:27:01.891"></status>
</kw>
<msg timestamp="20140618 14:27:01.895" level="INFO">${return_log_entry} = 2014-06-18 14:27:01,839 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:01.894" starttime="20140618 14:27:01.885"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.906" starttime="20140618 14:27:01.903"></status>
</kw>
<msg timestamp="20140618 14:27:01.907" level="INFO">${return_log_entry} = 2014-06-18 14:27:01,839 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:01.907" starttime="20140618 14:27:01.896"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.919" starttime="20140618 14:27:01.916"></status>
</kw>
<msg timestamp="20140618 14:27:01.920" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:01.919" starttime="20140618 14:27:01.908"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.936" starttime="20140618 14:27:01.933"></status>
</kw>
<msg timestamp="20140618 14:27:01.937" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:01.936" starttime="20140618 14:27:01.921"></status>
</kw>
<msg timestamp="20140618 14:27:01.938" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:01.938" starttime="20140618 14:27:01.851"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.950" starttime="20140618 14:27:01.948"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.952" starttime="20140618 14:27:01.951"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.954" starttime="20140618 14:27:01.953"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:01.972" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:01.973" starttime="20140618 14:27:01.965"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:01.973" starttime="20140618 14:27:01.963"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:01.974" starttime="20140618 14:27:01.955"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:01.974" starttime="20140618 14:27:01.940"></status>
</kw>
<msg timestamp="20140618 14:27:01.976" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:01.975" starttime="20140618 14:27:01.466"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:01.982" starttime="20140618 14:27:01.977"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:01.983" starttime="20140618 14:27:01.463"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 14771">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:27:02.001" level="INFO">CRCE Set Balance( subscriberId=14767, accountId=14771, balance=0)</msg>
<status status="PASS" endtime="20140618 14:27:02.001" starttime="20140618 14:27:01.997"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:02.019" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:02.019" starttime="20140618 14:27:02.016"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:02.020" starttime="20140618 14:27:02.014"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:02.026" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:02.027" starttime="20140618 14:27:02.023"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:02.028" starttime="20140618 14:27:02.021"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:02.033" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:02.034" starttime="20140618 14:27:02.030"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:02.035" starttime="20140618 14:27:02.029"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:02.035" starttime="20140618 14:27:02.006"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:02.040" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:02.040" starttime="20140618 14:27:02.036"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.044" starttime="20140618 14:27:02.041"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.048" starttime="20140618 14:27:02.045"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.052" starttime="20140618 14:27:02.049"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.054" starttime="20140618 14:27:02.053"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.057" starttime="20140618 14:27:02.055"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.060" starttime="20140618 14:27:02.058"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.064" starttime="20140618 14:27:02.062"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.068" starttime="20140618 14:27:02.065"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:02.073" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:27:02.422" level="INFO">14:27:02,416 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:02.423" starttime="20140618 14:27:02.071"></status>
</kw>
<msg timestamp="20140618 14:27:02.424" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:02.424" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:02.423" starttime="20140618 14:27:02.069"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:02.439" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:02.438" starttime="20140618 14:27:02.435"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:02.442" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:02.442" starttime="20140618 14:27:02.440"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:02.446" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:02.445" starttime="20140618 14:27:02.443"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:02.452" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:02.453" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:02.453" starttime="20140618 14:27:02.449"></status>
</kw>
<msg timestamp="20140618 14:27:02.455" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:02.455" level="INFO">${return_log_entry} = 2014-06-18 14:27:02,416 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:02.454" starttime="20140618 14:27:02.447"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.465" starttime="20140618 14:27:02.463"></status>
</kw>
<msg timestamp="20140618 14:27:02.466" level="INFO">${return_log_entry} = 2014-06-18 14:27:02,416 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:02.466" starttime="20140618 14:27:02.456"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.541" starttime="20140618 14:27:02.475"></status>
</kw>
<msg timestamp="20140618 14:27:02.543" level="INFO">${return_log_entry} = 2014-06-18 14:27:02,416 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:02.542" starttime="20140618 14:27:02.467"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.555" starttime="20140618 14:27:02.552"></status>
</kw>
<msg timestamp="20140618 14:27:02.556" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:02.555" starttime="20140618 14:27:02.544"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.572" starttime="20140618 14:27:02.569"></status>
</kw>
<msg timestamp="20140618 14:27:02.573" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:02.572" starttime="20140618 14:27:02.557"></status>
</kw>
<msg timestamp="20140618 14:27:02.574" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:02.574" starttime="20140618 14:27:02.426"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.586" starttime="20140618 14:27:02.585"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.588" starttime="20140618 14:27:02.587"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.591" starttime="20140618 14:27:02.590"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:02.605" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:02.606" starttime="20140618 14:27:02.602"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:02.606" starttime="20140618 14:27:02.599"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:02.607" starttime="20140618 14:27:02.592"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:02.607" starttime="20140618 14:27:02.576"></status>
</kw>
<msg timestamp="20140618 14:27:02.610" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:02.608" starttime="20140618 14:27:01.986"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.618" starttime="20140618 14:27:02.611"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:02.618" starttime="20140618 14:27:01.983"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 14770">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:27:02.636" level="INFO">CRCE Set Balance( subscriberId=14767, accountId=14770, balance=0)</msg>
<status status="PASS" endtime="20140618 14:27:02.637" starttime="20140618 14:27:02.633"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:02.653" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:02.654" starttime="20140618 14:27:02.650"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:02.654" starttime="20140618 14:27:02.648"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:02.660" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:02.661" starttime="20140618 14:27:02.657"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:02.661" starttime="20140618 14:27:02.655"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:02.667" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:02.668" starttime="20140618 14:27:02.664"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:02.669" starttime="20140618 14:27:02.663"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:02.669" starttime="20140618 14:27:02.640"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:02.674" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:02.674" starttime="20140618 14:27:02.670"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.678" starttime="20140618 14:27:02.675"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.682" starttime="20140618 14:27:02.679"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.686" starttime="20140618 14:27:02.683"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.689" starttime="20140618 14:27:02.687"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.692" starttime="20140618 14:27:02.690"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.695" starttime="20140618 14:27:02.693"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.699" starttime="20140618 14:27:02.697"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:02.703" starttime="20140618 14:27:02.700"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:02.708" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:27:02.989" level="INFO">14:27:02,980 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:02.990" starttime="20140618 14:27:02.706"></status>
</kw>
<msg timestamp="20140618 14:27:02.991" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:02.992" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:02.991" starttime="20140618 14:27:02.704"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:03.006" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:03.005" starttime="20140618 14:27:03.003"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:03.009" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:03.009" starttime="20140618 14:27:03.007"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:03.013" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:03.012" starttime="20140618 14:27:03.010"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:03.018" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:03.020" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:03.020" starttime="20140618 14:27:03.016"></status>
</kw>
<msg timestamp="20140618 14:27:03.021" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:03.022" level="INFO">${return_log_entry} = 2014-06-18 14:27:02,980 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:03.021" starttime="20140618 14:27:03.014"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.032" starttime="20140618 14:27:03.030"></status>
</kw>
<msg timestamp="20140618 14:27:03.033" level="INFO">${return_log_entry} = 2014-06-18 14:27:02,980 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:03.033" starttime="20140618 14:27:03.023"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.044" starttime="20140618 14:27:03.041"></status>
</kw>
<msg timestamp="20140618 14:27:03.045" level="INFO">${return_log_entry} = 2014-06-18 14:27:02,980 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:03.044" starttime="20140618 14:27:03.034"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.056" starttime="20140618 14:27:03.053"></status>
</kw>
<msg timestamp="20140618 14:27:03.057" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:03.057" starttime="20140618 14:27:03.046"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.072" starttime="20140618 14:27:03.070"></status>
</kw>
<msg timestamp="20140618 14:27:03.073" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:03.073" starttime="20140618 14:27:03.058"></status>
</kw>
<msg timestamp="20140618 14:27:03.076" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:03.074" starttime="20140618 14:27:02.994"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.087" starttime="20140618 14:27:03.085"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.089" starttime="20140618 14:27:03.088"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.091" starttime="20140618 14:27:03.090"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:03.105" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:03.105" starttime="20140618 14:27:03.101"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.106" starttime="20140618 14:27:03.099"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.106" starttime="20140618 14:27:03.092"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.107" starttime="20140618 14:27:03.077"></status>
</kw>
<msg timestamp="20140618 14:27:03.109" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:03.108" starttime="20140618 14:27:02.622"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.116" starttime="20140618 14:27:03.110"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.116" starttime="20140618 14:27:02.620"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 14769">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:27:03.134" level="INFO">CRCE Set Balance( subscriberId=14767, accountId=14769, balance=0)</msg>
<status status="PASS" endtime="20140618 14:27:03.135" starttime="20140618 14:27:03.131"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:03.150" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:03.151" starttime="20140618 14:27:03.148"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.152" starttime="20140618 14:27:03.146"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:03.157" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:03.158" starttime="20140618 14:27:03.155"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.159" starttime="20140618 14:27:03.153"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:03.164" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:03.165" starttime="20140618 14:27:03.162"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.166" starttime="20140618 14:27:03.160"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.166" starttime="20140618 14:27:03.138"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:03.171" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:03.171" starttime="20140618 14:27:03.167"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.175" starttime="20140618 14:27:03.172"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.178" starttime="20140618 14:27:03.176"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.182" starttime="20140618 14:27:03.180"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.185" starttime="20140618 14:27:03.183"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.188" starttime="20140618 14:27:03.186"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.192" starttime="20140618 14:27:03.189"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.196" starttime="20140618 14:27:03.193"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.199" starttime="20140618 14:27:03.197"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:03.204" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:27:03.483" level="INFO">14:27:03,478 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:03.484" starttime="20140618 14:27:03.202"></status>
</kw>
<msg timestamp="20140618 14:27:03.485" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:03.485" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:03.484" starttime="20140618 14:27:03.201"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:03.499" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:03.499" starttime="20140618 14:27:03.496"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:03.503" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:03.502" starttime="20140618 14:27:03.500"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:03.506" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:03.505" starttime="20140618 14:27:03.504"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:03.512" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:03.513" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:03.514" starttime="20140618 14:27:03.509"></status>
</kw>
<msg timestamp="20140618 14:27:03.515" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:03.516" level="INFO">${return_log_entry} = 2014-06-18 14:27:03,478 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:03.515" starttime="20140618 14:27:03.507"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.526" starttime="20140618 14:27:03.524"></status>
</kw>
<msg timestamp="20140618 14:27:03.527" level="INFO">${return_log_entry} = 2014-06-18 14:27:03,478 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:03.527" starttime="20140618 14:27:03.517"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.540" starttime="20140618 14:27:03.536"></status>
</kw>
<msg timestamp="20140618 14:27:03.541" level="INFO">${return_log_entry} = 2014-06-18 14:27:03,478 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:03.541" starttime="20140618 14:27:03.528"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.608" starttime="20140618 14:27:03.604"></status>
</kw>
<msg timestamp="20140618 14:27:03.609" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:03.609" starttime="20140618 14:27:03.542"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.626" starttime="20140618 14:27:03.623"></status>
</kw>
<msg timestamp="20140618 14:27:03.627" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:03.626" starttime="20140618 14:27:03.610"></status>
</kw>
<msg timestamp="20140618 14:27:03.628" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:03.628" starttime="20140618 14:27:03.487"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.640" starttime="20140618 14:27:03.639"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.642" starttime="20140618 14:27:03.641"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.645" starttime="20140618 14:27:03.643"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:03.659" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:03.660" starttime="20140618 14:27:03.655"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.660" starttime="20140618 14:27:03.653"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.661" starttime="20140618 14:27:03.645"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.661" starttime="20140618 14:27:03.630"></status>
</kw>
<msg timestamp="20140618 14:27:03.663" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:03.662" starttime="20140618 14:27:03.120"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.670" starttime="20140618 14:27:03.664"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.671" starttime="20140618 14:27:03.118"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.671" starttime="20140618 14:27:01.462"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.672" starttime="20140618 14:27:00.366"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.673" starttime="20140618 14:26:59.055"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances By Imsi">
<doc>Same as "CRCE Clear All Balances" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_DESTINATION_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId *****</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.687" starttime="20140618 14:27:03.686"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:03.715" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:03.715" starttime="20140618 14:27:03.712"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.716" starttime="20140618 14:27:03.710"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:03.722" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:03.723" starttime="20140618 14:27:03.719"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.724" starttime="20140618 14:27:03.717"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:03.729" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:03.730" starttime="20140618 14:27:03.726"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.731" starttime="20140618 14:27:03.725"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:03.731" starttime="20140618 14:27:03.702"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:03.735" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:03.736" starttime="20140618 14:27:03.732"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.739" starttime="20140618 14:27:03.737"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.743" starttime="20140618 14:27:03.741"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.747" starttime="20140618 14:27:03.744"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.749" starttime="20140618 14:27:03.748"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.752" starttime="20140618 14:27:03.750"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:03.755" starttime="20140618 14:27:03.753"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:03.760" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001']</msg>
<msg timestamp="20140618 14:27:04.072" level="INFO">14:27:04,034 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
14:27:04,039 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
14:27:04,043 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14772
14:27:04,046 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001
14:27:04,050 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
14:27:04,054 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
14:27:04,058 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
14:27:04,062 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140618 14:27:04.073" starttime="20140618 14:27:03.758"></status>
</kw>
<msg timestamp="20140618 14:27:04.076" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:04.076" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:04.075" starttime="20140618 14:27:03.757"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:04.089" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:04.089" starttime="20140618 14:27:04.086"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.092" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:04.092" starttime="20140618 14:27:04.090"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.096" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:04.095" starttime="20140618 14:27:04.093"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.101" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:04.102" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:04.103" starttime="20140618 14:27:04.098"></status>
</kw>
<msg timestamp="20140618 14:27:04.104" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:04.104" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,034 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:04.103" starttime="20140618 14:27:04.097"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.114" starttime="20140618 14:27:04.112"></status>
</kw>
<msg timestamp="20140618 14:27:04.116" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,034 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:04.115" starttime="20140618 14:27:04.105"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.126" starttime="20140618 14:27:04.124"></status>
</kw>
<msg timestamp="20140618 14:27:04.127" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,034 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:04.126" starttime="20140618 14:27:04.117"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.138" starttime="20140618 14:27:04.135"></status>
</kw>
<msg timestamp="20140618 14:27:04.139" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:04.139" starttime="20140618 14:27:04.128"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.155" starttime="20140618 14:27:04.153"></status>
</kw>
<msg timestamp="20140618 14:27:04.156" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:04.156" starttime="20140618 14:27:04.140"></status>
</kw>
<msg timestamp="20140618 14:27:04.157" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:04.157" starttime="20140618 14:27:04.078"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:04.171" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140618 14:27:04.170" starttime="20140618 14:27:04.168"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.174" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:04.174" starttime="20140618 14:27:04.172"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.177" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:04.177" starttime="20140618 14:27:04.175"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.183" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:04.184" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:04.185" starttime="20140618 14:27:04.180"></status>
</kw>
<msg timestamp="20140618 14:27:04.186" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:04.186" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,039 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:27:04.185" starttime="20140618 14:27:04.178"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.197" starttime="20140618 14:27:04.194"></status>
</kw>
<msg timestamp="20140618 14:27:04.198" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,039 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:27:04.197" starttime="20140618 14:27:04.187"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.208" starttime="20140618 14:27:04.206"></status>
</kw>
<msg timestamp="20140618 14:27:04.210" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,039 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:27:04.209" starttime="20140618 14:27:04.199"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.221" starttime="20140618 14:27:04.218"></status>
</kw>
<msg timestamp="20140618 14:27:04.222" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:27:04.222" starttime="20140618 14:27:04.211"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.237" starttime="20140618 14:27:04.235"></status>
</kw>
<msg timestamp="20140618 14:27:04.239" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:27:04.238" starttime="20140618 14:27:04.223"></status>
</kw>
<msg timestamp="20140618 14:27:04.240" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140618 14:27:04.240" starttime="20140618 14:27:04.159"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:04.253" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140618 14:27:04.253" starttime="20140618 14:27:04.250"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.256" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:04.256" starttime="20140618 14:27:04.254"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.260" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:04.259" starttime="20140618 14:27:04.257"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.266" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:04.267" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:04.268" starttime="20140618 14:27:04.263"></status>
</kw>
<msg timestamp="20140618 14:27:04.269" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:04.269" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,046 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140618 14:27:04.268" starttime="20140618 14:27:04.261"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.280" starttime="20140618 14:27:04.277"></status>
</kw>
<msg timestamp="20140618 14:27:04.281" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,046 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140618 14:27:04.280" starttime="20140618 14:27:04.270"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.292" starttime="20140618 14:27:04.289"></status>
</kw>
<msg timestamp="20140618 14:27:04.293" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,046 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140618 14:27:04.292" starttime="20140618 14:27:04.282"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.305" starttime="20140618 14:27:04.302"></status>
</kw>
<msg timestamp="20140618 14:27:04.306" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:27:04.305" starttime="20140618 14:27:04.294"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.323" starttime="20140618 14:27:04.320"></status>
</kw>
<msg timestamp="20140618 14:27:04.324" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:27:04.323" starttime="20140618 14:27:04.307"></status>
</kw>
<msg timestamp="20140618 14:27:04.325" level="INFO">${msisdn} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:27:04.325" starttime="20140618 14:27:04.242"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:04.338" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140618 14:27:04.338" starttime="20140618 14:27:04.335"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.342" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:04.341" starttime="20140618 14:27:04.339"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.345" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:04.345" starttime="20140618 14:27:04.343"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.351" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:04.352" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:04.352" starttime="20140618 14:27:04.348"></status>
</kw>
<msg timestamp="20140618 14:27:04.354" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:04.354" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,043 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14772</msg>
<status status="PASS" endtime="20140618 14:27:04.353" starttime="20140618 14:27:04.346"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.364" starttime="20140618 14:27:04.362"></status>
</kw>
<msg timestamp="20140618 14:27:04.365" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,043 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14772</msg>
<status status="PASS" endtime="20140618 14:27:04.365" starttime="20140618 14:27:04.355"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.376" starttime="20140618 14:27:04.374"></status>
</kw>
<msg timestamp="20140618 14:27:04.377" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,043 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14772</msg>
<status status="PASS" endtime="20140618 14:27:04.376" starttime="20140618 14:27:04.366"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.388" starttime="20140618 14:27:04.385"></status>
</kw>
<msg timestamp="20140618 14:27:04.389" level="INFO">${resultCode} = 14772</msg>
<status status="PASS" endtime="20140618 14:27:04.389" starttime="20140618 14:27:04.378"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.405" starttime="20140618 14:27:04.402"></status>
</kw>
<msg timestamp="20140618 14:27:04.406" level="INFO">${resultCode} = 14772</msg>
<status status="PASS" endtime="20140618 14:27:04.405" starttime="20140618 14:27:04.390"></status>
</kw>
<msg timestamp="20140618 14:27:04.407" level="INFO">${id} = 14772</msg>
<status status="PASS" endtime="20140618 14:27:04.407" starttime="20140618 14:27:04.327"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:04.420" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140618 14:27:04.420" starttime="20140618 14:27:04.417"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.424" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:04.423" starttime="20140618 14:27:04.421"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.427" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:04.426" starttime="20140618 14:27:04.424"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.432" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:04.434" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:04.434" starttime="20140618 14:27:04.430"></status>
</kw>
<msg timestamp="20140618 14:27:04.435" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:04.436" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,050 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:04.435" starttime="20140618 14:27:04.428"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.446" starttime="20140618 14:27:04.444"></status>
</kw>
<msg timestamp="20140618 14:27:04.447" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,050 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:04.446" starttime="20140618 14:27:04.437"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.458" starttime="20140618 14:27:04.455"></status>
</kw>
<msg timestamp="20140618 14:27:04.459" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,050 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:04.458" starttime="20140618 14:27:04.448"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.517" starttime="20140618 14:27:04.514"></status>
</kw>
<msg timestamp="20140618 14:27:04.519" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:04.518" starttime="20140618 14:27:04.504"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.535" starttime="20140618 14:27:04.533"></status>
</kw>
<msg timestamp="20140618 14:27:04.536" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:04.536" starttime="20140618 14:27:04.520"></status>
</kw>
<msg timestamp="20140618 14:27:04.538" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:04.537" starttime="20140618 14:27:04.409"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:04.552" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140618 14:27:04.552" starttime="20140618 14:27:04.549"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.555" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:04.555" starttime="20140618 14:27:04.553"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.559" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:04.558" starttime="20140618 14:27:04.556"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.565" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:04.566" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:04.567" starttime="20140618 14:27:04.562"></status>
</kw>
<msg timestamp="20140618 14:27:04.568" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:04.568" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,054 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:27:04.567" starttime="20140618 14:27:04.560"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.578" starttime="20140618 14:27:04.576"></status>
</kw>
<msg timestamp="20140618 14:27:04.579" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,054 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:27:04.579" starttime="20140618 14:27:04.569"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.589" starttime="20140618 14:27:04.587"></status>
</kw>
<msg timestamp="20140618 14:27:04.590" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,054 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:27:04.590" starttime="20140618 14:27:04.580"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.602" starttime="20140618 14:27:04.599"></status>
</kw>
<msg timestamp="20140618 14:27:04.603" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:27:04.602" starttime="20140618 14:27:04.591"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.618" starttime="20140618 14:27:04.616"></status>
</kw>
<msg timestamp="20140618 14:27:04.619" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:27:04.619" starttime="20140618 14:27:04.604"></status>
</kw>
<msg timestamp="20140618 14:27:04.621" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140618 14:27:04.620" starttime="20140618 14:27:04.541"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:04.634" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140618 14:27:04.634" starttime="20140618 14:27:04.631"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.638" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:04.637" starttime="20140618 14:27:04.635"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.641" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:04.640" starttime="20140618 14:27:04.639"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.647" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:04.648" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:04.649" starttime="20140618 14:27:04.644"></status>
</kw>
<msg timestamp="20140618 14:27:04.650" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:04.650" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,058 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:04.649" starttime="20140618 14:27:04.642"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.660" starttime="20140618 14:27:04.658"></status>
</kw>
<msg timestamp="20140618 14:27:04.662" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,058 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:04.661" starttime="20140618 14:27:04.651"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.672" starttime="20140618 14:27:04.670"></status>
</kw>
<msg timestamp="20140618 14:27:04.673" level="INFO">${return_log_entry} = 2014-06-18 14:27:04,058 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:04.673" starttime="20140618 14:27:04.663"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.684" starttime="20140618 14:27:04.682"></status>
</kw>
<msg timestamp="20140618 14:27:04.686" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:04.685" starttime="20140618 14:27:04.674"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.701" starttime="20140618 14:27:04.699"></status>
</kw>
<msg timestamp="20140618 14:27:04.702" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:04.702" starttime="20140618 14:27:04.686"></status>
</kw>
<msg timestamp="20140618 14:27:04.703" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:04.703" starttime="20140618 14:27:04.623"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.715" starttime="20140618 14:27:04.713"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.717" starttime="20140618 14:27:04.716"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.719" starttime="20140618 14:27:04.718"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:04.733" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:04.733" starttime="20140618 14:27:04.729"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:04.734" starttime="20140618 14:27:04.727"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:04.735" starttime="20140618 14:27:04.720"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:04.735" starttime="20140618 14:27:04.705"></status>
</kw>
<msg timestamp="20140618 14:27:04.739" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:27:04.740" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140618 14:27:04.740" level="INFO">${msisdnDummy} = 642041010001</msg>
<msg timestamp="20140618 14:27:04.740" level="INFO">${subscriberId} = 14772</msg>
<msg timestamp="20140618 14:27:04.741" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140618 14:27:04.741" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140618 14:27:04.741" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:04.738" starttime="20140618 14:27:03.691"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.748" starttime="20140618 14:27:04.742"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Clear All Balances" *****</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.751" starttime="20140618 14:27:04.749"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances">
<doc>Sets passed subscribers balance of all accounts to zero</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve all accountIds ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.764" starttime="20140618 14:27:04.763"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, @{accountIds} = subscriber-admin-support-resource.CRCE Get Accounts">
<doc>This is a delegator to the CRCE webservice operation getAccounts and returnes the list of the subscriber's acountIds</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.792" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:04.792" starttime="20140618 14:27:04.789"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:04.793" starttime="20140618 14:27:04.786"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.798" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:04.799" starttime="20140618 14:27:04.796"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:04.800" starttime="20140618 14:27:04.794"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.805" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:04.806" starttime="20140618 14:27:04.802"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:04.806" starttime="20140618 14:27:04.801"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:04.807" starttime="20140618 14:27:04.779"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:04.811" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:04.812" starttime="20140618 14:27:04.808"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.815" starttime="20140618 14:27:04.813"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.819" starttime="20140618 14:27:04.816"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.822" starttime="20140618 14:27:04.820"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.825" starttime="20140618 14:27:04.823"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getAccounts</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.827" starttime="20140618 14:27:04.825"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getAccounts.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:04.830" starttime="20140618 14:27:04.828"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:04.834" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772']</msg>
<msg timestamp="20140618 14:27:05.350" level="INFO">14:27:05,336 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK
14:27:05,341 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14773;14776;14775;14774</msg>
<status status="PASS" endtime="20140618 14:27:05.351" starttime="20140618 14:27:04.833"></status>
</kw>
<msg timestamp="20140618 14:27:05.353" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:05.354" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:05.352" starttime="20140618 14:27:04.831"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:05.367" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:05.366" starttime="20140618 14:27:05.364"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:05.371" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:05.370" starttime="20140618 14:27:05.368"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:05.374" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:05.373" starttime="20140618 14:27:05.372"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:05.380" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:05.381" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:05.381" starttime="20140618 14:27:05.377"></status>
</kw>
<msg timestamp="20140618 14:27:05.383" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:05.383" level="INFO">${return_log_entry} = 2014-06-18 14:27:05,336 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:05.382" starttime="20140618 14:27:05.375"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.393" starttime="20140618 14:27:05.391"></status>
</kw>
<msg timestamp="20140618 14:27:05.395" level="INFO">${return_log_entry} = 2014-06-18 14:27:05,336 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:05.394" starttime="20140618 14:27:05.384"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.405" starttime="20140618 14:27:05.403"></status>
</kw>
<msg timestamp="20140618 14:27:05.406" level="INFO">${return_log_entry} = 2014-06-18 14:27:05,336 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:05.406" starttime="20140618 14:27:05.396"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.417" starttime="20140618 14:27:05.415"></status>
</kw>
<msg timestamp="20140618 14:27:05.418" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:05.418" starttime="20140618 14:27:05.407"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.434" starttime="20140618 14:27:05.432"></status>
</kw>
<msg timestamp="20140618 14:27:05.435" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:05.435" starttime="20140618 14:27:05.419"></status>
</kw>
<msg timestamp="20140618 14:27:05.437" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:05.436" starttime="20140618 14:27:05.356"></status>
</kw>
<kw type="kw" timeout="" name="${csvAccountIds} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.accountIds</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:05.455" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.accountIds=</msg>
<status status="PASS" endtime="20140618 14:27:05.454" starttime="20140618 14:27:05.450"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:05.460" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:05.459" starttime="20140618 14:27:05.456"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:05.465" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:05.464" starttime="20140618 14:27:05.461"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:05.474" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:05.476" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:05.476" starttime="20140618 14:27:05.470"></status>
</kw>
<msg timestamp="20140618 14:27:05.478" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:05.479" level="INFO">${return_log_entry} = 2014-06-18 14:27:05,341 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14773;14776;14775;14774</msg>
<status status="PASS" endtime="20140618 14:27:05.477" starttime="20140618 14:27:05.467"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.493" starttime="20140618 14:27:05.489"></status>
</kw>
<msg timestamp="20140618 14:27:05.494" level="INFO">${return_log_entry} = 2014-06-18 14:27:05,341 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14773;14776;14775;14774</msg>
<status status="PASS" endtime="20140618 14:27:05.494" starttime="20140618 14:27:05.480"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.509" starttime="20140618 14:27:05.506"></status>
</kw>
<msg timestamp="20140618 14:27:05.510" level="INFO">${return_log_entry} = 2014-06-18 14:27:05,341 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14773;14776;14775;14774</msg>
<status status="PASS" endtime="20140618 14:27:05.510" starttime="20140618 14:27:05.496"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.528" starttime="20140618 14:27:05.523"></status>
</kw>
<msg timestamp="20140618 14:27:05.530" level="INFO">${resultCode} = 14773;14776;14775;14774</msg>
<status status="PASS" endtime="20140618 14:27:05.529" starttime="20140618 14:27:05.512"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.554" starttime="20140618 14:27:05.551"></status>
</kw>
<msg timestamp="20140618 14:27:05.556" level="INFO">${resultCode} = 14773;14776;14775;14774</msg>
<status status="PASS" endtime="20140618 14:27:05.555" starttime="20140618 14:27:05.531"></status>
</kw>
<msg timestamp="20140618 14:27:05.558" level="INFO">${csvAccountIds} = 14773;14776;14775;14774</msg>
<status status="PASS" endtime="20140618 14:27:05.558" starttime="20140618 14:27:05.439"></status>
</kw>
<kw type="kw" timeout="" name="@{accountIds} = String.Split String">
<doc>Splits the `string` using `separator` as a delimiter string.</doc>
<arguments>
<arg>${csvAccountIds}</arg>
<arg>;</arg>
</arguments>
<msg timestamp="20140618 14:27:05.564" level="INFO">@{accountIds} = [ 14773 | 14776 | 14775 | 14774 ]</msg>
<status status="PASS" endtime="20140618 14:27:05.563" starttime="20140618 14:27:05.560"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetAccounts</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.630" starttime="20140618 14:27:05.628"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.634" starttime="20140618 14:27:05.632"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.638" starttime="20140618 14:27:05.636"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:05.661" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetAccounts*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetAccounts*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:05.662" starttime="20140618 14:27:05.655"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:05.663" starttime="20140618 14:27:05.652"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:05.664" starttime="20140618 14:27:05.640"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:05.664" starttime="20140618 14:27:05.567"></status>
</kw>
<msg timestamp="20140618 14:27:05.669" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:27:05.669" level="INFO">@{accountIds} = [ 14773 | 14776 | 14775 | 14774 ]</msg>
<status status="PASS" endtime="20140618 14:27:05.666" starttime="20140618 14:27:04.767"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying accounts of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.679" starttime="20140618 14:27:05.671"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Clear each account balance ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.682" starttime="20140618 14:27:05.680"></status>
</kw>
<kw type="for" timeout="" name="${accountId} IN [ @{accountIds} ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" timeout="" name="${accountId} = 14773">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:27:05.709" level="INFO">CRCE Set Balance( subscriberId=14772, accountId=14773, balance=0)</msg>
<status status="PASS" endtime="20140618 14:27:05.710" starttime="20140618 14:27:05.704"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:05.733" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:05.734" starttime="20140618 14:27:05.729"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:05.735" starttime="20140618 14:27:05.726"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:05.744" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:05.745" starttime="20140618 14:27:05.740"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:05.746" starttime="20140618 14:27:05.737"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:05.755" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:05.757" starttime="20140618 14:27:05.751"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:05.758" starttime="20140618 14:27:05.748"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:05.759" starttime="20140618 14:27:05.715"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:05.766" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:05.766" starttime="20140618 14:27:05.760"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.773" starttime="20140618 14:27:05.768"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.779" starttime="20140618 14:27:05.774"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.785" starttime="20140618 14:27:05.780"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.789" starttime="20140618 14:27:05.786"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.792" starttime="20140618 14:27:05.790"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.799" starttime="20140618 14:27:05.794"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.804" starttime="20140618 14:27:05.800"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:05.810" starttime="20140618 14:27:05.806"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:05.816" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:27:06.160" level="INFO">14:27:06,150 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:06.160" starttime="20140618 14:27:05.814"></status>
</kw>
<msg timestamp="20140618 14:27:06.163" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:06.163" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:06.162" starttime="20140618 14:27:05.811"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:06.177" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:06.176" starttime="20140618 14:27:06.173"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:06.180" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:06.180" starttime="20140618 14:27:06.178"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:06.184" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:06.183" starttime="20140618 14:27:06.181"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:06.190" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:06.191" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:06.191" starttime="20140618 14:27:06.187"></status>
</kw>
<msg timestamp="20140618 14:27:06.192" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:06.193" level="INFO">${return_log_entry} = 2014-06-18 14:27:06,150 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:06.192" starttime="20140618 14:27:06.185"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.203" starttime="20140618 14:27:06.201"></status>
</kw>
<msg timestamp="20140618 14:27:06.204" level="INFO">${return_log_entry} = 2014-06-18 14:27:06,150 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:06.203" starttime="20140618 14:27:06.194"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.215" starttime="20140618 14:27:06.213"></status>
</kw>
<msg timestamp="20140618 14:27:06.216" level="INFO">${return_log_entry} = 2014-06-18 14:27:06,150 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:06.216" starttime="20140618 14:27:06.205"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.227" starttime="20140618 14:27:06.224"></status>
</kw>
<msg timestamp="20140618 14:27:06.228" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:06.228" starttime="20140618 14:27:06.217"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.245" starttime="20140618 14:27:06.243"></status>
</kw>
<msg timestamp="20140618 14:27:06.247" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:06.246" starttime="20140618 14:27:06.229"></status>
</kw>
<msg timestamp="20140618 14:27:06.248" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:06.247" starttime="20140618 14:27:06.165"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.259" starttime="20140618 14:27:06.258"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.262" starttime="20140618 14:27:06.260"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.264" starttime="20140618 14:27:06.262"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:06.278" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:06.278" starttime="20140618 14:27:06.274"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.279" starttime="20140618 14:27:06.272"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.279" starttime="20140618 14:27:06.265"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.280" starttime="20140618 14:27:06.250"></status>
</kw>
<msg timestamp="20140618 14:27:06.282" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:06.281" starttime="20140618 14:27:05.688"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.289" starttime="20140618 14:27:06.283"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.290" starttime="20140618 14:27:05.684"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 14776">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:27:06.308" level="INFO">CRCE Set Balance( subscriberId=14772, accountId=14776, balance=0)</msg>
<status status="PASS" endtime="20140618 14:27:06.308" starttime="20140618 14:27:06.305"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:06.324" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:06.325" starttime="20140618 14:27:06.321"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.325" starttime="20140618 14:27:06.319"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:06.331" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:06.332" starttime="20140618 14:27:06.328"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.332" starttime="20140618 14:27:06.326"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:06.338" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:06.338" starttime="20140618 14:27:06.335"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.339" starttime="20140618 14:27:06.333"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.339" starttime="20140618 14:27:06.312"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:06.344" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:06.344" starttime="20140618 14:27:06.340"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.348" starttime="20140618 14:27:06.345"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.352" starttime="20140618 14:27:06.349"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.355" starttime="20140618 14:27:06.353"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.358" starttime="20140618 14:27:06.356"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.360" starttime="20140618 14:27:06.358"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.364" starttime="20140618 14:27:06.361"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.368" starttime="20140618 14:27:06.365"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.371" starttime="20140618 14:27:06.369"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:06.376" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:27:06.651" level="INFO">14:27:06,645 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:06.652" starttime="20140618 14:27:06.374"></status>
</kw>
<msg timestamp="20140618 14:27:06.653" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:06.653" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:06.652" starttime="20140618 14:27:06.373"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:06.666" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:06.666" starttime="20140618 14:27:06.663"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:06.670" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:06.669" starttime="20140618 14:27:06.667"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:06.673" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:06.673" starttime="20140618 14:27:06.671"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:06.679" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:06.680" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:06.681" starttime="20140618 14:27:06.676"></status>
</kw>
<msg timestamp="20140618 14:27:06.682" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:06.682" level="INFO">${return_log_entry} = 2014-06-18 14:27:06,645 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:06.681" starttime="20140618 14:27:06.674"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.692" starttime="20140618 14:27:06.690"></status>
</kw>
<msg timestamp="20140618 14:27:06.693" level="INFO">${return_log_entry} = 2014-06-18 14:27:06,645 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:06.693" starttime="20140618 14:27:06.683"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.703" starttime="20140618 14:27:06.701"></status>
</kw>
<msg timestamp="20140618 14:27:06.705" level="INFO">${return_log_entry} = 2014-06-18 14:27:06,645 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:06.704" starttime="20140618 14:27:06.694"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.716" starttime="20140618 14:27:06.713"></status>
</kw>
<msg timestamp="20140618 14:27:06.717" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:06.717" starttime="20140618 14:27:06.706"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.733" starttime="20140618 14:27:06.730"></status>
</kw>
<msg timestamp="20140618 14:27:06.734" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:06.733" starttime="20140618 14:27:06.718"></status>
</kw>
<msg timestamp="20140618 14:27:06.735" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:06.735" starttime="20140618 14:27:06.655"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.798" starttime="20140618 14:27:06.797"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.801" starttime="20140618 14:27:06.799"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.803" starttime="20140618 14:27:06.801"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:06.818" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:06.818" starttime="20140618 14:27:06.813"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.819" starttime="20140618 14:27:06.811"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.820" starttime="20140618 14:27:06.804"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.820" starttime="20140618 14:27:06.737"></status>
</kw>
<msg timestamp="20140618 14:27:06.821" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:06.821" starttime="20140618 14:27:06.294"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.828" starttime="20140618 14:27:06.822"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.829" starttime="20140618 14:27:06.291"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 14775">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:27:06.846" level="INFO">CRCE Set Balance( subscriberId=14772, accountId=14775, balance=0)</msg>
<status status="PASS" endtime="20140618 14:27:06.846" starttime="20140618 14:27:06.842"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:06.861" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:06.862" starttime="20140618 14:27:06.858"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.862" starttime="20140618 14:27:06.857"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:06.868" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:06.869" starttime="20140618 14:27:06.865"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.869" starttime="20140618 14:27:06.863"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:06.875" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:06.876" starttime="20140618 14:27:06.872"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.876" starttime="20140618 14:27:06.870"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:06.877" starttime="20140618 14:27:06.849"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:06.881" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:06.881" starttime="20140618 14:27:06.878"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.885" starttime="20140618 14:27:06.882"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.889" starttime="20140618 14:27:06.886"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.893" starttime="20140618 14:27:06.890"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.895" starttime="20140618 14:27:06.894"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.897" starttime="20140618 14:27:06.896"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.901" starttime="20140618 14:27:06.898"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.904" starttime="20140618 14:27:06.902"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:06.908" starttime="20140618 14:27:06.905"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:06.912" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:27:07.190" level="INFO">14:27:07,180 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:07.191" starttime="20140618 14:27:06.911"></status>
</kw>
<msg timestamp="20140618 14:27:07.193" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:07.194" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:07.192" starttime="20140618 14:27:06.909"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:07.207" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:07.206" starttime="20140618 14:27:07.203"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:07.212" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:07.211" starttime="20140618 14:27:07.208"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:07.215" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:07.215" starttime="20140618 14:27:07.213"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:07.221" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:07.222" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:07.222" starttime="20140618 14:27:07.218"></status>
</kw>
<msg timestamp="20140618 14:27:07.223" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:07.224" level="INFO">${return_log_entry} = 2014-06-18 14:27:07,180 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:07.223" starttime="20140618 14:27:07.216"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.234" starttime="20140618 14:27:07.231"></status>
</kw>
<msg timestamp="20140618 14:27:07.235" level="INFO">${return_log_entry} = 2014-06-18 14:27:07,180 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:07.234" starttime="20140618 14:27:07.225"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.245" starttime="20140618 14:27:07.243"></status>
</kw>
<msg timestamp="20140618 14:27:07.246" level="INFO">${return_log_entry} = 2014-06-18 14:27:07,180 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:07.246" starttime="20140618 14:27:07.236"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.257" starttime="20140618 14:27:07.254"></status>
</kw>
<msg timestamp="20140618 14:27:07.258" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:07.258" starttime="20140618 14:27:07.247"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.274" starttime="20140618 14:27:07.272"></status>
</kw>
<msg timestamp="20140618 14:27:07.275" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:07.274" starttime="20140618 14:27:07.259"></status>
</kw>
<msg timestamp="20140618 14:27:07.292" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:07.291" starttime="20140618 14:27:07.195"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.303" starttime="20140618 14:27:07.302"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.305" starttime="20140618 14:27:07.304"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.307" starttime="20140618 14:27:07.306"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:07.321" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:07.323" starttime="20140618 14:27:07.317"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.323" starttime="20140618 14:27:07.315"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.324" starttime="20140618 14:27:07.308"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.325" starttime="20140618 14:27:07.294"></status>
</kw>
<msg timestamp="20140618 14:27:07.327" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:07.326" starttime="20140618 14:27:06.832"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.337" starttime="20140618 14:27:07.329"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.337" starttime="20140618 14:27:06.829"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 14774">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:27:07.365" level="INFO">CRCE Set Balance( subscriberId=14772, accountId=14774, balance=0)</msg>
<status status="PASS" endtime="20140618 14:27:07.366" starttime="20140618 14:27:07.360"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:07.389" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:07.391" starttime="20140618 14:27:07.385"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.392" starttime="20140618 14:27:07.383"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:07.400" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:07.401" starttime="20140618 14:27:07.396"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.402" starttime="20140618 14:27:07.393"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:07.410" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:07.411" starttime="20140618 14:27:07.406"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.412" starttime="20140618 14:27:07.403"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.413" starttime="20140618 14:27:07.371"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:07.419" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:07.420" starttime="20140618 14:27:07.414"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.425" starttime="20140618 14:27:07.421"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.431" starttime="20140618 14:27:07.427"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.437" starttime="20140618 14:27:07.433"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.441" starttime="20140618 14:27:07.439"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.444" starttime="20140618 14:27:07.442"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.450" starttime="20140618 14:27:07.446"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.456" starttime="20140618 14:27:07.452"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.460" starttime="20140618 14:27:07.457"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:07.464" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:27:07.788" level="INFO">14:27:07,780 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:07.789" starttime="20140618 14:27:07.463"></status>
</kw>
<msg timestamp="20140618 14:27:07.790" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:07.790" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:07.789" starttime="20140618 14:27:07.461"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:07.804" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:07.803" starttime="20140618 14:27:07.800"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:07.807" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:07.807" starttime="20140618 14:27:07.805"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:07.811" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:07.810" starttime="20140618 14:27:07.808"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:07.816" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:07.818" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:07.818" starttime="20140618 14:27:07.814"></status>
</kw>
<msg timestamp="20140618 14:27:07.819" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:07.819" level="INFO">${return_log_entry} = 2014-06-18 14:27:07,780 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:07.819" starttime="20140618 14:27:07.812"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.829" starttime="20140618 14:27:07.827"></status>
</kw>
<msg timestamp="20140618 14:27:07.830" level="INFO">${return_log_entry} = 2014-06-18 14:27:07,780 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:07.830" starttime="20140618 14:27:07.820"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.841" starttime="20140618 14:27:07.838"></status>
</kw>
<msg timestamp="20140618 14:27:07.842" level="INFO">${return_log_entry} = 2014-06-18 14:27:07,780 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:07.841" starttime="20140618 14:27:07.831"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.853" starttime="20140618 14:27:07.850"></status>
</kw>
<msg timestamp="20140618 14:27:07.854" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:07.853" starttime="20140618 14:27:07.843"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.921" starttime="20140618 14:27:07.867"></status>
</kw>
<msg timestamp="20140618 14:27:07.923" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:07.922" starttime="20140618 14:27:07.855"></status>
</kw>
<msg timestamp="20140618 14:27:07.924" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:07.924" starttime="20140618 14:27:07.792"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.936" starttime="20140618 14:27:07.934"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.938" starttime="20140618 14:27:07.937"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.940" starttime="20140618 14:27:07.939"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:07.954" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:07.955" starttime="20140618 14:27:07.950"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.955" starttime="20140618 14:27:07.948"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.956" starttime="20140618 14:27:07.941"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.956" starttime="20140618 14:27:07.926"></status>
</kw>
<msg timestamp="20140618 14:27:07.958" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:07.957" starttime="20140618 14:27:07.343"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.964" starttime="20140618 14:27:07.958"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.965" starttime="20140618 14:27:07.339"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.965" starttime="20140618 14:27:05.683"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.966" starttime="20140618 14:27:04.753"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:07.967" starttime="20140618 14:27:03.676"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance By Imsi">
<doc>Same as "CRCE Set Main Balance" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>10000000</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId for the passed imsi ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:07.981" starttime="20140618 14:27:07.980"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.009" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:08.010" starttime="20140618 14:27:08.006"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:08.010" starttime="20140618 14:27:08.004"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.016" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:08.016" starttime="20140618 14:27:08.013"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:08.017" starttime="20140618 14:27:08.011"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.022" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:08.023" starttime="20140618 14:27:08.020"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:08.024" starttime="20140618 14:27:08.018"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:08.024" starttime="20140618 14:27:07.996"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.029" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:08.030" starttime="20140618 14:27:08.026"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.033" starttime="20140618 14:27:08.031"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.037" starttime="20140618 14:27:08.034"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.041" starttime="20140618 14:27:08.038"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.043" starttime="20140618 14:27:08.041"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.045" starttime="20140618 14:27:08.044"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.049" starttime="20140618 14:27:08.046"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:08.053" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000']</msg>
<msg timestamp="20140618 14:27:08.383" level="INFO">14:27:08,338 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
14:27:08,343 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
14:27:08,348 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14767
14:27:08,353 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000
14:27:08,358 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
14:27:08,363 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
14:27:08,368 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
14:27:08,373 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140618 14:27:08.384" starttime="20140618 14:27:08.051"></status>
</kw>
<msg timestamp="20140618 14:27:08.385" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:08.385" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:08.384" starttime="20140618 14:27:08.050"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:08.398" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:08.397" starttime="20140618 14:27:08.395"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.401" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:08.401" starttime="20140618 14:27:08.399"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.405" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:08.404" starttime="20140618 14:27:08.402"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.410" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:08.411" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:08.412" starttime="20140618 14:27:08.407"></status>
</kw>
<msg timestamp="20140618 14:27:08.413" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:08.413" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,338 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:08.412" starttime="20140618 14:27:08.406"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.422" starttime="20140618 14:27:08.420"></status>
</kw>
<msg timestamp="20140618 14:27:08.423" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,338 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:08.423" starttime="20140618 14:27:08.414"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.433" starttime="20140618 14:27:08.431"></status>
</kw>
<msg timestamp="20140618 14:27:08.434" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,338 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:08.433" starttime="20140618 14:27:08.424"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.444" starttime="20140618 14:27:08.442"></status>
</kw>
<msg timestamp="20140618 14:27:08.445" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:08.445" starttime="20140618 14:27:08.435"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.459" starttime="20140618 14:27:08.457"></status>
</kw>
<msg timestamp="20140618 14:27:08.460" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:08.460" starttime="20140618 14:27:08.446"></status>
</kw>
<msg timestamp="20140618 14:27:08.462" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:08.461" starttime="20140618 14:27:08.387"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:08.474" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140618 14:27:08.474" starttime="20140618 14:27:08.471"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.477" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:08.477" starttime="20140618 14:27:08.475"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.480" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:08.480" starttime="20140618 14:27:08.478"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.486" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:08.487" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:08.487" starttime="20140618 14:27:08.483"></status>
</kw>
<msg timestamp="20140618 14:27:08.488" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:08.489" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,343 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:27:08.488" starttime="20140618 14:27:08.481"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.499" starttime="20140618 14:27:08.497"></status>
</kw>
<msg timestamp="20140618 14:27:08.500" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,343 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:27:08.499" starttime="20140618 14:27:08.490"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.510" starttime="20140618 14:27:08.508"></status>
</kw>
<msg timestamp="20140618 14:27:08.511" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,343 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:27:08.510" starttime="20140618 14:27:08.501"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.521" starttime="20140618 14:27:08.518"></status>
</kw>
<msg timestamp="20140618 14:27:08.522" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:27:08.522" starttime="20140618 14:27:08.512"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.536" starttime="20140618 14:27:08.534"></status>
</kw>
<msg timestamp="20140618 14:27:08.537" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:27:08.537" starttime="20140618 14:27:08.523"></status>
</kw>
<msg timestamp="20140618 14:27:08.539" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140618 14:27:08.538" starttime="20140618 14:27:08.463"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:08.551" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140618 14:27:08.551" starttime="20140618 14:27:08.548"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.555" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:08.554" starttime="20140618 14:27:08.552"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.558" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:08.558" starttime="20140618 14:27:08.555"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.564" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:08.565" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:08.565" starttime="20140618 14:27:08.561"></status>
</kw>
<msg timestamp="20140618 14:27:08.566" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:08.567" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,353 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140618 14:27:08.566" starttime="20140618 14:27:08.559"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.576" starttime="20140618 14:27:08.574"></status>
</kw>
<msg timestamp="20140618 14:27:08.577" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,353 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140618 14:27:08.576" starttime="20140618 14:27:08.568"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.587" starttime="20140618 14:27:08.584"></status>
</kw>
<msg timestamp="20140618 14:27:08.588" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,353 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140618 14:27:08.587" starttime="20140618 14:27:08.578"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.598" starttime="20140618 14:27:08.595"></status>
</kw>
<msg timestamp="20140618 14:27:08.599" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:27:08.598" starttime="20140618 14:27:08.589"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.613" starttime="20140618 14:27:08.611"></status>
</kw>
<msg timestamp="20140618 14:27:08.614" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:27:08.613" starttime="20140618 14:27:08.600"></status>
</kw>
<msg timestamp="20140618 14:27:08.615" level="INFO">${msisdn} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:27:08.614" starttime="20140618 14:27:08.540"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:08.627" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140618 14:27:08.627" starttime="20140618 14:27:08.625"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.630" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:08.630" starttime="20140618 14:27:08.628"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.633" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:08.633" starttime="20140618 14:27:08.631"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.638" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:08.640" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:08.640" starttime="20140618 14:27:08.636"></status>
</kw>
<msg timestamp="20140618 14:27:08.641" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:08.642" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,348 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14767</msg>
<status status="PASS" endtime="20140618 14:27:08.641" starttime="20140618 14:27:08.634"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.651" starttime="20140618 14:27:08.649"></status>
</kw>
<msg timestamp="20140618 14:27:08.652" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,348 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14767</msg>
<status status="PASS" endtime="20140618 14:27:08.651" starttime="20140618 14:27:08.643"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.661" starttime="20140618 14:27:08.659"></status>
</kw>
<msg timestamp="20140618 14:27:08.662" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,348 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14767</msg>
<status status="PASS" endtime="20140618 14:27:08.662" starttime="20140618 14:27:08.653"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.673" starttime="20140618 14:27:08.670"></status>
</kw>
<msg timestamp="20140618 14:27:08.674" level="INFO">${resultCode} = 14767</msg>
<status status="PASS" endtime="20140618 14:27:08.673" starttime="20140618 14:27:08.663"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.688" starttime="20140618 14:27:08.686"></status>
</kw>
<msg timestamp="20140618 14:27:08.689" level="INFO">${resultCode} = 14767</msg>
<status status="PASS" endtime="20140618 14:27:08.689" starttime="20140618 14:27:08.675"></status>
</kw>
<msg timestamp="20140618 14:27:08.690" level="INFO">${id} = 14767</msg>
<status status="PASS" endtime="20140618 14:27:08.690" starttime="20140618 14:27:08.617"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:08.703" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140618 14:27:08.703" starttime="20140618 14:27:08.700"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.706" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:08.706" starttime="20140618 14:27:08.704"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.709" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:08.709" starttime="20140618 14:27:08.707"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.715" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:08.716" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:08.716" starttime="20140618 14:27:08.712"></status>
</kw>
<msg timestamp="20140618 14:27:08.717" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:08.718" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,358 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:08.717" starttime="20140618 14:27:08.710"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.727" starttime="20140618 14:27:08.725"></status>
</kw>
<msg timestamp="20140618 14:27:08.728" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,358 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:08.728" starttime="20140618 14:27:08.719"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.738" starttime="20140618 14:27:08.736"></status>
</kw>
<msg timestamp="20140618 14:27:08.739" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,358 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:08.738" starttime="20140618 14:27:08.729"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.749" starttime="20140618 14:27:08.746"></status>
</kw>
<msg timestamp="20140618 14:27:08.750" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:08.749" starttime="20140618 14:27:08.740"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.806" starttime="20140618 14:27:08.804"></status>
</kw>
<msg timestamp="20140618 14:27:08.807" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:08.807" starttime="20140618 14:27:08.790"></status>
</kw>
<msg timestamp="20140618 14:27:08.808" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:08.808" starttime="20140618 14:27:08.692"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:08.822" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140618 14:27:08.821" starttime="20140618 14:27:08.819"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.825" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:08.824" starttime="20140618 14:27:08.823"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.828" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:08.827" starttime="20140618 14:27:08.826"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.833" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:08.834" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:08.835" starttime="20140618 14:27:08.831"></status>
</kw>
<msg timestamp="20140618 14:27:08.836" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:08.836" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,363 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:27:08.835" starttime="20140618 14:27:08.829"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.845" starttime="20140618 14:27:08.843"></status>
</kw>
<msg timestamp="20140618 14:27:08.846" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,363 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:27:08.846" starttime="20140618 14:27:08.837"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.856" starttime="20140618 14:27:08.854"></status>
</kw>
<msg timestamp="20140618 14:27:08.857" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,363 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:27:08.856" starttime="20140618 14:27:08.847"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.867" starttime="20140618 14:27:08.865"></status>
</kw>
<msg timestamp="20140618 14:27:08.868" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:27:08.868" starttime="20140618 14:27:08.858"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.883" starttime="20140618 14:27:08.881"></status>
</kw>
<msg timestamp="20140618 14:27:08.884" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:27:08.883" starttime="20140618 14:27:08.869"></status>
</kw>
<msg timestamp="20140618 14:27:08.885" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140618 14:27:08.884" starttime="20140618 14:27:08.811"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:08.898" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140618 14:27:08.897" starttime="20140618 14:27:08.895"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.901" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:08.901" starttime="20140618 14:27:08.899"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.904" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:08.904" starttime="20140618 14:27:08.902"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:08.909" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:08.910" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:08.911" starttime="20140618 14:27:08.907"></status>
</kw>
<msg timestamp="20140618 14:27:08.912" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:08.912" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,368 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:08.911" starttime="20140618 14:27:08.905"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.921" starttime="20140618 14:27:08.920"></status>
</kw>
<msg timestamp="20140618 14:27:08.922" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,368 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:08.922" starttime="20140618 14:27:08.913"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.932" starttime="20140618 14:27:08.930"></status>
</kw>
<msg timestamp="20140618 14:27:08.933" level="INFO">${return_log_entry} = 2014-06-18 14:27:08,368 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:08.932" starttime="20140618 14:27:08.923"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.943" starttime="20140618 14:27:08.940"></status>
</kw>
<msg timestamp="20140618 14:27:08.944" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:08.943" starttime="20140618 14:27:08.934"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.958" starttime="20140618 14:27:08.956"></status>
</kw>
<msg timestamp="20140618 14:27:08.959" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:08.958" starttime="20140618 14:27:08.945"></status>
</kw>
<msg timestamp="20140618 14:27:08.960" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:08.959" starttime="20140618 14:27:08.887"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.971" starttime="20140618 14:27:08.969"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.973" starttime="20140618 14:27:08.971"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:08.975" starttime="20140618 14:27:08.973"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:08.987" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:08.987" starttime="20140618 14:27:08.984"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:08.988" starttime="20140618 14:27:08.982"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:08.988" starttime="20140618 14:27:08.975"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:08.989" starttime="20140618 14:27:08.961"></status>
</kw>
<msg timestamp="20140618 14:27:08.993" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:27:08.993" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140618 14:27:08.993" level="INFO">${msisdnDummy} = 642041010000</msg>
<msg timestamp="20140618 14:27:08.994" level="INFO">${subscriberId} = 14767</msg>
<msg timestamp="20140618 14:27:08.994" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140618 14:27:08.994" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140618 14:27:08.995" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:08.991" starttime="20140618 14:27:07.984"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.001" starttime="20140618 14:27:08.996"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Set Main Balance" ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.004" starttime="20140618 14:27:09.003"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance">
<doc>Sets the passed subscriber's main account balance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve accountId of main account ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.017" starttime="20140618 14:27:09.015"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${accountId}, ${balanceDummy}, ${categoryDummy}, ${currencyIdDummy} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.042" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:09.043" starttime="20140618 14:27:09.039"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:09.043" starttime="20140618 14:27:09.038"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.048" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:09.049" starttime="20140618 14:27:09.046"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:09.050" starttime="20140618 14:27:09.044"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.055" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:09.055" starttime="20140618 14:27:09.052"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:09.056" starttime="20140618 14:27:09.051"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:09.056" starttime="20140618 14:27:09.030"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.060" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:09.060" starttime="20140618 14:27:09.057"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.064" starttime="20140618 14:27:09.061"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.067" starttime="20140618 14:27:09.065"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.071" starttime="20140618 14:27:09.068"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.073" starttime="20140618 14:27:09.072"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.075" starttime="20140618 14:27:09.074"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.079" starttime="20140618 14:27:09.076"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:09.083" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767']</msg>
<msg timestamp="20140618 14:27:09.379" level="INFO">14:27:09,347 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
14:27:09,353 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14768
14:27:09,358 INFO  [log] LowLevelOps.getMainAccount.output.balance=0
14:27:09,364 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
14:27:09,369 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:27:09.380" starttime="20140618 14:27:09.081"></status>
</kw>
<msg timestamp="20140618 14:27:09.381" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:09.381" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:09.380" starttime="20140618 14:27:09.080"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:09.394" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:09.393" starttime="20140618 14:27:09.391"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.397" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:09.396" starttime="20140618 14:27:09.394"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.400" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:09.399" starttime="20140618 14:27:09.397"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.405" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:09.411" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:09.411" starttime="20140618 14:27:09.403"></status>
</kw>
<msg timestamp="20140618 14:27:09.412" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:09.413" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,347 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:09.412" starttime="20140618 14:27:09.401"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.422" starttime="20140618 14:27:09.420"></status>
</kw>
<msg timestamp="20140618 14:27:09.423" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,347 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:09.423" starttime="20140618 14:27:09.414"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.433" starttime="20140618 14:27:09.431"></status>
</kw>
<msg timestamp="20140618 14:27:09.434" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,347 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:09.434" starttime="20140618 14:27:09.424"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.445" starttime="20140618 14:27:09.442"></status>
</kw>
<msg timestamp="20140618 14:27:09.446" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:09.445" starttime="20140618 14:27:09.435"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.460" starttime="20140618 14:27:09.458"></status>
</kw>
<msg timestamp="20140618 14:27:09.461" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:09.461" starttime="20140618 14:27:09.447"></status>
</kw>
<msg timestamp="20140618 14:27:09.462" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:09.462" starttime="20140618 14:27:09.383"></status>
</kw>
<kw type="kw" timeout="" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:09.475" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20140618 14:27:09.475" starttime="20140618 14:27:09.472"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.478" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:09.478" starttime="20140618 14:27:09.476"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.481" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:09.481" starttime="20140618 14:27:09.479"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.486" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:09.492" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:09.492" starttime="20140618 14:27:09.484"></status>
</kw>
<msg timestamp="20140618 14:27:09.494" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:09.494" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,353 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14768</msg>
<status status="PASS" endtime="20140618 14:27:09.493" starttime="20140618 14:27:09.482"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.503" starttime="20140618 14:27:09.501"></status>
</kw>
<msg timestamp="20140618 14:27:09.504" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,353 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14768</msg>
<status status="PASS" endtime="20140618 14:27:09.504" starttime="20140618 14:27:09.495"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.514" starttime="20140618 14:27:09.512"></status>
</kw>
<msg timestamp="20140618 14:27:09.515" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,353 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14768</msg>
<status status="PASS" endtime="20140618 14:27:09.514" starttime="20140618 14:27:09.505"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.525" starttime="20140618 14:27:09.523"></status>
</kw>
<msg timestamp="20140618 14:27:09.526" level="INFO">${resultCode} = 14768</msg>
<status status="PASS" endtime="20140618 14:27:09.526" starttime="20140618 14:27:09.516"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.540" starttime="20140618 14:27:09.538"></status>
</kw>
<msg timestamp="20140618 14:27:09.541" level="INFO">${resultCode} = 14768</msg>
<status status="PASS" endtime="20140618 14:27:09.541" starttime="20140618 14:27:09.527"></status>
</kw>
<msg timestamp="20140618 14:27:09.542" level="INFO">${accountId} = 14768</msg>
<status status="PASS" endtime="20140618 14:27:09.542" starttime="20140618 14:27:09.464"></status>
</kw>
<kw type="kw" timeout="" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:09.557" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20140618 14:27:09.556" starttime="20140618 14:27:09.554"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.560" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:09.559" starttime="20140618 14:27:09.558"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.563" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:09.562" starttime="20140618 14:27:09.561"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.568" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:09.573" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:09.574" starttime="20140618 14:27:09.566"></status>
</kw>
<msg timestamp="20140618 14:27:09.575" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:09.575" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,358 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140618 14:27:09.574" starttime="20140618 14:27:09.564"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.585" starttime="20140618 14:27:09.583"></status>
</kw>
<msg timestamp="20140618 14:27:09.586" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,358 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140618 14:27:09.586" starttime="20140618 14:27:09.576"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.596" starttime="20140618 14:27:09.594"></status>
</kw>
<msg timestamp="20140618 14:27:09.597" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,358 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140618 14:27:09.597" starttime="20140618 14:27:09.587"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.608" starttime="20140618 14:27:09.606"></status>
</kw>
<msg timestamp="20140618 14:27:09.609" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140618 14:27:09.609" starttime="20140618 14:27:09.598"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.666" starttime="20140618 14:27:09.663"></status>
</kw>
<msg timestamp="20140618 14:27:09.667" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140618 14:27:09.666" starttime="20140618 14:27:09.610"></status>
</kw>
<msg timestamp="20140618 14:27:09.668" level="INFO">${balance} = 0</msg>
<status status="PASS" endtime="20140618 14:27:09.668" starttime="20140618 14:27:09.544"></status>
</kw>
<kw type="kw" timeout="" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:09.681" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20140618 14:27:09.681" starttime="20140618 14:27:09.679"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.685" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:09.684" starttime="20140618 14:27:09.682"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.688" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:09.687" starttime="20140618 14:27:09.686"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.693" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:09.699" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:09.700" starttime="20140618 14:27:09.691"></status>
</kw>
<msg timestamp="20140618 14:27:09.701" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:09.701" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,364 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140618 14:27:09.701" starttime="20140618 14:27:09.689"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.711" starttime="20140618 14:27:09.709"></status>
</kw>
<msg timestamp="20140618 14:27:09.712" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,364 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140618 14:27:09.712" starttime="20140618 14:27:09.702"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.722" starttime="20140618 14:27:09.720"></status>
</kw>
<msg timestamp="20140618 14:27:09.723" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,364 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140618 14:27:09.723" starttime="20140618 14:27:09.713"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.734" starttime="20140618 14:27:09.732"></status>
</kw>
<msg timestamp="20140618 14:27:09.735" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140618 14:27:09.735" starttime="20140618 14:27:09.724"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.750" starttime="20140618 14:27:09.747"></status>
</kw>
<msg timestamp="20140618 14:27:09.751" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140618 14:27:09.750" starttime="20140618 14:27:09.736"></status>
</kw>
<msg timestamp="20140618 14:27:09.752" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20140618 14:27:09.752" starttime="20140618 14:27:09.670"></status>
</kw>
<kw type="kw" timeout="" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:09.765" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20140618 14:27:09.765" starttime="20140618 14:27:09.762"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.768" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:09.768" starttime="20140618 14:27:09.766"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.771" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:09.771" starttime="20140618 14:27:09.769"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.776" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:09.782" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:09.783" starttime="20140618 14:27:09.774"></status>
</kw>
<msg timestamp="20140618 14:27:09.784" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:09.784" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,369 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:27:09.783" starttime="20140618 14:27:09.772"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.794" starttime="20140618 14:27:09.792"></status>
</kw>
<msg timestamp="20140618 14:27:09.795" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,369 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:27:09.794" starttime="20140618 14:27:09.785"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.804" starttime="20140618 14:27:09.802"></status>
</kw>
<msg timestamp="20140618 14:27:09.805" level="INFO">${return_log_entry} = 2014-06-18 14:27:09,369 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:27:09.805" starttime="20140618 14:27:09.796"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.816" starttime="20140618 14:27:09.814"></status>
</kw>
<msg timestamp="20140618 14:27:09.817" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:27:09.817" starttime="20140618 14:27:09.806"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.832" starttime="20140618 14:27:09.830"></status>
</kw>
<msg timestamp="20140618 14:27:09.833" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:27:09.833" starttime="20140618 14:27:09.818"></status>
</kw>
<msg timestamp="20140618 14:27:09.834" level="INFO">${currencyId} = 1</msg>
<status status="PASS" endtime="20140618 14:27:09.834" starttime="20140618 14:27:09.754"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.845" starttime="20140618 14:27:09.844"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.847" starttime="20140618 14:27:09.846"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.850" starttime="20140618 14:27:09.848"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:09.866" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:09.867" starttime="20140618 14:27:09.859"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:09.868" starttime="20140618 14:27:09.857"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:09.868" starttime="20140618 14:27:09.850"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:09.868" starttime="20140618 14:27:09.836"></status>
</kw>
<msg timestamp="20140618 14:27:09.871" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:27:09.871" level="INFO">${accountId} = 14768</msg>
<msg timestamp="20140618 14:27:09.872" level="INFO">${balanceDummy} = 0</msg>
<msg timestamp="20140618 14:27:09.872" level="INFO">${categoryDummy} = MAIN</msg>
<msg timestamp="20140618 14:27:09.872" level="INFO">${currencyIdDummy} = 1</msg>
<status status="PASS" endtime="20140618 14:27:09.870" starttime="20140618 14:27:09.019"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying main account of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.879" starttime="20140618 14:27:09.873"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Set new balance ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.881" starttime="20140618 14:27:09.880"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:27:09.896" level="INFO">CRCE Set Balance( subscriberId=14767, accountId=14768, balance=10000000)</msg>
<status status="PASS" endtime="20140618 14:27:09.897" starttime="20140618 14:27:09.893"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.912" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:09.912" starttime="20140618 14:27:09.909"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:09.913" starttime="20140618 14:27:09.907"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.918" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:09.919" starttime="20140618 14:27:09.916"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:09.920" starttime="20140618 14:27:09.914"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.925" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:09.926" starttime="20140618 14:27:09.922"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:09.926" starttime="20140618 14:27:09.921"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:09.927" starttime="20140618 14:27:09.900"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:09.931" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:09.931" starttime="20140618 14:27:09.928"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.934" starttime="20140618 14:27:09.932"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.938" starttime="20140618 14:27:09.935"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.942" starttime="20140618 14:27:09.939"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.944" starttime="20140618 14:27:09.943"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.946" starttime="20140618 14:27:09.945"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.950" starttime="20140618 14:27:09.947"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.954" starttime="20140618 14:27:09.951"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:09.957" starttime="20140618 14:27:09.955"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:09.961" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000']</msg>
<msg timestamp="20140618 14:27:10.235" level="INFO">14:27:10,225 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:10.236" starttime="20140618 14:27:09.960"></status>
</kw>
<msg timestamp="20140618 14:27:10.241" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:10.242" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:10.238" starttime="20140618 14:27:09.958"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:10.255" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:10.254" starttime="20140618 14:27:10.252"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.258" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:10.258" starttime="20140618 14:27:10.256"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.261" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:10.261" starttime="20140618 14:27:10.259"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.267" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:10.268" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:10.268" starttime="20140618 14:27:10.264"></status>
</kw>
<msg timestamp="20140618 14:27:10.269" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:10.270" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,225 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:10.269" starttime="20140618 14:27:10.262"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.279" starttime="20140618 14:27:10.277"></status>
</kw>
<msg timestamp="20140618 14:27:10.280" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,225 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:10.280" starttime="20140618 14:27:10.271"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.290" starttime="20140618 14:27:10.288"></status>
</kw>
<msg timestamp="20140618 14:27:10.291" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,225 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:10.291" starttime="20140618 14:27:10.281"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.301" starttime="20140618 14:27:10.299"></status>
</kw>
<msg timestamp="20140618 14:27:10.302" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:10.302" starttime="20140618 14:27:10.292"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.317" starttime="20140618 14:27:10.315"></status>
</kw>
<msg timestamp="20140618 14:27:10.318" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:10.317" starttime="20140618 14:27:10.303"></status>
</kw>
<msg timestamp="20140618 14:27:10.319" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:10.319" starttime="20140618 14:27:10.243"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.330" starttime="20140618 14:27:10.329"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.332" starttime="20140618 14:27:10.331"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.334" starttime="20140618 14:27:10.333"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:10.346" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:10.347" starttime="20140618 14:27:10.343"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:10.348" starttime="20140618 14:27:10.341"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:10.348" starttime="20140618 14:27:10.335"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:10.349" starttime="20140618 14:27:10.321"></status>
</kw>
<msg timestamp="20140618 14:27:10.351" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:10.349" starttime="20140618 14:27:09.883"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Setting balance of main accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.357" starttime="20140618 14:27:10.352"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:10.358" starttime="20140618 14:27:09.006"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:10.359" starttime="20140618 14:27:07.970"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance By Imsi">
<doc>Same as "CRCE Set Main Balance" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_DESTINATION_IMSI}</arg>
<arg>10000000</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId for the passed imsi ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.372" starttime="20140618 14:27:10.371"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.398" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:10.398" starttime="20140618 14:27:10.395"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:10.399" starttime="20140618 14:27:10.393"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.404" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:10.405" starttime="20140618 14:27:10.401"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:10.405" starttime="20140618 14:27:10.400"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.410" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:10.411" starttime="20140618 14:27:10.408"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:10.411" starttime="20140618 14:27:10.406"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:10.412" starttime="20140618 14:27:10.386"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.416" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:10.416" starttime="20140618 14:27:10.413"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.419" starttime="20140618 14:27:10.417"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.423" starttime="20140618 14:27:10.420"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.426" starttime="20140618 14:27:10.424"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.428" starttime="20140618 14:27:10.427"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.431" starttime="20140618 14:27:10.429"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.434" starttime="20140618 14:27:10.432"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:10.438" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001']</msg>
<msg timestamp="20140618 14:27:10.804" level="INFO">14:27:10,755 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
14:27:10,761 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
14:27:10,766 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14772
14:27:10,772 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001
14:27:10,777 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
14:27:10,783 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
14:27:10,788 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
14:27:10,794 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140618 14:27:10.805" starttime="20140618 14:27:10.437"></status>
</kw>
<msg timestamp="20140618 14:27:10.806" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:10.806" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:10.806" starttime="20140618 14:27:10.435"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:10.820" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:10.819" starttime="20140618 14:27:10.817"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.823" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:10.822" starttime="20140618 14:27:10.821"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.826" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:10.825" starttime="20140618 14:27:10.824"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.831" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:10.832" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:10.832" starttime="20140618 14:27:10.828"></status>
</kw>
<msg timestamp="20140618 14:27:10.833" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:10.834" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,755 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:10.833" starttime="20140618 14:27:10.827"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.843" starttime="20140618 14:27:10.841"></status>
</kw>
<msg timestamp="20140618 14:27:10.844" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,755 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:10.844" starttime="20140618 14:27:10.835"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.854" starttime="20140618 14:27:10.852"></status>
</kw>
<msg timestamp="20140618 14:27:10.855" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,755 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:10.854" starttime="20140618 14:27:10.845"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.865" starttime="20140618 14:27:10.862"></status>
</kw>
<msg timestamp="20140618 14:27:10.866" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:10.865" starttime="20140618 14:27:10.856"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.879" starttime="20140618 14:27:10.877"></status>
</kw>
<msg timestamp="20140618 14:27:10.880" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:10.880" starttime="20140618 14:27:10.866"></status>
</kw>
<msg timestamp="20140618 14:27:10.881" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:10.881" starttime="20140618 14:27:10.809"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:10.894" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140618 14:27:10.893" starttime="20140618 14:27:10.891"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.897" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:10.896" starttime="20140618 14:27:10.895"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.899" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:10.899" starttime="20140618 14:27:10.897"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.904" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:10.906" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:10.906" starttime="20140618 14:27:10.902"></status>
</kw>
<msg timestamp="20140618 14:27:10.907" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:10.907" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,761 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:27:10.907" starttime="20140618 14:27:10.900"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.917" starttime="20140618 14:27:10.915"></status>
</kw>
<msg timestamp="20140618 14:27:10.918" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,761 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:27:10.918" starttime="20140618 14:27:10.908"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.928" starttime="20140618 14:27:10.926"></status>
</kw>
<msg timestamp="20140618 14:27:10.928" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,761 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:27:10.928" starttime="20140618 14:27:10.919"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.938" starttime="20140618 14:27:10.936"></status>
</kw>
<msg timestamp="20140618 14:27:10.939" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:27:10.939" starttime="20140618 14:27:10.929"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.953" starttime="20140618 14:27:10.951"></status>
</kw>
<msg timestamp="20140618 14:27:10.954" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:27:10.953" starttime="20140618 14:27:10.940"></status>
</kw>
<msg timestamp="20140618 14:27:10.955" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140618 14:27:10.954" starttime="20140618 14:27:10.883"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:10.967" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140618 14:27:10.967" starttime="20140618 14:27:10.964"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.970" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:10.970" starttime="20140618 14:27:10.968"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.973" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:10.972" starttime="20140618 14:27:10.971"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:10.978" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:10.979" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:10.980" starttime="20140618 14:27:10.976"></status>
</kw>
<msg timestamp="20140618 14:27:10.981" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:10.981" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,772 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140618 14:27:10.980" starttime="20140618 14:27:10.974"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:10.990" starttime="20140618 14:27:10.988"></status>
</kw>
<msg timestamp="20140618 14:27:10.991" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,772 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140618 14:27:10.990" starttime="20140618 14:27:10.982"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.000" starttime="20140618 14:27:10.998"></status>
</kw>
<msg timestamp="20140618 14:27:11.003" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,772 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140618 14:27:11.002" starttime="20140618 14:27:10.992"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.013" starttime="20140618 14:27:11.011"></status>
</kw>
<msg timestamp="20140618 14:27:11.014" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:27:11.014" starttime="20140618 14:27:11.004"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.029" starttime="20140618 14:27:11.027"></status>
</kw>
<msg timestamp="20140618 14:27:11.029" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:27:11.029" starttime="20140618 14:27:11.015"></status>
</kw>
<msg timestamp="20140618 14:27:11.031" level="INFO">${msisdn} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:27:11.030" starttime="20140618 14:27:10.956"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:11.044" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140618 14:27:11.043" starttime="20140618 14:27:11.041"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.047" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:11.046" starttime="20140618 14:27:11.045"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.050" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:11.049" starttime="20140618 14:27:11.048"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.055" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:11.056" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:11.056" starttime="20140618 14:27:11.052"></status>
</kw>
<msg timestamp="20140618 14:27:11.057" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:11.058" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,766 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14772</msg>
<status status="PASS" endtime="20140618 14:27:11.057" starttime="20140618 14:27:11.051"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.066" starttime="20140618 14:27:11.065"></status>
</kw>
<msg timestamp="20140618 14:27:11.067" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,766 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14772</msg>
<status status="PASS" endtime="20140618 14:27:11.067" starttime="20140618 14:27:11.058"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.077" starttime="20140618 14:27:11.075"></status>
</kw>
<msg timestamp="20140618 14:27:11.078" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,766 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14772</msg>
<status status="PASS" endtime="20140618 14:27:11.077" starttime="20140618 14:27:11.068"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.088" starttime="20140618 14:27:11.085"></status>
</kw>
<msg timestamp="20140618 14:27:11.089" level="INFO">${resultCode} = 14772</msg>
<status status="PASS" endtime="20140618 14:27:11.088" starttime="20140618 14:27:11.079"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.102" starttime="20140618 14:27:11.100"></status>
</kw>
<msg timestamp="20140618 14:27:11.103" level="INFO">${resultCode} = 14772</msg>
<status status="PASS" endtime="20140618 14:27:11.103" starttime="20140618 14:27:11.089"></status>
</kw>
<msg timestamp="20140618 14:27:11.104" level="INFO">${id} = 14772</msg>
<status status="PASS" endtime="20140618 14:27:11.104" starttime="20140618 14:27:11.033"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:11.116" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140618 14:27:11.116" starttime="20140618 14:27:11.114"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.119" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:11.119" starttime="20140618 14:27:11.117"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.122" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:11.122" starttime="20140618 14:27:11.120"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.127" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:11.128" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:11.129" starttime="20140618 14:27:11.125"></status>
</kw>
<msg timestamp="20140618 14:27:11.130" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:11.130" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,777 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:11.129" starttime="20140618 14:27:11.123"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.139" starttime="20140618 14:27:11.137"></status>
</kw>
<msg timestamp="20140618 14:27:11.140" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,777 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:11.140" starttime="20140618 14:27:11.131"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.149" starttime="20140618 14:27:11.147"></status>
</kw>
<msg timestamp="20140618 14:27:11.150" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,777 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:11.150" starttime="20140618 14:27:11.141"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.160" starttime="20140618 14:27:11.158"></status>
</kw>
<msg timestamp="20140618 14:27:11.161" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:11.160" starttime="20140618 14:27:11.151"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.175" starttime="20140618 14:27:11.173"></status>
</kw>
<msg timestamp="20140618 14:27:11.175" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:11.175" starttime="20140618 14:27:11.162"></status>
</kw>
<msg timestamp="20140618 14:27:11.177" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:27:11.176" starttime="20140618 14:27:11.106"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:11.189" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140618 14:27:11.189" starttime="20140618 14:27:11.186"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.192" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:11.192" starttime="20140618 14:27:11.190"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.195" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:11.195" starttime="20140618 14:27:11.193"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.200" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:11.201" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:11.201" starttime="20140618 14:27:11.198"></status>
</kw>
<msg timestamp="20140618 14:27:11.202" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:11.203" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,783 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:27:11.202" starttime="20140618 14:27:11.196"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.212" starttime="20140618 14:27:11.210"></status>
</kw>
<msg timestamp="20140618 14:27:11.213" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,783 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:27:11.212" starttime="20140618 14:27:11.204"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.222" starttime="20140618 14:27:11.220"></status>
</kw>
<msg timestamp="20140618 14:27:11.223" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,783 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:27:11.222" starttime="20140618 14:27:11.214"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.232" starttime="20140618 14:27:11.230"></status>
</kw>
<msg timestamp="20140618 14:27:11.233" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:27:11.233" starttime="20140618 14:27:11.224"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.247" starttime="20140618 14:27:11.245"></status>
</kw>
<msg timestamp="20140618 14:27:11.248" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:27:11.248" starttime="20140618 14:27:11.234"></status>
</kw>
<msg timestamp="20140618 14:27:11.249" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140618 14:27:11.249" starttime="20140618 14:27:11.178"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:11.262" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140618 14:27:11.261" starttime="20140618 14:27:11.259"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.265" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:11.264" starttime="20140618 14:27:11.263"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.268" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:11.267" starttime="20140618 14:27:11.266"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.272" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:11.274" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:11.274" starttime="20140618 14:27:11.270"></status>
</kw>
<msg timestamp="20140618 14:27:11.275" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:11.275" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,788 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:11.275" starttime="20140618 14:27:11.269"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.285" starttime="20140618 14:27:11.283"></status>
</kw>
<msg timestamp="20140618 14:27:11.285" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,788 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:11.285" starttime="20140618 14:27:11.276"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.295" starttime="20140618 14:27:11.293"></status>
</kw>
<msg timestamp="20140618 14:27:11.296" level="INFO">${return_log_entry} = 2014-06-18 14:27:10,788 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:11.295" starttime="20140618 14:27:11.286"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.306" starttime="20140618 14:27:11.303"></status>
</kw>
<msg timestamp="20140618 14:27:11.307" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:11.306" starttime="20140618 14:27:11.297"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.321" starttime="20140618 14:27:11.319"></status>
</kw>
<msg timestamp="20140618 14:27:11.322" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:11.321" starttime="20140618 14:27:11.308"></status>
</kw>
<msg timestamp="20140618 14:27:11.323" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:11.322" starttime="20140618 14:27:11.251"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.334" starttime="20140618 14:27:11.332"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.336" starttime="20140618 14:27:11.334"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.338" starttime="20140618 14:27:11.336"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:11.391" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:11.392" starttime="20140618 14:27:11.387"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:11.393" starttime="20140618 14:27:11.384"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:11.393" starttime="20140618 14:27:11.338"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:11.394" starttime="20140618 14:27:11.324"></status>
</kw>
<msg timestamp="20140618 14:27:11.397" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:27:11.397" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140618 14:27:11.398" level="INFO">${msisdnDummy} = 642041010001</msg>
<msg timestamp="20140618 14:27:11.398" level="INFO">${subscriberId} = 14772</msg>
<msg timestamp="20140618 14:27:11.398" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140618 14:27:11.399" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140618 14:27:11.399" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:27:11.396" starttime="20140618 14:27:10.375"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.405" starttime="20140618 14:27:11.400"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Set Main Balance" ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.407" starttime="20140618 14:27:11.406"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance">
<doc>Sets the passed subscriber's main account balance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve accountId of main account ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.420" starttime="20140618 14:27:11.418"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${accountId}, ${balanceDummy}, ${categoryDummy}, ${currencyIdDummy} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.445" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:11.445" starttime="20140618 14:27:11.442"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:11.446" starttime="20140618 14:27:11.441"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.451" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:11.452" starttime="20140618 14:27:11.448"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:11.452" starttime="20140618 14:27:11.447"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.457" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:11.458" starttime="20140618 14:27:11.455"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:11.458" starttime="20140618 14:27:11.453"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:11.459" starttime="20140618 14:27:11.433"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.462" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:11.463" starttime="20140618 14:27:11.459"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.466" starttime="20140618 14:27:11.464"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.470" starttime="20140618 14:27:11.467"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.473" starttime="20140618 14:27:11.471"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.476" starttime="20140618 14:27:11.474"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.478" starttime="20140618 14:27:11.476"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.481" starttime="20140618 14:27:11.479"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:11.485" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14772']</msg>
<msg timestamp="20140618 14:27:11.791" level="INFO">14:27:11,756 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
14:27:11,762 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14773
14:27:11,768 INFO  [log] LowLevelOps.getMainAccount.output.balance=0
14:27:11,775 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
14:27:11,781 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:27:11.792" starttime="20140618 14:27:11.484"></status>
</kw>
<msg timestamp="20140618 14:27:11.793" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:11.793" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:11.793" starttime="20140618 14:27:11.482"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:11.806" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:11.805" starttime="20140618 14:27:11.803"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.809" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:11.809" starttime="20140618 14:27:11.807"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.812" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:11.812" starttime="20140618 14:27:11.810"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.817" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:11.818" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:11.819" starttime="20140618 14:27:11.815"></status>
</kw>
<msg timestamp="20140618 14:27:11.820" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:11.820" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,756 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:11.819" starttime="20140618 14:27:11.813"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.829" starttime="20140618 14:27:11.827"></status>
</kw>
<msg timestamp="20140618 14:27:11.830" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,756 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:11.830" starttime="20140618 14:27:11.821"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.840" starttime="20140618 14:27:11.838"></status>
</kw>
<msg timestamp="20140618 14:27:11.841" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,756 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:11.840" starttime="20140618 14:27:11.831"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.850" starttime="20140618 14:27:11.848"></status>
</kw>
<msg timestamp="20140618 14:27:11.851" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:11.851" starttime="20140618 14:27:11.842"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.865" starttime="20140618 14:27:11.863"></status>
</kw>
<msg timestamp="20140618 14:27:11.866" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:11.865" starttime="20140618 14:27:11.852"></status>
</kw>
<msg timestamp="20140618 14:27:11.867" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:11.867" starttime="20140618 14:27:11.795"></status>
</kw>
<kw type="kw" timeout="" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:11.880" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20140618 14:27:11.879" starttime="20140618 14:27:11.877"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.883" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:11.882" starttime="20140618 14:27:11.880"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.885" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:11.885" starttime="20140618 14:27:11.883"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.890" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:11.892" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:11.892" starttime="20140618 14:27:11.888"></status>
</kw>
<msg timestamp="20140618 14:27:11.893" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:11.893" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,762 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14773</msg>
<status status="PASS" endtime="20140618 14:27:11.893" starttime="20140618 14:27:11.886"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.902" starttime="20140618 14:27:11.900"></status>
</kw>
<msg timestamp="20140618 14:27:11.903" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,762 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14773</msg>
<status status="PASS" endtime="20140618 14:27:11.903" starttime="20140618 14:27:11.894"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.912" starttime="20140618 14:27:11.910"></status>
</kw>
<msg timestamp="20140618 14:27:11.913" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,762 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14773</msg>
<status status="PASS" endtime="20140618 14:27:11.913" starttime="20140618 14:27:11.904"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.924" starttime="20140618 14:27:11.921"></status>
</kw>
<msg timestamp="20140618 14:27:11.925" level="INFO">${resultCode} = 14773</msg>
<status status="PASS" endtime="20140618 14:27:11.924" starttime="20140618 14:27:11.914"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.938" starttime="20140618 14:27:11.936"></status>
</kw>
<msg timestamp="20140618 14:27:11.939" level="INFO">${resultCode} = 14773</msg>
<status status="PASS" endtime="20140618 14:27:11.939" starttime="20140618 14:27:11.926"></status>
</kw>
<msg timestamp="20140618 14:27:11.940" level="INFO">${accountId} = 14773</msg>
<status status="PASS" endtime="20140618 14:27:11.940" starttime="20140618 14:27:11.869"></status>
</kw>
<kw type="kw" timeout="" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:11.953" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20140618 14:27:11.952" starttime="20140618 14:27:11.950"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.956" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:11.955" starttime="20140618 14:27:11.954"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.959" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:11.958" starttime="20140618 14:27:11.957"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:11.964" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:11.965" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:11.965" starttime="20140618 14:27:11.961"></status>
</kw>
<msg timestamp="20140618 14:27:11.966" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:11.967" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,768 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140618 14:27:11.966" starttime="20140618 14:27:11.960"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.976" starttime="20140618 14:27:11.974"></status>
</kw>
<msg timestamp="20140618 14:27:11.977" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,768 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140618 14:27:11.976" starttime="20140618 14:27:11.967"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.986" starttime="20140618 14:27:11.984"></status>
</kw>
<msg timestamp="20140618 14:27:11.987" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,768 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140618 14:27:11.987" starttime="20140618 14:27:11.978"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:11.997" starttime="20140618 14:27:11.994"></status>
</kw>
<msg timestamp="20140618 14:27:11.998" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140618 14:27:11.997" starttime="20140618 14:27:11.988"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:12.012" starttime="20140618 14:27:12.010"></status>
</kw>
<msg timestamp="20140618 14:27:12.014" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140618 14:27:12.012" starttime="20140618 14:27:11.998"></status>
</kw>
<msg timestamp="20140618 14:27:12.016" level="INFO">${balance} = 0</msg>
<status status="PASS" endtime="20140618 14:27:12.015" starttime="20140618 14:27:11.942"></status>
</kw>
<kw type="kw" timeout="" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:12.028" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20140618 14:27:12.028" starttime="20140618 14:27:12.026"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:12.031" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:12.031" starttime="20140618 14:27:12.029"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:12.034" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:12.034" starttime="20140618 14:27:12.032"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:12.039" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:12.040" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:12.041" starttime="20140618 14:27:12.037"></status>
</kw>
<msg timestamp="20140618 14:27:12.042" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:12.042" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,775 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140618 14:27:12.041" starttime="20140618 14:27:12.035"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:12.051" starttime="20140618 14:27:12.049"></status>
</kw>
<msg timestamp="20140618 14:27:12.052" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,775 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140618 14:27:12.051" starttime="20140618 14:27:12.043"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:12.061" starttime="20140618 14:27:12.059"></status>
</kw>
<msg timestamp="20140618 14:27:12.062" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,775 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140618 14:27:12.061" starttime="20140618 14:27:12.053"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:12.072" starttime="20140618 14:27:12.069"></status>
</kw>
<msg timestamp="20140618 14:27:12.073" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140618 14:27:12.072" starttime="20140618 14:27:12.063"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.356" starttime="20140618 14:27:13.354"></status>
</kw>
<msg timestamp="20140618 14:27:13.357" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140618 14:27:13.357" starttime="20140618 14:27:13.340"></status>
</kw>
<msg timestamp="20140618 14:27:13.359" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20140618 14:27:13.358" starttime="20140618 14:27:12.017"></status>
</kw>
<kw type="kw" timeout="" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:13.372" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20140618 14:27:13.372" starttime="20140618 14:27:13.369"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.375" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:13.375" starttime="20140618 14:27:13.373"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.378" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:13.378" starttime="20140618 14:27:13.376"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.383" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:13.385" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:13.385" starttime="20140618 14:27:13.381"></status>
</kw>
<msg timestamp="20140618 14:27:13.386" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:13.386" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,781 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:27:13.386" starttime="20140618 14:27:13.379"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.395" starttime="20140618 14:27:13.393"></status>
</kw>
<msg timestamp="20140618 14:27:13.396" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,781 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:27:13.396" starttime="20140618 14:27:13.387"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.405" starttime="20140618 14:27:13.403"></status>
</kw>
<msg timestamp="20140618 14:27:13.406" level="INFO">${return_log_entry} = 2014-06-18 14:27:11,781 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:27:13.406" starttime="20140618 14:27:13.397"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.416" starttime="20140618 14:27:13.414"></status>
</kw>
<msg timestamp="20140618 14:27:13.417" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:27:13.416" starttime="20140618 14:27:13.407"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.430" starttime="20140618 14:27:13.428"></status>
</kw>
<msg timestamp="20140618 14:27:13.431" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:27:13.431" starttime="20140618 14:27:13.418"></status>
</kw>
<msg timestamp="20140618 14:27:13.432" level="INFO">${currencyId} = 1</msg>
<status status="PASS" endtime="20140618 14:27:13.432" starttime="20140618 14:27:13.361"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.443" starttime="20140618 14:27:13.442"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.445" starttime="20140618 14:27:13.444"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.447" starttime="20140618 14:27:13.446"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:13.458" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:13.459" starttime="20140618 14:27:13.455"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.460" starttime="20140618 14:27:13.454"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.460" starttime="20140618 14:27:13.448"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.461" starttime="20140618 14:27:13.434"></status>
</kw>
<msg timestamp="20140618 14:27:13.464" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:27:13.464" level="INFO">${accountId} = 14773</msg>
<msg timestamp="20140618 14:27:13.464" level="INFO">${balanceDummy} = 0</msg>
<msg timestamp="20140618 14:27:13.465" level="INFO">${categoryDummy} = MAIN</msg>
<msg timestamp="20140618 14:27:13.465" level="INFO">${currencyIdDummy} = 1</msg>
<status status="PASS" endtime="20140618 14:27:13.462" starttime="20140618 14:27:11.422"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying main account of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.471" starttime="20140618 14:27:13.466"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Set new balance ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.473" starttime="20140618 14:27:13.472"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:27:13.489" level="INFO">CRCE Set Balance( subscriberId=14772, accountId=14773, balance=10000000)</msg>
<status status="PASS" endtime="20140618 14:27:13.489" starttime="20140618 14:27:13.486"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.503" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:13.504" starttime="20140618 14:27:13.501"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.505" starttime="20140618 14:27:13.499"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.510" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:13.510" starttime="20140618 14:27:13.507"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.511" starttime="20140618 14:27:13.506"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.516" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:13.517" starttime="20140618 14:27:13.514"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.517" starttime="20140618 14:27:13.512"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.518" starttime="20140618 14:27:13.492"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.522" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:13.522" starttime="20140618 14:27:13.519"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.526" starttime="20140618 14:27:13.523"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.529" starttime="20140618 14:27:13.527"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.533" starttime="20140618 14:27:13.530"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.535" starttime="20140618 14:27:13.534"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.537" starttime="20140618 14:27:13.536"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.540" starttime="20140618 14:27:13.538"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.544" starttime="20140618 14:27:13.541"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.547" starttime="20140618 14:27:13.545"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:13.551" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=10000000']</msg>
<msg timestamp="20140618 14:27:13.822" level="INFO">14:27:13,811 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:13.822" starttime="20140618 14:27:13.549"></status>
</kw>
<msg timestamp="20140618 14:27:13.823" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:13.823" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:27:13.823" starttime="20140618 14:27:13.548"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:27:13.836" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:27:13.835" starttime="20140618 14:27:13.833"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.839" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:27:13.838" starttime="20140618 14:27:13.837"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.842" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:27:13.841" starttime="20140618 14:27:13.840"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.847" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:27:13.848" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:27:13.848" starttime="20140618 14:27:13.844"></status>
</kw>
<msg timestamp="20140618 14:27:13.849" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:27:13.850" level="INFO">${return_log_entry} = 2014-06-18 14:27:13,811 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:13.849" starttime="20140618 14:27:13.843"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.858" starttime="20140618 14:27:13.857"></status>
</kw>
<msg timestamp="20140618 14:27:13.859" level="INFO">${return_log_entry} = 2014-06-18 14:27:13,811 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:13.859" starttime="20140618 14:27:13.850"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.869" starttime="20140618 14:27:13.867"></status>
</kw>
<msg timestamp="20140618 14:27:13.870" level="INFO">${return_log_entry} = 2014-06-18 14:27:13,811 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:27:13.869" starttime="20140618 14:27:13.860"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.880" starttime="20140618 14:27:13.878"></status>
</kw>
<msg timestamp="20140618 14:27:13.881" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:13.880" starttime="20140618 14:27:13.871"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.894" starttime="20140618 14:27:13.892"></status>
</kw>
<msg timestamp="20140618 14:27:13.895" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:13.895" starttime="20140618 14:27:13.882"></status>
</kw>
<msg timestamp="20140618 14:27:13.896" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:13.896" starttime="20140618 14:27:13.825"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.907" starttime="20140618 14:27:13.906"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.909" starttime="20140618 14:27:13.908"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.911" starttime="20140618 14:27:13.910"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:27:13.923" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:27:13.923" starttime="20140618 14:27:13.920"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.924" starttime="20140618 14:27:13.918"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.924" starttime="20140618 14:27:13.912"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.925" starttime="20140618 14:27:13.898"></status>
</kw>
<msg timestamp="20140618 14:27:13.926" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:27:13.926" starttime="20140618 14:27:13.476"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Setting balance of main accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.932" starttime="20140618 14:27:13.927"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.933" starttime="20140618 14:27:11.409"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.934" starttime="20140618 14:27:10.361"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Expose corresponding suite global variables *******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:13.936" starttime="20140618 14:27:13.935"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.939" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_IMSI} = 530052041010000</msg>
<status status="PASS" endtime="20140618 14:27:13.939" starttime="20140618 14:27:13.937"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.942" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:27:13.942" starttime="20140618 14:27:13.940"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_DESTINATION_IMSI}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.944" level="INFO">${FAKE_DESTINATION_IMSI} = 530052041010001</msg>
<status status="PASS" endtime="20140618 14:27:13.945" starttime="20140618 14:27:13.943"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_DESTINATION_MSISDN}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.947" level="INFO">${FAKE_DESTINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:27:13.948" starttime="20140618 14:27:13.946"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_ORIGINATION_MSISDN}</arg>
</arguments>
<msg timestamp="20140618 14:27:13.950" level="INFO">${FAKE_ORIGINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:27:13.950" starttime="20140618 14:27:13.948"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.951" starttime="20140618 14:26:56.486"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.952" starttime="20140618 14:26:56.479"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:13.953" starttime="20140618 14:26:08.567"></status>
</kw>
<test id="s1-t1" timeout="" name="Run Prepaid MOC Short Duration">
<kw type="setup" timeout="" name="InewSelenium2Library.Open Browser">
<doc></doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>firefox</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:17.886" starttime="20140618 14:27:13.972"></status>
</kw>
<kw type="kw" timeout="" name="Run Voice Call And Check Phone 1 Ticket">
<doc>Runs a call between the passed devices and checks if a CRM ticket was written for Phone 1</doc>
<arguments>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${ATTACHED_PHONE_1_MSISDN_FORMAT1}</arg>
</arguments>
<kw type="kw" timeout="" name="${phone1_imsi} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'=='true'</arg>
<arg>Set Variable</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:17.910" starttime="20140618 14:27:17.908"></status>
</kw>
<msg timestamp="20140618 14:27:17.911" level="INFO">${phone1_imsi} = 530052041010000</msg>
<status status="PASS" endtime="20140618 14:27:17.910" starttime="20140618 14:27:17.902"></status>
</kw>
<kw type="kw" timeout="" name="${marker_ticket_timestamp}, ${type_dummy} = crm_support-resource.CRM Get Latest Ticket">
<doc>queries the passed subscriber's latest CRM ticket</doc>
<arguments>
<arg>${phone1_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Login">
<doc>Logs into the CRM portal via login page</doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>${CRM_PORTAL_USER}</arg>
<arg>${CRM_PORTAL_PSWD}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Ensure beeing in Login page ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:17.932" starttime="20140618 14:27:17.931"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140618 14:27:18.021" level="INFO">${isLoginPage} = true</msg>
<status status="PASS" endtime="20140618 14:27:18.019" starttime="20140618 14:27:17.933"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>CRM Portal Logout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:18.027" starttime="20140618 14:27:18.022"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140618 14:27:18.045" level="INFO">${isLoginPage} = true</msg>
<status status="PASS" endtime="20140618 14:27:18.044" starttime="20140618 14:27:18.028"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>Go To</arg>
<arg>${crm_portal_login_url}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:18.075" starttime="20140618 14:27:18.046"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
<arg>timeout=10s</arg>
<arg>error=Login Page not displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:18.098" starttime="20140618 14:27:18.078"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** log in to CRM as Customer Care user ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:18.100" starttime="20140618 14:27:18.099"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogin</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:18.106" starttime="20140618 14:27:18.101"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=username</arg>
<arg>${crm_portal_user}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:18.223" starttime="20140618 14:27:18.107"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=password</arg>
<arg>${crm_portal_pswd}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:18.311" starttime="20140618 14:27:18.224"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:19.920" starttime="20140618 14:27:18.313"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogin</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:19.931" starttime="20140618 14:27:19.923"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:19.932" starttime="20140618 14:27:17.923"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** CRM: in dashboard enter IMSI and press Submit</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:19.936" starttime="20140618 14:27:19.934"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterInput</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:19.946" starttime="20140618 14:27:19.938"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=filter_imsi</arg>
<arg>${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:20.055" starttime="20140618 14:27:19.947"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** in History tab, get the interesting cells of the first data row</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:20.060" starttime="20140618 14:27:20.058"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterSubmit</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:20.066" starttime="20140618 14:27:20.061"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Submit']</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:21.671" starttime="20140618 14:27:20.067"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
<arg>timeout=10s</arg>
<arg>error=History Tab NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:21.784" starttime="20140618 14:27:21.675"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:22.004" starttime="20140618 14:27:21.786"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Select Frame">
<doc></doc>
<arguments>
<arg>contentiframe</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:22.335" starttime="20140618 14:27:22.008"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
<arg>timeout=10s</arg>
<arg>error=History Search button NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:22.360" starttime="20140618 14:27:22.337"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:22.477" starttime="20140618 14:27:22.362"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>timeout=10s</arg>
<arg>error=History Table not displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:23.035" starttime="20140618 14:27:22.479"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_NEWEST_ROW} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140618 14:27:23.040" level="INFO">${HISTORY_NEWEST_ROW} = 2</msg>
<status status="PASS" endtime="20140618 14:27:23.040" starttime="20140618 14:27:23.037"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_DATETIME_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20140618 14:27:23.046" level="INFO">${HISTORY_DATETIME_COL} = 1</msg>
<status status="PASS" endtime="20140618 14:27:23.045" starttime="20140618 14:27:23.042"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CALLINGCALLED_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140618 14:27:23.051" level="INFO">${HISTORY_CALLINGCALLED_COL} = 2</msg>
<status status="PASS" endtime="20140618 14:27:23.050" starttime="20140618 14:27:23.047"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_TYPE_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20140618 14:27:23.056" level="INFO">${HISTORY_TYPE_COL} = 5</msg>
<status status="PASS" endtime="20140618 14:27:23.055" starttime="20140618 14:27:23.053"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CANNEL_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>9</arg>
</arguments>
<msg timestamp="20140618 14:27:23.061" level="INFO">${HISTORY_CANNEL_COL} = 9</msg>
<status status="PASS" endtime="20140618 14:27:23.060" starttime="20140618 14:27:23.058"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${datetime} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_DATETIME_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_DATETIME_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:23.249" starttime="20140618 14:27:23.067"></status>
</kw>
<msg timestamp="20140618 14:27:23.251" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:27:23.252" level="INFO">${datetime} = 19/06/2014 - 02:24:26</msg>
<status status="PASS" endtime="20140618 14:27:23.250" starttime="20140618 14:27:23.063"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${callingcalled} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CALLINGCALLED_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CALLINGCALLED_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:23.646" starttime="20140618 14:27:23.257"></status>
</kw>
<msg timestamp="20140618 14:27:23.648" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:27:23.648" level="INFO">${callingcalled} = </msg>
<status status="PASS" endtime="20140618 14:27:23.647" starttime="20140618 14:27:23.254"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${type} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_TYPE_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_TYPE_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:23.749" starttime="20140618 14:27:23.653"></status>
</kw>
<msg timestamp="20140618 14:27:23.751" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:27:23.752" level="INFO">${type} = tariffPlanTopup</msg>
<status status="PASS" endtime="20140618 14:27:23.750" starttime="20140618 14:27:23.650"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${channel} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CANNEL_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CANNEL_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:23.850" starttime="20140618 14:27:23.756"></status>
</kw>
<msg timestamp="20140618 14:27:23.852" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:27:23.853" level="INFO">${channel} = AUTOMATIC</msg>
<status status="PASS" endtime="20140618 14:27:23.851" starttime="20140618 14:27:23.754"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Unselect Frame">
<doc></doc>
<arguments>
</arguments>
<status status="PASS" endtime="20140618 14:27:23.874" starttime="20140618 14:27:23.855"></status>
</kw>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Logout">
<doc>Clicks the logout button of the current page if it is available</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:23.889" starttime="20140618 14:27:23.884"></status>
</kw>
<kw type="kw" timeout="" name="${pageContainsLogout} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<msg timestamp="20140618 14:27:23.910" level="INFO">${pageContainsLogout} = true</msg>
<status status="PASS" endtime="20140618 14:27:23.909" starttime="20140618 14:27:23.890"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pageContainsLogout}'=='true'</arg>
<arg>Click Element</arg>
<arg>id=logout</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:24.461" starttime="20140618 14:27:23.917"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:24.464" starttime="20140618 14:27:23.911"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:24.474" starttime="20140618 14:27:24.467"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:24.474" starttime="20140618 14:27:23.876"></status>
</kw>
<msg timestamp="20140618 14:27:24.478" level="INFO">${marker_ticket_timestamp} = 19/06/2014 - 02:24:26</msg>
<msg timestamp="20140618 14:27:24.479" level="INFO">${type_dummy} = [u'', u'tariffPlanTopup', u'AUTOMATIC']</msg>
<status status="PASS" endtime="20140618 14:27:24.477" starttime="20140618 14:27:17.914"></status>
</kw>
<kw type="kw" timeout="" name="Run Voice Call">
<doc>executes a one slice voice call between 2 Phones</doc>
<arguments>
<arg>${cg_device_imsi}</arg>
<arg>${cd_device_imsi}</arg>
<arg>${dial_msisdn}</arg>
</arguments>
<kw type="kw" timeout="" name="${call_duration_millis} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>1000*${MOC_SLICE_SIZE_SECS}</arg>
</arguments>
<msg timestamp="20140618 14:27:24.496" level="INFO">${call_duration_millis} = 60000</msg>
<status status="PASS" endtime="20140618 14:27:24.495" starttime="20140618 14:27:24.489"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Voice Call">
<doc>executes a voice call between 2 Android Phones attached to an Android Remoting Server.</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${cg_device_imsi}</arg>
<arg>${cd_device_imsi}</arg>
<arg>${dial_msisdn}</arg>
<arg>${call_duration_millis}</arg>
<arg>released_by_cg=true</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:24.525" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:24.526" starttime="20140618 14:27:24.522"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:24.527" starttime="20140618 14:27:24.521"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:24.532" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:24.533" starttime="20140618 14:27:24.529"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:24.533" starttime="20140618 14:27:24.528"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:27:24.539" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:27:24.540" starttime="20140618 14:27:24.536"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:24.540" starttime="20140618 14:27:24.534"></status>
</kw>
<status status="PASS" endtime="20140618 14:27:24.541" starttime="20140618 14:27:24.513"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:27:24.545" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:27:24.545" starttime="20140618 14:27:24.541"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:24.549" starttime="20140618 14:27:24.546"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:24.552" starttime="20140618 14:27:24.550"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:24.554" starttime="20140618 14:27:24.553"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Call</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:24.557" starttime="20140618 14:27:24.555"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.cgDeviceImsi=${cg_device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:24.560" starttime="20140618 14:27:24.557"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.cdDeviceImsi=${cd_device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:24.563" starttime="20140618 14:27:24.561"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.dialMsisdn=${dial_msisdn}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:24.566" starttime="20140618 14:27:24.564"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.callDurationMillis=${call_duration_millis}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:24.570" starttime="20140618 14:27:24.567"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.releasedByCg=${released_by_cg}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:27:24.573" starttime="20140618 14:27:24.571"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:27:24.577" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Call.input.cgDeviceImsi=232033013972239', u'Testcases.Call.input.cdDeviceImsi=232033013972240', u'Testcases.Call.input.dialMsisdn=0676844901411', u'Testcases.Call.input.callDurationMillis=60000', u'Testcases.Call.input.releasedByCg=true']</msg>
<msg timestamp="20140618 14:28:34.674" level="INFO">14:28:34,635 INFO  [log] Testcases.Call.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:34.675" starttime="20140618 14:27:24.576"></status>
</kw>
<msg timestamp="20140618 14:28:34.678" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:34.678" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:28:34.677" starttime="20140618 14:27:24.574"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Call.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:28:34.692" level="INFO">${return_marker} = Testcases.Call.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:28:34.692" starttime="20140618 14:28:34.690"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:34.696" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:28:34.695" starttime="20140618 14:28:34.693"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:34.699" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:28:34.698" starttime="20140618 14:28:34.697"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:28:34.704" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:34.709" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:28:34.710" starttime="20140618 14:28:34.702"></status>
</kw>
<msg timestamp="20140618 14:28:34.711" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:34.711" level="INFO">${return_log_entry} = 2014-06-18 14:28:34,635 INFO  [log] Testcases.Call.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:34.710" starttime="20140618 14:28:34.700"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:34.721" starttime="20140618 14:28:34.719"></status>
</kw>
<msg timestamp="20140618 14:28:34.722" level="INFO">${return_log_entry} = 2014-06-18 14:28:34,635 INFO  [log] Testcases.Call.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:34.721" starttime="20140618 14:28:34.712"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:34.731" starttime="20140618 14:28:34.729"></status>
</kw>
<msg timestamp="20140618 14:28:34.732" level="INFO">${return_log_entry} = 2014-06-18 14:28:34,635 INFO  [log] Testcases.Call.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:34.732" starttime="20140618 14:28:34.723"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:34.742" starttime="20140618 14:28:34.740"></status>
</kw>
<msg timestamp="20140618 14:28:34.743" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:34.743" starttime="20140618 14:28:34.733"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:34.757" starttime="20140618 14:28:34.755"></status>
</kw>
<msg timestamp="20140618 14:28:34.758" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:34.758" starttime="20140618 14:28:34.744"></status>
</kw>
<msg timestamp="20140618 14:28:34.759" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:34.759" starttime="20140618 14:28:34.681"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Call</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:34.771" starttime="20140618 14:28:34.769"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:34.773" starttime="20140618 14:28:34.771"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:34.775" starttime="20140618 14:28:34.774"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:28:34.790" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Call*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Call*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:28:34.791" starttime="20140618 14:28:34.784"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:34.792" starttime="20140618 14:28:34.782"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:34.792" starttime="20140618 14:28:34.776"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:34.793" starttime="20140618 14:28:34.761"></status>
</kw>
<msg timestamp="20140618 14:28:34.795" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:34.794" starttime="20140618 14:27:24.500"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20140618 14:28:34.798" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:28:34.798" starttime="20140618 14:28:34.796"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'=='true'</arg>
<arg>Fake Voice Call Impact On Testbed</arg>
</arguments>
<kw type="kw" timeout="" name="Fake Voice Call Impact On Testbed">
<doc>Runs a CG MTC 1s session towards the faked phone 1</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${rc} = cg_support-resource.CG Run MTC 1s">
<doc>Runs a standard (i.e. non-roaming) MTC 1s session</doc>
<arguments>
<arg>${FAKE_ORIGINATION_MSISDN}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MTC REQ QUEUE}</arg>
<arg>${AMQ-SIG MTC RES QUEUE}</arg>
</arguments>
<kw type="kw" timeout="" name="${rc} = cg_support-resource.CG Run Standard MTC CGS">
<doc>Runs a standard (non-roaming) MTC session (meaning a session that needs only mscAddress and mtcAPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>mtc1s</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_imsi}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_mtc_req}</arg>
<arg>${queue_mtc_res}</arg>
</arguments>
<kw type="kw" timeout="" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20140618 14:28:34.847" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-subscribers.csv</msg>
<status status="PASS" endtime="20140618 14:28:34.846" starttime="20140618 14:28:34.843"></status>
</kw>
<kw type="kw" timeout="" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20140618 14:28:34.851" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-fleXml.csv</msg>
<status status="PASS" endtime="20140618 14:28:34.850" starttime="20140618 14:28:34.848"></status>
</kw>
<kw type="kw" timeout="" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20140618 14:28:34.855" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-workspace.ini</msg>
<status status="PASS" endtime="20140618 14:28:34.854" starttime="20140618 14:28:34.852"></status>
</kw>
<kw type="kw" timeout="" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20140618 14:28:34.859" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/mtc1s.cgs</msg>
<status status="PASS" endtime="20140618 14:28:34.858" starttime="20140618 14:28:34.856"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:34.861" starttime="20140618 14:28:34.860"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cd_imsi};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20140618 14:28:34.866" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:34.867" starttime="20140618 14:28:34.862"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:34.869" starttime="20140618 14:28:34.868"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mtcAPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20140618 14:28:34.873" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:34.874" starttime="20140618 14:28:34.870"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20140618 14:28:34.879" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:34.880" starttime="20140618 14:28:34.875"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:34.882" starttime="20140618 14:28:34.881"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20140618 14:28:34.886" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:34.887" starttime="20140618 14:28:34.883"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MTC;${queue_mtc_req};${queue_mtc_res};6;1;1</arg>
</arguments>
<msg timestamp="20140618 14:28:34.893" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:34.894" starttime="20140618 14:28:34.888"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:34.896" starttime="20140618 14:28:34.895"></status>
</kw>
<kw type="kw" timeout="" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20140618 14:28:34.919" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-5.2.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/mtc1s.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20140618 14:28:43.749" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20140618 14:28:43.748" starttime="20140618 14:28:34.897"></status>
</kw>
<msg timestamp="20140618 14:28:43.752" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20140618 14:28:43.750" starttime="20140618 14:28:34.830"></status>
</kw>
<msg timestamp="20140618 14:28:43.754" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20140618 14:28:43.753" starttime="20140618 14:28:34.815"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=Faking CG session failed</arg>
</arguments>
<msg timestamp="20140618 14:28:43.758" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:28:43.758" starttime="20140618 14:28:43.755"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:43.759" starttime="20140618 14:28:34.805"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:43.760" starttime="20140618 14:28:34.799"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:43.762" starttime="20140618 14:27:24.480"></status>
</kw>
<kw type="kw" timeout="" name="crm_support-resource.CRM New Ticket Should Exist">
<doc>checks whether a previous call of device_imsi resulted in a CRM history ticket</doc>
<arguments>
<arg>${phone1_imsi}</arg>
<arg>${marker_ticket_timestamp}</arg>
<arg>ticket_type=Voice</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Parameters: device_imsi=${device_imsi} marker_timestamp=${marker_timestamp} (ticket_type)=${ticket_type} (ticket_channel)=${ticket_channel} (calling_called_number)=${calling_called_number}</arg>
</arguments>
<msg timestamp="20140618 14:28:43.784" level="INFO">Parameters: device_imsi=530052041010000 marker_timestamp=19/06/2014 - 02:24:26 (ticket_type)=Voice (ticket_channel)= (calling_called_number)=</msg>
<status status="PASS" endtime="20140618 14:28:43.784" starttime="20140618 14:28:43.780"></status>
</kw>
<kw type="kw" timeout="" name="${current_datetime}, ${current_calling_called_number}, ${current_type}, ${current_channel} = crm_support-resource.CRM Get Latest Ticket">
<doc>queries the passed subscriber's latest CRM ticket</doc>
<arguments>
<arg>${device_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Login">
<doc>Logs into the CRM portal via login page</doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>${CRM_PORTAL_USER}</arg>
<arg>${CRM_PORTAL_PSWD}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Ensure beeing in Login page ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:43.810" starttime="20140618 14:28:43.809"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140618 14:28:43.845" level="INFO">${isLoginPage} = true</msg>
<status status="PASS" endtime="20140618 14:28:43.844" starttime="20140618 14:28:43.811"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>CRM Portal Logout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:43.851" starttime="20140618 14:28:43.846"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140618 14:28:43.871" level="INFO">${isLoginPage} = true</msg>
<status status="PASS" endtime="20140618 14:28:43.871" starttime="20140618 14:28:43.852"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>Go To</arg>
<arg>${crm_portal_login_url}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:43.878" starttime="20140618 14:28:43.872"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
<arg>timeout=10s</arg>
<arg>error=Login Page not displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:43.898" starttime="20140618 14:28:43.880"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** log in to CRM as Customer Care user ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:43.900" starttime="20140618 14:28:43.899"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogin</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:43.906" starttime="20140618 14:28:43.901"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=username</arg>
<arg>${crm_portal_user}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:43.999" starttime="20140618 14:28:43.907"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=password</arg>
<arg>${crm_portal_pswd}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:44.091" starttime="20140618 14:28:44.001"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:45.532" starttime="20140618 14:28:44.092"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogin</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:45.542" starttime="20140618 14:28:45.536"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:45.542" starttime="20140618 14:28:43.798"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** CRM: in dashboard enter IMSI and press Submit</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:45.545" starttime="20140618 14:28:45.544"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterInput</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:45.551" starttime="20140618 14:28:45.546"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=filter_imsi</arg>
<arg>${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:45.643" starttime="20140618 14:28:45.552"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** in History tab, get the interesting cells of the first data row</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:45.646" starttime="20140618 14:28:45.644"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterSubmit</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:45.653" starttime="20140618 14:28:45.648"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Submit']</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:47.187" starttime="20140618 14:28:45.654"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
<arg>timeout=10s</arg>
<arg>error=History Tab NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:47.292" starttime="20140618 14:28:47.190"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:47.496" starttime="20140618 14:28:47.294"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Select Frame">
<doc></doc>
<arguments>
<arg>contentiframe</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:47.845" starttime="20140618 14:28:47.498"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
<arg>timeout=10s</arg>
<arg>error=History Search button NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:47.873" starttime="20140618 14:28:47.847"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:47.982" starttime="20140618 14:28:47.875"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>timeout=10s</arg>
<arg>error=History Table not displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:48.524" starttime="20140618 14:28:47.984"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_NEWEST_ROW} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140618 14:28:48.530" level="INFO">${HISTORY_NEWEST_ROW} = 2</msg>
<status status="PASS" endtime="20140618 14:28:48.529" starttime="20140618 14:28:48.527"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_DATETIME_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20140618 14:28:48.533" level="INFO">${HISTORY_DATETIME_COL} = 1</msg>
<status status="PASS" endtime="20140618 14:28:48.533" starttime="20140618 14:28:48.531"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CALLINGCALLED_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140618 14:28:48.536" level="INFO">${HISTORY_CALLINGCALLED_COL} = 2</msg>
<status status="PASS" endtime="20140618 14:28:48.535" starttime="20140618 14:28:48.534"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_TYPE_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20140618 14:28:48.538" level="INFO">${HISTORY_TYPE_COL} = 5</msg>
<status status="PASS" endtime="20140618 14:28:48.538" starttime="20140618 14:28:48.537"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CANNEL_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>9</arg>
</arguments>
<msg timestamp="20140618 14:28:48.541" level="INFO">${HISTORY_CANNEL_COL} = 9</msg>
<status status="PASS" endtime="20140618 14:28:48.541" starttime="20140618 14:28:48.539"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${datetime} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_DATETIME_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_DATETIME_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:48.690" starttime="20140618 14:28:48.544"></status>
</kw>
<msg timestamp="20140618 14:28:48.692" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:28:48.692" level="INFO">${datetime} = 19/06/2014 - 02:28:36</msg>
<status status="PASS" endtime="20140618 14:28:48.691" starttime="20140618 14:28:48.542"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${callingcalled} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CALLINGCALLED_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CALLINGCALLED_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:48.816" starttime="20140618 14:28:48.695"></status>
</kw>
<msg timestamp="20140618 14:28:48.817" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:28:48.817" level="INFO">${callingcalled} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:28:48.816" starttime="20140618 14:28:48.693"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${type} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_TYPE_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_TYPE_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:48.926" starttime="20140618 14:28:48.822"></status>
</kw>
<msg timestamp="20140618 14:28:48.927" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:28:48.928" level="INFO">${type} = Voice</msg>
<status status="PASS" endtime="20140618 14:28:48.927" starttime="20140618 14:28:48.819"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${channel} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CANNEL_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CANNEL_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.028" starttime="20140618 14:28:48.932"></status>
</kw>
<msg timestamp="20140618 14:28:49.033" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:28:49.033" level="INFO">${channel} = MTC</msg>
<status status="PASS" endtime="20140618 14:28:49.031" starttime="20140618 14:28:48.930"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Unselect Frame">
<doc></doc>
<arguments>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.049" starttime="20140618 14:28:49.034"></status>
</kw>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Logout">
<doc>Clicks the logout button of the current page if it is available</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.065" starttime="20140618 14:28:49.059"></status>
</kw>
<kw type="kw" timeout="" name="${pageContainsLogout} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<msg timestamp="20140618 14:28:49.084" level="INFO">${pageContainsLogout} = true</msg>
<status status="PASS" endtime="20140618 14:28:49.083" starttime="20140618 14:28:49.066"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pageContainsLogout}'=='true'</arg>
<arg>Click Element</arg>
<arg>id=logout</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.591" starttime="20140618 14:28:49.090"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:49.592" starttime="20140618 14:28:49.085"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.601" starttime="20140618 14:28:49.593"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:49.601" starttime="20140618 14:28:49.051"></status>
</kw>
<msg timestamp="20140618 14:28:49.606" level="INFO">${current_datetime} = 19/06/2014 - 02:28:36</msg>
<msg timestamp="20140618 14:28:49.606" level="INFO">${current_calling_called_number} = 642041010001</msg>
<msg timestamp="20140618 14:28:49.607" level="INFO">${current_type} = Voice</msg>
<msg timestamp="20140618 14:28:49.607" level="INFO">${current_channel} = MTC</msg>
<status status="PASS" endtime="20140618 14:28:49.604" starttime="20140618 14:28:43.788"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Not Be Equal As Strings">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${current_datetime}</arg>
<arg>${marker_timestamp}</arg>
<arg>msg=No ticket written for IMSI ${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:28:49.612" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:28:49.613" starttime="20140618 14:28:49.608"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'$ticket_type}'!='${EMPTY}'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${current_type}</arg>
<arg>${ticket_type}</arg>
<arg>msg=No ${ticket_type} ticket written for IMSI ${device_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${current_type}</arg>
<arg>${ticket_type}</arg>
<arg>msg=No ${ticket_type} ticket written for IMSI ${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:28:49.625" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:28:49.625" starttime="20140618 14:28:49.621"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:49.626" starttime="20140618 14:28:49.615"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ticket_channel}'!='${EMPTY}'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${current_channel}</arg>
<arg>${ticket_channel}</arg>
<arg>msg=No ${ticket_channel} channel ticket written for IMSI ${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.632" starttime="20140618 14:28:49.626"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${calling_called_number}'!='${EMPTY}'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${current_calling_called_number}</arg>
<arg>${calling_called_number}</arg>
<arg>msg=No ${calling_called_number} Calling/Called ticket written for IMSI ${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.639" starttime="20140618 14:28:49.633"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:49.640" starttime="20140618 14:28:43.769"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:49.641" starttime="20140618 14:27:17.892"></status>
</kw>
<kw type="teardown" timeout="" name="InewSelenium2Library.Close Browser">
<doc></doc>
<arguments>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.816" starttime="20140618 14:28:49.643"></status>
</kw>
<doc>Runs a one slice on-net Phone 2 Call to on-net Phone 1 by dialing Phone 1 MSISDN format 1
Plus ticket existance check for Phone 1 subscriber
=========================================================</doc>
<tags>
<tag>End2EndTest</tag>
<tag>experimental</tag>
<tag>TNZ_supported</tag>
<tag>walter.heincz</tag>
</tags>
<status status="PASS" critical="yes" endtime="20140618 14:28:49.817" starttime="20140618 14:27:13.954"></status>
</test>
<kw type="teardown" timeout="" name="suite-global-keyword-resource.Teardown Suite">
<doc>This is the suite teardown procedure that is called from "Suite Teardown" keyword</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Logout">
<doc>Clicks the logout button of the current page if it is available</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.840" starttime="20140618 14:28:49.835"></status>
</kw>
<kw type="kw" timeout="" name="${pageContainsLogout} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<msg timestamp="20140618 14:28:49.845" level="INFO">${pageContainsLogout} = false</msg>
<status status="PASS" endtime="20140618 14:28:49.844" starttime="20140618 14:28:49.841"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pageContainsLogout}'=='true'</arg>
<arg>Click Element</arg>
<arg>id=logout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.851" starttime="20140618 14:28:49.846"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.857" starttime="20140618 14:28:49.852"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:49.857" starttime="20140618 14:28:49.828"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Browser</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.859" starttime="20140618 14:28:49.858"></status>
</kw>
<kw type="kw" timeout="" name="suite-global-keyword-resource.Reset All Phones">
<doc>This helper for the TCs and Suite Setup script ensures that</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:28:49.879" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972240</msg>
<status status="PASS" endtime="20140618 14:28:49.880" starttime="20140618 14:28:49.877"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:49.894" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:49.894" starttime="20140618 14:28:49.891"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:49.895" starttime="20140618 14:28:49.889"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:49.900" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:49.901" starttime="20140618 14:28:49.898"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:49.902" starttime="20140618 14:28:49.896"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:49.907" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:49.907" starttime="20140618 14:28:49.904"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:49.908" starttime="20140618 14:28:49.902"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:49.908" starttime="20140618 14:28:49.883"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:28:49.912" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:28:49.912" starttime="20140618 14:28:49.909"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.916" starttime="20140618 14:28:49.913"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.920" starttime="20140618 14:28:49.917"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.922" starttime="20140618 14:28:49.921"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.925" starttime="20140618 14:28:49.923"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:49.928" starttime="20140618 14:28:49.925"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:28:49.932" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140618 14:28:50.264" level="INFO">14:28:50,254 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140618 14:28:50.278" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 13
Size: 528
Timestamp: Wed Jun 18 14:28:50 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972240&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:28:50.281" starttime="20140618 14:28:49.930"></status>
</kw>
<msg timestamp="20140618 14:28:50.284" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:28:50.284" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 13
Size: 528
Timestamp: Wed Jun 18 14:28:50 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:28:50.283" starttime="20140618 14:28:49.929"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:28:50.296" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:28:50.296" starttime="20140618 14:28:50.293"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.299" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:28:50.299" starttime="20140618 14:28:50.297"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.302" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:28:50.302" starttime="20140618 14:28:50.300"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.307" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:50.308" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:28:50.309" starttime="20140618 14:28:50.305"></status>
</kw>
<msg timestamp="20140618 14:28:50.310" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:50.310" level="INFO">${return_log_entry} = 2014-06-18 14:28:50,254 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:50.310" starttime="20140618 14:28:50.303"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.319" starttime="20140618 14:28:50.317"></status>
</kw>
<msg timestamp="20140618 14:28:50.320" level="INFO">${return_log_entry} = 2014-06-18 14:28:50,254 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:50.320" starttime="20140618 14:28:50.311"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.330" starttime="20140618 14:28:50.328"></status>
</kw>
<msg timestamp="20140618 14:28:50.331" level="INFO">${return_log_entry} = 2014-06-18 14:28:50,254 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:50.330" starttime="20140618 14:28:50.321"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.340" starttime="20140618 14:28:50.338"></status>
</kw>
<msg timestamp="20140618 14:28:50.341" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:50.341" starttime="20140618 14:28:50.332"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.355" starttime="20140618 14:28:50.353"></status>
</kw>
<msg timestamp="20140618 14:28:50.356" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:50.355" starttime="20140618 14:28:50.342"></status>
</kw>
<msg timestamp="20140618 14:28:50.357" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:50.357" starttime="20140618 14:28:50.286"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.367" starttime="20140618 14:28:50.366"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.369" starttime="20140618 14:28:50.368"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.372" starttime="20140618 14:28:50.370"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:28:50.384" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:50.385" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:50.386" starttime="20140618 14:28:50.381"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.386" starttime="20140618 14:28:50.379"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.387" starttime="20140618 14:28:50.372"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.387" starttime="20140618 14:28:50.359"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.388" starttime="20140618 14:28:49.869"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.402" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140618 14:28:50.402" starttime="20140618 14:28:50.399"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.416" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:50.417" starttime="20140618 14:28:50.413"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.417" starttime="20140618 14:28:50.412"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.423" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:50.423" starttime="20140618 14:28:50.420"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.424" starttime="20140618 14:28:50.418"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.429" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:50.430" starttime="20140618 14:28:50.427"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.431" starttime="20140618 14:28:50.425"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.431" starttime="20140618 14:28:50.405"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.435" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:28:50.435" starttime="20140618 14:28:50.432"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.438" starttime="20140618 14:28:50.436"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.441" starttime="20140618 14:28:50.439"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.444" starttime="20140618 14:28:50.442"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.446" starttime="20140618 14:28:50.444"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.449" starttime="20140618 14:28:50.447"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:28:50.453" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140618 14:28:50.810" level="INFO">14:28:50,799 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140618 14:28:50.825" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Wed Jun 18 14:28:50 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972239&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:28:50.827" starttime="20140618 14:28:50.451"></status>
</kw>
<msg timestamp="20140618 14:28:50.829" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:28:50.829" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Wed Jun 18 14:28:50 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:28:50.828" starttime="20140618 14:28:50.450"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:28:50.842" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:28:50.841" starttime="20140618 14:28:50.839"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.845" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:28:50.844" starttime="20140618 14:28:50.843"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.848" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:28:50.847" starttime="20140618 14:28:50.846"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.853" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:50.854" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:28:50.855" starttime="20140618 14:28:50.851"></status>
</kw>
<msg timestamp="20140618 14:28:50.856" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:50.856" level="INFO">${return_log_entry} = 2014-06-18 14:28:50,799 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:50.855" starttime="20140618 14:28:50.849"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.866" starttime="20140618 14:28:50.864"></status>
</kw>
<msg timestamp="20140618 14:28:50.867" level="INFO">${return_log_entry} = 2014-06-18 14:28:50,799 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:50.867" starttime="20140618 14:28:50.857"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.877" starttime="20140618 14:28:50.875"></status>
</kw>
<msg timestamp="20140618 14:28:50.878" level="INFO">${return_log_entry} = 2014-06-18 14:28:50,799 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:50.877" starttime="20140618 14:28:50.868"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.888" starttime="20140618 14:28:50.885"></status>
</kw>
<msg timestamp="20140618 14:28:50.889" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:50.888" starttime="20140618 14:28:50.879"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.902" starttime="20140618 14:28:50.900"></status>
</kw>
<msg timestamp="20140618 14:28:50.903" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:50.903" starttime="20140618 14:28:50.890"></status>
</kw>
<msg timestamp="20140618 14:28:50.905" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:50.904" starttime="20140618 14:28:50.831"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.915" starttime="20140618 14:28:50.913"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.917" starttime="20140618 14:28:50.916"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.919" starttime="20140618 14:28:50.918"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:28:50.932" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:50.933" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:50.934" starttime="20140618 14:28:50.928"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.934" starttime="20140618 14:28:50.926"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.935" starttime="20140618 14:28:50.920"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.935" starttime="20140618 14:28:50.906"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.936" starttime="20140618 14:28:50.391"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.949" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:28:50.950" starttime="20140618 14:28:50.946"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.964" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:50.964" starttime="20140618 14:28:50.961"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.965" starttime="20140618 14:28:50.959"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.970" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:50.971" starttime="20140618 14:28:50.968"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.972" starttime="20140618 14:28:50.966"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.977" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:50.977" starttime="20140618 14:28:50.974"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.978" starttime="20140618 14:28:50.972"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:50.978" starttime="20140618 14:28:50.952"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:28:50.982" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:28:50.982" starttime="20140618 14:28:50.979"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.986" starttime="20140618 14:28:50.983"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.989" starttime="20140618 14:28:50.987"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.991" starttime="20140618 14:28:50.990"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.993" starttime="20140618 14:28:50.992"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:50.996" starttime="20140618 14:28:50.994"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:28:51.001" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:28:51.325" level="INFO">14:28:51,315 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140618 14:28:51.339" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Wed Jun 18 14:28:51 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:28:51.342" starttime="20140618 14:28:50.999"></status>
</kw>
<msg timestamp="20140618 14:28:51.344" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:28:51.345" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Wed Jun 18 14:28:51 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:28:51.343" starttime="20140618 14:28:50.997"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:28:51.357" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:28:51.356" starttime="20140618 14:28:51.354"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:51.360" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:28:51.359" starttime="20140618 14:28:51.358"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:51.363" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:28:51.362" starttime="20140618 14:28:51.361"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:28:51.368" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:51.369" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:28:51.370" starttime="20140618 14:28:51.366"></status>
</kw>
<msg timestamp="20140618 14:28:51.371" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:51.371" level="INFO">${return_log_entry} = 2014-06-18 14:28:51,315 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:51.370" starttime="20140618 14:28:51.364"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.380" starttime="20140618 14:28:51.378"></status>
</kw>
<msg timestamp="20140618 14:28:51.381" level="INFO">${return_log_entry} = 2014-06-18 14:28:51,315 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:51.381" starttime="20140618 14:28:51.372"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.390" starttime="20140618 14:28:51.388"></status>
</kw>
<msg timestamp="20140618 14:28:51.391" level="INFO">${return_log_entry} = 2014-06-18 14:28:51,315 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:51.391" starttime="20140618 14:28:51.382"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.401" starttime="20140618 14:28:51.399"></status>
</kw>
<msg timestamp="20140618 14:28:51.402" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:51.402" starttime="20140618 14:28:51.392"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.415" starttime="20140618 14:28:51.413"></status>
</kw>
<msg timestamp="20140618 14:28:51.416" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:51.416" starttime="20140618 14:28:51.403"></status>
</kw>
<msg timestamp="20140618 14:28:51.418" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:51.417" starttime="20140618 14:28:51.347"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.428" starttime="20140618 14:28:51.426"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.430" starttime="20140618 14:28:51.429"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.432" starttime="20140618 14:28:51.431"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:28:51.444" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:51.445" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:51.446" starttime="20140618 14:28:51.441"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:51.447" starttime="20140618 14:28:51.439"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:51.447" starttime="20140618 14:28:51.433"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:51.447" starttime="20140618 14:28:51.419"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:51.448" starttime="20140618 14:28:50.938"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:28:51.462" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:28:51.463" starttime="20140618 14:28:51.459"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:51.476" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:51.477" starttime="20140618 14:28:51.474"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:51.478" starttime="20140618 14:28:51.472"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:51.483" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:51.484" starttime="20140618 14:28:51.480"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:51.484" starttime="20140618 14:28:51.479"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:51.489" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:51.490" starttime="20140618 14:28:51.487"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:51.491" starttime="20140618 14:28:51.485"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:51.491" starttime="20140618 14:28:51.465"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:28:51.495" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:28:51.495" starttime="20140618 14:28:51.492"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.498" starttime="20140618 14:28:51.496"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.502" starttime="20140618 14:28:51.499"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.504" starttime="20140618 14:28:51.503"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.506" starttime="20140618 14:28:51.505"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.509" starttime="20140618 14:28:51.507"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:28:51.513" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:28:51.866" level="INFO">14:28:51,855 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140618 14:28:51.882" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Wed Jun 18 14:28:51 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:28:51.884" starttime="20140618 14:28:51.512"></status>
</kw>
<msg timestamp="20140618 14:28:51.885" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:28:51.886" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Wed Jun 18 14:28:51 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:28:51.885" starttime="20140618 14:28:51.510"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:28:51.898" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:28:51.898" starttime="20140618 14:28:51.895"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:51.901" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:28:51.901" starttime="20140618 14:28:51.899"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:51.904" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:28:51.904" starttime="20140618 14:28:51.902"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:28:51.909" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:51.910" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:28:51.911" starttime="20140618 14:28:51.907"></status>
</kw>
<msg timestamp="20140618 14:28:51.912" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:51.912" level="INFO">${return_log_entry} = 2014-06-18 14:28:51,855 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:51.911" starttime="20140618 14:28:51.905"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.922" starttime="20140618 14:28:51.920"></status>
</kw>
<msg timestamp="20140618 14:28:51.923" level="INFO">${return_log_entry} = 2014-06-18 14:28:51,855 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:51.922" starttime="20140618 14:28:51.913"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.932" starttime="20140618 14:28:51.930"></status>
</kw>
<msg timestamp="20140618 14:28:51.933" level="INFO">${return_log_entry} = 2014-06-18 14:28:51,855 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:51.933" starttime="20140618 14:28:51.924"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.943" starttime="20140618 14:28:51.940"></status>
</kw>
<msg timestamp="20140618 14:28:51.944" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:51.943" starttime="20140618 14:28:51.934"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.957" starttime="20140618 14:28:51.955"></status>
</kw>
<msg timestamp="20140618 14:28:51.958" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:51.958" starttime="20140618 14:28:51.945"></status>
</kw>
<msg timestamp="20140618 14:28:51.960" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:28:51.959" starttime="20140618 14:28:51.887"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.970" starttime="20140618 14:28:51.968"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.972" starttime="20140618 14:28:51.971"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:51.974" starttime="20140618 14:28:51.973"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:28:51.986" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:51.987" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:51.988" starttime="20140618 14:28:51.982"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:51.989" starttime="20140618 14:28:51.981"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:51.989" starttime="20140618 14:28:51.975"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:51.990" starttime="20140618 14:28:51.961"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:51.990" starttime="20140618 14:28:51.451"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.004" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972240</msg>
<status status="PASS" endtime="20140618 14:28:52.005" starttime="20140618 14:28:52.001"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.019" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:52.020" starttime="20140618 14:28:52.016"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:52.020" starttime="20140618 14:28:52.015"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.025" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:52.026" starttime="20140618 14:28:52.023"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:52.027" starttime="20140618 14:28:52.021"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.032" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:52.033" starttime="20140618 14:28:52.029"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:52.033" starttime="20140618 14:28:52.028"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:52.034" starttime="20140618 14:28:52.008"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.037" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:28:52.037" starttime="20140618 14:28:52.034"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.041" starttime="20140618 14:28:52.038"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.044" starttime="20140618 14:28:52.042"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.046" starttime="20140618 14:28:52.045"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.048" starttime="20140618 14:28:52.047"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.051" starttime="20140618 14:28:52.049"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:28:52.055" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140618 14:28:52.411" level="INFO">14:28:52,367 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:28:52,373 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:52.412" starttime="20140618 14:28:52.054"></status>
</kw>
<msg timestamp="20140618 14:28:52.413" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:52.413" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:28:52.412" starttime="20140618 14:28:52.052"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:28:52.425" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:28:52.424" starttime="20140618 14:28:52.422"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.428" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:28:52.427" starttime="20140618 14:28:52.426"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.431" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:28:52.430" starttime="20140618 14:28:52.429"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.436" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:52.437" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:28:52.437" starttime="20140618 14:28:52.433"></status>
</kw>
<msg timestamp="20140618 14:28:52.438" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:52.439" level="INFO">${return_log_entry} = 2014-06-18 14:28:52,373 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:52.438" starttime="20140618 14:28:52.432"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.447" starttime="20140618 14:28:52.445"></status>
</kw>
<msg timestamp="20140618 14:28:52.448" level="INFO">${return_log_entry} = 2014-06-18 14:28:52,373 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:52.448" starttime="20140618 14:28:52.440"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.458" starttime="20140618 14:28:52.456"></status>
</kw>
<msg timestamp="20140618 14:28:52.458" level="INFO">${return_log_entry} = 2014-06-18 14:28:52,373 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:52.458" starttime="20140618 14:28:52.449"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.468" starttime="20140618 14:28:52.466"></status>
</kw>
<msg timestamp="20140618 14:28:52.469" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:52.469" starttime="20140618 14:28:52.459"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.482" starttime="20140618 14:28:52.480"></status>
</kw>
<msg timestamp="20140618 14:28:52.483" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:52.483" starttime="20140618 14:28:52.470"></status>
</kw>
<msg timestamp="20140618 14:28:52.484" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:52.484" starttime="20140618 14:28:52.415"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:28:52.496" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:28:52.496" starttime="20140618 14:28:52.494"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.499" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:28:52.499" starttime="20140618 14:28:52.497"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.502" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:28:52.502" starttime="20140618 14:28:52.500"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.508" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:52.509" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:28:52.509" starttime="20140618 14:28:52.505"></status>
</kw>
<msg timestamp="20140618 14:28:52.510" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:52.510" level="INFO">${return_log_entry} = 2014-06-18 14:28:52,367 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:28:52.510" starttime="20140618 14:28:52.503"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.519" starttime="20140618 14:28:52.517"></status>
</kw>
<msg timestamp="20140618 14:28:52.520" level="INFO">${return_log_entry} = 2014-06-18 14:28:52,367 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:28:52.520" starttime="20140618 14:28:52.511"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.530" starttime="20140618 14:28:52.528"></status>
</kw>
<msg timestamp="20140618 14:28:52.531" level="INFO">${return_log_entry} = 2014-06-18 14:28:52,367 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:28:52.530" starttime="20140618 14:28:52.521"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.540" starttime="20140618 14:28:52.538"></status>
</kw>
<msg timestamp="20140618 14:28:52.541" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:52.541" starttime="20140618 14:28:52.531"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.554" starttime="20140618 14:28:52.553"></status>
</kw>
<msg timestamp="20140618 14:28:52.555" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:52.555" starttime="20140618 14:28:52.542"></status>
</kw>
<msg timestamp="20140618 14:28:52.557" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:52.556" starttime="20140618 14:28:52.486"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.567" starttime="20140618 14:28:52.565"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.569" starttime="20140618 14:28:52.568"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.571" starttime="20140618 14:28:52.569"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:28:52.582" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:28:52.583" starttime="20140618 14:28:52.579"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:52.583" starttime="20140618 14:28:52.577"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:52.584" starttime="20140618 14:28:52.572"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:52.584" starttime="20140618 14:28:52.558"></status>
</kw>
<msg timestamp="20140618 14:28:52.587" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:28:52.587" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:52.585" starttime="20140618 14:28:51.993"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140618 14:28:52.590" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:28:52.590" starttime="20140618 14:28:52.588"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 1</arg>
</arguments>
<msg timestamp="20140618 14:28:52.593" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:28:52.593" starttime="20140618 14:28:52.591"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.607" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140618 14:28:52.607" starttime="20140618 14:28:52.604"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.621" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:52.622" starttime="20140618 14:28:52.618"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:52.622" starttime="20140618 14:28:52.617"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.627" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:52.628" starttime="20140618 14:28:52.625"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:52.629" starttime="20140618 14:28:52.623"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.661" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:52.662" starttime="20140618 14:28:52.656"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:52.662" starttime="20140618 14:28:52.629"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:52.663" starttime="20140618 14:28:52.610"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:28:52.666" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:28:52.667" starttime="20140618 14:28:52.664"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.670" starttime="20140618 14:28:52.668"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.673" starttime="20140618 14:28:52.671"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.675" starttime="20140618 14:28:52.674"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.677" starttime="20140618 14:28:52.676"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:52.680" starttime="20140618 14:28:52.678"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:28:52.684" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140618 14:28:53.041" level="INFO">14:28:52,997 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:28:53,003 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:53.041" starttime="20140618 14:28:52.683"></status>
</kw>
<msg timestamp="20140618 14:28:53.044" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:53.044" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:28:53.043" starttime="20140618 14:28:52.681"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:28:53.056" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:28:53.056" starttime="20140618 14:28:53.054"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.059" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:28:53.059" starttime="20140618 14:28:53.057"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.062" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:28:53.062" starttime="20140618 14:28:53.060"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.067" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:53.068" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:28:53.069" starttime="20140618 14:28:53.065"></status>
</kw>
<msg timestamp="20140618 14:28:53.070" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:53.070" level="INFO">${return_log_entry} = 2014-06-18 14:28:53,003 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:53.069" starttime="20140618 14:28:53.063"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.080" starttime="20140618 14:28:53.078"></status>
</kw>
<msg timestamp="20140618 14:28:53.081" level="INFO">${return_log_entry} = 2014-06-18 14:28:53,003 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:53.080" starttime="20140618 14:28:53.071"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.089" starttime="20140618 14:28:53.088"></status>
</kw>
<msg timestamp="20140618 14:28:53.090" level="INFO">${return_log_entry} = 2014-06-18 14:28:53,003 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:53.090" starttime="20140618 14:28:53.081"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.100" starttime="20140618 14:28:53.098"></status>
</kw>
<msg timestamp="20140618 14:28:53.101" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:53.101" starttime="20140618 14:28:53.091"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.114" starttime="20140618 14:28:53.112"></status>
</kw>
<msg timestamp="20140618 14:28:53.115" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:53.115" starttime="20140618 14:28:53.102"></status>
</kw>
<msg timestamp="20140618 14:28:53.116" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:53.116" starttime="20140618 14:28:53.047"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:28:53.128" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:28:53.127" starttime="20140618 14:28:53.125"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.131" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:28:53.130" starttime="20140618 14:28:53.129"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.134" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:28:53.133" starttime="20140618 14:28:53.132"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.139" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:53.140" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:28:53.140" starttime="20140618 14:28:53.136"></status>
</kw>
<msg timestamp="20140618 14:28:53.141" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:53.141" level="INFO">${return_log_entry} = 2014-06-18 14:28:52,997 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:28:53.141" starttime="20140618 14:28:53.135"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.150" starttime="20140618 14:28:53.148"></status>
</kw>
<msg timestamp="20140618 14:28:53.151" level="INFO">${return_log_entry} = 2014-06-18 14:28:52,997 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:28:53.151" starttime="20140618 14:28:53.142"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.160" starttime="20140618 14:28:53.158"></status>
</kw>
<msg timestamp="20140618 14:28:53.161" level="INFO">${return_log_entry} = 2014-06-18 14:28:52,997 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:28:53.161" starttime="20140618 14:28:53.152"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.170" starttime="20140618 14:28:53.168"></status>
</kw>
<msg timestamp="20140618 14:28:53.171" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:53.171" starttime="20140618 14:28:53.162"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.185" starttime="20140618 14:28:53.182"></status>
</kw>
<msg timestamp="20140618 14:28:53.186" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:53.185" starttime="20140618 14:28:53.172"></status>
</kw>
<msg timestamp="20140618 14:28:53.187" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:53.186" starttime="20140618 14:28:53.118"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.197" starttime="20140618 14:28:53.195"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.199" starttime="20140618 14:28:53.197"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.201" starttime="20140618 14:28:53.199"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:28:53.212" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:28:53.213" starttime="20140618 14:28:53.209"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:53.213" starttime="20140618 14:28:53.207"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:53.214" starttime="20140618 14:28:53.201"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:53.214" starttime="20140618 14:28:53.188"></status>
</kw>
<msg timestamp="20140618 14:28:53.216" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:28:53.217" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:53.215" starttime="20140618 14:28:52.596"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140618 14:28:53.220" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:28:53.220" starttime="20140618 14:28:53.218"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 2</arg>
</arguments>
<msg timestamp="20140618 14:28:53.223" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:28:53.223" starttime="20140618 14:28:53.221"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.237" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:28:53.237" starttime="20140618 14:28:53.234"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.251" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:53.251" starttime="20140618 14:28:53.248"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:53.252" starttime="20140618 14:28:53.247"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.257" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:53.258" starttime="20140618 14:28:53.254"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:53.258" starttime="20140618 14:28:53.253"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.263" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:53.264" starttime="20140618 14:28:53.261"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:53.265" starttime="20140618 14:28:53.259"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:53.265" starttime="20140618 14:28:53.240"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.269" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:28:53.269" starttime="20140618 14:28:53.266"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.272" starttime="20140618 14:28:53.270"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.275" starttime="20140618 14:28:53.273"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.277" starttime="20140618 14:28:53.276"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.279" starttime="20140618 14:28:53.278"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.283" starttime="20140618 14:28:53.280"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:28:53.286" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:28:53.642" level="INFO">14:28:53,600 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:28:53,606 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:53.642" starttime="20140618 14:28:53.285"></status>
</kw>
<msg timestamp="20140618 14:28:53.643" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:53.644" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:28:53.643" starttime="20140618 14:28:53.284"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:28:53.655" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:28:53.655" starttime="20140618 14:28:53.653"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.659" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:28:53.659" starttime="20140618 14:28:53.657"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.662" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:28:53.662" starttime="20140618 14:28:53.660"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.667" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:53.668" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:28:53.669" starttime="20140618 14:28:53.665"></status>
</kw>
<msg timestamp="20140618 14:28:53.670" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:53.670" level="INFO">${return_log_entry} = 2014-06-18 14:28:53,606 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:53.669" starttime="20140618 14:28:53.663"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.679" starttime="20140618 14:28:53.677"></status>
</kw>
<msg timestamp="20140618 14:28:53.680" level="INFO">${return_log_entry} = 2014-06-18 14:28:53,606 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:53.679" starttime="20140618 14:28:53.671"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.689" starttime="20140618 14:28:53.687"></status>
</kw>
<msg timestamp="20140618 14:28:53.690" level="INFO">${return_log_entry} = 2014-06-18 14:28:53,606 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:53.689" starttime="20140618 14:28:53.681"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.699" starttime="20140618 14:28:53.697"></status>
</kw>
<msg timestamp="20140618 14:28:53.700" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:53.700" starttime="20140618 14:28:53.691"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.714" starttime="20140618 14:28:53.712"></status>
</kw>
<msg timestamp="20140618 14:28:53.715" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:53.715" starttime="20140618 14:28:53.701"></status>
</kw>
<msg timestamp="20140618 14:28:53.717" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:53.716" starttime="20140618 14:28:53.645"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:28:53.758" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:28:53.758" starttime="20140618 14:28:53.756"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.761" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:28:53.761" starttime="20140618 14:28:53.759"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.764" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:28:53.764" starttime="20140618 14:28:53.762"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.769" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:53.771" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:28:53.772" starttime="20140618 14:28:53.767"></status>
</kw>
<msg timestamp="20140618 14:28:53.773" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:53.773" level="INFO">${return_log_entry} = 2014-06-18 14:28:53,600 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:28:53.772" starttime="20140618 14:28:53.765"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.783" starttime="20140618 14:28:53.781"></status>
</kw>
<msg timestamp="20140618 14:28:53.784" level="INFO">${return_log_entry} = 2014-06-18 14:28:53,600 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:28:53.783" starttime="20140618 14:28:53.774"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.794" starttime="20140618 14:28:53.792"></status>
</kw>
<msg timestamp="20140618 14:28:53.795" level="INFO">${return_log_entry} = 2014-06-18 14:28:53,600 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:28:53.795" starttime="20140618 14:28:53.785"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.805" starttime="20140618 14:28:53.803"></status>
</kw>
<msg timestamp="20140618 14:28:53.806" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:53.806" starttime="20140618 14:28:53.796"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.819" starttime="20140618 14:28:53.817"></status>
</kw>
<msg timestamp="20140618 14:28:53.820" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:53.820" starttime="20140618 14:28:53.807"></status>
</kw>
<msg timestamp="20140618 14:28:53.821" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:53.821" starttime="20140618 14:28:53.718"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.832" starttime="20140618 14:28:53.830"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.834" starttime="20140618 14:28:53.832"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.836" starttime="20140618 14:28:53.835"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:28:53.847" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:28:53.848" starttime="20140618 14:28:53.844"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:53.849" starttime="20140618 14:28:53.843"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:53.849" starttime="20140618 14:28:53.837"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:53.850" starttime="20140618 14:28:53.823"></status>
</kw>
<msg timestamp="20140618 14:28:53.851" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:28:53.851" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:53.851" starttime="20140618 14:28:53.226"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140618 14:28:53.854" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:28:53.855" starttime="20140618 14:28:53.852"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 12</arg>
</arguments>
<msg timestamp="20140618 14:28:53.857" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:28:53.858" starttime="20140618 14:28:53.855"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.871" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:28:53.872" starttime="20140618 14:28:53.869"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.885" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:53.886" starttime="20140618 14:28:53.883"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:53.887" starttime="20140618 14:28:53.881"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.891" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:53.892" starttime="20140618 14:28:53.889"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:53.893" starttime="20140618 14:28:53.887"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.898" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:53.898" starttime="20140618 14:28:53.895"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:53.899" starttime="20140618 14:28:53.894"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:53.899" starttime="20140618 14:28:53.874"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:28:53.903" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:28:53.903" starttime="20140618 14:28:53.900"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.907" starttime="20140618 14:28:53.904"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.910" starttime="20140618 14:28:53.907"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.912" starttime="20140618 14:28:53.911"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.914" starttime="20140618 14:28:53.913"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:53.917" starttime="20140618 14:28:53.915"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:28:53.921" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:28:54.277" level="INFO">14:28:54,232 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:28:54,238 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:54.278" starttime="20140618 14:28:53.919"></status>
</kw>
<msg timestamp="20140618 14:28:54.281" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:54.281" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:28:54.279" starttime="20140618 14:28:53.918"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:28:54.293" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:28:54.292" starttime="20140618 14:28:54.290"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:54.296" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:28:54.295" starttime="20140618 14:28:54.294"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:54.298" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:28:54.298" starttime="20140618 14:28:54.296"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:28:54.303" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:54.304" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:28:54.305" starttime="20140618 14:28:54.301"></status>
</kw>
<msg timestamp="20140618 14:28:54.306" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:54.306" level="INFO">${return_log_entry} = 2014-06-18 14:28:54,238 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:54.305" starttime="20140618 14:28:54.299"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.315" starttime="20140618 14:28:54.313"></status>
</kw>
<msg timestamp="20140618 14:28:54.316" level="INFO">${return_log_entry} = 2014-06-18 14:28:54,238 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:54.316" starttime="20140618 14:28:54.307"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.325" starttime="20140618 14:28:54.323"></status>
</kw>
<msg timestamp="20140618 14:28:54.326" level="INFO">${return_log_entry} = 2014-06-18 14:28:54,238 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:28:54.325" starttime="20140618 14:28:54.317"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.335" starttime="20140618 14:28:54.333"></status>
</kw>
<msg timestamp="20140618 14:28:54.336" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:54.336" starttime="20140618 14:28:54.327"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.350" starttime="20140618 14:28:54.348"></status>
</kw>
<msg timestamp="20140618 14:28:54.351" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:54.350" starttime="20140618 14:28:54.337"></status>
</kw>
<msg timestamp="20140618 14:28:54.352" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:28:54.352" starttime="20140618 14:28:54.283"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:28:54.364" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:28:54.364" starttime="20140618 14:28:54.361"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:54.367" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:28:54.367" starttime="20140618 14:28:54.365"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:28:54.370" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:28:54.370" starttime="20140618 14:28:54.368"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:28:54.375" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:28:54.376" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:28:54.377" starttime="20140618 14:28:54.373"></status>
</kw>
<msg timestamp="20140618 14:28:54.378" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:28:54.378" level="INFO">${return_log_entry} = 2014-06-18 14:28:54,232 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:28:54.377" starttime="20140618 14:28:54.371"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.387" starttime="20140618 14:28:54.385"></status>
</kw>
<msg timestamp="20140618 14:28:54.388" level="INFO">${return_log_entry} = 2014-06-18 14:28:54,232 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:28:54.387" starttime="20140618 14:28:54.379"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.397" starttime="20140618 14:28:54.395"></status>
</kw>
<msg timestamp="20140618 14:28:54.398" level="INFO">${return_log_entry} = 2014-06-18 14:28:54,232 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:28:54.397" starttime="20140618 14:28:54.389"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.407" starttime="20140618 14:28:54.405"></status>
</kw>
<msg timestamp="20140618 14:28:54.408" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:54.408" starttime="20140618 14:28:54.399"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.421" starttime="20140618 14:28:54.419"></status>
</kw>
<msg timestamp="20140618 14:28:54.422" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:54.422" starttime="20140618 14:28:54.409"></status>
</kw>
<msg timestamp="20140618 14:28:54.423" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:54.423" starttime="20140618 14:28:54.354"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.434" starttime="20140618 14:28:54.432"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.436" starttime="20140618 14:28:54.434"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.437" starttime="20140618 14:28:54.436"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:28:54.449" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:28:54.450" starttime="20140618 14:28:54.446"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:54.450" starttime="20140618 14:28:54.444"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:54.451" starttime="20140618 14:28:54.438"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:54.451" starttime="20140618 14:28:54.425"></status>
</kw>
<msg timestamp="20140618 14:28:54.454" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:28:54.454" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:28:54.452" starttime="20140618 14:28:53.861"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140618 14:28:54.457" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:28:54.457" starttime="20140618 14:28:54.455"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 13</arg>
</arguments>
<msg timestamp="20140618 14:28:54.460" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:28:54.460" starttime="20140618 14:28:54.458"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:28:54.473" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:28:54.473" starttime="20140618 14:28:54.471"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:54.498" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:54.498" starttime="20140618 14:28:54.495"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:54.499" starttime="20140618 14:28:54.494"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:54.504" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:54.505" starttime="20140618 14:28:54.502"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:54.506" starttime="20140618 14:28:54.500"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:28:54.511" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:28:54.511" starttime="20140618 14:28:54.508"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:54.512" starttime="20140618 14:28:54.506"></status>
</kw>
<status status="PASS" endtime="20140618 14:28:54.512" starttime="20140618 14:28:54.487"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:28:54.516" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:28:54.516" starttime="20140618 14:28:54.513"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.520" starttime="20140618 14:28:54.517"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.523" starttime="20140618 14:28:54.521"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.525" starttime="20140618 14:28:54.524"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.528" starttime="20140618 14:28:54.526"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.531" starttime="20140618 14:28:54.529"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.534" starttime="20140618 14:28:54.532"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:28:54.537" starttime="20140618 14:28:54.535"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:28:54.541" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:29:01.220" level="INFO">14:29:01,202 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:29:01,209 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:01.221" starttime="20140618 14:28:54.540"></status>
</kw>
<msg timestamp="20140618 14:29:01.224" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:29:01.224" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:29:01.223" starttime="20140618 14:28:54.538"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:29:01.238" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:29:01.238" starttime="20140618 14:29:01.236"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:01.241" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:29:01.241" starttime="20140618 14:29:01.239"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:01.244" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:29:01.244" starttime="20140618 14:29:01.242"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:29:01.249" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:29:01.250" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:29:01.251" starttime="20140618 14:29:01.247"></status>
</kw>
<msg timestamp="20140618 14:29:01.252" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:29:01.252" level="INFO">${return_log_entry} = 2014-06-18 14:29:01,209 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:01.252" starttime="20140618 14:29:01.245"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.262" starttime="20140618 14:29:01.260"></status>
</kw>
<msg timestamp="20140618 14:29:01.263" level="INFO">${return_log_entry} = 2014-06-18 14:29:01,209 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:01.263" starttime="20140618 14:29:01.253"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.272" starttime="20140618 14:29:01.270"></status>
</kw>
<msg timestamp="20140618 14:29:01.273" level="INFO">${return_log_entry} = 2014-06-18 14:29:01,209 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:01.273" starttime="20140618 14:29:01.264"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.283" starttime="20140618 14:29:01.280"></status>
</kw>
<msg timestamp="20140618 14:29:01.284" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:01.283" starttime="20140618 14:29:01.274"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.297" starttime="20140618 14:29:01.295"></status>
</kw>
<msg timestamp="20140618 14:29:01.298" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:01.298" starttime="20140618 14:29:01.285"></status>
</kw>
<msg timestamp="20140618 14:29:01.299" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:01.299" starttime="20140618 14:29:01.227"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:29:01.311" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:29:01.311" starttime="20140618 14:29:01.308"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:01.314" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:29:01.314" starttime="20140618 14:29:01.312"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:01.317" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:29:01.317" starttime="20140618 14:29:01.315"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:29:01.322" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:29:01.323" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:29:01.324" starttime="20140618 14:29:01.320"></status>
</kw>
<msg timestamp="20140618 14:29:01.325" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:29:01.325" level="INFO">${return_log_entry} = 2014-06-18 14:29:01,202 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:01.324" starttime="20140618 14:29:01.318"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.334" starttime="20140618 14:29:01.332"></status>
</kw>
<msg timestamp="20140618 14:29:01.335" level="INFO">${return_log_entry} = 2014-06-18 14:29:01,202 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:01.334" starttime="20140618 14:29:01.326"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.344" starttime="20140618 14:29:01.342"></status>
</kw>
<msg timestamp="20140618 14:29:01.345" level="INFO">${return_log_entry} = 2014-06-18 14:29:01,202 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:01.344" starttime="20140618 14:29:01.336"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.354" starttime="20140618 14:29:01.352"></status>
</kw>
<msg timestamp="20140618 14:29:01.355" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:01.355" starttime="20140618 14:29:01.346"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.368" starttime="20140618 14:29:01.367"></status>
</kw>
<msg timestamp="20140618 14:29:01.369" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:01.369" starttime="20140618 14:29:01.356"></status>
</kw>
<msg timestamp="20140618 14:29:01.371" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:01.370" starttime="20140618 14:29:01.301"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.381" starttime="20140618 14:29:01.379"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.383" starttime="20140618 14:29:01.381"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.385" starttime="20140618 14:29:01.383"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:29:01.396" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:29:01.397" starttime="20140618 14:29:01.393"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:01.398" starttime="20140618 14:29:01.391"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:01.398" starttime="20140618 14:29:01.385"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:01.398" starttime="20140618 14:29:01.372"></status>
</kw>
<msg timestamp="20140618 14:29:01.401" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:29:01.401" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:01.399" starttime="20140618 14:28:54.476"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.411" starttime="20140618 14:29:01.409"></status>
</kw>
<msg timestamp="20140618 14:29:01.412" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:01.411" starttime="20140618 14:29:01.402"></status>
</kw>
<msg timestamp="20140618 14:29:01.413" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:01.412" starttime="20140618 14:28:54.462"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140618 14:29:01.416" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:29:01.417" starttime="20140618 14:29:01.414"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:29:01.429" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:29:01.429" starttime="20140618 14:29:01.427"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:29:01.453" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:29:01.454" starttime="20140618 14:29:01.451"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:01.455" starttime="20140618 14:29:01.449"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:29:01.460" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:29:01.460" starttime="20140618 14:29:01.457"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:01.461" starttime="20140618 14:29:01.456"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:29:01.466" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:29:01.467" starttime="20140618 14:29:01.464"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:01.467" starttime="20140618 14:29:01.462"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:01.468" starttime="20140618 14:29:01.442"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:29:01.472" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:29:01.472" starttime="20140618 14:29:01.469"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.475" starttime="20140618 14:29:01.473"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.479" starttime="20140618 14:29:01.476"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.481" starttime="20140618 14:29:01.480"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.483" starttime="20140618 14:29:01.482"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.486" starttime="20140618 14:29:01.484"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.489" starttime="20140618 14:29:01.487"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:01.493" starttime="20140618 14:29:01.490"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:29:01.496" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:29:08.777" level="INFO">14:29:08,762 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:29:08,769 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:08.778" starttime="20140618 14:29:01.495"></status>
</kw>
<msg timestamp="20140618 14:29:08.780" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:29:08.781" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:29:08.779" starttime="20140618 14:29:01.493"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:29:08.792" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:29:08.792" starttime="20140618 14:29:08.789"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:08.795" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:29:08.794" starttime="20140618 14:29:08.793"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:08.798" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:29:08.797" starttime="20140618 14:29:08.796"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:29:08.802" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:29:08.803" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:29:08.804" starttime="20140618 14:29:08.800"></status>
</kw>
<msg timestamp="20140618 14:29:08.806" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:29:08.806" level="INFO">${return_log_entry} = 2014-06-18 14:29:08,769 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:08.804" starttime="20140618 14:29:08.799"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:08.815" starttime="20140618 14:29:08.813"></status>
</kw>
<msg timestamp="20140618 14:29:08.816" level="INFO">${return_log_entry} = 2014-06-18 14:29:08,769 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:08.815" starttime="20140618 14:29:08.807"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:08.825" starttime="20140618 14:29:08.823"></status>
</kw>
<msg timestamp="20140618 14:29:08.826" level="INFO">${return_log_entry} = 2014-06-18 14:29:08,769 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:08.825" starttime="20140618 14:29:08.817"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:08.835" starttime="20140618 14:29:08.833"></status>
</kw>
<msg timestamp="20140618 14:29:08.836" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:08.835" starttime="20140618 14:29:08.826"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:08.849" starttime="20140618 14:29:08.847"></status>
</kw>
<msg timestamp="20140618 14:29:08.850" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:08.849" starttime="20140618 14:29:08.837"></status>
</kw>
<msg timestamp="20140618 14:29:08.851" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:08.850" starttime="20140618 14:29:08.782"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:29:08.862" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:29:08.862" starttime="20140618 14:29:08.860"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:08.865" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:29:08.865" starttime="20140618 14:29:08.863"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:08.868" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:29:08.868" starttime="20140618 14:29:08.866"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:29:08.873" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:29:08.874" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:29:08.875" starttime="20140618 14:29:08.871"></status>
</kw>
<msg timestamp="20140618 14:29:08.876" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:29:08.876" level="INFO">${return_log_entry} = 2014-06-18 14:29:08,762 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:08.875" starttime="20140618 14:29:08.869"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:08.885" starttime="20140618 14:29:08.883"></status>
</kw>
<msg timestamp="20140618 14:29:08.886" level="INFO">${return_log_entry} = 2014-06-18 14:29:08,762 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:08.885" starttime="20140618 14:29:08.877"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:08.894" starttime="20140618 14:29:08.893"></status>
</kw>
<msg timestamp="20140618 14:29:08.895" level="INFO">${return_log_entry} = 2014-06-18 14:29:08,762 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:08.895" starttime="20140618 14:29:08.887"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:08.905" starttime="20140618 14:29:08.902"></status>
</kw>
<msg timestamp="20140618 14:29:08.906" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:08.905" starttime="20140618 14:29:08.896"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:08.919" starttime="20140618 14:29:08.917"></status>
</kw>
<msg timestamp="20140618 14:29:08.920" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:08.919" starttime="20140618 14:29:08.907"></status>
</kw>
<msg timestamp="20140618 14:29:08.921" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:08.920" starttime="20140618 14:29:08.852"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:08.932" starttime="20140618 14:29:08.931"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:08.934" starttime="20140618 14:29:08.933"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:08.936" starttime="20140618 14:29:08.935"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:29:08.947" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:29:08.948" starttime="20140618 14:29:08.944"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:08.949" starttime="20140618 14:29:08.943"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:08.949" starttime="20140618 14:29:08.937"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:08.950" starttime="20140618 14:29:08.922"></status>
</kw>
<msg timestamp="20140618 14:29:08.952" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:29:08.952" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:08.951" starttime="20140618 14:29:01.431"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:08.961" starttime="20140618 14:29:08.960"></status>
</kw>
<msg timestamp="20140618 14:29:08.962" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:08.962" starttime="20140618 14:29:08.953"></status>
</kw>
<msg timestamp="20140618 14:29:08.964" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:08.963" starttime="20140618 14:29:01.418"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140618 14:29:08.967" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:29:08.967" starttime="20140618 14:29:08.965"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:29:08.980" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:29:08.980" starttime="20140618 14:29:08.978"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:29:09.032" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:29:09.032" starttime="20140618 14:29:09.029"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:09.033" starttime="20140618 14:29:09.028"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:29:09.038" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:29:09.039" starttime="20140618 14:29:09.035"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:09.039" starttime="20140618 14:29:09.034"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:29:09.044" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:29:09.045" starttime="20140618 14:29:09.042"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:09.045" starttime="20140618 14:29:09.040"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:09.046" starttime="20140618 14:29:09.021"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:29:09.049" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:29:09.050" starttime="20140618 14:29:09.046"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:09.053" starttime="20140618 14:29:09.051"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:09.056" starttime="20140618 14:29:09.054"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:09.058" starttime="20140618 14:29:09.057"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:09.060" starttime="20140618 14:29:09.059"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:09.063" starttime="20140618 14:29:09.061"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:09.066" starttime="20140618 14:29:09.064"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:09.069" starttime="20140618 14:29:09.067"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:29:09.073" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:29:15.404" level="INFO">14:29:15,385 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:29:15,393 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:15.405" starttime="20140618 14:29:09.072"></status>
</kw>
<msg timestamp="20140618 14:29:15.407" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:29:15.408" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:29:15.406" starttime="20140618 14:29:09.070"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:29:15.420" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:29:15.420" starttime="20140618 14:29:15.417"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:15.423" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:29:15.423" starttime="20140618 14:29:15.421"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:15.426" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:29:15.425" starttime="20140618 14:29:15.424"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:29:15.431" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:29:15.432" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:29:15.432" starttime="20140618 14:29:15.428"></status>
</kw>
<msg timestamp="20140618 14:29:15.433" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:29:15.434" level="INFO">${return_log_entry} = 2014-06-18 14:29:15,393 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:15.433" starttime="20140618 14:29:15.427"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.443" starttime="20140618 14:29:15.441"></status>
</kw>
<msg timestamp="20140618 14:29:15.444" level="INFO">${return_log_entry} = 2014-06-18 14:29:15,393 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:15.443" starttime="20140618 14:29:15.434"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.452" starttime="20140618 14:29:15.451"></status>
</kw>
<msg timestamp="20140618 14:29:15.453" level="INFO">${return_log_entry} = 2014-06-18 14:29:15,393 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:15.453" starttime="20140618 14:29:15.445"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.463" starttime="20140618 14:29:15.460"></status>
</kw>
<msg timestamp="20140618 14:29:15.464" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:15.463" starttime="20140618 14:29:15.454"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.477" starttime="20140618 14:29:15.475"></status>
</kw>
<msg timestamp="20140618 14:29:15.478" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:15.477" starttime="20140618 14:29:15.464"></status>
</kw>
<msg timestamp="20140618 14:29:15.479" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:15.478" starttime="20140618 14:29:15.410"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:29:15.490" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:29:15.490" starttime="20140618 14:29:15.488"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:15.493" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:29:15.493" starttime="20140618 14:29:15.491"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:15.496" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:29:15.496" starttime="20140618 14:29:15.494"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:29:15.501" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:29:15.502" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:29:15.502" starttime="20140618 14:29:15.499"></status>
</kw>
<msg timestamp="20140618 14:29:15.503" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:29:15.504" level="INFO">${return_log_entry} = 2014-06-18 14:29:15,385 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:15.503" starttime="20140618 14:29:15.497"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.512" starttime="20140618 14:29:15.510"></status>
</kw>
<msg timestamp="20140618 14:29:15.513" level="INFO">${return_log_entry} = 2014-06-18 14:29:15,385 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:15.513" starttime="20140618 14:29:15.505"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.522" starttime="20140618 14:29:15.520"></status>
</kw>
<msg timestamp="20140618 14:29:15.523" level="INFO">${return_log_entry} = 2014-06-18 14:29:15,385 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:15.523" starttime="20140618 14:29:15.514"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.532" starttime="20140618 14:29:15.530"></status>
</kw>
<msg timestamp="20140618 14:29:15.533" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:15.533" starttime="20140618 14:29:15.524"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.546" starttime="20140618 14:29:15.544"></status>
</kw>
<msg timestamp="20140618 14:29:15.547" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:15.547" starttime="20140618 14:29:15.534"></status>
</kw>
<msg timestamp="20140618 14:29:15.548" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:15.548" starttime="20140618 14:29:15.480"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.558" starttime="20140618 14:29:15.557"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.560" starttime="20140618 14:29:15.559"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.562" starttime="20140618 14:29:15.561"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:29:15.573" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:29:15.574" starttime="20140618 14:29:15.571"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:15.575" starttime="20140618 14:29:15.569"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:15.575" starttime="20140618 14:29:15.563"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:15.576" starttime="20140618 14:29:15.550"></status>
</kw>
<msg timestamp="20140618 14:29:15.578" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:29:15.578" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:15.577" starttime="20140618 14:29:08.982"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.588" starttime="20140618 14:29:15.586"></status>
</kw>
<msg timestamp="20140618 14:29:15.589" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:15.588" starttime="20140618 14:29:15.579"></status>
</kw>
<msg timestamp="20140618 14:29:15.591" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:15.589" starttime="20140618 14:29:08.969"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140618 14:29:15.593" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:29:15.594" starttime="20140618 14:29:15.591"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:29:15.606" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:29:15.606" starttime="20140618 14:29:15.604"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:29:15.630" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:29:15.630" starttime="20140618 14:29:15.627"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:15.631" starttime="20140618 14:29:15.626"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:29:15.636" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:29:15.637" starttime="20140618 14:29:15.633"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:15.637" starttime="20140618 14:29:15.632"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:29:15.642" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:29:15.643" starttime="20140618 14:29:15.640"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:15.643" starttime="20140618 14:29:15.638"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:15.644" starttime="20140618 14:29:15.619"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:29:15.647" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:29:15.648" starttime="20140618 14:29:15.645"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.651" starttime="20140618 14:29:15.649"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.654" starttime="20140618 14:29:15.652"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.656" starttime="20140618 14:29:15.655"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.658" starttime="20140618 14:29:15.657"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.661" starttime="20140618 14:29:15.659"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.664" starttime="20140618 14:29:15.662"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:15.668" starttime="20140618 14:29:15.665"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:29:15.671" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14771', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14770', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14769', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14776', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14775', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14774', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14767', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14767', u'LowLevelOps.setBalance.input.accountId=14768', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14772', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14772', u'LowLevelOps.setBalance.input.accountId=14773', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:29:22.128" level="INFO">14:29:22,112 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:29:22,120 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:22.129" starttime="20140618 14:29:15.670"></status>
</kw>
<msg timestamp="20140618 14:29:22.132" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:29:22.132" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:29:22.130" starttime="20140618 14:29:15.668"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:29:22.143" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:29:22.143" starttime="20140618 14:29:22.141"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:22.146" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:29:22.146" starttime="20140618 14:29:22.144"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:22.149" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:29:22.149" starttime="20140618 14:29:22.147"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:29:22.154" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:29:22.155" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:29:22.155" starttime="20140618 14:29:22.152"></status>
</kw>
<msg timestamp="20140618 14:29:22.156" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:29:22.157" level="INFO">${return_log_entry} = 2014-06-18 14:29:22,120 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:22.156" starttime="20140618 14:29:22.150"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:22.165" starttime="20140618 14:29:22.163"></status>
</kw>
<msg timestamp="20140618 14:29:22.166" level="INFO">${return_log_entry} = 2014-06-18 14:29:22,120 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:22.166" starttime="20140618 14:29:22.158"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:22.175" starttime="20140618 14:29:22.173"></status>
</kw>
<msg timestamp="20140618 14:29:22.176" level="INFO">${return_log_entry} = 2014-06-18 14:29:22,120 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:29:22.176" starttime="20140618 14:29:22.167"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:22.186" starttime="20140618 14:29:22.183"></status>
</kw>
<msg timestamp="20140618 14:29:22.187" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:22.186" starttime="20140618 14:29:22.177"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:22.200" starttime="20140618 14:29:22.198"></status>
</kw>
<msg timestamp="20140618 14:29:22.200" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:22.200" starttime="20140618 14:29:22.188"></status>
</kw>
<msg timestamp="20140618 14:29:22.202" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:22.201" starttime="20140618 14:29:22.133"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:29:22.213" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:29:22.213" starttime="20140618 14:29:22.211"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:22.216" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:29:22.216" starttime="20140618 14:29:22.214"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:29:22.219" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:29:22.219" starttime="20140618 14:29:22.217"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:29:22.224" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:29:22.225" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:29:22.225" starttime="20140618 14:29:22.221"></status>
</kw>
<msg timestamp="20140618 14:29:22.226" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:29:22.227" level="INFO">${return_log_entry} = 2014-06-18 14:29:22,112 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:22.226" starttime="20140618 14:29:22.220"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:22.235" starttime="20140618 14:29:22.233"></status>
</kw>
<msg timestamp="20140618 14:29:22.236" level="INFO">${return_log_entry} = 2014-06-18 14:29:22,112 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:22.236" starttime="20140618 14:29:22.228"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:22.245" starttime="20140618 14:29:22.243"></status>
</kw>
<msg timestamp="20140618 14:29:22.246" level="INFO">${return_log_entry} = 2014-06-18 14:29:22,112 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:22.246" starttime="20140618 14:29:22.237"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:22.255" starttime="20140618 14:29:22.253"></status>
</kw>
<msg timestamp="20140618 14:29:22.256" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:22.256" starttime="20140618 14:29:22.247"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:22.270" starttime="20140618 14:29:22.268"></status>
</kw>
<msg timestamp="20140618 14:29:22.271" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:22.271" starttime="20140618 14:29:22.257"></status>
</kw>
<msg timestamp="20140618 14:29:22.272" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:22.272" starttime="20140618 14:29:22.203"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:22.282" starttime="20140618 14:29:22.281"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:22.284" starttime="20140618 14:29:22.283"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:22.286" starttime="20140618 14:29:22.285"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:29:22.297" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_001-PrepaidMTC-ShortDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:29:22.298" starttime="20140618 14:29:22.294"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:22.299" starttime="20140618 14:29:22.293"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:22.299" starttime="20140618 14:29:22.287"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:22.299" starttime="20140618 14:29:22.273"></status>
</kw>
<msg timestamp="20140618 14:29:22.302" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:29:22.302" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:29:22.300" starttime="20140618 14:29:15.608"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:29:22.311" starttime="20140618 14:29:22.310"></status>
</kw>
<msg timestamp="20140618 14:29:22.312" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:22.312" starttime="20140618 14:29:22.303"></status>
</kw>
<msg timestamp="20140618 14:29:22.314" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:29:22.313" starttime="20140618 14:29:15.595"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140618 14:29:22.317" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:29:22.317" starttime="20140618 14:29:22.315"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:22.318" starttime="20140618 14:28:49.861"></status>
</kw>
<status status="PASS" endtime="20140618 14:29:22.319" starttime="20140618 14:28:49.821"></status>
</kw>
<doc>This is an end-to-end testing implementation of the IN_PP_MTC_001 - Prepaid MTC - Short Duration TC
This is nearly an exact copy of IN_PP_MOC_005-PrepaidMOC-ShortDuration-robot-suite.txt except that Phone 2 calls Phone 1 instead of the other way round
and the faking part is an MTC call instead of a MOC
---------------------------------------------------------------
Run Prepaid MOC Short Duration

===============================================================================
Run with arguments:
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/MEX-resource.txt
============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20140618 14:29:22.320" starttime="20140618 14:26:01.728"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" info="" doc="" combined="" fail="0" links="">End2EndTest</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">experimental</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">TNZ_supported</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">walter.heincz</stat>
</tag>
<suite>
<stat pass="1" id="s1" fail="0" name="IN PP MTC 001-PrepaidMTC-ShortDuration-robot-suite">IN PP MTC 001-PrepaidMTC-ShortDuration-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
