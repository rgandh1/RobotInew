<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20150507 16:27:16.309">
<suite source="/opt/robot/robotworkspace/robot_testsuites" id="s1" name="Robot Testsuites">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic" id="s1-s1" name="Basic">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/MFC_OffNet_30s" id="s1-s1-s1" name="MFC OffNet 30s">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/MFC_OffNet_30s/MFC_OffNet30s-robot-suite.txt" id="s1-s1-s1-s1" name="MFC OffNet30s-robot-suite">
<test id="s1-s1-s1-s1-t1" name="Run Call">
<kw type="kw" name="component-verification-resource.Verify CRCE">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.716" starttime="20150507 16:27:19.713"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.721" starttime="20150507 16:27:19.718"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-crce status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.725" starttime="20150507 16:27:19.723"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:19.729" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:19.728" starttime="20150507 16:27:19.727"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>CRCE is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.734" starttime="20150507 16:27:19.732"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.738" starttime="20150507 16:27:19.736"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:19.740" starttime="20150507 16:27:19.696"></status>
</kw>
<kw type="kw" name="component-verification-resource.Verify IN-MOC">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.760" starttime="20150507 16:27:19.758"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.764" starttime="20150507 16:27:19.762"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-corein-service-moc-${IN VERS} status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.768" starttime="20150507 16:27:19.766"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:19.772" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:19.772" starttime="20150507 16:27:19.770"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>Service ${IN Vers} is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.777" starttime="20150507 16:27:19.775"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.781" starttime="20150507 16:27:19.780"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:19.783" starttime="20150507 16:27:19.742"></status>
</kw>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.788" starttime="20150507 16:27:19.785"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.792" starttime="20150507 16:27:19.790"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'tail -f /var/log/inew/core-in-service/${IN VERS}/moc/inew-in.log &gt; /tmp/robot_in_log.log'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.796" starttime="20150507 16:27:19.794"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>java -jar ${CALLSGEN HOME}/${CALLSGEN JAR NAME} ${CG UNIFIED WS PATH}/sessions/IN-sessions/SingleMfc30s.cgs ${CG UNIFIED WS PATH}/ -i ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/workspace.ini -s ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/SingleMfcSubscriber.csv -f ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/MFCFlex.csv</arg>
</arguments>
<msg timestamp="20150507 16:27:19.801" level="INFO">${rc} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:19.801" starttime="20150507 16:27:19.798"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.806" starttime="20150507 16:27:19.804"></status>
</kw>
<kw type="kw" name="SSHLibrary.Get File">
<doc>Downloads file(s) from the remote machine to the local machine.</doc>
<arguments>
<arg>/tmp/robot_in_log.log</arg>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.811" starttime="20150507 16:27:19.809"></status>
</kw>
<kw type="kw" name="${EXCEPTIONS} = OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>robot_in_log.log</arg>
<arg>Exception</arg>
</arguments>
<msg timestamp="20150507 16:27:19.816" level="INFO">${EXCEPTIONS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:19.815" starttime="20150507 16:27:19.813"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${EXCEPTIONS}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:19.821" starttime="20150507 16:27:19.819"></status>
</kw>
<doc></doc>
<tags>
<tag>FALABELLA_supported</tag>
<tag>IN_involved</tag>
<tag>thomas.maikis</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150507 16:27:19.823" starttime="20150507 16:27:19.678"></status>
</test>
<doc>Executes a 1 segment MOC call
Run with arguments:
--pythonpath /opt/robot:/opt/soapui-4.5.1/bin/soapui-4.5.1.jar:/opt/soapui-4.5.1/lib/STAR.jar
--escape star:STAR
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/FALABELLA-CHILE-NewRelease-resource.txt</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:19.830" starttime="20150507 16:27:17.507"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:19.845" starttime="20150507 16:27:17.439"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/MFC_OnNet_30s" id="s1-s1-s2" name="MFC OnNet 30s">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/MFC_OnNet_30s/MFC_OnNet30s-robot-suite.txt" id="s1-s1-s2-s1" name="MFC OnNet30s-robot-suite">
<test id="s1-s1-s2-s1-t1" name="Run Call">
<kw type="kw" name="component-verification-resource.Verify CRCE">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.042" starttime="20150507 16:27:20.040"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.046" starttime="20150507 16:27:20.044"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-crce status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.049" starttime="20150507 16:27:20.048"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:20.053" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:20.052" starttime="20150507 16:27:20.051"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>CRCE is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.064" starttime="20150507 16:27:20.061"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.070" starttime="20150507 16:27:20.068"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:20.073" starttime="20150507 16:27:20.026"></status>
</kw>
<kw type="kw" name="component-verification-resource.Verify IN-MOC">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.108" starttime="20150507 16:27:20.103"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.114" starttime="20150507 16:27:20.111"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-corein-service-moc-${IN VERS} status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.121" starttime="20150507 16:27:20.118"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:20.128" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:20.126" starttime="20150507 16:27:20.124"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>Service ${IN Vers} is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.135" starttime="20150507 16:27:20.132"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.140" starttime="20150507 16:27:20.138"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:20.143" starttime="20150507 16:27:20.077"></status>
</kw>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.151" starttime="20150507 16:27:20.147"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.158" starttime="20150507 16:27:20.155"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'tail -f /var/log/inew/core-in-service/${IN VERS}/moc/inew-in.log &gt; /tmp/robot_in_log.log'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.165" starttime="20150507 16:27:20.162"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>java -jar ${CALLSGEN HOME}/${CALLSGEN JAR NAME} ${CG UNIFIED WS PATH}/sessions/IN-sessions/SingleMfc30s.cgs ${CG UNIFIED WS PATH}/ -i ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/workspace.ini -s ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/SingleMfcSubscriber.csv -f ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/MFCFlex.csv</arg>
</arguments>
<msg timestamp="20150507 16:27:20.174" level="INFO">${rc} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:20.172" starttime="20150507 16:27:20.169"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.181" starttime="20150507 16:27:20.178"></status>
</kw>
<kw type="kw" name="SSHLibrary.Get File">
<doc>Downloads file(s) from the remote machine to the local machine.</doc>
<arguments>
<arg>/tmp/robot_in_log.log</arg>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.188" starttime="20150507 16:27:20.185"></status>
</kw>
<kw type="kw" name="${EXCEPTIONS} = OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>robot_in_log.log</arg>
<arg>Exception</arg>
</arguments>
<msg timestamp="20150507 16:27:20.197" level="INFO">${EXCEPTIONS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:20.195" starttime="20150507 16:27:20.192"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${EXCEPTIONS}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.205" starttime="20150507 16:27:20.202"></status>
</kw>
<doc></doc>
<tags>
<tag>FALABELLA_supported</tag>
<tag>IN_involved</tag>
<tag>thomas.maikis</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150507 16:27:20.209" starttime="20150507 16:27:20.010"></status>
</test>
<doc>Executes a 1 segment MOC call
Run with arguments:
--pythonpath /opt/robot:/opt/soapui-4.5.1/bin/soapui-4.5.1.jar:/opt/soapui-4.5.1/lib/STAR.jar
--escape star:STAR
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/FALABELLA-CHILE-NewRelease-resource.txt</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:20.219" starttime="20150507 16:27:19.896"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:20.245" starttime="20150507 16:27:19.857"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/MOC_International_30s" id="s1-s1-s3" name="MOC International 30s">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/MOC_International_30s/MOC_International30s-robot-suite.txt" id="s1-s1-s3-s1" name="MOC International30s-robot-suite">
<test id="s1-s1-s3-s1-t1" name="Run Call">
<kw type="kw" name="component-verification-resource.Verify CRCE">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.517" starttime="20150507 16:27:20.515"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.521" starttime="20150507 16:27:20.519"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-crce status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.523" starttime="20150507 16:27:20.522"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:20.527" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:20.526" starttime="20150507 16:27:20.525"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>CRCE is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.530" starttime="20150507 16:27:20.529"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.533" starttime="20150507 16:27:20.532"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:20.534" starttime="20150507 16:27:20.504"></status>
</kw>
<kw type="kw" name="component-verification-resource.Verify IN-MOC">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.549" starttime="20150507 16:27:20.547"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.552" starttime="20150507 16:27:20.550"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-corein-service-moc-${IN VERS} status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.555" starttime="20150507 16:27:20.553"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:20.558" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:20.557" starttime="20150507 16:27:20.556"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>Service ${IN Vers} is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.561" starttime="20150507 16:27:20.560"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.564" starttime="20150507 16:27:20.563"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:20.565" starttime="20150507 16:27:20.536"></status>
</kw>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.569" starttime="20150507 16:27:20.567"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.573" starttime="20150507 16:27:20.571"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'tail -f /var/log/inew/core-in-service/${IN VERS}/moc/inew-in.log &gt; /tmp/robot_in_log.log'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.575" starttime="20150507 16:27:20.574"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>java -jar ${CALLSGEN HOME}/${CALLSGEN JAR NAME} ${CG UNIFIED WS PATH}/sessions/IN-sessions/SingleMoc30s.cgs ${CG UNIFIED WS PATH}/ -i ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/workspace.ini -s ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/SingleMocSubscriber.csv -f ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/MOCFlex.csv</arg>
</arguments>
<msg timestamp="20150507 16:27:20.579" level="INFO">${rc} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:20.579" starttime="20150507 16:27:20.577"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.583" starttime="20150507 16:27:20.581"></status>
</kw>
<kw type="kw" name="SSHLibrary.Get File">
<doc>Downloads file(s) from the remote machine to the local machine.</doc>
<arguments>
<arg>/tmp/robot_in_log.log</arg>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.586" starttime="20150507 16:27:20.585"></status>
</kw>
<kw type="kw" name="${EXCEPTIONS} = OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/robot_in_log.log</arg>
<arg>Exception</arg>
</arguments>
<msg timestamp="20150507 16:27:20.590" level="INFO">${EXCEPTIONS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:20.590" starttime="20150507 16:27:20.588"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${EXCEPTIONS}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.594" starttime="20150507 16:27:20.593"></status>
</kw>
<doc></doc>
<tags>
<tag>FALABELLA_supported</tag>
<tag>IN_involved</tag>
<tag>thomas.maikis</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150507 16:27:20.596" starttime="20150507 16:27:20.491"></status>
</test>
<doc>Executes a 1 segment MOC call
Run with arguments:
--pythonpath /opt/robot:/opt/soapui-4.5.1/bin/soapui-4.5.1.jar:/opt/soapui-4.5.1/lib/STAR.jar
--escape star:STAR
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/FALABELLA-CHILE-NewRelease-resource.txt</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:20.601" starttime="20150507 16:27:20.337"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:20.613" starttime="20150507 16:27:20.267"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/MOC_OffNet_30s" id="s1-s1-s4" name="MOC OffNet 30s">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/MOC_OffNet_30s/MOC_OffNet30s-robot-suite.txt" id="s1-s1-s4-s1" name="MOC OffNet30s-robot-suite">
<test id="s1-s1-s4-s1-t1" name="Run Call">
<kw type="kw" name="component-verification-resource.Verify CRCE">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.788" starttime="20150507 16:27:20.786"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.791" starttime="20150507 16:27:20.790"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-crce status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.794" starttime="20150507 16:27:20.793"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:20.797" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:20.796" starttime="20150507 16:27:20.795"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>CRCE is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.800" starttime="20150507 16:27:20.799"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.803" starttime="20150507 16:27:20.802"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:20.804" starttime="20150507 16:27:20.773"></status>
</kw>
<kw type="kw" name="component-verification-resource.Verify IN-MOC">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.817" starttime="20150507 16:27:20.815"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.820" starttime="20150507 16:27:20.818"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-corein-service-moc-${IN VERS} status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.822" starttime="20150507 16:27:20.821"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:20.826" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:20.825" starttime="20150507 16:27:20.824"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>Service ${IN Vers} is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.829" starttime="20150507 16:27:20.827"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.831" starttime="20150507 16:27:20.830"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:20.833" starttime="20150507 16:27:20.805"></status>
</kw>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.836" starttime="20150507 16:27:20.834"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.839" starttime="20150507 16:27:20.838"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'tail -f /var/log/inew/core-in-service/${IN VERS}/moc/inew-in.log &gt; /tmp/robot_in_log.log'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.842" starttime="20150507 16:27:20.841"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>java -jar ${CALLSGEN HOME}/${CALLSGEN JAR NAME} ${CG UNIFIED WS PATH}/sessions/IN-sessions/SingleMoc30s.cgs ${CG UNIFIED WS PATH}/ -i ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/workspace.ini -s ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/SingleMocSubscriber.csv -f ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/MOCFlex.csv</arg>
</arguments>
<msg timestamp="20150507 16:27:20.846" level="INFO">${rc} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:20.845" starttime="20150507 16:27:20.844"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.849" starttime="20150507 16:27:20.847"></status>
</kw>
<kw type="kw" name="SSHLibrary.Get File">
<doc>Downloads file(s) from the remote machine to the local machine.</doc>
<arguments>
<arg>/tmp/robot_in_log.log</arg>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.852" starttime="20150507 16:27:20.851"></status>
</kw>
<kw type="kw" name="${EXCEPTIONS} = OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/robot_in_log.log</arg>
<arg>Exception</arg>
</arguments>
<msg timestamp="20150507 16:27:20.856" level="INFO">${EXCEPTIONS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:20.855" starttime="20150507 16:27:20.854"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${EXCEPTIONS}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:20.860" starttime="20150507 16:27:20.858"></status>
</kw>
<doc></doc>
<tags>
<tag>FALABELLA_supported</tag>
<tag>IN_involved</tag>
<tag>thomas.maikis</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150507 16:27:20.861" starttime="20150507 16:27:20.760"></status>
</test>
<doc>Executes a 1 segment MOC call
Run with arguments:
--pythonpath /opt/robot:/opt/soapui-4.5.1/bin/soapui-4.5.1.jar:/opt/soapui-4.5.1/lib/STAR.jar
--escape star:STAR
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/FALABELLA-CHILE-NewRelease-resource.txt</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:20.866" starttime="20150507 16:27:20.656"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:20.876" starttime="20150507 16:27:20.623"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/MOC_OnNet_1s" id="s1-s1-s5" name="MOC OnNet 1s">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/MOC_OnNet_1s/MOC_OnNet1s-robot-suite.txt" id="s1-s1-s5-s1" name="MOC OnNet1s-robot-suite">
<test id="s1-s1-s5-s1-t1" name="Verify Components">
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.014" starttime="20150507 16:27:21.012"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.017" starttime="20150507 16:27:21.016"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-crce status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.020" starttime="20150507 16:27:21.019"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:21.024" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.023" starttime="20150507 16:27:21.022"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>CRCE is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.027" starttime="20150507 16:27:21.025"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.030" starttime="20150507 16:27:21.029"></status>
</kw>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.033" starttime="20150507 16:27:21.031"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.036" starttime="20150507 16:27:21.035"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-corein-service-moc-${IN VERS} status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.039" starttime="20150507 16:27:21.038"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:21.043" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.042" starttime="20150507 16:27:21.041"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>Service ${IN Vers} is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.046" starttime="20150507 16:27:21.045"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.049" starttime="20150507 16:27:21.048"></status>
</kw>
<doc></doc>
<tags>
<tag>FALABELLA_supported</tag>
<tag>thomas.maikis</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150507 16:27:21.051" starttime="20150507 16:27:21.000"></status>
</test>
<test id="s1-s1-s5-s1-t2" name="Run Call">
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.068" starttime="20150507 16:27:21.066"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.071" starttime="20150507 16:27:21.069"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'tail -f /var/log/inew/core-in-service/${IN VERS}/moc/inew-in.log &gt; /tmp/robot_in_log.log'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.074" starttime="20150507 16:27:21.072"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>java -jar ${CALLSGEN HOME}/${CALLSGEN JAR NAME} ${CG UNIFIED WS PATH}/sessions/IN-sessions/SingleMoc30s.cgs ${CG UNIFIED WS PATH}/ -i ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/workspace.ini -s ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/SingleMocSubscriber.csv -f ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/MOCFlex.csv</arg>
</arguments>
<msg timestamp="20150507 16:27:21.077" level="INFO">${rc} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.077" starttime="20150507 16:27:21.075"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.081" starttime="20150507 16:27:21.079"></status>
</kw>
<kw type="kw" name="SSHLibrary.Get File">
<doc>Downloads file(s) from the remote machine to the local machine.</doc>
<arguments>
<arg>/tmp/robot_in_log.log</arg>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.084" starttime="20150507 16:27:21.082"></status>
</kw>
<kw type="kw" name="${EXCEPTIONS} = OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>robot_in_log.log</arg>
<arg>Exception</arg>
</arguments>
<msg timestamp="20150507 16:27:21.088" level="INFO">${EXCEPTIONS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.087" starttime="20150507 16:27:21.085"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${EXCEPTIONS}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.091" starttime="20150507 16:27:21.089"></status>
</kw>
<doc></doc>
<tags>
<tag>FALABELLA_supported</tag>
<tag>thomas.maikis</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150507 16:27:21.092" starttime="20150507 16:27:21.054"></status>
</test>
<doc>Executes a 1 segment MOC call
Run with arguments:
--pythonpath /opt/robot:/opt/soapui-4.5.1/bin/soapui-4.5.1.jar:/opt/soapui-4.5.1/lib/STAR.jar
--escape star:STAR
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/FALABELLA-CHILE-NewRelease-resource.txt</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:21.097" starttime="20150507 16:27:20.915"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:21.107" starttime="20150507 16:27:20.884"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/MOC_OnNet_30s" id="s1-s1-s6" name="MOC OnNet 30s">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/MOC_OnNet_30s/MOC_OnNet30s-robot-suite.txt" id="s1-s1-s6-s1" name="MOC OnNet30s-robot-suite">
<test id="s1-s1-s6-s1-t1" name="Run Call">
<kw type="kw" name="component-verification-resource.Verify CRCE">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.268" starttime="20150507 16:27:21.266"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.271" starttime="20150507 16:27:21.269"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-crce status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.274" starttime="20150507 16:27:21.272"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:21.277" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.276" starttime="20150507 16:27:21.275"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>CRCE is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.280" starttime="20150507 16:27:21.278"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.282" starttime="20150507 16:27:21.281"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:21.284" starttime="20150507 16:27:21.254"></status>
</kw>
<kw type="kw" name="component-verification-resource.Verify IN-MOC">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.296" starttime="20150507 16:27:21.294"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.298" starttime="20150507 16:27:21.297"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-corein-service-moc-${IN VERS} status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.301" starttime="20150507 16:27:21.300"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:21.304" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.303" starttime="20150507 16:27:21.303"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>Service ${IN Vers} is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.307" starttime="20150507 16:27:21.306"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.310" starttime="20150507 16:27:21.309"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:21.311" starttime="20150507 16:27:21.285"></status>
</kw>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.314" starttime="20150507 16:27:21.312"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.326" starttime="20150507 16:27:21.325"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'tail -f /var/log/inew/core-in-service/${IN VERS}/moc/inew-in.log &gt; /tmp/robot_in_log.log'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.329" starttime="20150507 16:27:21.328"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>java -jar ${CALLSGEN HOME}/${CALLSGEN JAR NAME} ${CG UNIFIED WS PATH}/sessions/IN-sessions/SingleMoc30s.cgs ${CG UNIFIED WS PATH}/ -i ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/workspace.ini -s ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/SingleMocSubscriber.csv -f ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/MOCFlex.csv</arg>
</arguments>
<msg timestamp="20150507 16:27:21.333" level="INFO">${rc} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.332" starttime="20150507 16:27:21.331"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.336" starttime="20150507 16:27:21.334"></status>
</kw>
<kw type="kw" name="SSHLibrary.Get File">
<doc>Downloads file(s) from the remote machine to the local machine.</doc>
<arguments>
<arg>/tmp/robot_in_log.log</arg>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.339" starttime="20150507 16:27:21.337"></status>
</kw>
<kw type="kw" name="${EXCEPTIONS} = OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/robot_in_log.log</arg>
<arg>Exception</arg>
</arguments>
<msg timestamp="20150507 16:27:21.343" level="INFO">${EXCEPTIONS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.342" starttime="20150507 16:27:21.340"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${EXCEPTIONS}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.346" starttime="20150507 16:27:21.345"></status>
</kw>
<doc></doc>
<tags>
<tag>FALABELLA_supported</tag>
<tag>IN_involved</tag>
<tag>thomas.maikis</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150507 16:27:21.352" starttime="20150507 16:27:21.242"></status>
</test>
<doc>Executes a 1 segment MOC call
Run with arguments:
--pythonpath /opt/robot:/opt/soapui-4.5.1/bin/soapui-4.5.1.jar:/opt/soapui-4.5.1/lib/STAR.jar
--escape star:STAR
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/FALABELLA-CHILE-NewRelease-resource.txt</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:21.357" starttime="20150507 16:27:21.145"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:21.369" starttime="20150507 16:27:21.115"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/MTC_OnNet_30s" id="s1-s1-s7" name="MTC OnNet 30s">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/MTC_OnNet_30s/MTC_OnNet30s-robot-suite.txt" id="s1-s1-s7-s1" name="MTC OnNet30s-robot-suite">
<test id="s1-s1-s7-s1-t1" name="Run Call">
<kw type="kw" name="component-verification-resource.Verify CRCE">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.552" starttime="20150507 16:27:21.551"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.555" starttime="20150507 16:27:21.554"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-crce status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.558" starttime="20150507 16:27:21.557"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:21.561" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.560" starttime="20150507 16:27:21.560"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>CRCE is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.564" starttime="20150507 16:27:21.563"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.567" starttime="20150507 16:27:21.566"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:21.568" starttime="20150507 16:27:21.542"></status>
</kw>
<kw type="kw" name="component-verification-resource.Verify IN-MOC">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.578" starttime="20150507 16:27:21.576"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.580" starttime="20150507 16:27:21.579"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-corein-service-moc-${IN VERS} status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.583" starttime="20150507 16:27:21.582"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:21.586" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.585" starttime="20150507 16:27:21.584"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>Service ${IN Vers} is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.589" starttime="20150507 16:27:21.588"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.591" starttime="20150507 16:27:21.590"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:21.593" starttime="20150507 16:27:21.569"></status>
</kw>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.596" starttime="20150507 16:27:21.594"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.599" starttime="20150507 16:27:21.597"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'tail -f /var/log/inew/core-in-service/${IN VERS}/moc/inew-in.log &gt; /tmp/robot_in_log.log'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.602" starttime="20150507 16:27:21.600"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>java -jar ${CALLSGEN HOME}/${CALLSGEN JAR NAME} ${CG UNIFIED WS PATH}/sessions/IN-sessions/SingleMtc30s.cgs ${CG UNIFIED WS PATH}/ -i ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/workspace.ini -s ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/SingleMtcSubscriber.csv -f ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/MTCFlex.csv</arg>
</arguments>
<msg timestamp="20150507 16:27:21.605" level="INFO">${rc} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.604" starttime="20150507 16:27:21.603"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.608" starttime="20150507 16:27:21.607"></status>
</kw>
<kw type="kw" name="SSHLibrary.Get File">
<doc>Downloads file(s) from the remote machine to the local machine.</doc>
<arguments>
<arg>/tmp/robot_in_log.log</arg>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.611" starttime="20150507 16:27:21.610"></status>
</kw>
<kw type="kw" name="${EXCEPTIONS} = OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>robot_in_log.log</arg>
<arg>Exception</arg>
</arguments>
<msg timestamp="20150507 16:27:21.615" level="INFO">${EXCEPTIONS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.614" starttime="20150507 16:27:21.613"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${EXCEPTIONS}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.618" starttime="20150507 16:27:21.617"></status>
</kw>
<doc></doc>
<tags>
<tag>FALABELLA_supported</tag>
<tag>IN_involved</tag>
<tag>thomas.maikis</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150507 16:27:21.619" starttime="20150507 16:27:21.533"></status>
</test>
<doc>Executes a 1 segment MOC call
Run with arguments:
--pythonpath /opt/robot:/opt/soapui-4.5.1/bin/soapui-4.5.1.jar:/opt/soapui-4.5.1/lib/STAR.jar
--escape star:STAR
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/FALABELLA-CHILE-NewRelease-resource.txt</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:21.624" starttime="20150507 16:27:21.441"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:21.630" starttime="20150507 16:27:21.381"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/rMFC_OnNet_30s" id="s1-s1-s8" name="rMFC OnNet 30s">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/rMFC_OnNet_30s/rMFC_OnNet30s-robot-suite.txt" id="s1-s1-s8-s1" name="rMFC OnNet30s-robot-suite">
<test id="s1-s1-s8-s1-t1" name="Run Call">
<kw type="kw" name="component-verification-resource.Verify CRCE">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.761" starttime="20150507 16:27:21.759"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.770" starttime="20150507 16:27:21.769"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-crce status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.773" starttime="20150507 16:27:21.772"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:21.782" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.781" starttime="20150507 16:27:21.780"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>CRCE is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.785" starttime="20150507 16:27:21.784"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.787" starttime="20150507 16:27:21.786"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:21.789" starttime="20150507 16:27:21.752"></status>
</kw>
<kw type="kw" name="component-verification-resource.Verify IN-MOC">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.810" starttime="20150507 16:27:21.808"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.813" starttime="20150507 16:27:21.811"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-corein-service-moc-${IN VERS} status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.821" starttime="20150507 16:27:21.820"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:21.824" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.823" starttime="20150507 16:27:21.822"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>Service ${IN Vers} is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.833" starttime="20150507 16:27:21.832"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.842" starttime="20150507 16:27:21.834"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:21.844" starttime="20150507 16:27:21.796"></status>
</kw>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.847" starttime="20150507 16:27:21.845"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.855" starttime="20150507 16:27:21.854"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'tail -f /var/log/inew/core-in-service/${IN VERS}/moc/inew-in.log &gt; /tmp/robot_in_log.log'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.858" starttime="20150507 16:27:21.857"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>java -jar ${CALLSGEN HOME}/${CALLSGEN JAR NAME} ${CG UNIFIED WS PATH}/sessions/IN-sessions/SingleMfc30s.cgs ${CG UNIFIED WS PATH}/ -i ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/workspace.ini -s ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/SingleMfcSubscriber.csv -f ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/MFCFlex.csv</arg>
</arguments>
<msg timestamp="20150507 16:27:21.867" level="INFO">${rc} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.867" starttime="20150507 16:27:21.865"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.870" starttime="20150507 16:27:21.869"></status>
</kw>
<kw type="kw" name="SSHLibrary.Get File">
<doc>Downloads file(s) from the remote machine to the local machine.</doc>
<arguments>
<arg>/tmp/robot_in_log.log</arg>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.879" starttime="20150507 16:27:21.871"></status>
</kw>
<kw type="kw" name="${EXCEPTIONS} = OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>robot_in_log.log</arg>
<arg>Exception</arg>
</arguments>
<msg timestamp="20150507 16:27:21.882" level="INFO">${EXCEPTIONS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:21.882" starttime="20150507 16:27:21.880"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${EXCEPTIONS}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:21.891" starttime="20150507 16:27:21.890"></status>
</kw>
<doc></doc>
<tags>
<tag>FALABELLA_supported</tag>
<tag>IN_involved</tag>
<tag>thomas.maikis</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150507 16:27:21.893" starttime="20150507 16:27:21.745"></status>
</test>
<doc>Executes a 1 segment MOC call
Run with arguments:
--pythonpath /opt/robot:/opt/soapui-4.5.1/bin/soapui-4.5.1.jar:/opt/soapui-4.5.1/lib/STAR.jar
--escape star:STAR
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/FALABELLA-CHILE-NewRelease-resource.txt</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:21.902" starttime="20150507 16:27:21.662"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:21.915" starttime="20150507 16:27:21.636"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/rMOC_International_30s" id="s1-s1-s9" name="rMOC International 30s">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/rMOC_International_30s/rMOC_International30s-robot-suite.txt" id="s1-s1-s9-s1" name="rMOC International30s-robot-suite">
<test id="s1-s1-s9-s1-t1" name="Run Call">
<kw type="kw" name="component-verification-resource.Verify CRCE">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.058" starttime="20150507 16:27:22.057"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.061" starttime="20150507 16:27:22.059"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-crce status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.063" starttime="20150507 16:27:22.062"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:22.065" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.065" starttime="20150507 16:27:22.064"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>CRCE is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.068" starttime="20150507 16:27:22.067"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.070" starttime="20150507 16:27:22.069"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:22.071" starttime="20150507 16:27:22.052"></status>
</kw>
<kw type="kw" name="component-verification-resource.Verify IN-MOC">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.079" starttime="20150507 16:27:22.077"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.081" starttime="20150507 16:27:22.080"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-corein-service-moc-${IN VERS} status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.083" starttime="20150507 16:27:22.082"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:22.086" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.085" starttime="20150507 16:27:22.084"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>Service ${IN Vers} is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.088" starttime="20150507 16:27:22.087"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.091" starttime="20150507 16:27:22.090"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:22.092" starttime="20150507 16:27:22.072"></status>
</kw>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.095" starttime="20150507 16:27:22.094"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.098" starttime="20150507 16:27:22.097"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'tail -f /var/log/inew/core-in-service/${IN VERS}/moc/inew-in.log &gt; /tmp/robot_in_log.log'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.100" starttime="20150507 16:27:22.099"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>java -jar ${CALLSGEN HOME}/${CALLSGEN JAR NAME} ${CG UNIFIED WS PATH}/sessions/IN-sessions/SingleMoc30s.cgs ${CG UNIFIED WS PATH}/ -i ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/workspace.ini -s ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/SingleMocSubscriber.csv -f ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/MOCFlex.csv</arg>
</arguments>
<msg timestamp="20150507 16:27:22.103" level="INFO">${rc} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.103" starttime="20150507 16:27:22.102"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.106" starttime="20150507 16:27:22.105"></status>
</kw>
<kw type="kw" name="SSHLibrary.Get File">
<doc>Downloads file(s) from the remote machine to the local machine.</doc>
<arguments>
<arg>/tmp/robot_in_log.log</arg>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.108" starttime="20150507 16:27:22.107"></status>
</kw>
<kw type="kw" name="${EXCEPTIONS} = OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/robot_in_log.log</arg>
<arg>Exception</arg>
</arguments>
<msg timestamp="20150507 16:27:22.112" level="INFO">${EXCEPTIONS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.111" starttime="20150507 16:27:22.110"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${EXCEPTIONS}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.114" starttime="20150507 16:27:22.113"></status>
</kw>
<doc></doc>
<tags>
<tag>FALABELLA_supported</tag>
<tag>IN_involved</tag>
<tag>thomas.maikis</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150507 16:27:22.115" starttime="20150507 16:27:22.045"></status>
</test>
<doc>Executes a 1 segment MOC call
Run with arguments:
--pythonpath /opt/robot:/opt/soapui-4.5.1/bin/soapui-4.5.1.jar:/opt/soapui-4.5.1/lib/STAR.jar
--escape star:STAR
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/FALABELLA-CHILE-NewRelease-resource.txt</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:22.119" starttime="20150507 16:27:21.970"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:22.125" starttime="20150507 16:27:21.926"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/rMOC_OffNet_30s" id="s1-s1-s10" name="rMOC OffNet 30s">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/rMOC_OffNet_30s/rMOC_OffNet30s-robot-suite.txt" id="s1-s1-s10-s1" name="rMOC OffNet30s-robot-suite">
<test id="s1-s1-s10-s1-t1" name="Run Call">
<kw type="kw" name="component-verification-resource.Verify CRCE">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.249" starttime="20150507 16:27:22.247"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.251" starttime="20150507 16:27:22.250"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-crce status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.254" starttime="20150507 16:27:22.253"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:22.257" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.256" starttime="20150507 16:27:22.255"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>CRCE is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.259" starttime="20150507 16:27:22.258"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.261" starttime="20150507 16:27:22.260"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:22.262" starttime="20150507 16:27:22.241"></status>
</kw>
<kw type="kw" name="component-verification-resource.Verify IN-MOC">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.270" starttime="20150507 16:27:22.269"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.273" starttime="20150507 16:27:22.272"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-corein-service-moc-${IN VERS} status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.275" starttime="20150507 16:27:22.274"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:22.278" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.277" starttime="20150507 16:27:22.277"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>Service ${IN Vers} is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.281" starttime="20150507 16:27:22.279"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.282" starttime="20150507 16:27:22.282"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:22.283" starttime="20150507 16:27:22.263"></status>
</kw>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.286" starttime="20150507 16:27:22.285"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.289" starttime="20150507 16:27:22.288"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'tail -f /var/log/inew/core-in-service/${IN VERS}/moc/inew-in.log &gt; /tmp/robot_in_log.log'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.291" starttime="20150507 16:27:22.290"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>java -jar ${CALLSGEN HOME}/${CALLSGEN JAR NAME} ${CG UNIFIED WS PATH}/sessions/IN-sessions/SingleMoc30s.cgs ${CG UNIFIED WS PATH}/ -i ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/workspace.ini -s ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/SingleMocSubscriber.csv -f ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/MOCFlex.csv</arg>
</arguments>
<msg timestamp="20150507 16:27:22.294" level="INFO">${rc} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.293" starttime="20150507 16:27:22.292"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.297" starttime="20150507 16:27:22.295"></status>
</kw>
<kw type="kw" name="SSHLibrary.Get File">
<doc>Downloads file(s) from the remote machine to the local machine.</doc>
<arguments>
<arg>/tmp/robot_in_log.log</arg>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.299" starttime="20150507 16:27:22.298"></status>
</kw>
<kw type="kw" name="${EXCEPTIONS} = OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/robot_in_log.log</arg>
<arg>Exception</arg>
</arguments>
<msg timestamp="20150507 16:27:22.302" level="INFO">${EXCEPTIONS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.302" starttime="20150507 16:27:22.301"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${EXCEPTIONS}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.305" starttime="20150507 16:27:22.304"></status>
</kw>
<doc></doc>
<tags>
<tag>FALABELLA_supported</tag>
<tag>IN_involved</tag>
<tag>thomas.maikis</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150507 16:27:22.306" starttime="20150507 16:27:22.234"></status>
</test>
<doc>Executes a 1 segment MOC call
Run with arguments:
--pythonpath /opt/robot:/opt/soapui-4.5.1/bin/soapui-4.5.1.jar:/opt/soapui-4.5.1/lib/STAR.jar
--escape star:STAR
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/FALABELLA-CHILE-NewRelease-resource.txt</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:22.310" starttime="20150507 16:27:22.154"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:22.317" starttime="20150507 16:27:22.130"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/rMOC_OnNet_30s" id="s1-s1-s11" name="rMOC OnNet 30s">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/rMOC_OnNet_30s/rMOC_OnNet30s-robot-suite.txt" id="s1-s1-s11-s1" name="rMOC OnNet30s-robot-suite">
<test id="s1-s1-s11-s1-t1" name="Run Call">
<kw type="kw" name="component-verification-resource.Verify CRCE">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.432" starttime="20150507 16:27:22.430"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.434" starttime="20150507 16:27:22.433"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-crce status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.436" starttime="20150507 16:27:22.435"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:22.439" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.438" starttime="20150507 16:27:22.437"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>CRCE is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.441" starttime="20150507 16:27:22.440"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.443" starttime="20150507 16:27:22.442"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:22.444" starttime="20150507 16:27:22.425"></status>
</kw>
<kw type="kw" name="component-verification-resource.Verify IN-MOC">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.451" starttime="20150507 16:27:22.449"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.453" starttime="20150507 16:27:22.452"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-corein-service-moc-${IN VERS} status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.455" starttime="20150507 16:27:22.454"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:22.458" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.457" starttime="20150507 16:27:22.456"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>Service ${IN Vers} is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.460" starttime="20150507 16:27:22.459"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.462" starttime="20150507 16:27:22.461"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:22.463" starttime="20150507 16:27:22.445"></status>
</kw>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.466" starttime="20150507 16:27:22.464"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.468" starttime="20150507 16:27:22.467"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'tail -f /var/log/inew/core-in-service/${IN VERS}/moc/inew-in.log &gt; /tmp/robot_in_log.log'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.471" starttime="20150507 16:27:22.469"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>java -jar ${CALLSGEN HOME}/${CALLSGEN JAR NAME} ${CG UNIFIED WS PATH}/sessions/IN-sessions/SingleMoc30s.cgs ${CG UNIFIED WS PATH}/ -i ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/workspace.ini -s ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/SingleMocSubscriber.csv -f ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/MOCFlex.csv</arg>
</arguments>
<msg timestamp="20150507 16:27:22.474" level="INFO">${rc} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.473" starttime="20150507 16:27:22.472"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.476" starttime="20150507 16:27:22.475"></status>
</kw>
<kw type="kw" name="SSHLibrary.Get File">
<doc>Downloads file(s) from the remote machine to the local machine.</doc>
<arguments>
<arg>/tmp/robot_in_log.log</arg>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.479" starttime="20150507 16:27:22.477"></status>
</kw>
<kw type="kw" name="${EXCEPTIONS} = OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/robot_in_log.log</arg>
<arg>Exception</arg>
</arguments>
<msg timestamp="20150507 16:27:22.482" level="INFO">${EXCEPTIONS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.481" starttime="20150507 16:27:22.480"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${EXCEPTIONS}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.484" starttime="20150507 16:27:22.483"></status>
</kw>
<doc></doc>
<tags>
<tag>FALABELLA_supported</tag>
<tag>IN_involved</tag>
<tag>thomas.maikis</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150507 16:27:22.486" starttime="20150507 16:27:22.418"></status>
</test>
<doc>Executes a 1 segment MOC call
Run with arguments:
--pythonpath /opt/robot:/opt/soapui-4.5.1/bin/soapui-4.5.1.jar:/opt/soapui-4.5.1/lib/STAR.jar
--escape star:STAR
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/FALABELLA-CHILE-NewRelease-resource.txt</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:22.489" starttime="20150507 16:27:22.346"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:22.495" starttime="20150507 16:27:22.321"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/rMTC_OnNet_30s" id="s1-s1-s12" name="rMTC OnNet 30s">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/rMTC_OnNet_30s/rMTC_OnNet30s-robot-suite.txt" id="s1-s1-s12-s1" name="rMTC OnNet30s-robot-suite">
<test id="s1-s1-s12-s1-t1" name="Run Call">
<kw type="kw" name="component-verification-resource.Verify CRCE">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.609" starttime="20150507 16:27:22.607"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.611" starttime="20150507 16:27:22.610"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-crce status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.614" starttime="20150507 16:27:22.613"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:22.616" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.615" starttime="20150507 16:27:22.615"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>CRCE is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.618" starttime="20150507 16:27:22.617"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.620" starttime="20150507 16:27:22.620"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:22.621" starttime="20150507 16:27:22.603"></status>
</kw>
<kw type="kw" name="component-verification-resource.Verify IN-MOC">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.628" starttime="20150507 16:27:22.627"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.631" starttime="20150507 16:27:22.629"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'service inew-mvno-corein-service-moc-${IN VERS} status'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.633" starttime="20150507 16:27:22.632"></status>
</kw>
<kw type="kw" name="${CRCESTATUS} = SSHLibrary.Read Until Prompt">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<arguments>
</arguments>
<msg timestamp="20150507 16:27:22.635" level="INFO">${CRCESTATUS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.635" starttime="20150507 16:27:22.634"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${CRCESTATUS}</arg>
<arg>Service ${IN Vers} is running</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.638" starttime="20150507 16:27:22.637"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.640" starttime="20150507 16:27:22.639"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:22.641" starttime="20150507 16:27:22.622"></status>
</kw>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>Port=22</arg>
<arg>prompt=$</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.645" starttime="20150507 16:27:22.643"></status>
</kw>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.648" starttime="20150507 16:27:22.647"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>sudo su -c 'tail -f /var/log/inew/core-in-service/${IN VERS}/moc/inew-in.log &gt; /tmp/robot_in_log.log'</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.651" starttime="20150507 16:27:22.650"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>java -jar ${CALLSGEN HOME}/${CALLSGEN JAR NAME} ${CG UNIFIED WS PATH}/sessions/IN-sessions/SingleMtc30s.cgs ${CG UNIFIED WS PATH}/ -i ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/workspace.ini -s ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/SingleMtcSubscriber.csv -f ${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/MTCFlex.csv</arg>
</arguments>
<msg timestamp="20150507 16:27:22.655" level="INFO">${rc} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.654" starttime="20150507 16:27:22.653"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.658" starttime="20150507 16:27:22.656"></status>
</kw>
<kw type="kw" name="SSHLibrary.Get File">
<doc>Downloads file(s) from the remote machine to the local machine.</doc>
<arguments>
<arg>/tmp/robot_in_log.log</arg>
<arg>${ROBOT WORKSPACE PATH}/${TESTCASE HOME}/</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.661" starttime="20150507 16:27:22.659"></status>
</kw>
<kw type="kw" name="${EXCEPTIONS} = OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>robot_in_log.log</arg>
<arg>Exception</arg>
</arguments>
<msg timestamp="20150507 16:27:22.664" level="INFO">${EXCEPTIONS} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:22.664" starttime="20150507 16:27:22.662"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${EXCEPTIONS}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:22.667" starttime="20150507 16:27:22.666"></status>
</kw>
<doc></doc>
<tags>
<tag>FALABELLA_supported</tag>
<tag>IN_involved</tag>
<tag>thomas.maikis</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150507 16:27:22.669" starttime="20150507 16:27:22.597"></status>
</test>
<doc>Executes a 1 segment MOC call
Run with arguments:
--pythonpath /opt/robot:/opt/soapui-4.5.1/bin/soapui-4.5.1.jar:/opt/soapui-4.5.1/lib/STAR.jar
--escape star:STAR
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/FALABELLA-CHILE-NewRelease-resource.txt</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:22.673" starttime="20150507 16:27:22.526"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:22.680" starttime="20150507 16:27:22.501"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150507 16:27:22.692" starttime="20150507 16:27:17.387"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/e2e-testing" id="s1-s2" name="E2E-Testing">
<suite source="/opt/robot/robotworkspace/robot_testsuites/e2e-testing/basic-service-tests" id="s1-s2-s1" name="Basic-Service-Tests">
<suite source="/opt/robot/robotworkspace/robot_testsuites/e2e-testing/basic-service-tests/IN_BST_002-MOC-NumberNormalisation" id="s1-s2-s1-s1" name="IN BST 002-MOC-NumberNormalisation">
<suite source="/opt/robot/robotworkspace/robot_testsuites/e2e-testing/basic-service-tests/IN_BST_002-MOC-NumberNormalisation/IN_BST_002-MOC-NumberNormalisation-robot-suite.txt" id="s1-s2-s1-s1-s1" name="IN BST 002-MOC-NumberNormalisation-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc>This is the suite setup procedure that is called from "Suite Setup" keyword</doc>
<arguments>
</arguments>
<kw type="kw" name="${CRM_PORTAL_LOGIN_URL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>http://${CRM HOST}:${CRM PORTAL PORT}/${CRM PORTAL LOGIN PATH}</arg>
</arguments>
<msg timestamp="20150507 16:27:29.412" level="INFO">${CRM_PORTAL_LOGIN_URL} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.411" starttime="20150507 16:27:29.410"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.414" starttime="20150507 16:27:29.413"></status>
</kw>
<kw type="kw" name="${CRM_PORTAL_SUBSCRIBER_INPUT_URL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>http://${CRM HOST}:${CRM PORTAL PORT}/${CRM PORTAL DASHBOARD PATH}</arg>
</arguments>
<msg timestamp="20150507 16:27:29.417" level="INFO">${CRM_PORTAL_SUBSCRIBER_INPUT_URL} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.417" starttime="20150507 16:27:29.416"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CRM_PORTAL_SUBSCRIBER_INPUT_URL}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.420" starttime="20150507 16:27:29.419"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Verify that CRM is up and running ******</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.422" starttime="20150507 16:27:29.421"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Init Browser ******</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.425" starttime="20150507 16:27:29.424"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Open Browser</arg>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>firefox</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.427" starttime="20150507 16:27:29.426"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>CRM Portal Screenshot</arg>
<arg>AfterBrowserInit</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.430" starttime="20150507 16:27:29.428"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Reset Phones ******</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.432" starttime="20150507 16:27:29.431"></status>
</kw>
<kw type="kw" name="suite-global-keyword-resource.Reset All Phones">
<doc>This helper for the TCs and Suite Setup script ensures that</doc>
<arguments>
</arguments>
<kw type="kw" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.449" starttime="20150507 16:27:29.448"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.461" starttime="20150507 16:27:29.460"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.462" starttime="20150507 16:27:29.458"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.466" starttime="20150507 16:27:29.465"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.467" starttime="20150507 16:27:29.463"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.471" starttime="20150507 16:27:29.470"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.472" starttime="20150507 16:27:29.468"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:29.473" starttime="20150507 16:27:29.452"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.476" starttime="20150507 16:27:29.475"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.478" starttime="20150507 16:27:29.477"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.480" starttime="20150507 16:27:29.479"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.483" starttime="20150507 16:27:29.482"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.485" starttime="20150507 16:27:29.484"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.488" starttime="20150507 16:27:29.487"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.491" starttime="20150507 16:27:29.491"></status>
</kw>
<msg timestamp="20150507 16:27:29.493" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:29.494" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.492" starttime="20150507 16:27:29.489"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:29.504" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.503" starttime="20150507 16:27:29.502"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:29.507" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.506" starttime="20150507 16:27:29.505"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:29.510" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.509" starttime="20150507 16:27:29.508"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.515" starttime="20150507 16:27:29.514"></status>
</kw>
<msg timestamp="20150507 16:27:29.516" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:29.517" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.516" starttime="20150507 16:27:29.512"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.522" starttime="20150507 16:27:29.521"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.525" starttime="20150507 16:27:29.524"></status>
</kw>
<msg timestamp="20150507 16:27:29.526" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.526" starttime="20150507 16:27:29.518"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.531" starttime="20150507 16:27:29.530"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.534" starttime="20150507 16:27:29.533"></status>
</kw>
<msg timestamp="20150507 16:27:29.535" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.535" starttime="20150507 16:27:29.528"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.541" starttime="20150507 16:27:29.540"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.543" starttime="20150507 16:27:29.542"></status>
</kw>
<msg timestamp="20150507 16:27:29.545" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.544" starttime="20150507 16:27:29.537"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.551" starttime="20150507 16:27:29.550"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.553" starttime="20150507 16:27:29.552"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.556" starttime="20150507 16:27:29.555"></status>
</kw>
<msg timestamp="20150507 16:27:29.557" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.557" starttime="20150507 16:27:29.546"></status>
</kw>
<msg timestamp="20150507 16:27:29.559" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:29.558" starttime="20150507 16:27:29.496"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.568" starttime="20150507 16:27:29.567"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.571" starttime="20150507 16:27:29.570"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.574" starttime="20150507 16:27:29.572"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.580" starttime="20150507 16:27:29.579"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.581" starttime="20150507 16:27:29.577"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.582" starttime="20150507 16:27:29.575"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:29.583" starttime="20150507 16:27:29.561"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:29.584" starttime="20150507 16:27:29.441"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.594" starttime="20150507 16:27:29.593"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.606" starttime="20150507 16:27:29.605"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.607" starttime="20150507 16:27:29.603"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.611" starttime="20150507 16:27:29.610"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.612" starttime="20150507 16:27:29.608"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.616" starttime="20150507 16:27:29.615"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.617" starttime="20150507 16:27:29.613"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:29.618" starttime="20150507 16:27:29.597"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.620" starttime="20150507 16:27:29.619"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.623" starttime="20150507 16:27:29.622"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.625" starttime="20150507 16:27:29.624"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.627" starttime="20150507 16:27:29.626"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.629" starttime="20150507 16:27:29.628"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.632" starttime="20150507 16:27:29.631"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.636" starttime="20150507 16:27:29.635"></status>
</kw>
<msg timestamp="20150507 16:27:29.637" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:29.638" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.637" starttime="20150507 16:27:29.633"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:29.648" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.647" starttime="20150507 16:27:29.646"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:29.651" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.650" starttime="20150507 16:27:29.649"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:29.654" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.653" starttime="20150507 16:27:29.652"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.659" starttime="20150507 16:27:29.658"></status>
</kw>
<msg timestamp="20150507 16:27:29.660" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:29.661" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.660" starttime="20150507 16:27:29.655"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.666" starttime="20150507 16:27:29.665"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.668" starttime="20150507 16:27:29.667"></status>
</kw>
<msg timestamp="20150507 16:27:29.670" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.669" starttime="20150507 16:27:29.662"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.675" starttime="20150507 16:27:29.674"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.678" starttime="20150507 16:27:29.677"></status>
</kw>
<msg timestamp="20150507 16:27:29.679" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.678" starttime="20150507 16:27:29.671"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.684" starttime="20150507 16:27:29.683"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.687" starttime="20150507 16:27:29.686"></status>
</kw>
<msg timestamp="20150507 16:27:29.688" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.688" starttime="20150507 16:27:29.680"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.694" starttime="20150507 16:27:29.693"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.696" starttime="20150507 16:27:29.695"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.699" starttime="20150507 16:27:29.698"></status>
</kw>
<msg timestamp="20150507 16:27:29.700" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.699" starttime="20150507 16:27:29.690"></status>
</kw>
<msg timestamp="20150507 16:27:29.702" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:29.701" starttime="20150507 16:27:29.640"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.711" starttime="20150507 16:27:29.709"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.714" starttime="20150507 16:27:29.712"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.716" starttime="20150507 16:27:29.715"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.722" starttime="20150507 16:27:29.721"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.723" starttime="20150507 16:27:29.720"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.724" starttime="20150507 16:27:29.717"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:29.725" starttime="20150507 16:27:29.704"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:29.726" starttime="20150507 16:27:29.587"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.736" starttime="20150507 16:27:29.735"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.747" starttime="20150507 16:27:29.746"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.748" starttime="20150507 16:27:29.744"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.752" starttime="20150507 16:27:29.751"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.753" starttime="20150507 16:27:29.749"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.757" starttime="20150507 16:27:29.756"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.758" starttime="20150507 16:27:29.754"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:29.759" starttime="20150507 16:27:29.739"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.761" starttime="20150507 16:27:29.760"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.763" starttime="20150507 16:27:29.762"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.766" starttime="20150507 16:27:29.765"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.768" starttime="20150507 16:27:29.767"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.770" starttime="20150507 16:27:29.769"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.772" starttime="20150507 16:27:29.771"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.776" starttime="20150507 16:27:29.775"></status>
</kw>
<msg timestamp="20150507 16:27:29.777" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:29.778" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.777" starttime="20150507 16:27:29.774"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:29.788" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.787" starttime="20150507 16:27:29.786"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:29.791" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.790" starttime="20150507 16:27:29.789"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:29.794" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.793" starttime="20150507 16:27:29.792"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.798" starttime="20150507 16:27:29.797"></status>
</kw>
<msg timestamp="20150507 16:27:29.800" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:29.800" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.799" starttime="20150507 16:27:29.795"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.805" starttime="20150507 16:27:29.804"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.807" starttime="20150507 16:27:29.806"></status>
</kw>
<msg timestamp="20150507 16:27:29.809" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.808" starttime="20150507 16:27:29.802"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.814" starttime="20150507 16:27:29.813"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.816" starttime="20150507 16:27:29.815"></status>
</kw>
<msg timestamp="20150507 16:27:29.817" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.817" starttime="20150507 16:27:29.810"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.823" starttime="20150507 16:27:29.822"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.825" starttime="20150507 16:27:29.824"></status>
</kw>
<msg timestamp="20150507 16:27:29.827" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.826" starttime="20150507 16:27:29.819"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.832" starttime="20150507 16:27:29.831"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.834" starttime="20150507 16:27:29.834"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.837" starttime="20150507 16:27:29.836"></status>
</kw>
<msg timestamp="20150507 16:27:29.838" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.837" starttime="20150507 16:27:29.828"></status>
</kw>
<msg timestamp="20150507 16:27:29.840" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:29.839" starttime="20150507 16:27:29.780"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.849" starttime="20150507 16:27:29.847"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.851" starttime="20150507 16:27:29.850"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.854" starttime="20150507 16:27:29.852"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.860" starttime="20150507 16:27:29.859"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.861" starttime="20150507 16:27:29.857"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.861" starttime="20150507 16:27:29.855"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:29.863" starttime="20150507 16:27:29.842"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:29.864" starttime="20150507 16:27:29.729"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.873" starttime="20150507 16:27:29.872"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.885" starttime="20150507 16:27:29.884"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.885" starttime="20150507 16:27:29.882"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.889" starttime="20150507 16:27:29.888"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.890" starttime="20150507 16:27:29.887"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.894" starttime="20150507 16:27:29.893"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.895" starttime="20150507 16:27:29.891"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:29.896" starttime="20150507 16:27:29.876"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.898" starttime="20150507 16:27:29.897"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.900" starttime="20150507 16:27:29.899"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.902" starttime="20150507 16:27:29.902"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.904" starttime="20150507 16:27:29.904"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.906" starttime="20150507 16:27:29.906"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.908" starttime="20150507 16:27:29.908"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.912" starttime="20150507 16:27:29.911"></status>
</kw>
<msg timestamp="20150507 16:27:29.913" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:29.914" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.913" starttime="20150507 16:27:29.910"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:29.924" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.923" starttime="20150507 16:27:29.922"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:29.927" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.926" starttime="20150507 16:27:29.925"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:29.929" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.929" starttime="20150507 16:27:29.928"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.934" starttime="20150507 16:27:29.933"></status>
</kw>
<msg timestamp="20150507 16:27:29.935" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:29.936" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.935" starttime="20150507 16:27:29.931"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.940" starttime="20150507 16:27:29.940"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.943" starttime="20150507 16:27:29.942"></status>
</kw>
<msg timestamp="20150507 16:27:29.944" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.943" starttime="20150507 16:27:29.937"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.949" starttime="20150507 16:27:29.948"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.951" starttime="20150507 16:27:29.950"></status>
</kw>
<msg timestamp="20150507 16:27:29.952" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.951" starttime="20150507 16:27:29.945"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.957" starttime="20150507 16:27:29.956"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.959" starttime="20150507 16:27:29.958"></status>
</kw>
<msg timestamp="20150507 16:27:29.961" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.960" starttime="20150507 16:27:29.953"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.966" starttime="20150507 16:27:29.965"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.968" starttime="20150507 16:27:29.967"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.970" starttime="20150507 16:27:29.969"></status>
</kw>
<msg timestamp="20150507 16:27:29.971" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:29.971" starttime="20150507 16:27:29.962"></status>
</kw>
<msg timestamp="20150507 16:27:29.973" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:29.973" starttime="20150507 16:27:29.916"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.982" starttime="20150507 16:27:29.981"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.984" starttime="20150507 16:27:29.983"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.987" starttime="20150507 16:27:29.986"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:29.992" starttime="20150507 16:27:29.992"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.993" starttime="20150507 16:27:29.990"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:29.994" starttime="20150507 16:27:29.988"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:29.995" starttime="20150507 16:27:29.975"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:29.996" starttime="20150507 16:27:29.866"></status>
</kw>
<kw type="kw" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.007" starttime="20150507 16:27:30.006"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.018" starttime="20150507 16:27:30.017"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.019" starttime="20150507 16:27:30.015"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.022" starttime="20150507 16:27:30.022"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.023" starttime="20150507 16:27:30.020"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.027" starttime="20150507 16:27:30.026"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.028" starttime="20150507 16:27:30.025"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:30.029" starttime="20150507 16:27:30.010"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.031" starttime="20150507 16:27:30.030"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.033" starttime="20150507 16:27:30.032"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.035" starttime="20150507 16:27:30.035"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.037" starttime="20150507 16:27:30.037"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.039" starttime="20150507 16:27:30.039"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.042" starttime="20150507 16:27:30.041"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.045" starttime="20150507 16:27:30.044"></status>
</kw>
<msg timestamp="20150507 16:27:30.047" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.047" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.046" starttime="20150507 16:27:30.043"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:30.056" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.056" starttime="20150507 16:27:30.055"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.059" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.059" starttime="20150507 16:27:30.058"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.062" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.061" starttime="20150507 16:27:30.061"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.066" starttime="20150507 16:27:30.065"></status>
</kw>
<msg timestamp="20150507 16:27:30.068" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.068" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.067" starttime="20150507 16:27:30.063"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.073" starttime="20150507 16:27:30.072"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.075" starttime="20150507 16:27:30.074"></status>
</kw>
<msg timestamp="20150507 16:27:30.076" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.076" starttime="20150507 16:27:30.069"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.081" starttime="20150507 16:27:30.080"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.083" starttime="20150507 16:27:30.082"></status>
</kw>
<msg timestamp="20150507 16:27:30.085" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.084" starttime="20150507 16:27:30.078"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.089" starttime="20150507 16:27:30.088"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.091" starttime="20150507 16:27:30.091"></status>
</kw>
<msg timestamp="20150507 16:27:30.093" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.092" starttime="20150507 16:27:30.086"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.098" starttime="20150507 16:27:30.097"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.100" starttime="20150507 16:27:30.099"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.102" starttime="20150507 16:27:30.101"></status>
</kw>
<msg timestamp="20150507 16:27:30.104" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.103" starttime="20150507 16:27:30.094"></status>
</kw>
<msg timestamp="20150507 16:27:30.105" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.105" starttime="20150507 16:27:30.049"></status>
</kw>
<kw type="kw" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:30.115" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.114" starttime="20150507 16:27:30.113"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.117" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.117" starttime="20150507 16:27:30.116"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.120" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.120" starttime="20150507 16:27:30.119"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.124" starttime="20150507 16:27:30.123"></status>
</kw>
<msg timestamp="20150507 16:27:30.126" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.126" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.125" starttime="20150507 16:27:30.121"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.131" starttime="20150507 16:27:30.130"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.133" starttime="20150507 16:27:30.132"></status>
</kw>
<msg timestamp="20150507 16:27:30.134" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.133" starttime="20150507 16:27:30.127"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.138" starttime="20150507 16:27:30.138"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.140" starttime="20150507 16:27:30.140"></status>
</kw>
<msg timestamp="20150507 16:27:30.142" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.141" starttime="20150507 16:27:30.135"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.146" starttime="20150507 16:27:30.146"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.148" starttime="20150507 16:27:30.148"></status>
</kw>
<msg timestamp="20150507 16:27:30.150" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.149" starttime="20150507 16:27:30.143"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.155" starttime="20150507 16:27:30.154"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.157" starttime="20150507 16:27:30.156"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.159" starttime="20150507 16:27:30.158"></status>
</kw>
<msg timestamp="20150507 16:27:30.160" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.160" starttime="20150507 16:27:30.151"></status>
</kw>
<msg timestamp="20150507 16:27:30.162" level="INFO">${voice_state} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.161" starttime="20150507 16:27:30.107"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.170" starttime="20150507 16:27:30.169"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.173" starttime="20150507 16:27:30.172"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.175" starttime="20150507 16:27:30.174"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.181" starttime="20150507 16:27:30.180"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.182" starttime="20150507 16:27:30.178"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.182" starttime="20150507 16:27:30.177"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:30.183" starttime="20150507 16:27:30.164"></status>
</kw>
<msg timestamp="20150507 16:27:30.187" level="INFO">${resultCode} = None</msg>
<msg timestamp="20150507 16:27:30.187" level="INFO">${voice_state} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.185" starttime="20150507 16:27:29.999"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 1 failed</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.190" starttime="20150507 16:27:30.188"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 1</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.192" starttime="20150507 16:27:30.191"></status>
</kw>
<kw type="kw" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.202" starttime="20150507 16:27:30.201"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.212" starttime="20150507 16:27:30.212"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.213" starttime="20150507 16:27:30.210"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.217" starttime="20150507 16:27:30.216"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.221" starttime="20150507 16:27:30.214"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.225" starttime="20150507 16:27:30.224"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.226" starttime="20150507 16:27:30.222"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:30.227" starttime="20150507 16:27:30.205"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.229" starttime="20150507 16:27:30.228"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.231" starttime="20150507 16:27:30.230"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.233" starttime="20150507 16:27:30.232"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.235" starttime="20150507 16:27:30.234"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.237" starttime="20150507 16:27:30.236"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.239" starttime="20150507 16:27:30.238"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.243" starttime="20150507 16:27:30.242"></status>
</kw>
<msg timestamp="20150507 16:27:30.244" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.245" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.243" starttime="20150507 16:27:30.241"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:30.255" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.254" starttime="20150507 16:27:30.253"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.257" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.257" starttime="20150507 16:27:30.256"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.264" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.263" starttime="20150507 16:27:30.263"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.268" starttime="20150507 16:27:30.267"></status>
</kw>
<msg timestamp="20150507 16:27:30.269" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.270" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.269" starttime="20150507 16:27:30.265"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.274" starttime="20150507 16:27:30.274"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.276" starttime="20150507 16:27:30.276"></status>
</kw>
<msg timestamp="20150507 16:27:30.278" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.277" starttime="20150507 16:27:30.271"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.282" starttime="20150507 16:27:30.281"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.284" starttime="20150507 16:27:30.283"></status>
</kw>
<msg timestamp="20150507 16:27:30.286" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.285" starttime="20150507 16:27:30.279"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.290" starttime="20150507 16:27:30.289"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.292" starttime="20150507 16:27:30.291"></status>
</kw>
<msg timestamp="20150507 16:27:30.294" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.293" starttime="20150507 16:27:30.287"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.304" starttime="20150507 16:27:30.303"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.306" starttime="20150507 16:27:30.305"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.311" starttime="20150507 16:27:30.310"></status>
</kw>
<msg timestamp="20150507 16:27:30.318" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.317" starttime="20150507 16:27:30.295"></status>
</kw>
<msg timestamp="20150507 16:27:30.319" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.319" starttime="20150507 16:27:30.247"></status>
</kw>
<kw type="kw" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:30.329" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.328" starttime="20150507 16:27:30.327"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.331" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.331" starttime="20150507 16:27:30.330"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.334" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.333" starttime="20150507 16:27:30.332"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.338" starttime="20150507 16:27:30.337"></status>
</kw>
<msg timestamp="20150507 16:27:30.339" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.340" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.338" starttime="20150507 16:27:30.335"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.344" starttime="20150507 16:27:30.343"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.346" starttime="20150507 16:27:30.345"></status>
</kw>
<msg timestamp="20150507 16:27:30.347" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.347" starttime="20150507 16:27:30.341"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.351" starttime="20150507 16:27:30.351"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.353" starttime="20150507 16:27:30.353"></status>
</kw>
<msg timestamp="20150507 16:27:30.355" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.354" starttime="20150507 16:27:30.348"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.359" starttime="20150507 16:27:30.358"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.361" starttime="20150507 16:27:30.361"></status>
</kw>
<msg timestamp="20150507 16:27:30.368" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.368" starttime="20150507 16:27:30.356"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.373" starttime="20150507 16:27:30.373"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.375" starttime="20150507 16:27:30.375"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.377" starttime="20150507 16:27:30.376"></status>
</kw>
<msg timestamp="20150507 16:27:30.378" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.378" starttime="20150507 16:27:30.370"></status>
</kw>
<msg timestamp="20150507 16:27:30.380" level="INFO">${voice_state} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.379" starttime="20150507 16:27:30.321"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.388" starttime="20150507 16:27:30.387"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.393" starttime="20150507 16:27:30.389"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.395" starttime="20150507 16:27:30.394"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.401" starttime="20150507 16:27:30.400"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.402" starttime="20150507 16:27:30.398"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.402" starttime="20150507 16:27:30.396"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:30.403" starttime="20150507 16:27:30.382"></status>
</kw>
<msg timestamp="20150507 16:27:30.405" level="INFO">${resultCode} = None</msg>
<msg timestamp="20150507 16:27:30.405" level="INFO">${voice_state} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.404" starttime="20150507 16:27:30.195"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 2 failed</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.408" starttime="20150507 16:27:30.407"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 2</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.410" starttime="20150507 16:27:30.409"></status>
</kw>
<kw type="kw" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.427" starttime="20150507 16:27:30.426"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.438" starttime="20150507 16:27:30.437"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.438" starttime="20150507 16:27:30.435"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.442" starttime="20150507 16:27:30.441"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.443" starttime="20150507 16:27:30.440"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.446" starttime="20150507 16:27:30.446"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.447" starttime="20150507 16:27:30.444"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:30.448" starttime="20150507 16:27:30.430"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.450" starttime="20150507 16:27:30.449"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.452" starttime="20150507 16:27:30.451"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.454" starttime="20150507 16:27:30.453"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.456" starttime="20150507 16:27:30.455"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.463" starttime="20150507 16:27:30.457"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.465" starttime="20150507 16:27:30.465"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.475" starttime="20150507 16:27:30.468"></status>
</kw>
<msg timestamp="20150507 16:27:30.476" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.477" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.476" starttime="20150507 16:27:30.467"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:30.499" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.498" starttime="20150507 16:27:30.491"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.502" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.502" starttime="20150507 16:27:30.501"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.505" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.504" starttime="20150507 16:27:30.504"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.509" starttime="20150507 16:27:30.508"></status>
</kw>
<msg timestamp="20150507 16:27:30.510" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.510" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.509" starttime="20150507 16:27:30.506"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.514" starttime="20150507 16:27:30.514"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.516" starttime="20150507 16:27:30.516"></status>
</kw>
<msg timestamp="20150507 16:27:30.518" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.517" starttime="20150507 16:27:30.512"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.522" starttime="20150507 16:27:30.521"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.523" starttime="20150507 16:27:30.523"></status>
</kw>
<msg timestamp="20150507 16:27:30.525" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.524" starttime="20150507 16:27:30.519"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.529" starttime="20150507 16:27:30.528"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.531" starttime="20150507 16:27:30.530"></status>
</kw>
<msg timestamp="20150507 16:27:30.532" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.532" starttime="20150507 16:27:30.526"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.537" starttime="20150507 16:27:30.536"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.539" starttime="20150507 16:27:30.538"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.541" starttime="20150507 16:27:30.540"></status>
</kw>
<msg timestamp="20150507 16:27:30.542" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.541" starttime="20150507 16:27:30.533"></status>
</kw>
<msg timestamp="20150507 16:27:30.546" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.546" starttime="20150507 16:27:30.479"></status>
</kw>
<kw type="kw" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:30.555" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.554" starttime="20150507 16:27:30.554"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.557" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.557" starttime="20150507 16:27:30.556"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.560" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.559" starttime="20150507 16:27:30.558"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.563" starttime="20150507 16:27:30.563"></status>
</kw>
<msg timestamp="20150507 16:27:30.565" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.565" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.564" starttime="20150507 16:27:30.561"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.569" starttime="20150507 16:27:30.568"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.571" starttime="20150507 16:27:30.570"></status>
</kw>
<msg timestamp="20150507 16:27:30.572" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.572" starttime="20150507 16:27:30.566"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.576" starttime="20150507 16:27:30.575"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.578" starttime="20150507 16:27:30.577"></status>
</kw>
<msg timestamp="20150507 16:27:30.579" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.579" starttime="20150507 16:27:30.573"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.583" starttime="20150507 16:27:30.582"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.585" starttime="20150507 16:27:30.584"></status>
</kw>
<msg timestamp="20150507 16:27:30.586" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.586" starttime="20150507 16:27:30.580"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.591" starttime="20150507 16:27:30.590"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.593" starttime="20150507 16:27:30.592"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.594" starttime="20150507 16:27:30.594"></status>
</kw>
<msg timestamp="20150507 16:27:30.596" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.595" starttime="20150507 16:27:30.587"></status>
</kw>
<msg timestamp="20150507 16:27:30.597" level="INFO">${voice_state} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.597" starttime="20150507 16:27:30.548"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.605" starttime="20150507 16:27:30.604"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.607" starttime="20150507 16:27:30.606"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.609" starttime="20150507 16:27:30.608"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.614" starttime="20150507 16:27:30.613"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.614" starttime="20150507 16:27:30.612"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.615" starttime="20150507 16:27:30.610"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:30.616" starttime="20150507 16:27:30.599"></status>
</kw>
<msg timestamp="20150507 16:27:30.618" level="INFO">${resultCode} = None</msg>
<msg timestamp="20150507 16:27:30.618" level="INFO">${voice_state} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.617" starttime="20150507 16:27:30.416"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 12 failed</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.620" starttime="20150507 16:27:30.619"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 12</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.622" starttime="20150507 16:27:30.621"></status>
</kw>
<kw type="kw" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.631" starttime="20150507 16:27:30.630"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.641" starttime="20150507 16:27:30.640"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.641" starttime="20150507 16:27:30.639"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.645" starttime="20150507 16:27:30.644"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.645" starttime="20150507 16:27:30.643"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.648" starttime="20150507 16:27:30.648"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.649" starttime="20150507 16:27:30.646"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:30.650" starttime="20150507 16:27:30.634"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.652" starttime="20150507 16:27:30.651"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.653" starttime="20150507 16:27:30.653"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.655" starttime="20150507 16:27:30.654"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.657" starttime="20150507 16:27:30.656"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.658" starttime="20150507 16:27:30.658"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.660" starttime="20150507 16:27:30.660"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.663" starttime="20150507 16:27:30.663"></status>
</kw>
<msg timestamp="20150507 16:27:30.664" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.665" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.664" starttime="20150507 16:27:30.661"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:30.674" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.673" starttime="20150507 16:27:30.672"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.676" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.675" starttime="20150507 16:27:30.675"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.678" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.678" starttime="20150507 16:27:30.677"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.681" starttime="20150507 16:27:30.681"></status>
</kw>
<msg timestamp="20150507 16:27:30.683" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.683" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.682" starttime="20150507 16:27:30.679"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.687" starttime="20150507 16:27:30.686"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.688" starttime="20150507 16:27:30.688"></status>
</kw>
<msg timestamp="20150507 16:27:30.690" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.689" starttime="20150507 16:27:30.684"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.693" starttime="20150507 16:27:30.693"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.695" starttime="20150507 16:27:30.694"></status>
</kw>
<msg timestamp="20150507 16:27:30.696" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.695" starttime="20150507 16:27:30.691"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.700" starttime="20150507 16:27:30.699"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.701" starttime="20150507 16:27:30.701"></status>
</kw>
<msg timestamp="20150507 16:27:30.703" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.702" starttime="20150507 16:27:30.697"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.707" starttime="20150507 16:27:30.706"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.709" starttime="20150507 16:27:30.708"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.710" starttime="20150507 16:27:30.710"></status>
</kw>
<msg timestamp="20150507 16:27:30.711" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.711" starttime="20150507 16:27:30.704"></status>
</kw>
<msg timestamp="20150507 16:27:30.713" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.712" starttime="20150507 16:27:30.667"></status>
</kw>
<kw type="kw" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:30.721" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.721" starttime="20150507 16:27:30.720"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.723" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.723" starttime="20150507 16:27:30.722"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.726" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.725" starttime="20150507 16:27:30.724"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.729" starttime="20150507 16:27:30.728"></status>
</kw>
<msg timestamp="20150507 16:27:30.730" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.730" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.729" starttime="20150507 16:27:30.727"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.734" starttime="20150507 16:27:30.733"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.735" starttime="20150507 16:27:30.735"></status>
</kw>
<msg timestamp="20150507 16:27:30.737" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.736" starttime="20150507 16:27:30.731"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.740" starttime="20150507 16:27:30.739"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.742" starttime="20150507 16:27:30.741"></status>
</kw>
<msg timestamp="20150507 16:27:30.743" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.742" starttime="20150507 16:27:30.738"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.746" starttime="20150507 16:27:30.746"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.748" starttime="20150507 16:27:30.748"></status>
</kw>
<msg timestamp="20150507 16:27:30.749" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.749" starttime="20150507 16:27:30.744"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.753" starttime="20150507 16:27:30.753"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.755" starttime="20150507 16:27:30.754"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.756" starttime="20150507 16:27:30.756"></status>
</kw>
<msg timestamp="20150507 16:27:30.758" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.757" starttime="20150507 16:27:30.750"></status>
</kw>
<msg timestamp="20150507 16:27:30.759" level="INFO">${voice_state} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.759" starttime="20150507 16:27:30.715"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.767" starttime="20150507 16:27:30.766"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.768" starttime="20150507 16:27:30.768"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.770" starttime="20150507 16:27:30.769"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.775" starttime="20150507 16:27:30.774"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.775" starttime="20150507 16:27:30.773"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.776" starttime="20150507 16:27:30.771"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:30.777" starttime="20150507 16:27:30.761"></status>
</kw>
<msg timestamp="20150507 16:27:30.778" level="INFO">${resultCode} = None</msg>
<msg timestamp="20150507 16:27:30.779" level="INFO">${voice_state} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.778" starttime="20150507 16:27:30.625"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 13 failed</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.781" starttime="20150507 16:27:30.780"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 13</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.783" starttime="20150507 16:27:30.782"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_ONNET_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20150507 16:27:30.791" level="INFO">${ussd_code_disable_forwarding} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.791" starttime="20150507 16:27:30.790"></status>
</kw>
<kw type="kw" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.808" starttime="20150507 16:27:30.808"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.809" starttime="20150507 16:27:30.806"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.812" starttime="20150507 16:27:30.811"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.813" starttime="20150507 16:27:30.810"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.815" starttime="20150507 16:27:30.815"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.816" starttime="20150507 16:27:30.814"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:30.817" starttime="20150507 16:27:30.801"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.819" starttime="20150507 16:27:30.818"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.820" starttime="20150507 16:27:30.820"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.822" starttime="20150507 16:27:30.821"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.823" starttime="20150507 16:27:30.823"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.825" starttime="20150507 16:27:30.824"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.827" starttime="20150507 16:27:30.826"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.829" starttime="20150507 16:27:30.828"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.830" starttime="20150507 16:27:30.830"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.833" starttime="20150507 16:27:30.832"></status>
</kw>
<msg timestamp="20150507 16:27:30.834" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.835" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.834" starttime="20150507 16:27:30.831"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:30.843" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.842" starttime="20150507 16:27:30.842"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.845" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.844" starttime="20150507 16:27:30.844"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.847" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.846" starttime="20150507 16:27:30.846"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.850" starttime="20150507 16:27:30.849"></status>
</kw>
<msg timestamp="20150507 16:27:30.851" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.852" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.850" starttime="20150507 16:27:30.848"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.855" starttime="20150507 16:27:30.854"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.856" starttime="20150507 16:27:30.856"></status>
</kw>
<msg timestamp="20150507 16:27:30.857" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.857" starttime="20150507 16:27:30.852"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.861" starttime="20150507 16:27:30.860"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.862" starttime="20150507 16:27:30.862"></status>
</kw>
<msg timestamp="20150507 16:27:30.863" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.863" starttime="20150507 16:27:30.858"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.867" starttime="20150507 16:27:30.866"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.868" starttime="20150507 16:27:30.868"></status>
</kw>
<msg timestamp="20150507 16:27:30.869" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.869" starttime="20150507 16:27:30.864"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.873" starttime="20150507 16:27:30.872"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.875" starttime="20150507 16:27:30.874"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.876" starttime="20150507 16:27:30.876"></status>
</kw>
<msg timestamp="20150507 16:27:30.877" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.877" starttime="20150507 16:27:30.870"></status>
</kw>
<msg timestamp="20150507 16:27:30.879" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.878" starttime="20150507 16:27:30.836"></status>
</kw>
<kw type="kw" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:30.887" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.886" starttime="20150507 16:27:30.886"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.889" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.888" starttime="20150507 16:27:30.888"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:30.891" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.890" starttime="20150507 16:27:30.890"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.894" starttime="20150507 16:27:30.893"></status>
</kw>
<msg timestamp="20150507 16:27:30.895" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.895" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.894" starttime="20150507 16:27:30.892"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.898" starttime="20150507 16:27:30.898"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.900" starttime="20150507 16:27:30.899"></status>
</kw>
<msg timestamp="20150507 16:27:30.901" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.900" starttime="20150507 16:27:30.896"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.904" starttime="20150507 16:27:30.903"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.905" starttime="20150507 16:27:30.905"></status>
</kw>
<msg timestamp="20150507 16:27:30.907" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.906" starttime="20150507 16:27:30.902"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.910" starttime="20150507 16:27:30.909"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.911" starttime="20150507 16:27:30.911"></status>
</kw>
<msg timestamp="20150507 16:27:30.912" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.912" starttime="20150507 16:27:30.907"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.916" starttime="20150507 16:27:30.915"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.917" starttime="20150507 16:27:30.917"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.919" starttime="20150507 16:27:30.918"></status>
</kw>
<msg timestamp="20150507 16:27:30.920" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.920" starttime="20150507 16:27:30.913"></status>
</kw>
<msg timestamp="20150507 16:27:30.922" level="INFO">${response_text} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.921" starttime="20150507 16:27:30.881"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.929" starttime="20150507 16:27:30.928"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.931" starttime="20150507 16:27:30.930"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.932" starttime="20150507 16:27:30.932"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.936" starttime="20150507 16:27:30.936"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.937" starttime="20150507 16:27:30.935"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.938" starttime="20150507 16:27:30.933"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:30.938" starttime="20150507 16:27:30.923"></status>
</kw>
<msg timestamp="20150507 16:27:30.940" level="INFO">${resultCode} = None</msg>
<msg timestamp="20150507 16:27:30.940" level="INFO">${response_text} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.939" starttime="20150507 16:27:30.794"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.943" starttime="20150507 16:27:30.943"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.945" starttime="20150507 16:27:30.944"></status>
</kw>
<msg timestamp="20150507 16:27:30.946" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.945" starttime="20150507 16:27:30.941"></status>
</kw>
<msg timestamp="20150507 16:27:30.947" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:30.947" starttime="20150507 16:27:30.785"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 1 failed</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.949" starttime="20150507 16:27:30.948"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_ONNET_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20150507 16:27:30.957" level="INFO">${ussd_code_disable_forwarding} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.957" starttime="20150507 16:27:30.956"></status>
</kw>
<kw type="kw" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.972" starttime="20150507 16:27:30.972"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.973" starttime="20150507 16:27:30.971"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.976" starttime="20150507 16:27:30.975"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.976" starttime="20150507 16:27:30.974"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.979" starttime="20150507 16:27:30.979"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:30.980" starttime="20150507 16:27:30.977"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:30.981" starttime="20150507 16:27:30.966"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.982" starttime="20150507 16:27:30.981"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.984" starttime="20150507 16:27:30.983"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.985" starttime="20150507 16:27:30.985"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.987" starttime="20150507 16:27:30.986"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.988" starttime="20150507 16:27:30.987"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.989" starttime="20150507 16:27:30.989"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.991" starttime="20150507 16:27:30.990"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.992" starttime="20150507 16:27:30.992"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:30.995" starttime="20150507 16:27:30.994"></status>
</kw>
<msg timestamp="20150507 16:27:30.996" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:30.997" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:30.996" starttime="20150507 16:27:30.993"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.005" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.004" starttime="20150507 16:27:31.004"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.007" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.006" starttime="20150507 16:27:31.006"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.009" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.008" starttime="20150507 16:27:31.008"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.011" starttime="20150507 16:27:31.011"></status>
</kw>
<msg timestamp="20150507 16:27:31.013" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.013" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.012" starttime="20150507 16:27:31.010"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.016" starttime="20150507 16:27:31.016"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.018" starttime="20150507 16:27:31.017"></status>
</kw>
<msg timestamp="20150507 16:27:31.019" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.018" starttime="20150507 16:27:31.014"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.022" starttime="20150507 16:27:31.021"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.023" starttime="20150507 16:27:31.023"></status>
</kw>
<msg timestamp="20150507 16:27:31.025" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.024" starttime="20150507 16:27:31.020"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.028" starttime="20150507 16:27:31.027"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.029" starttime="20150507 16:27:31.029"></status>
</kw>
<msg timestamp="20150507 16:27:31.031" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.030" starttime="20150507 16:27:31.026"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.034" starttime="20150507 16:27:31.034"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.036" starttime="20150507 16:27:31.035"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.037" starttime="20150507 16:27:31.037"></status>
</kw>
<msg timestamp="20150507 16:27:31.038" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.038" starttime="20150507 16:27:31.032"></status>
</kw>
<msg timestamp="20150507 16:27:31.041" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.039" starttime="20150507 16:27:30.998"></status>
</kw>
<kw type="kw" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.048" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.048" starttime="20150507 16:27:31.047"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.050" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.050" starttime="20150507 16:27:31.049"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.052" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.052" starttime="20150507 16:27:31.051"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.055" starttime="20150507 16:27:31.055"></status>
</kw>
<msg timestamp="20150507 16:27:31.056" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.057" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.056" starttime="20150507 16:27:31.053"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.060" starttime="20150507 16:27:31.059"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.061" starttime="20150507 16:27:31.061"></status>
</kw>
<msg timestamp="20150507 16:27:31.063" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.062" starttime="20150507 16:27:31.058"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.066" starttime="20150507 16:27:31.065"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.067" starttime="20150507 16:27:31.066"></status>
</kw>
<msg timestamp="20150507 16:27:31.068" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.068" starttime="20150507 16:27:31.063"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.071" starttime="20150507 16:27:31.071"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.073" starttime="20150507 16:27:31.072"></status>
</kw>
<msg timestamp="20150507 16:27:31.074" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.073" starttime="20150507 16:27:31.069"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.078" starttime="20150507 16:27:31.077"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.079" starttime="20150507 16:27:31.078"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.080" starttime="20150507 16:27:31.080"></status>
</kw>
<msg timestamp="20150507 16:27:31.082" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.081" starttime="20150507 16:27:31.075"></status>
</kw>
<msg timestamp="20150507 16:27:31.083" level="INFO">${response_text} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.082" starttime="20150507 16:27:31.042"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.090" starttime="20150507 16:27:31.089"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.092" starttime="20150507 16:27:31.091"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.093" starttime="20150507 16:27:31.092"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.097" starttime="20150507 16:27:31.096"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.098" starttime="20150507 16:27:31.095"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.098" starttime="20150507 16:27:31.094"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:31.099" starttime="20150507 16:27:31.085"></status>
</kw>
<msg timestamp="20150507 16:27:31.103" level="INFO">${resultCode} = None</msg>
<msg timestamp="20150507 16:27:31.104" level="INFO">${response_text} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.100" starttime="20150507 16:27:30.960"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.107" starttime="20150507 16:27:31.106"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.108" starttime="20150507 16:27:31.108"></status>
</kw>
<msg timestamp="20150507 16:27:31.113" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.109" starttime="20150507 16:27:31.105"></status>
</kw>
<msg timestamp="20150507 16:27:31.117" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.114" starttime="20150507 16:27:30.951"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 2 failed</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.120" starttime="20150507 16:27:31.119"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_OFFNET_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20150507 16:27:31.136" level="INFO">${ussd_code_disable_forwarding} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.135" starttime="20150507 16:27:31.135"></status>
</kw>
<kw type="kw" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.160" starttime="20150507 16:27:31.159"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.160" starttime="20150507 16:27:31.157"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.164" starttime="20150507 16:27:31.163"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.165" starttime="20150507 16:27:31.162"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.169" starttime="20150507 16:27:31.168"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.169" starttime="20150507 16:27:31.166"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:31.170" starttime="20150507 16:27:31.150"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.172" starttime="20150507 16:27:31.172"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.174" starttime="20150507 16:27:31.174"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.176" starttime="20150507 16:27:31.175"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.178" starttime="20150507 16:27:31.177"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.179" starttime="20150507 16:27:31.179"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.181" starttime="20150507 16:27:31.181"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.183" starttime="20150507 16:27:31.182"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.185" starttime="20150507 16:27:31.184"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.188" starttime="20150507 16:27:31.187"></status>
</kw>
<msg timestamp="20150507 16:27:31.189" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.190" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.188" starttime="20150507 16:27:31.186"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.199" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.199" starttime="20150507 16:27:31.198"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.202" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.201" starttime="20150507 16:27:31.200"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.204" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.203" starttime="20150507 16:27:31.203"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.207" starttime="20150507 16:27:31.207"></status>
</kw>
<msg timestamp="20150507 16:27:31.209" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.209" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.208" starttime="20150507 16:27:31.205"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.212" starttime="20150507 16:27:31.212"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.214" starttime="20150507 16:27:31.213"></status>
</kw>
<msg timestamp="20150507 16:27:31.215" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.214" starttime="20150507 16:27:31.210"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.218" starttime="20150507 16:27:31.217"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.219" starttime="20150507 16:27:31.219"></status>
</kw>
<msg timestamp="20150507 16:27:31.220" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.220" starttime="20150507 16:27:31.216"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.224" starttime="20150507 16:27:31.223"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.225" starttime="20150507 16:27:31.224"></status>
</kw>
<msg timestamp="20150507 16:27:31.226" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.226" starttime="20150507 16:27:31.221"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.231" starttime="20150507 16:27:31.230"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.232" starttime="20150507 16:27:31.232"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.233" starttime="20150507 16:27:31.233"></status>
</kw>
<msg timestamp="20150507 16:27:31.235" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.234" starttime="20150507 16:27:31.227"></status>
</kw>
<msg timestamp="20150507 16:27:31.236" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.235" starttime="20150507 16:27:31.191"></status>
</kw>
<kw type="kw" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.244" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.243" starttime="20150507 16:27:31.243"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.246" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.245" starttime="20150507 16:27:31.245"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.248" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.247" starttime="20150507 16:27:31.246"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.250" starttime="20150507 16:27:31.250"></status>
</kw>
<msg timestamp="20150507 16:27:31.251" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.252" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.251" starttime="20150507 16:27:31.248"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.255" starttime="20150507 16:27:31.254"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.256" starttime="20150507 16:27:31.256"></status>
</kw>
<msg timestamp="20150507 16:27:31.257" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.257" starttime="20150507 16:27:31.253"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.260" starttime="20150507 16:27:31.260"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.262" starttime="20150507 16:27:31.261"></status>
</kw>
<msg timestamp="20150507 16:27:31.263" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.262" starttime="20150507 16:27:31.258"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.266" starttime="20150507 16:27:31.265"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.267" starttime="20150507 16:27:31.267"></status>
</kw>
<msg timestamp="20150507 16:27:31.269" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.268" starttime="20150507 16:27:31.264"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.272" starttime="20150507 16:27:31.272"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.274" starttime="20150507 16:27:31.273"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.275" starttime="20150507 16:27:31.274"></status>
</kw>
<msg timestamp="20150507 16:27:31.276" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.275" starttime="20150507 16:27:31.270"></status>
</kw>
<msg timestamp="20150507 16:27:31.277" level="INFO">${response_text} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.277" starttime="20150507 16:27:31.238"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.284" starttime="20150507 16:27:31.283"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.286" starttime="20150507 16:27:31.285"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.287" starttime="20150507 16:27:31.287"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.291" starttime="20150507 16:27:31.291"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.292" starttime="20150507 16:27:31.290"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.292" starttime="20150507 16:27:31.288"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:31.293" starttime="20150507 16:27:31.279"></status>
</kw>
<msg timestamp="20150507 16:27:31.295" level="INFO">${resultCode} = None</msg>
<msg timestamp="20150507 16:27:31.295" level="INFO">${response_text} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.294" starttime="20150507 16:27:31.139"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.298" starttime="20150507 16:27:31.298"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.299" starttime="20150507 16:27:31.299"></status>
</kw>
<msg timestamp="20150507 16:27:31.301" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.300" starttime="20150507 16:27:31.296"></status>
</kw>
<msg timestamp="20150507 16:27:31.302" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.301" starttime="20150507 16:27:31.126"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 12 failed</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.303" starttime="20150507 16:27:31.303"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_PSEUDO_FIXNET_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20150507 16:27:31.311" level="INFO">${ussd_code_disable_forwarding} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.311" starttime="20150507 16:27:31.310"></status>
</kw>
<kw type="kw" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.327" starttime="20150507 16:27:31.326"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.327" starttime="20150507 16:27:31.325"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.330" starttime="20150507 16:27:31.329"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.330" starttime="20150507 16:27:31.328"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.333" starttime="20150507 16:27:31.332"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.333" starttime="20150507 16:27:31.331"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:31.334" starttime="20150507 16:27:31.320"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.336" starttime="20150507 16:27:31.335"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.337" starttime="20150507 16:27:31.337"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.344" starttime="20150507 16:27:31.344"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.346" starttime="20150507 16:27:31.345"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.347" starttime="20150507 16:27:31.347"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.348" starttime="20150507 16:27:31.348"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.350" starttime="20150507 16:27:31.349"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.351" starttime="20150507 16:27:31.351"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.354" starttime="20150507 16:27:31.353"></status>
</kw>
<msg timestamp="20150507 16:27:31.356" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.356" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.355" starttime="20150507 16:27:31.352"></status>
</kw>
<kw type="kw" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.364" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.364" starttime="20150507 16:27:31.363"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.366" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.365" starttime="20150507 16:27:31.365"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.368" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.367" starttime="20150507 16:27:31.367"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.371" starttime="20150507 16:27:31.370"></status>
</kw>
<msg timestamp="20150507 16:27:31.372" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.372" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.371" starttime="20150507 16:27:31.369"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.375" starttime="20150507 16:27:31.375"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.376" starttime="20150507 16:27:31.376"></status>
</kw>
<msg timestamp="20150507 16:27:31.378" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.377" starttime="20150507 16:27:31.373"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.381" starttime="20150507 16:27:31.380"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.382" starttime="20150507 16:27:31.382"></status>
</kw>
<msg timestamp="20150507 16:27:31.383" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.383" starttime="20150507 16:27:31.379"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.386" starttime="20150507 16:27:31.386"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.388" starttime="20150507 16:27:31.387"></status>
</kw>
<msg timestamp="20150507 16:27:31.389" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.388" starttime="20150507 16:27:31.384"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.392" starttime="20150507 16:27:31.391"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.393" starttime="20150507 16:27:31.393"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.395" starttime="20150507 16:27:31.394"></status>
</kw>
<msg timestamp="20150507 16:27:31.396" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.395" starttime="20150507 16:27:31.390"></status>
</kw>
<msg timestamp="20150507 16:27:31.397" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.397" starttime="20150507 16:27:31.358"></status>
</kw>
<kw type="kw" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.405" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.404" starttime="20150507 16:27:31.404"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.407" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.406" starttime="20150507 16:27:31.405"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.408" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.408" starttime="20150507 16:27:31.407"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.411" starttime="20150507 16:27:31.410"></status>
</kw>
<msg timestamp="20150507 16:27:31.412" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.413" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.412" starttime="20150507 16:27:31.409"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.416" starttime="20150507 16:27:31.415"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.417" starttime="20150507 16:27:31.417"></status>
</kw>
<msg timestamp="20150507 16:27:31.418" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.418" starttime="20150507 16:27:31.414"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.421" starttime="20150507 16:27:31.421"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.423" starttime="20150507 16:27:31.422"></status>
</kw>
<msg timestamp="20150507 16:27:31.424" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.423" starttime="20150507 16:27:31.419"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.427" starttime="20150507 16:27:31.426"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.428" starttime="20150507 16:27:31.428"></status>
</kw>
<msg timestamp="20150507 16:27:31.429" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.429" starttime="20150507 16:27:31.425"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.433" starttime="20150507 16:27:31.432"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.434" starttime="20150507 16:27:31.434"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.436" starttime="20150507 16:27:31.435"></status>
</kw>
<msg timestamp="20150507 16:27:31.437" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.436" starttime="20150507 16:27:31.430"></status>
</kw>
<msg timestamp="20150507 16:27:31.438" level="INFO">${response_text} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.438" starttime="20150507 16:27:31.399"></status>
</kw>
<kw type="kw" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.445" starttime="20150507 16:27:31.444"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.446" starttime="20150507 16:27:31.446"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.448" starttime="20150507 16:27:31.447"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.452" starttime="20150507 16:27:31.451"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.452" starttime="20150507 16:27:31.450"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.453" starttime="20150507 16:27:31.449"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:31.454" starttime="20150507 16:27:31.440"></status>
</kw>
<msg timestamp="20150507 16:27:31.455" level="INFO">${resultCode} = None</msg>
<msg timestamp="20150507 16:27:31.455" level="INFO">${response_text} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.454" starttime="20150507 16:27:31.314"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.458" starttime="20150507 16:27:31.458"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.460" starttime="20150507 16:27:31.459"></status>
</kw>
<msg timestamp="20150507 16:27:31.461" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.460" starttime="20150507 16:27:31.456"></status>
</kw>
<msg timestamp="20150507 16:27:31.462" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.462" starttime="20150507 16:27:31.305"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 13 failed</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.464" starttime="20150507 16:27:31.463"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:31.464" starttime="20150507 16:27:29.434"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Setup phone 1 and 2 subscriber accounts (On phone 1 ONLY MainAccount shall have a credit, phone 2 shall have a credit AT LEAST at the MainBalance) ******</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.467" starttime="20150507 16:27:31.466"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'!='true'</arg>
<arg>CRCE Clear All Balances By Imsi</arg>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Clear All Balances By Imsi">
<doc>Same as "CRCE Clear All Balances" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId *****</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.475" starttime="20150507 16:27:31.474"></status>
</kw>
<kw type="kw" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.490" starttime="20150507 16:27:31.490"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.491" starttime="20150507 16:27:31.489"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.493" starttime="20150507 16:27:31.493"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.494" starttime="20150507 16:27:31.492"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.496" starttime="20150507 16:27:31.496"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.497" starttime="20150507 16:27:31.495"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:31.498" starttime="20150507 16:27:31.484"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.499" starttime="20150507 16:27:31.499"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.501" starttime="20150507 16:27:31.500"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.502" starttime="20150507 16:27:31.501"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.503" starttime="20150507 16:27:31.503"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.505" starttime="20150507 16:27:31.504"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.506" starttime="20150507 16:27:31.506"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.508" starttime="20150507 16:27:31.507"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.510" starttime="20150507 16:27:31.510"></status>
</kw>
<msg timestamp="20150507 16:27:31.511" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.512" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.511" starttime="20150507 16:27:31.509"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.519" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.519" starttime="20150507 16:27:31.518"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.521" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.521" starttime="20150507 16:27:31.520"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.523" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.522" starttime="20150507 16:27:31.522"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.526" starttime="20150507 16:27:31.525"></status>
</kw>
<msg timestamp="20150507 16:27:31.527" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.527" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.526" starttime="20150507 16:27:31.524"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.530" starttime="20150507 16:27:31.530"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.531" starttime="20150507 16:27:31.531"></status>
</kw>
<msg timestamp="20150507 16:27:31.533" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.532" starttime="20150507 16:27:31.528"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.535" starttime="20150507 16:27:31.535"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.537" starttime="20150507 16:27:31.536"></status>
</kw>
<msg timestamp="20150507 16:27:31.538" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.537" starttime="20150507 16:27:31.533"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.541" starttime="20150507 16:27:31.540"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.542" starttime="20150507 16:27:31.542"></status>
</kw>
<msg timestamp="20150507 16:27:31.544" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.543" starttime="20150507 16:27:31.539"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.547" starttime="20150507 16:27:31.546"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.555" starttime="20150507 16:27:31.548"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.556" starttime="20150507 16:27:31.556"></status>
</kw>
<msg timestamp="20150507 16:27:31.557" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.557" starttime="20150507 16:27:31.544"></status>
</kw>
<msg timestamp="20150507 16:27:31.559" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.558" starttime="20150507 16:27:31.513"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.579" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.578" starttime="20150507 16:27:31.571"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.581" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.580" starttime="20150507 16:27:31.580"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.582" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.582" starttime="20150507 16:27:31.581"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.585" starttime="20150507 16:27:31.584"></status>
</kw>
<msg timestamp="20150507 16:27:31.586" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.587" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.586" starttime="20150507 16:27:31.583"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.593" starttime="20150507 16:27:31.592"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.594" starttime="20150507 16:27:31.594"></status>
</kw>
<msg timestamp="20150507 16:27:31.595" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.595" starttime="20150507 16:27:31.588"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.599" starttime="20150507 16:27:31.598"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.600" starttime="20150507 16:27:31.600"></status>
</kw>
<msg timestamp="20150507 16:27:31.601" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.601" starttime="20150507 16:27:31.596"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.604" starttime="20150507 16:27:31.604"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.605" starttime="20150507 16:27:31.605"></status>
</kw>
<msg timestamp="20150507 16:27:31.607" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.606" starttime="20150507 16:27:31.602"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.610" starttime="20150507 16:27:31.609"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.611" starttime="20150507 16:27:31.611"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.612" starttime="20150507 16:27:31.612"></status>
</kw>
<msg timestamp="20150507 16:27:31.613" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.613" starttime="20150507 16:27:31.607"></status>
</kw>
<msg timestamp="20150507 16:27:31.615" level="INFO">${providerId} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.614" starttime="20150507 16:27:31.566"></status>
</kw>
<kw type="kw" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.622" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.621" starttime="20150507 16:27:31.621"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.624" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.623" starttime="20150507 16:27:31.623"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.625" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.625" starttime="20150507 16:27:31.625"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.628" starttime="20150507 16:27:31.627"></status>
</kw>
<msg timestamp="20150507 16:27:31.629" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.630" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.629" starttime="20150507 16:27:31.626"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.632" starttime="20150507 16:27:31.632"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.633" starttime="20150507 16:27:31.633"></status>
</kw>
<msg timestamp="20150507 16:27:31.635" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.634" starttime="20150507 16:27:31.630"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.637" starttime="20150507 16:27:31.637"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.639" starttime="20150507 16:27:31.638"></status>
</kw>
<msg timestamp="20150507 16:27:31.640" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.639" starttime="20150507 16:27:31.635"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.643" starttime="20150507 16:27:31.642"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.644" starttime="20150507 16:27:31.643"></status>
</kw>
<msg timestamp="20150507 16:27:31.645" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.644" starttime="20150507 16:27:31.641"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.648" starttime="20150507 16:27:31.648"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.649" starttime="20150507 16:27:31.649"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.651" starttime="20150507 16:27:31.650"></status>
</kw>
<msg timestamp="20150507 16:27:31.652" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.651" starttime="20150507 16:27:31.646"></status>
</kw>
<msg timestamp="20150507 16:27:31.653" level="INFO">${msisdn} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.653" starttime="20150507 16:27:31.616"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.660" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.660" starttime="20150507 16:27:31.659"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.662" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.662" starttime="20150507 16:27:31.661"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.664" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.663" starttime="20150507 16:27:31.663"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.667" starttime="20150507 16:27:31.666"></status>
</kw>
<msg timestamp="20150507 16:27:31.668" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.668" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.667" starttime="20150507 16:27:31.665"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.671" starttime="20150507 16:27:31.670"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.672" starttime="20150507 16:27:31.672"></status>
</kw>
<msg timestamp="20150507 16:27:31.674" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.673" starttime="20150507 16:27:31.669"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.676" starttime="20150507 16:27:31.676"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.678" starttime="20150507 16:27:31.677"></status>
</kw>
<msg timestamp="20150507 16:27:31.679" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.678" starttime="20150507 16:27:31.674"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.682" starttime="20150507 16:27:31.681"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.683" starttime="20150507 16:27:31.682"></status>
</kw>
<msg timestamp="20150507 16:27:31.684" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.684" starttime="20150507 16:27:31.680"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.687" starttime="20150507 16:27:31.687"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.688" starttime="20150507 16:27:31.688"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.690" starttime="20150507 16:27:31.689"></status>
</kw>
<msg timestamp="20150507 16:27:31.691" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.690" starttime="20150507 16:27:31.685"></status>
</kw>
<msg timestamp="20150507 16:27:31.692" level="INFO">${id} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.692" starttime="20150507 16:27:31.655"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.699" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.699" starttime="20150507 16:27:31.698"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.702" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.701" starttime="20150507 16:27:31.701"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.703" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.703" starttime="20150507 16:27:31.703"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.706" starttime="20150507 16:27:31.705"></status>
</kw>
<msg timestamp="20150507 16:27:31.707" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.707" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.707" starttime="20150507 16:27:31.704"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.710" starttime="20150507 16:27:31.710"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.711" starttime="20150507 16:27:31.711"></status>
</kw>
<msg timestamp="20150507 16:27:31.712" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.712" starttime="20150507 16:27:31.708"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.715" starttime="20150507 16:27:31.715"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.716" starttime="20150507 16:27:31.716"></status>
</kw>
<msg timestamp="20150507 16:27:31.717" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.717" starttime="20150507 16:27:31.713"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.720" starttime="20150507 16:27:31.720"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.722" starttime="20150507 16:27:31.721"></status>
</kw>
<msg timestamp="20150507 16:27:31.723" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.722" starttime="20150507 16:27:31.718"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.726" starttime="20150507 16:27:31.725"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.727" starttime="20150507 16:27:31.727"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.728" starttime="20150507 16:27:31.728"></status>
</kw>
<msg timestamp="20150507 16:27:31.729" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.729" starttime="20150507 16:27:31.724"></status>
</kw>
<msg timestamp="20150507 16:27:31.731" level="INFO">${state} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.730" starttime="20150507 16:27:31.694"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.738" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.738" starttime="20150507 16:27:31.737"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.740" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.739" starttime="20150507 16:27:31.739"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.742" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.741" starttime="20150507 16:27:31.741"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.744" starttime="20150507 16:27:31.744"></status>
</kw>
<msg timestamp="20150507 16:27:31.745" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.746" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.745" starttime="20150507 16:27:31.742"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.748" starttime="20150507 16:27:31.748"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.750" starttime="20150507 16:27:31.749"></status>
</kw>
<msg timestamp="20150507 16:27:31.751" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.750" starttime="20150507 16:27:31.746"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.753" starttime="20150507 16:27:31.753"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.754" starttime="20150507 16:27:31.754"></status>
</kw>
<msg timestamp="20150507 16:27:31.756" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.755" starttime="20150507 16:27:31.751"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.758" starttime="20150507 16:27:31.758"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.760" starttime="20150507 16:27:31.759"></status>
</kw>
<msg timestamp="20150507 16:27:31.761" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.760" starttime="20150507 16:27:31.756"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.764" starttime="20150507 16:27:31.763"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.765" starttime="20150507 16:27:31.765"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.766" starttime="20150507 16:27:31.766"></status>
</kw>
<msg timestamp="20150507 16:27:31.768" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.767" starttime="20150507 16:27:31.762"></status>
</kw>
<msg timestamp="20150507 16:27:31.769" level="INFO">${tariffId} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.768" starttime="20150507 16:27:31.732"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.776" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.776" starttime="20150507 16:27:31.775"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.778" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.777" starttime="20150507 16:27:31.777"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.780" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.779" starttime="20150507 16:27:31.779"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.782" starttime="20150507 16:27:31.782"></status>
</kw>
<msg timestamp="20150507 16:27:31.783" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.784" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.783" starttime="20150507 16:27:31.780"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.786" starttime="20150507 16:27:31.786"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.788" starttime="20150507 16:27:31.787"></status>
</kw>
<msg timestamp="20150507 16:27:31.789" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.788" starttime="20150507 16:27:31.785"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.791" starttime="20150507 16:27:31.791"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.793" starttime="20150507 16:27:31.792"></status>
</kw>
<msg timestamp="20150507 16:27:31.794" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.793" starttime="20150507 16:27:31.790"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.797" starttime="20150507 16:27:31.796"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.798" starttime="20150507 16:27:31.797"></status>
</kw>
<msg timestamp="20150507 16:27:31.799" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.798" starttime="20150507 16:27:31.795"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.802" starttime="20150507 16:27:31.802"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.803" starttime="20150507 16:27:31.803"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.805" starttime="20150507 16:27:31.804"></status>
</kw>
<msg timestamp="20150507 16:27:31.806" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.805" starttime="20150507 16:27:31.800"></status>
</kw>
<msg timestamp="20150507 16:27:31.807" level="INFO">${type} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.807" starttime="20150507 16:27:31.770"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.814" starttime="20150507 16:27:31.813"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.815" starttime="20150507 16:27:31.815"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.816" starttime="20150507 16:27:31.816"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.820" starttime="20150507 16:27:31.819"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.820" starttime="20150507 16:27:31.818"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.821" starttime="20150507 16:27:31.817"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:31.822" starttime="20150507 16:27:31.809"></status>
</kw>
<msg timestamp="20150507 16:27:31.823" level="INFO">${resultCode} = None</msg>
<msg timestamp="20150507 16:27:31.824" level="INFO">${providerIdDummy} = None</msg>
<msg timestamp="20150507 16:27:31.824" level="INFO">${msisdnDummy} = None</msg>
<msg timestamp="20150507 16:27:31.825" level="INFO">${subscriberId} = None</msg>
<msg timestamp="20150507 16:27:31.825" level="INFO">${stateDummy} = None</msg>
<msg timestamp="20150507 16:27:31.825" level="INFO">${tariffIdDummy} = None</msg>
<msg timestamp="20150507 16:27:31.826" level="INFO">${typeDummy} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.823" starttime="20150507 16:27:31.478"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Fail">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.828" starttime="20150507 16:27:31.828"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.829" starttime="20150507 16:27:31.827"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Clear All Balances" *****</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.830" starttime="20150507 16:27:31.830"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Clear All Balances">
<doc>Sets passed subscribers balance of all accounts to zero</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve all accountIds ***</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.837" starttime="20150507 16:27:31.836"></status>
</kw>
<kw type="kw" name="${resultCode}, @{accountIds} = subscriber-admin-support-resource.CRCE Get Accounts">
<doc>This is a delegator to the CRCE webservice operation getAccounts and returnes the list of the subscriber's acountIds</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.851" starttime="20150507 16:27:31.851"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.852" starttime="20150507 16:27:31.850"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.854" starttime="20150507 16:27:31.854"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.855" starttime="20150507 16:27:31.853"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.857" starttime="20150507 16:27:31.857"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.858" starttime="20150507 16:27:31.856"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:31.858" starttime="20150507 16:27:31.846"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.860" starttime="20150507 16:27:31.859"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.861" starttime="20150507 16:27:31.860"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.862" starttime="20150507 16:27:31.862"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.864" starttime="20150507 16:27:31.863"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.865" starttime="20150507 16:27:31.865"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getAccounts</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.866" starttime="20150507 16:27:31.866"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getAccounts.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.867" starttime="20150507 16:27:31.867"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.870" starttime="20150507 16:27:31.869"></status>
</kw>
<msg timestamp="20150507 16:27:31.871" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.871" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.870" starttime="20150507 16:27:31.868"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.878" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.878" starttime="20150507 16:27:31.877"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.880" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.879" starttime="20150507 16:27:31.879"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.882" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.881" starttime="20150507 16:27:31.881"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.884" starttime="20150507 16:27:31.883"></status>
</kw>
<msg timestamp="20150507 16:27:31.885" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.886" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.885" starttime="20150507 16:27:31.882"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.888" starttime="20150507 16:27:31.888"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.889" starttime="20150507 16:27:31.889"></status>
</kw>
<msg timestamp="20150507 16:27:31.890" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.890" starttime="20150507 16:27:31.886"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.893" starttime="20150507 16:27:31.893"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.894" starttime="20150507 16:27:31.894"></status>
</kw>
<msg timestamp="20150507 16:27:31.895" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.895" starttime="20150507 16:27:31.891"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.898" starttime="20150507 16:27:31.897"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.899" starttime="20150507 16:27:31.899"></status>
</kw>
<msg timestamp="20150507 16:27:31.900" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.900" starttime="20150507 16:27:31.896"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.903" starttime="20150507 16:27:31.903"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.905" starttime="20150507 16:27:31.904"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.906" starttime="20150507 16:27:31.905"></status>
</kw>
<msg timestamp="20150507 16:27:31.907" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.906" starttime="20150507 16:27:31.901"></status>
</kw>
<msg timestamp="20150507 16:27:31.908" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.908" starttime="20150507 16:27:31.873"></status>
</kw>
<kw type="kw" name="${csvAccountIds} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.accountIds</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:31.915" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.915" starttime="20150507 16:27:31.914"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.917" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.916" starttime="20150507 16:27:31.916"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:31.919" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.918" starttime="20150507 16:27:31.918"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.921" starttime="20150507 16:27:31.920"></status>
</kw>
<msg timestamp="20150507 16:27:31.922" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:31.923" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.922" starttime="20150507 16:27:31.919"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.925" starttime="20150507 16:27:31.925"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.927" starttime="20150507 16:27:31.926"></status>
</kw>
<msg timestamp="20150507 16:27:31.928" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.927" starttime="20150507 16:27:31.924"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.930" starttime="20150507 16:27:31.930"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.931" starttime="20150507 16:27:31.931"></status>
</kw>
<msg timestamp="20150507 16:27:31.932" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.932" starttime="20150507 16:27:31.928"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.935" starttime="20150507 16:27:31.935"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.936" starttime="20150507 16:27:31.936"></status>
</kw>
<msg timestamp="20150507 16:27:31.937" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.937" starttime="20150507 16:27:31.933"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.940" starttime="20150507 16:27:31.940"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.942" starttime="20150507 16:27:31.941"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.943" starttime="20150507 16:27:31.942"></status>
</kw>
<msg timestamp="20150507 16:27:31.944" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.943" starttime="20150507 16:27:31.938"></status>
</kw>
<msg timestamp="20150507 16:27:31.945" level="INFO">${csvAccountIds} = None</msg>
<status status="PASS" endtime="20150507 16:27:31.945" starttime="20150507 16:27:31.910"></status>
</kw>
<kw type="kw" name="@{accountIds} = String.Split String">
<doc>Splits the `string` using `separator` as a delimiter string.</doc>
<arguments>
<arg>${csvAccountIds}</arg>
<arg>;</arg>
</arguments>
<msg timestamp="20150507 16:27:31.947" level="INFO">@{accountIds} = [ ]</msg>
<status status="NOT_RUN" endtime="20150507 16:27:31.947" starttime="20150507 16:27:31.946"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetAccounts</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.953" starttime="20150507 16:27:31.953"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.955" starttime="20150507 16:27:31.954"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.956" starttime="20150507 16:27:31.955"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.959" starttime="20150507 16:27:31.959"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.960" starttime="20150507 16:27:31.958"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.960" starttime="20150507 16:27:31.957"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:31.961" starttime="20150507 16:27:31.948"></status>
</kw>
<msg timestamp="20150507 16:27:31.962" level="INFO">${resultCode} = None</msg>
<msg timestamp="20150507 16:27:31.963" level="INFO">@{accountIds} = [ ]</msg>
<status status="PASS" endtime="20150507 16:27:31.962" starttime="20150507 16:27:31.839"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying accounts of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Fail">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Querying accounts of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.965" starttime="20150507 16:27:31.965"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.966" starttime="20150507 16:27:31.964"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Clear each account balance ***</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.967" starttime="20150507 16:27:31.966"></status>
</kw>
<kw type="for" name="${accountId} IN [ @{accountIds} ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" name="${accountId} = ${accountId}">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.975" starttime="20150507 16:27:31.974"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.983" starttime="20150507 16:27:31.982"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.983" starttime="20150507 16:27:31.981"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.985" starttime="20150507 16:27:31.985"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.986" starttime="20150507 16:27:31.984"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.988" starttime="20150507 16:27:31.988"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:31.989" starttime="20150507 16:27:31.987"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:31.990" starttime="20150507 16:27:31.977"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.991" starttime="20150507 16:27:31.990"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.992" starttime="20150507 16:27:31.992"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.993" starttime="20150507 16:27:31.993"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.995" starttime="20150507 16:27:31.994"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.996" starttime="20150507 16:27:31.995"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.997" starttime="20150507 16:27:31.997"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.998" starttime="20150507 16:27:31.998"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:31.999" starttime="20150507 16:27:31.999"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.001" starttime="20150507 16:27:32.000"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.003" starttime="20150507 16:27:32.003"></status>
</kw>
<msg timestamp="20150507 16:27:32.004" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:32.005" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.004" starttime="20150507 16:27:32.002"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:32.012" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.011" starttime="20150507 16:27:32.010"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:32.013" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.013" starttime="20150507 16:27:32.012"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:32.015" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.014" starttime="20150507 16:27:32.014"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.017" starttime="20150507 16:27:32.017"></status>
</kw>
<msg timestamp="20150507 16:27:32.018" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:32.019" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.018" starttime="20150507 16:27:32.016"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.021" starttime="20150507 16:27:32.021"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.023" starttime="20150507 16:27:32.022"></status>
</kw>
<msg timestamp="20150507 16:27:32.024" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.023" starttime="20150507 16:27:32.020"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.026" starttime="20150507 16:27:32.026"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.027" starttime="20150507 16:27:32.027"></status>
</kw>
<msg timestamp="20150507 16:27:32.028" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.028" starttime="20150507 16:27:32.024"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.031" starttime="20150507 16:27:32.031"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.032" starttime="20150507 16:27:32.032"></status>
</kw>
<msg timestamp="20150507 16:27:32.033" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.033" starttime="20150507 16:27:32.029"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.036" starttime="20150507 16:27:32.036"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.038" starttime="20150507 16:27:32.037"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.039" starttime="20150507 16:27:32.038"></status>
</kw>
<msg timestamp="20150507 16:27:32.040" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.039" starttime="20150507 16:27:32.034"></status>
</kw>
<msg timestamp="20150507 16:27:32.041" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:32.041" starttime="20150507 16:27:32.006"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.047" starttime="20150507 16:27:32.047"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.049" starttime="20150507 16:27:32.048"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.050" starttime="20150507 16:27:32.049"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.053" starttime="20150507 16:27:32.053"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:32.054" starttime="20150507 16:27:32.052"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:32.054" starttime="20150507 16:27:32.051"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:32.055" starttime="20150507 16:27:32.042"></status>
</kw>
<msg timestamp="20150507 16:27:32.057" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:32.056" starttime="20150507 16:27:31.970"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Fail">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.059" starttime="20150507 16:27:32.059"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:32.060" starttime="20150507 16:27:32.058"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:32.061" starttime="20150507 16:27:31.968"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:32.062" starttime="20150507 16:27:31.967"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:32.064" starttime="20150507 16:27:31.832"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:32.065" starttime="20150507 16:27:31.470"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:32.066" starttime="20150507 16:27:31.467"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'!='true'</arg>
<arg>CRCE Set Main Balance By Imsi</arg>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>10000000</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Set Main Balance By Imsi">
<doc>Same as "CRCE Set Main Balance" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>10000000</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId for the passed imsi ***</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.075" starttime="20150507 16:27:32.074"></status>
</kw>
<kw type="kw" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.088" starttime="20150507 16:27:32.088"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:32.089" starttime="20150507 16:27:32.087"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.091" starttime="20150507 16:27:32.091"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:32.092" starttime="20150507 16:27:32.090"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.094" starttime="20150507 16:27:32.094"></status>
</kw>
<status status="NOT_RUN" endtime="20150507 16:27:32.095" starttime="20150507 16:27:32.093"></status>
</kw>
<status status="PASS" endtime="20150507 16:27:32.095" starttime="20150507 16:27:32.083"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.097" starttime="20150507 16:27:32.096"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.098" starttime="20150507 16:27:32.098"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.099" starttime="20150507 16:27:32.099"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.100" starttime="20150507 16:27:32.100"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.102" starttime="20150507 16:27:32.101"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.103" starttime="20150507 16:27:32.102"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.104" starttime="20150507 16:27:32.104"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.106" starttime="20150507 16:27:32.106"></status>
</kw>
<msg timestamp="20150507 16:27:32.107" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:32.107" level="INFO">${return_value_dummy} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.106" starttime="20150507 16:27:32.105"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:32.114" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.113" starttime="20150507 16:27:32.113"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:32.116" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.115" starttime="20150507 16:27:32.115"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:32.117" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.117" starttime="20150507 16:27:32.116"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.119" starttime="20150507 16:27:32.119"></status>
</kw>
<msg timestamp="20150507 16:27:32.121" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:32.121" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.120" starttime="20150507 16:27:32.118"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.123" starttime="20150507 16:27:32.123"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.125" starttime="20150507 16:27:32.124"></status>
</kw>
<msg timestamp="20150507 16:27:32.127" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.126" starttime="20150507 16:27:32.122"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.129" starttime="20150507 16:27:32.129"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.130" starttime="20150507 16:27:32.130"></status>
</kw>
<msg timestamp="20150507 16:27:32.131" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.131" starttime="20150507 16:27:32.127"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.141" starttime="20150507 16:27:32.140"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.142" starttime="20150507 16:27:32.141"></status>
</kw>
<msg timestamp="20150507 16:27:32.143" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.142" starttime="20150507 16:27:32.138"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.152" starttime="20150507 16:27:32.151"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.153" starttime="20150507 16:27:32.153"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.154" starttime="20150507 16:27:32.154"></status>
</kw>
<msg timestamp="20150507 16:27:32.155" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.155" starttime="20150507 16:27:32.144"></status>
</kw>
<msg timestamp="20150507 16:27:32.163" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150507 16:27:32.162" starttime="20150507 16:27:32.109"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150507 16:27:32.175" level="INFO">${return_marker} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.175" starttime="20150507 16:27:32.174"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:32.177" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.177" starttime="20150507 16:27:32.176"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150507 16:27:32.179" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.178" starttime="20150507 16:27:32.178"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.187" starttime="20150507 16:27:32.187"></status>
</kw>
<msg timestamp="20150507 16:27:32.188" level="INFO">${execution_status} = None</msg>
<msg timestamp="20150507 16:27:32.189" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.188" starttime="20150507 16:27:32.179"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.191" starttime="20150507 16:27:32.190"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.198" starttime="20150507 16:27:32.198"></status>
</kw>
<msg timestamp="20150507 16:27:32.199" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.199" starttime="20150507 16:27:32.189"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.202" starttime="20150507 16:27:32.201"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.203" starttime="20150507 16:27:32.202"></status>
</kw>
<msg timestamp="20150507 16:27:32.210" level="INFO">${return_log_entry} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.203" starttime="20150507 16:27:32.200"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</In.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.214" starttime="20150507 16:27:32.213"></status>
</kw>
<msg timestamp="20150507 16:27:32.221" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.214" starttime="20150507 16:27:32.211"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.224" starttime="20150507 16:27:32.223"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${default_value}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.225" starttime="20150507 16:27:32.225"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="NOT_RUN" endtime="20150507 16:27:32.226" starttime="20150507 16:27:32.226"></status>
</kw>
<msg timestamp="20150507 16:27:32.228" level="INFO">${resultCode} = None</msg>
<status status="NOT_RUN" endtime="20150507 16:27:32.228" starttime="20150507 16:27:32.222"></status>
</kw>
