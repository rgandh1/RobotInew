<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.7.6 (Jython 2.5.3 on java1.7.0_45)" generated="20140618 14:50:07.334">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/IN_PP_MTC_003-PrepaidMTC-LongDuration-robot-suite.txt" id="s1" name="IN PP MTC 003-PrepaidMTC-LongDuration-robot-suite">
<kw type="setup" timeout="" name="suite-global-keyword-resource.Setup Suite">
<doc>This is the suite setup procedure that is called from "Suite Setup" keyword</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${CRM_PORTAL_LOGIN_URL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>http://${CRM HOST}:${CRM PORTAL PORT}/${CRM PORTAL LOGIN PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:13.960" level="INFO">${CRM_PORTAL_LOGIN_URL} = http://10.105.140.127:1084/evoweb/web/crm/257_EN</msg>
<status status="PASS" endtime="20140618 14:50:13.959" starttime="20140618 14:50:13.952"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
</arguments>
<msg timestamp="20140618 14:50:13.967" level="INFO">${CRM_PORTAL_LOGIN_URL} = http://10.105.140.127:1084/evoweb/web/crm/257_EN</msg>
<status status="PASS" endtime="20140618 14:50:13.967" starttime="20140618 14:50:13.963"></status>
</kw>
<kw type="kw" timeout="" name="${CRM_PORTAL_SUBSCRIBER_INPUT_URL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>http://${CRM HOST}:${CRM PORTAL PORT}/${CRM PORTAL DASHBOARD PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:13.976" level="INFO">${CRM_PORTAL_SUBSCRIBER_INPUT_URL} = http://10.105.140.127:1084/evoweb/web/crm/393_EN.htm</msg>
<status status="PASS" endtime="20140618 14:50:13.975" starttime="20140618 14:50:13.970"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CRM_PORTAL_SUBSCRIBER_INPUT_URL}</arg>
</arguments>
<msg timestamp="20140618 14:50:13.981" level="INFO">${CRM_PORTAL_SUBSCRIBER_INPUT_URL} = http://10.105.140.127:1084/evoweb/web/crm/393_EN.htm</msg>
<status status="PASS" endtime="20140618 14:50:13.982" starttime="20140618 14:50:13.978"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Verify that CRM is up and running ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:13.987" starttime="20140618 14:50:13.984"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Init Browser ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:13.991" starttime="20140618 14:50:13.989"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Open Browser</arg>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>firefox</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:13.996" starttime="20140618 14:50:13.993"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>CRM Portal Screenshot</arg>
<arg>AfterBrowserInit</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:14.000" starttime="20140618 14:50:13.998"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Reset Phones ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:14.009" starttime="20140618 14:50:14.006"></status>
</kw>
<kw type="kw" timeout="" name="suite-global-keyword-resource.Reset All Phones">
<doc>This helper for the TCs and Suite Setup script ensures that</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:50:14.064" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972240</msg>
<status status="PASS" endtime="20140618 14:50:14.065" starttime="20140618 14:50:14.059"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:14.099" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:14.100" starttime="20140618 14:50:14.093"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:14.101" starttime="20140618 14:50:14.089"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:14.111" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:14.113" starttime="20140618 14:50:14.107"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:14.114" starttime="20140618 14:50:14.103"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:14.124" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:14.126" starttime="20140618 14:50:14.119"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:14.128" starttime="20140618 14:50:14.116"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:14.129" starttime="20140618 14:50:14.069"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:14.530" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:50:14.531" starttime="20140618 14:50:14.131"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:14.538" starttime="20140618 14:50:14.534"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:14.543" starttime="20140618 14:50:14.539"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:14.547" starttime="20140618 14:50:14.545"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:14.551" starttime="20140618 14:50:14.549"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:14.557" starttime="20140618 14:50:14.553"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:50:14.564" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140618 14:50:22.135" level="INFO">14:50:15,005 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/./ext] for external libraries
14:50:15,006 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
14:50:17,310 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/android-remoting/robot_ars_bridge-soapui-project.xml]
14:50:18,834 INFO  [SoapUITestCaseRunner] Setting project property [arsHost] to [10.189.11.226]
14:50:18,835 INFO  [SoapUITestCaseRunner] Setting project property [arsPort] to [8080]
14:50:18,835 INFO  [SoapUITestCaseRunner] Setting project property [LowLevelOps.Voice.release.input.deviceImsi] to [232033013972240]
14:50:18,857 INFO  [SoapUITestCaseRunner] Running soapUI tests in project [Robotframework_ARS-Bridge]
14:50:18,857 INFO  [SoapUITestCaseRunner] Running TestCase [Voice.release]
14:50:18,874 INFO  [SoapUITestCaseRunner] Running soapUI testcase [Voice.release]
14:50:18,892 INFO  [SoapUITestCaseRunner] running step [00_ARS_availability_test]
14:50:19,606 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:50:19,607 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /androidremoting/system HTTP/1.1
14:50:19,620 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:50:19,629 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:50:19,936 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:50:19,937 INFO  [SoapUITestCaseRunner] running step [cancel_on_failed_step_0]
14:50:21,072 INFO  [SoapUITestCaseRunner] running step [01_release]
14:50:21,076 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:50:21,078 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:50:21,078 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /androidremoting/voice HTTP/1.1
14:50:21,082 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:50:21,082 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:50:21,094 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:50:21,094 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:50:21,094 INFO  [SoapUITestCaseRunner] Assertion [resultCode = OK] has status FAILED
14:50:21,094 ERROR [SoapUITestCaseRunner] ASSERTION FAILED -&gt; Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response
14:50:21,095 ERROR [SoapUITestCaseRunner] 01_release failed, exporting to [/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt]
14:50:21,101 INFO  [SoapUITestCaseRunner] running step [goto_finish_on_successfull_step_1]
14:50:21,205 INFO  [SoapUITestCaseRunner] running step [transfer_failedReason]
14:50:21,924 INFO  [SoapUITestCaseRunner] running step [cancel]
14:50:22,123 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION
14:50:22,126 ERROR [SoapUITestCaseRunner] cancel failed, exporting to [/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt]
14:50:22,127 INFO  [SoapUITestCaseRunner] Finished running soapUI testcase [Voice.release], time taken: 3205ms, status: FAILED
14:50:22,127 INFO  [SoapUITestCaseRunner] TestCase [Voice.release] finished with status [FAILED] in 3205ms</msg>
<msg timestamp="20140618 14:50:22.159" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 21
Size: 528
Timestamp: Wed Jun 18 14:50:21 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972240&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:50:22.162" starttime="20140618 14:50:14.562"></status>
</kw>
<msg timestamp="20140618 14:50:22.167" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:50:22.167" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 21
Size: 528
Timestamp: Wed Jun 18 14:50:21 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:50:22.164" starttime="20140618 14:50:14.559"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:22.198" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:50:22.197" starttime="20140618 14:50:22.193"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:22.204" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:22.203" starttime="20140618 14:50:22.200"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:22.210" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:22.209" starttime="20140618 14:50:22.206"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:22.221" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:22.229" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:22.230" starttime="20140618 14:50:22.216"></status>
</kw>
<msg timestamp="20140618 14:50:22.232" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:22.232" level="INFO">${return_log_entry} = 2014-06-18 14:50:22,123 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:22.231" starttime="20140618 14:50:22.212"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:22.262" starttime="20140618 14:50:22.259"></status>
</kw>
<msg timestamp="20140618 14:50:22.264" level="INFO">${return_log_entry} = 2014-06-18 14:50:22,123 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:22.264" starttime="20140618 14:50:22.235"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:22.352" starttime="20140618 14:50:22.345"></status>
</kw>
<msg timestamp="20140618 14:50:22.354" level="INFO">${return_log_entry} = 2014-06-18 14:50:22,123 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:22.353" starttime="20140618 14:50:22.267"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:22.377" starttime="20140618 14:50:22.370"></status>
</kw>
<msg timestamp="20140618 14:50:22.380" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:22.379" starttime="20140618 14:50:22.356"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:22.408" starttime="20140618 14:50:22.403"></status>
</kw>
<msg timestamp="20140618 14:50:22.410" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:22.409" starttime="20140618 14:50:22.383"></status>
</kw>
<msg timestamp="20140618 14:50:22.413" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:22.412" starttime="20140618 14:50:22.171"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:22.442" starttime="20140618 14:50:22.439"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:22.446" starttime="20140618 14:50:22.444"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:22.451" starttime="20140618 14:50:22.448"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:50:22.478" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:22.479" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:22.481" starttime="20140618 14:50:22.467"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:22.482" starttime="20140618 14:50:22.463"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:22.483" starttime="20140618 14:50:22.453"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:22.483" starttime="20140618 14:50:22.416"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:22.485" starttime="20140618 14:50:14.034"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:50:22.529" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140618 14:50:22.530" starttime="20140618 14:50:22.522"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:22.578" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:22.580" starttime="20140618 14:50:22.571"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:22.582" starttime="20140618 14:50:22.565"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:22.597" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:22.599" starttime="20140618 14:50:22.590"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:22.600" starttime="20140618 14:50:22.585"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:22.616" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:22.618" starttime="20140618 14:50:22.609"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:22.619" starttime="20140618 14:50:22.604"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:22.620" starttime="20140618 14:50:22.538"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:22.632" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:50:22.633" starttime="20140618 14:50:22.623"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:22.642" starttime="20140618 14:50:22.636"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:22.651" starttime="20140618 14:50:22.645"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:22.658" starttime="20140618 14:50:22.654"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:22.664" starttime="20140618 14:50:22.661"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:22.674" starttime="20140618 14:50:22.668"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:50:22.685" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140618 14:50:23.277" level="INFO">14:50:23,270 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140618 14:50:23.294" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 18
Size: 528
Timestamp: Wed Jun 18 14:50:23 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972239&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:50:23.297" starttime="20140618 14:50:22.682"></status>
</kw>
<msg timestamp="20140618 14:50:23.301" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:50:23.301" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 18
Size: 528
Timestamp: Wed Jun 18 14:50:23 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:50:23.299" starttime="20140618 14:50:22.677"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:23.330" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:50:23.329" starttime="20140618 14:50:23.323"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:23.339" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:23.338" starttime="20140618 14:50:23.334"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:23.349" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:23.347" starttime="20140618 14:50:23.343"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:23.364" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:23.367" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:23.368" starttime="20140618 14:50:23.357"></status>
</kw>
<msg timestamp="20140618 14:50:23.371" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:23.372" level="INFO">${return_log_entry} = 2014-06-18 14:50:23,270 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:23.370" starttime="20140618 14:50:23.352"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:23.394" starttime="20140618 14:50:23.389"></status>
</kw>
<msg timestamp="20140618 14:50:23.397" level="INFO">${return_log_entry} = 2014-06-18 14:50:23,270 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:23.396" starttime="20140618 14:50:23.375"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:23.421" starttime="20140618 14:50:23.416"></status>
</kw>
<msg timestamp="20140618 14:50:23.424" level="INFO">${return_log_entry} = 2014-06-18 14:50:23,270 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:23.423" starttime="20140618 14:50:23.400"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:23.450" starttime="20140618 14:50:23.444"></status>
</kw>
<msg timestamp="20140618 14:50:23.453" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:23.452" starttime="20140618 14:50:23.427"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:23.487" starttime="20140618 14:50:23.482"></status>
</kw>
<msg timestamp="20140618 14:50:23.490" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:23.488" starttime="20140618 14:50:23.456"></status>
</kw>
<msg timestamp="20140618 14:50:23.493" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:23.492" starttime="20140618 14:50:23.304"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:23.526" starttime="20140618 14:50:23.522"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:23.533" starttime="20140618 14:50:23.528"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:23.539" starttime="20140618 14:50:23.535"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:50:23.570" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:23.573" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:23.575" starttime="20140618 14:50:23.562"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:23.577" starttime="20140618 14:50:23.557"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:23.578" starttime="20140618 14:50:23.542"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:23.579" starttime="20140618 14:50:23.497"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:23.582" starttime="20140618 14:50:22.491"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:50:23.622" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:50:23.623" starttime="20140618 14:50:23.615"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:23.663" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:23.665" starttime="20140618 14:50:23.656"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:23.666" starttime="20140618 14:50:23.651"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:23.680" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:23.682" starttime="20140618 14:50:23.674"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:23.684" starttime="20140618 14:50:23.669"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:23.696" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:23.698" starttime="20140618 14:50:23.690"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:23.700" starttime="20140618 14:50:23.686"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:23.701" starttime="20140618 14:50:23.630"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:23.711" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:50:23.712" starttime="20140618 14:50:23.703"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:23.719" starttime="20140618 14:50:23.715"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:23.724" starttime="20140618 14:50:23.720"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:23.728" starttime="20140618 14:50:23.725"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:23.731" starttime="20140618 14:50:23.729"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:23.737" starttime="20140618 14:50:23.733"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:50:23.743" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:50:24.523" level="INFO">14:50:24,511 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140618 14:50:24.549" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 21
Size: 528
Timestamp: Wed Jun 18 14:50:24 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:50:24.553" starttime="20140618 14:50:23.741"></status>
</kw>
<msg timestamp="20140618 14:50:24.559" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:50:24.560" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 21
Size: 528
Timestamp: Wed Jun 18 14:50:24 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:50:24.557" starttime="20140618 14:50:23.738"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:24.591" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:50:24.590" starttime="20140618 14:50:24.585"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:24.598" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:24.597" starttime="20140618 14:50:24.593"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:24.605" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:24.605" starttime="20140618 14:50:24.601"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:24.618" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:24.621" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:24.622" starttime="20140618 14:50:24.613"></status>
</kw>
<msg timestamp="20140618 14:50:24.624" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:24.625" level="INFO">${return_log_entry} = 2014-06-18 14:50:24,511 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:24.623" starttime="20140618 14:50:24.608"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:24.647" starttime="20140618 14:50:24.643"></status>
</kw>
<msg timestamp="20140618 14:50:24.649" level="INFO">${return_log_entry} = 2014-06-18 14:50:24,511 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:24.648" starttime="20140618 14:50:24.628"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:24.670" starttime="20140618 14:50:24.666"></status>
</kw>
<msg timestamp="20140618 14:50:24.672" level="INFO">${return_log_entry} = 2014-06-18 14:50:24,511 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:24.671" starttime="20140618 14:50:24.652"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:24.695" starttime="20140618 14:50:24.689"></status>
</kw>
<msg timestamp="20140618 14:50:24.698" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:24.697" starttime="20140618 14:50:24.675"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:24.731" starttime="20140618 14:50:24.726"></status>
</kw>
<msg timestamp="20140618 14:50:24.734" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:24.733" starttime="20140618 14:50:24.701"></status>
</kw>
<msg timestamp="20140618 14:50:24.737" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:24.736" starttime="20140618 14:50:24.564"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:24.767" starttime="20140618 14:50:24.763"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:24.774" starttime="20140618 14:50:24.769"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:24.780" starttime="20140618 14:50:24.776"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:50:24.808" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:24.811" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:24.812" starttime="20140618 14:50:24.801"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:24.814" starttime="20140618 14:50:24.796"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:24.816" starttime="20140618 14:50:24.782"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:24.817" starttime="20140618 14:50:24.741"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:24.819" starttime="20140618 14:50:23.589"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:50:24.856" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:50:24.858" starttime="20140618 14:50:24.850"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:24.894" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:24.896" starttime="20140618 14:50:24.888"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:24.898" starttime="20140618 14:50:24.883"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:24.907" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:24.909" starttime="20140618 14:50:24.903"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:24.910" starttime="20140618 14:50:24.900"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:24.918" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:24.920" starttime="20140618 14:50:24.914"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:24.921" starttime="20140618 14:50:24.911"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:24.921" starttime="20140618 14:50:24.864"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:24.928" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:50:24.929" starttime="20140618 14:50:24.923"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:24.934" starttime="20140618 14:50:24.931"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:24.939" starttime="20140618 14:50:24.936"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:24.943" starttime="20140618 14:50:24.941"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:24.948" starttime="20140618 14:50:24.945"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:24.953" starttime="20140618 14:50:24.949"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:50:24.959" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:50:25.374" level="INFO">14:50:25,363 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140618 14:50:25.400" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 15
Size: 528
Timestamp: Wed Jun 18 14:50:25 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:50:25.404" starttime="20140618 14:50:24.957"></status>
</kw>
<msg timestamp="20140618 14:50:25.410" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:50:25.411" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 15
Size: 528
Timestamp: Wed Jun 18 14:50:25 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:50:25.407" starttime="20140618 14:50:24.955"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:25.443" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:50:25.442" starttime="20140618 14:50:25.437"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:25.452" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:25.451" starttime="20140618 14:50:25.446"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:25.461" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:25.460" starttime="20140618 14:50:25.455"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:25.476" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:25.479" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:25.480" starttime="20140618 14:50:25.469"></status>
</kw>
<msg timestamp="20140618 14:50:25.483" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:25.484" level="INFO">${return_log_entry} = 2014-06-18 14:50:25,363 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:25.482" starttime="20140618 14:50:25.464"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:25.508" starttime="20140618 14:50:25.502"></status>
</kw>
<msg timestamp="20140618 14:50:25.512" level="INFO">${return_log_entry} = 2014-06-18 14:50:25,363 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:25.510" starttime="20140618 14:50:25.488"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:25.534" starttime="20140618 14:50:25.530"></status>
</kw>
<msg timestamp="20140618 14:50:25.537" level="INFO">${return_log_entry} = 2014-06-18 14:50:25,363 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:25.536" starttime="20140618 14:50:25.515"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:25.561" starttime="20140618 14:50:25.555"></status>
</kw>
<msg timestamp="20140618 14:50:25.563" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:25.562" starttime="20140618 14:50:25.540"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:25.595" starttime="20140618 14:50:25.591"></status>
</kw>
<msg timestamp="20140618 14:50:25.598" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:25.597" starttime="20140618 14:50:25.566"></status>
</kw>
<msg timestamp="20140618 14:50:25.602" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:50:25.601" starttime="20140618 14:50:25.415"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:25.631" starttime="20140618 14:50:25.627"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:25.637" starttime="20140618 14:50:25.633"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:25.643" starttime="20140618 14:50:25.639"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:50:25.672" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:25.674" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:25.676" starttime="20140618 14:50:25.664"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:25.678" starttime="20140618 14:50:25.660"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:25.679" starttime="20140618 14:50:25.645"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:25.680" starttime="20140618 14:50:25.606"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:25.683" starttime="20140618 14:50:24.826"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:50:25.722" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972240</msg>
<status status="PASS" endtime="20140618 14:50:25.724" starttime="20140618 14:50:25.716"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:25.765" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:25.767" starttime="20140618 14:50:25.758"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:25.769" starttime="20140618 14:50:25.753"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:25.783" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:25.784" starttime="20140618 14:50:25.776"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:25.786" starttime="20140618 14:50:25.771"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:25.799" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:25.800" starttime="20140618 14:50:25.793"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:25.802" starttime="20140618 14:50:25.788"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:25.803" starttime="20140618 14:50:25.730"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:25.813" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:50:25.814" starttime="20140618 14:50:25.805"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:25.822" starttime="20140618 14:50:25.817"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:25.830" starttime="20140618 14:50:25.825"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:25.836" starttime="20140618 14:50:25.832"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:25.842" starttime="20140618 14:50:25.838"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:25.850" starttime="20140618 14:50:25.844"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:50:25.860" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140618 14:50:26.659" level="INFO">14:50:26,596 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:50:26,598 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:26.662" starttime="20140618 14:50:25.857"></status>
</kw>
<msg timestamp="20140618 14:50:26.665" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:26.666" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:50:26.664" starttime="20140618 14:50:25.852"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:26.690" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:50:26.689" starttime="20140618 14:50:26.685"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:26.695" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:26.694" starttime="20140618 14:50:26.691"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:26.700" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:26.699" starttime="20140618 14:50:26.697"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:26.709" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:26.717" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:26.718" starttime="20140618 14:50:26.705"></status>
</kw>
<msg timestamp="20140618 14:50:26.720" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:26.720" level="INFO">${return_log_entry} = 2014-06-18 14:50:26,598 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:26.719" starttime="20140618 14:50:26.702"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:26.736" starttime="20140618 14:50:26.733"></status>
</kw>
<msg timestamp="20140618 14:50:26.738" level="INFO">${return_log_entry} = 2014-06-18 14:50:26,598 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:26.737" starttime="20140618 14:50:26.722"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:26.753" starttime="20140618 14:50:26.750"></status>
</kw>
<msg timestamp="20140618 14:50:26.755" level="INFO">${return_log_entry} = 2014-06-18 14:50:26,598 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:26.754" starttime="20140618 14:50:26.739"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:26.772" starttime="20140618 14:50:26.767"></status>
</kw>
<msg timestamp="20140618 14:50:26.773" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:26.773" starttime="20140618 14:50:26.757"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:26.795" starttime="20140618 14:50:26.792"></status>
</kw>
<msg timestamp="20140618 14:50:26.796" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:26.796" starttime="20140618 14:50:26.775"></status>
</kw>
<msg timestamp="20140618 14:50:26.798" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:26.798" starttime="20140618 14:50:26.670"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:26.824" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:50:26.823" starttime="20140618 14:50:26.818"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:26.832" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:26.831" starttime="20140618 14:50:26.827"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:26.840" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:26.839" starttime="20140618 14:50:26.834"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:26.855" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:26.867" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:26.868" starttime="20140618 14:50:26.848"></status>
</kw>
<msg timestamp="20140618 14:50:26.871" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:26.872" level="INFO">${return_log_entry} = 2014-06-18 14:50:26,596 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:50:26.870" starttime="20140618 14:50:26.843"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:26.895" starttime="20140618 14:50:26.890"></status>
</kw>
<msg timestamp="20140618 14:50:26.898" level="INFO">${return_log_entry} = 2014-06-18 14:50:26,596 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:50:26.896" starttime="20140618 14:50:26.875"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:26.919" starttime="20140618 14:50:26.915"></status>
</kw>
<msg timestamp="20140618 14:50:26.922" level="INFO">${return_log_entry} = 2014-06-18 14:50:26,596 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:50:26.921" starttime="20140618 14:50:26.900"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:26.946" starttime="20140618 14:50:26.940"></status>
</kw>
<msg timestamp="20140618 14:50:26.949" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:26.948" starttime="20140618 14:50:26.925"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:26.979" starttime="20140618 14:50:26.975"></status>
</kw>
<msg timestamp="20140618 14:50:26.982" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:26.981" starttime="20140618 14:50:26.951"></status>
</kw>
<msg timestamp="20140618 14:50:26.985" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:26.984" starttime="20140618 14:50:26.801"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.014" starttime="20140618 14:50:27.010"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.020" starttime="20140618 14:50:27.016"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.026" starttime="20140618 14:50:27.022"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:50:27.061" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:50:27.063" starttime="20140618 14:50:27.047"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:27.065" starttime="20140618 14:50:27.042"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:27.066" starttime="20140618 14:50:27.028"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:27.067" starttime="20140618 14:50:26.988"></status>
</kw>
<msg timestamp="20140618 14:50:27.072" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:50:27.073" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:27.071" starttime="20140618 14:50:25.691"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140618 14:50:27.078" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:50:27.079" starttime="20140618 14:50:27.075"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 1</arg>
</arguments>
<msg timestamp="20140618 14:50:27.084" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:50:27.084" starttime="20140618 14:50:27.080"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:50:27.108" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140618 14:50:27.109" starttime="20140618 14:50:27.104"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:27.139" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:27.140" starttime="20140618 14:50:27.133"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:27.141" starttime="20140618 14:50:27.128"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:27.149" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:27.150" starttime="20140618 14:50:27.145"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:27.151" starttime="20140618 14:50:27.143"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:27.159" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:27.160" starttime="20140618 14:50:27.155"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:27.161" starttime="20140618 14:50:27.153"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:27.162" starttime="20140618 14:50:27.113"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:27.170" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:50:27.170" starttime="20140618 14:50:27.163"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.176" starttime="20140618 14:50:27.172"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.181" starttime="20140618 14:50:27.177"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.184" starttime="20140618 14:50:27.182"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.188" starttime="20140618 14:50:27.186"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.192" starttime="20140618 14:50:27.189"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:50:27.198" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140618 14:50:27.601" level="INFO">14:50:27,562 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:50:27,563 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:27.602" starttime="20140618 14:50:27.196"></status>
</kw>
<msg timestamp="20140618 14:50:27.604" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:27.604" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:50:27.603" starttime="20140618 14:50:27.194"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:27.624" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:50:27.623" starttime="20140618 14:50:27.620"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:27.629" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:27.628" starttime="20140618 14:50:27.625"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:27.633" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:27.633" starttime="20140618 14:50:27.630"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:27.642" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:27.644" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:27.644" starttime="20140618 14:50:27.638"></status>
</kw>
<msg timestamp="20140618 14:50:27.646" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:27.646" level="INFO">${return_log_entry} = 2014-06-18 14:50:27,563 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:27.645" starttime="20140618 14:50:27.635"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.660" starttime="20140618 14:50:27.657"></status>
</kw>
<msg timestamp="20140618 14:50:27.661" level="INFO">${return_log_entry} = 2014-06-18 14:50:27,563 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:27.661" starttime="20140618 14:50:27.648"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.675" starttime="20140618 14:50:27.672"></status>
</kw>
<msg timestamp="20140618 14:50:27.677" level="INFO">${return_log_entry} = 2014-06-18 14:50:27,563 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:27.676" starttime="20140618 14:50:27.663"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.692" starttime="20140618 14:50:27.688"></status>
</kw>
<msg timestamp="20140618 14:50:27.694" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:27.693" starttime="20140618 14:50:27.679"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.714" starttime="20140618 14:50:27.711"></status>
</kw>
<msg timestamp="20140618 14:50:27.715" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:27.715" starttime="20140618 14:50:27.695"></status>
</kw>
<msg timestamp="20140618 14:50:27.717" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:27.717" starttime="20140618 14:50:27.607"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:27.817" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:50:27.736" starttime="20140618 14:50:27.732"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:27.825" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:27.825" starttime="20140618 14:50:27.820"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:27.830" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:27.829" starttime="20140618 14:50:27.827"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:27.839" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:27.841" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:27.842" starttime="20140618 14:50:27.835"></status>
</kw>
<msg timestamp="20140618 14:50:27.843" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:27.844" level="INFO">${return_log_entry} = 2014-06-18 14:50:27,562 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:50:27.843" starttime="20140618 14:50:27.832"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.859" starttime="20140618 14:50:27.856"></status>
</kw>
<msg timestamp="20140618 14:50:27.860" level="INFO">${return_log_entry} = 2014-06-18 14:50:27,562 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:50:27.860" starttime="20140618 14:50:27.846"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.874" starttime="20140618 14:50:27.871"></status>
</kw>
<msg timestamp="20140618 14:50:27.876" level="INFO">${return_log_entry} = 2014-06-18 14:50:27,562 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:50:27.875" starttime="20140618 14:50:27.862"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.890" starttime="20140618 14:50:27.887"></status>
</kw>
<msg timestamp="20140618 14:50:27.892" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:27.891" starttime="20140618 14:50:27.877"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.912" starttime="20140618 14:50:27.909"></status>
</kw>
<msg timestamp="20140618 14:50:27.913" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:27.913" starttime="20140618 14:50:27.894"></status>
</kw>
<msg timestamp="20140618 14:50:27.915" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:27.915" starttime="20140618 14:50:27.720"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.932" starttime="20140618 14:50:27.929"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.936" starttime="20140618 14:50:27.933"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:27.939" starttime="20140618 14:50:27.937"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:50:27.957" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:50:27.958" starttime="20140618 14:50:27.952"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:27.959" starttime="20140618 14:50:27.950"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:27.960" starttime="20140618 14:50:27.940"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:27.960" starttime="20140618 14:50:27.917"></status>
</kw>
<msg timestamp="20140618 14:50:27.963" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:50:27.963" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:27.962" starttime="20140618 14:50:27.089"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140618 14:50:27.968" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:50:27.969" starttime="20140618 14:50:27.965"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 2</arg>
</arguments>
<msg timestamp="20140618 14:50:27.974" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:50:27.974" starttime="20140618 14:50:27.970"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:50:27.996" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:50:27.997" starttime="20140618 14:50:27.992"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.020" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:28.021" starttime="20140618 14:50:28.016"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:28.022" starttime="20140618 14:50:28.013"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.030" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:28.031" starttime="20140618 14:50:28.026"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:28.032" starttime="20140618 14:50:28.024"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.040" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:28.041" starttime="20140618 14:50:28.036"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:28.042" starttime="20140618 14:50:28.033"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:28.043" starttime="20140618 14:50:28.001"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.049" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:50:28.049" starttime="20140618 14:50:28.044"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.054" starttime="20140618 14:50:28.051"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.059" starttime="20140618 14:50:28.055"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.062" starttime="20140618 14:50:28.060"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.066" starttime="20140618 14:50:28.064"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.071" starttime="20140618 14:50:28.067"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:50:28.077" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:50:28.473" level="INFO">14:50:28,431 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:50:28,432 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:28.474" starttime="20140618 14:50:28.075"></status>
</kw>
<msg timestamp="20140618 14:50:28.477" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:28.477" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:50:28.476" starttime="20140618 14:50:28.072"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:28.495" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:50:28.495" starttime="20140618 14:50:28.492"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.500" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:28.500" starttime="20140618 14:50:28.497"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.505" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:28.504" starttime="20140618 14:50:28.502"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.513" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:28.515" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:28.516" starttime="20140618 14:50:28.509"></status>
</kw>
<msg timestamp="20140618 14:50:28.517" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:28.518" level="INFO">${return_log_entry} = 2014-06-18 14:50:28,432 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:28.516" starttime="20140618 14:50:28.506"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.531" starttime="20140618 14:50:28.528"></status>
</kw>
<msg timestamp="20140618 14:50:28.532" level="INFO">${return_log_entry} = 2014-06-18 14:50:28,432 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:28.532" starttime="20140618 14:50:28.519"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.547" starttime="20140618 14:50:28.543"></status>
</kw>
<msg timestamp="20140618 14:50:28.548" level="INFO">${return_log_entry} = 2014-06-18 14:50:28,432 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:28.547" starttime="20140618 14:50:28.534"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.563" starttime="20140618 14:50:28.559"></status>
</kw>
<msg timestamp="20140618 14:50:28.564" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:28.564" starttime="20140618 14:50:28.550"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.584" starttime="20140618 14:50:28.581"></status>
</kw>
<msg timestamp="20140618 14:50:28.585" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:28.585" starttime="20140618 14:50:28.566"></status>
</kw>
<msg timestamp="20140618 14:50:28.587" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:28.587" starttime="20140618 14:50:28.480"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:28.606" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:50:28.606" starttime="20140618 14:50:28.602"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.611" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:28.611" starttime="20140618 14:50:28.608"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.616" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:28.615" starttime="20140618 14:50:28.613"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.624" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:28.625" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:28.626" starttime="20140618 14:50:28.620"></status>
</kw>
<msg timestamp="20140618 14:50:28.628" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:28.628" level="INFO">${return_log_entry} = 2014-06-18 14:50:28,431 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:50:28.627" starttime="20140618 14:50:28.617"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.641" starttime="20140618 14:50:28.638"></status>
</kw>
<msg timestamp="20140618 14:50:28.643" level="INFO">${return_log_entry} = 2014-06-18 14:50:28,431 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:50:28.642" starttime="20140618 14:50:28.630"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.657" starttime="20140618 14:50:28.654"></status>
</kw>
<msg timestamp="20140618 14:50:28.658" level="INFO">${return_log_entry} = 2014-06-18 14:50:28,431 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:50:28.658" starttime="20140618 14:50:28.644"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.673" starttime="20140618 14:50:28.669"></status>
</kw>
<msg timestamp="20140618 14:50:28.675" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:28.674" starttime="20140618 14:50:28.660"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.694" starttime="20140618 14:50:28.691"></status>
</kw>
<msg timestamp="20140618 14:50:28.696" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:28.695" starttime="20140618 14:50:28.676"></status>
</kw>
<msg timestamp="20140618 14:50:28.698" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:28.697" starttime="20140618 14:50:28.590"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.714" starttime="20140618 14:50:28.711"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.717" starttime="20140618 14:50:28.715"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.720" starttime="20140618 14:50:28.718"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:50:28.738" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:50:28.739" starttime="20140618 14:50:28.734"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:28.740" starttime="20140618 14:50:28.731"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:28.741" starttime="20140618 14:50:28.722"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:28.741" starttime="20140618 14:50:28.700"></status>
</kw>
<msg timestamp="20140618 14:50:28.745" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:50:28.745" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:28.743" starttime="20140618 14:50:27.979"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140618 14:50:28.750" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:50:28.751" starttime="20140618 14:50:28.747"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 12</arg>
</arguments>
<msg timestamp="20140618 14:50:28.755" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:50:28.756" starttime="20140618 14:50:28.752"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.779" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:50:28.780" starttime="20140618 14:50:28.775"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.801" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:28.802" starttime="20140618 14:50:28.798"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:28.803" starttime="20140618 14:50:28.795"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.811" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:28.812" starttime="20140618 14:50:28.807"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:28.813" starttime="20140618 14:50:28.805"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.820" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:28.821" starttime="20140618 14:50:28.817"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:28.822" starttime="20140618 14:50:28.814"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:28.823" starttime="20140618 14:50:28.784"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:28.828" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:50:28.829" starttime="20140618 14:50:28.824"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.833" starttime="20140618 14:50:28.830"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.838" starttime="20140618 14:50:28.835"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.841" starttime="20140618 14:50:28.839"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.844" starttime="20140618 14:50:28.842"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:28.849" starttime="20140618 14:50:28.846"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:50:28.855" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:50:29.378" level="INFO">14:50:29,338 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:50:29,340 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:29.380" starttime="20140618 14:50:28.853"></status>
</kw>
<msg timestamp="20140618 14:50:29.383" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:29.384" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:50:29.382" starttime="20140618 14:50:28.850"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:29.402" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:50:29.402" starttime="20140618 14:50:29.398"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:29.407" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:29.406" starttime="20140618 14:50:29.404"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:29.411" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:29.411" starttime="20140618 14:50:29.408"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:29.419" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:29.421" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:29.421" starttime="20140618 14:50:29.415"></status>
</kw>
<msg timestamp="20140618 14:50:29.423" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:29.423" level="INFO">${return_log_entry} = 2014-06-18 14:50:29,340 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:29.422" starttime="20140618 14:50:29.413"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.437" starttime="20140618 14:50:29.434"></status>
</kw>
<msg timestamp="20140618 14:50:29.439" level="INFO">${return_log_entry} = 2014-06-18 14:50:29,340 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:29.438" starttime="20140618 14:50:29.425"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.456" starttime="20140618 14:50:29.452"></status>
</kw>
<msg timestamp="20140618 14:50:29.458" level="INFO">${return_log_entry} = 2014-06-18 14:50:29,340 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:29.457" starttime="20140618 14:50:29.440"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.472" starttime="20140618 14:50:29.468"></status>
</kw>
<msg timestamp="20140618 14:50:29.473" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:29.473" starttime="20140618 14:50:29.459"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.492" starttime="20140618 14:50:29.489"></status>
</kw>
<msg timestamp="20140618 14:50:29.493" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:29.493" starttime="20140618 14:50:29.475"></status>
</kw>
<msg timestamp="20140618 14:50:29.495" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:29.495" starttime="20140618 14:50:29.387"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:29.513" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:50:29.512" starttime="20140618 14:50:29.509"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:29.517" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:29.517" starttime="20140618 14:50:29.514"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:29.522" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:29.521" starttime="20140618 14:50:29.519"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:29.530" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:29.531" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:29.532" starttime="20140618 14:50:29.526"></status>
</kw>
<msg timestamp="20140618 14:50:29.533" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:29.534" level="INFO">${return_log_entry} = 2014-06-18 14:50:29,338 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:50:29.533" starttime="20140618 14:50:29.523"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.551" starttime="20140618 14:50:29.548"></status>
</kw>
<msg timestamp="20140618 14:50:29.552" level="INFO">${return_log_entry} = 2014-06-18 14:50:29,338 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:50:29.551" starttime="20140618 14:50:29.536"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.565" starttime="20140618 14:50:29.562"></status>
</kw>
<msg timestamp="20140618 14:50:29.567" level="INFO">${return_log_entry} = 2014-06-18 14:50:29,338 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:50:29.566" starttime="20140618 14:50:29.553"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.581" starttime="20140618 14:50:29.578"></status>
</kw>
<msg timestamp="20140618 14:50:29.583" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:29.582" starttime="20140618 14:50:29.568"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.603" starttime="20140618 14:50:29.599"></status>
</kw>
<msg timestamp="20140618 14:50:29.604" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:29.604" starttime="20140618 14:50:29.584"></status>
</kw>
<msg timestamp="20140618 14:50:29.606" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:29.605" starttime="20140618 14:50:29.498"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.626" starttime="20140618 14:50:29.622"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.631" starttime="20140618 14:50:29.628"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.636" starttime="20140618 14:50:29.633"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:50:29.662" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:50:29.664" starttime="20140618 14:50:29.655"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:29.665" starttime="20140618 14:50:29.651"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:29.666" starttime="20140618 14:50:29.638"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:29.667" starttime="20140618 14:50:29.608"></status>
</kw>
<msg timestamp="20140618 14:50:29.672" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:50:29.673" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:50:29.670" starttime="20140618 14:50:28.760"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140618 14:50:29.680" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:50:29.681" starttime="20140618 14:50:29.675"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 13</arg>
</arguments>
<msg timestamp="20140618 14:50:29.688" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:50:29.689" starttime="20140618 14:50:29.683"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:50:29.720" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:50:29.719" starttime="20140618 14:50:29.715"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:29.757" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:29.758" starttime="20140618 14:50:29.753"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:29.759" starttime="20140618 14:50:29.751"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:29.766" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:29.767" starttime="20140618 14:50:29.763"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:29.768" starttime="20140618 14:50:29.760"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:29.775" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:29.777" starttime="20140618 14:50:29.772"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:29.777" starttime="20140618 14:50:29.769"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:29.778" starttime="20140618 14:50:29.741"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:29.784" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:50:29.784" starttime="20140618 14:50:29.779"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.788" starttime="20140618 14:50:29.785"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.793" starttime="20140618 14:50:29.790"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.796" starttime="20140618 14:50:29.794"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.799" starttime="20140618 14:50:29.797"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.805" starttime="20140618 14:50:29.800"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.811" starttime="20140618 14:50:29.806"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:29.819" starttime="20140618 14:50:29.814"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:50:29.828" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:50:36.750" level="INFO">14:50:36,743 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:50:36,746 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:36.752" starttime="20140618 14:50:29.825"></status>
</kw>
<msg timestamp="20140618 14:50:36.757" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:36.758" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:50:36.755" starttime="20140618 14:50:29.821"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:36.787" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:50:36.786" starttime="20140618 14:50:36.780"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:36.794" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:36.793" starttime="20140618 14:50:36.789"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:36.801" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:36.800" starttime="20140618 14:50:36.796"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:36.886" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:36.896" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:36.897" starttime="20140618 14:50:36.807"></status>
</kw>
<msg timestamp="20140618 14:50:36.899" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:36.900" level="INFO">${return_log_entry} = 2014-06-18 14:50:36,746 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:36.898" starttime="20140618 14:50:36.803"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:36.920" starttime="20140618 14:50:36.915"></status>
</kw>
<msg timestamp="20140618 14:50:36.922" level="INFO">${return_log_entry} = 2014-06-18 14:50:36,746 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:36.921" starttime="20140618 14:50:36.902"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:36.941" starttime="20140618 14:50:36.937"></status>
</kw>
<msg timestamp="20140618 14:50:36.943" level="INFO">${return_log_entry} = 2014-06-18 14:50:36,746 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:36.942" starttime="20140618 14:50:36.924"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:36.963" starttime="20140618 14:50:36.958"></status>
</kw>
<msg timestamp="20140618 14:50:36.965" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:36.964" starttime="20140618 14:50:36.945"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:36.990" starttime="20140618 14:50:36.986"></status>
</kw>
<msg timestamp="20140618 14:50:36.993" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:36.992" starttime="20140618 14:50:36.967"></status>
</kw>
<msg timestamp="20140618 14:50:36.995" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:36.994" starttime="20140618 14:50:36.762"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:37.021" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:50:37.020" starttime="20140618 14:50:37.016"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:37.028" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:37.027" starttime="20140618 14:50:37.023"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:37.034" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:37.033" starttime="20140618 14:50:37.030"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:37.046" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:37.054" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:37.055" starttime="20140618 14:50:37.040"></status>
</kw>
<msg timestamp="20140618 14:50:37.057" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:37.058" level="INFO">${return_log_entry} = 2014-06-18 14:50:36,743 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:37.056" starttime="20140618 14:50:37.036"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.070" starttime="20140618 14:50:37.068"></status>
</kw>
<msg timestamp="20140618 14:50:37.072" level="INFO">${return_log_entry} = 2014-06-18 14:50:36,743 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:37.071" starttime="20140618 14:50:37.060"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.084" starttime="20140618 14:50:37.082"></status>
</kw>
<msg timestamp="20140618 14:50:37.086" level="INFO">${return_log_entry} = 2014-06-18 14:50:36,743 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:37.085" starttime="20140618 14:50:37.073"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.099" starttime="20140618 14:50:37.096"></status>
</kw>
<msg timestamp="20140618 14:50:37.101" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:37.100" starttime="20140618 14:50:37.087"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.119" starttime="20140618 14:50:37.116"></status>
</kw>
<msg timestamp="20140618 14:50:37.120" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:37.120" starttime="20140618 14:50:37.102"></status>
</kw>
<msg timestamp="20140618 14:50:37.123" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:37.121" starttime="20140618 14:50:36.999"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.138" starttime="20140618 14:50:37.136"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.141" starttime="20140618 14:50:37.139"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.145" starttime="20140618 14:50:37.142"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:50:37.173" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:50:37.175" starttime="20140618 14:50:37.163"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:37.176" starttime="20140618 14:50:37.159"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:37.177" starttime="20140618 14:50:37.147"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:37.178" starttime="20140618 14:50:37.125"></status>
</kw>
<msg timestamp="20140618 14:50:37.182" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:50:37.182" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:37.180" starttime="20140618 14:50:29.724"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.206" starttime="20140618 14:50:37.203"></status>
</kw>
<msg timestamp="20140618 14:50:37.207" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:37.207" starttime="20140618 14:50:37.184"></status>
</kw>
<msg timestamp="20140618 14:50:37.210" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:37.208" starttime="20140618 14:50:29.693"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140618 14:50:37.214" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:50:37.214" starttime="20140618 14:50:37.211"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:50:37.236" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:50:37.235" starttime="20140618 14:50:37.231"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:37.273" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:37.274" starttime="20140618 14:50:37.270"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:37.275" starttime="20140618 14:50:37.268"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:37.282" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:37.283" starttime="20140618 14:50:37.279"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:37.284" starttime="20140618 14:50:37.276"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:37.291" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:37.292" starttime="20140618 14:50:37.287"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:37.293" starttime="20140618 14:50:37.285"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:37.293" starttime="20140618 14:50:37.257"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:37.299" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:50:37.299" starttime="20140618 14:50:37.294"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.304" starttime="20140618 14:50:37.300"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.308" starttime="20140618 14:50:37.305"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.311" starttime="20140618 14:50:37.309"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.314" starttime="20140618 14:50:37.312"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.319" starttime="20140618 14:50:37.316"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.323" starttime="20140618 14:50:37.320"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:37.328" starttime="20140618 14:50:37.324"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:50:37.333" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:50:44.141" level="INFO">14:50:44,134 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:50:44,135 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:44.142" starttime="20140618 14:50:37.331"></status>
</kw>
<msg timestamp="20140618 14:50:44.145" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:44.145" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:50:44.144" starttime="20140618 14:50:37.329"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:44.162" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:50:44.162" starttime="20140618 14:50:44.159"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:44.166" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:44.166" starttime="20140618 14:50:44.163"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:44.170" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:44.170" starttime="20140618 14:50:44.168"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:44.178" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:44.179" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:44.179" starttime="20140618 14:50:44.174"></status>
</kw>
<msg timestamp="20140618 14:50:44.181" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:44.181" level="INFO">${return_log_entry} = 2014-06-18 14:50:44,135 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:44.180" starttime="20140618 14:50:44.172"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.193" starttime="20140618 14:50:44.190"></status>
</kw>
<msg timestamp="20140618 14:50:44.194" level="INFO">${return_log_entry} = 2014-06-18 14:50:44,135 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:44.194" starttime="20140618 14:50:44.183"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.206" starttime="20140618 14:50:44.204"></status>
</kw>
<msg timestamp="20140618 14:50:44.208" level="INFO">${return_log_entry} = 2014-06-18 14:50:44,135 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:44.207" starttime="20140618 14:50:44.196"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.221" starttime="20140618 14:50:44.217"></status>
</kw>
<msg timestamp="20140618 14:50:44.222" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:44.222" starttime="20140618 14:50:44.209"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.240" starttime="20140618 14:50:44.237"></status>
</kw>
<msg timestamp="20140618 14:50:44.241" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:44.241" starttime="20140618 14:50:44.223"></status>
</kw>
<msg timestamp="20140618 14:50:44.243" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:44.242" starttime="20140618 14:50:44.148"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:44.260" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:50:44.259" starttime="20140618 14:50:44.256"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:44.264" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:44.263" starttime="20140618 14:50:44.261"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:44.268" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:44.268" starttime="20140618 14:50:44.265"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:44.276" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:44.277" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:44.277" starttime="20140618 14:50:44.272"></status>
</kw>
<msg timestamp="20140618 14:50:44.279" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:44.279" level="INFO">${return_log_entry} = 2014-06-18 14:50:44,134 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:44.278" starttime="20140618 14:50:44.270"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.291" starttime="20140618 14:50:44.288"></status>
</kw>
<msg timestamp="20140618 14:50:44.293" level="INFO">${return_log_entry} = 2014-06-18 14:50:44,134 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:44.292" starttime="20140618 14:50:44.281"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.305" starttime="20140618 14:50:44.302"></status>
</kw>
<msg timestamp="20140618 14:50:44.306" level="INFO">${return_log_entry} = 2014-06-18 14:50:44,134 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:44.306" starttime="20140618 14:50:44.294"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.320" starttime="20140618 14:50:44.316"></status>
</kw>
<msg timestamp="20140618 14:50:44.321" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:44.321" starttime="20140618 14:50:44.308"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.339" starttime="20140618 14:50:44.337"></status>
</kw>
<msg timestamp="20140618 14:50:44.341" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:44.340" starttime="20140618 14:50:44.322"></status>
</kw>
<msg timestamp="20140618 14:50:44.343" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:44.342" starttime="20140618 14:50:44.245"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.357" starttime="20140618 14:50:44.355"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.360" starttime="20140618 14:50:44.358"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.363" starttime="20140618 14:50:44.361"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:50:44.469" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:50:44.471" starttime="20140618 14:50:44.462"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:44.472" starttime="20140618 14:50:44.457"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:44.473" starttime="20140618 14:50:44.364"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:44.474" starttime="20140618 14:50:44.344"></status>
</kw>
<msg timestamp="20140618 14:50:44.478" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:50:44.479" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:44.476" starttime="20140618 14:50:37.241"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.498" starttime="20140618 14:50:44.495"></status>
</kw>
<msg timestamp="20140618 14:50:44.500" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:44.500" starttime="20140618 14:50:44.481"></status>
</kw>
<msg timestamp="20140618 14:50:44.504" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:44.502" starttime="20140618 14:50:37.217"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140618 14:50:44.511" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:50:44.512" starttime="20140618 14:50:44.506"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:50:44.540" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:50:44.539" starttime="20140618 14:50:44.536"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:44.591" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:44.592" starttime="20140618 14:50:44.586"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:44.594" starttime="20140618 14:50:44.583"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:44.605" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:44.606" starttime="20140618 14:50:44.600"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:44.608" starttime="20140618 14:50:44.596"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:44.618" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:44.619" starttime="20140618 14:50:44.613"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:44.621" starttime="20140618 14:50:44.610"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:44.622" starttime="20140618 14:50:44.568"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:44.629" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:50:44.629" starttime="20140618 14:50:44.623"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.633" starttime="20140618 14:50:44.631"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.638" starttime="20140618 14:50:44.635"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.641" starttime="20140618 14:50:44.639"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.644" starttime="20140618 14:50:44.642"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.648" starttime="20140618 14:50:44.645"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.652" starttime="20140618 14:50:44.649"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:44.657" starttime="20140618 14:50:44.654"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:50:44.662" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:50:51.392" level="INFO">14:50:51,384 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:50:51,386 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:51.393" starttime="20140618 14:50:44.660"></status>
</kw>
<msg timestamp="20140618 14:50:51.396" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:51.396" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:50:51.394" starttime="20140618 14:50:44.658"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:51.415" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:50:51.414" starttime="20140618 14:50:51.409"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:51.419" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:51.419" starttime="20140618 14:50:51.416"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:51.423" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:51.422" starttime="20140618 14:50:51.420"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:51.430" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:51.431" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:51.432" starttime="20140618 14:50:51.427"></status>
</kw>
<msg timestamp="20140618 14:50:51.433" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:51.434" level="INFO">${return_log_entry} = 2014-06-18 14:50:51,386 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:51.433" starttime="20140618 14:50:51.424"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.446" starttime="20140618 14:50:51.443"></status>
</kw>
<msg timestamp="20140618 14:50:51.447" level="INFO">${return_log_entry} = 2014-06-18 14:50:51,386 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:51.446" starttime="20140618 14:50:51.435"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.459" starttime="20140618 14:50:51.456"></status>
</kw>
<msg timestamp="20140618 14:50:51.460" level="INFO">${return_log_entry} = 2014-06-18 14:50:51,386 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:51.460" starttime="20140618 14:50:51.448"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.473" starttime="20140618 14:50:51.470"></status>
</kw>
<msg timestamp="20140618 14:50:51.475" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:51.474" starttime="20140618 14:50:51.462"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.492" starttime="20140618 14:50:51.489"></status>
</kw>
<msg timestamp="20140618 14:50:51.493" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:51.493" starttime="20140618 14:50:51.476"></status>
</kw>
<msg timestamp="20140618 14:50:51.495" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:51.494" starttime="20140618 14:50:51.398"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:51.512" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:50:51.511" starttime="20140618 14:50:51.508"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:51.516" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:51.515" starttime="20140618 14:50:51.513"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:51.520" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:51.519" starttime="20140618 14:50:51.517"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:51.527" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:51.528" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:51.529" starttime="20140618 14:50:51.524"></status>
</kw>
<msg timestamp="20140618 14:50:51.530" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:51.531" level="INFO">${return_log_entry} = 2014-06-18 14:50:51,384 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:51.530" starttime="20140618 14:50:51.521"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.543" starttime="20140618 14:50:51.540"></status>
</kw>
<msg timestamp="20140618 14:50:51.544" level="INFO">${return_log_entry} = 2014-06-18 14:50:51,384 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:51.543" starttime="20140618 14:50:51.532"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.556" starttime="20140618 14:50:51.553"></status>
</kw>
<msg timestamp="20140618 14:50:51.557" level="INFO">${return_log_entry} = 2014-06-18 14:50:51,384 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:51.557" starttime="20140618 14:50:51.545"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.570" starttime="20140618 14:50:51.567"></status>
</kw>
<msg timestamp="20140618 14:50:51.572" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:51.571" starttime="20140618 14:50:51.559"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.592" starttime="20140618 14:50:51.589"></status>
</kw>
<msg timestamp="20140618 14:50:51.595" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:51.594" starttime="20140618 14:50:51.573"></status>
</kw>
<msg timestamp="20140618 14:50:51.598" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:51.597" starttime="20140618 14:50:51.497"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.620" starttime="20140618 14:50:51.617"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.625" starttime="20140618 14:50:51.621"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.630" starttime="20140618 14:50:51.627"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:50:51.654" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:50:51.655" starttime="20140618 14:50:51.647"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:51.657" starttime="20140618 14:50:51.644"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:51.658" starttime="20140618 14:50:51.632"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:51.659" starttime="20140618 14:50:51.601"></status>
</kw>
<msg timestamp="20140618 14:50:51.663" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:50:51.664" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:51.661" starttime="20140618 14:50:44.545"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.682" starttime="20140618 14:50:51.679"></status>
</kw>
<msg timestamp="20140618 14:50:51.684" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:51.683" starttime="20140618 14:50:51.666"></status>
</kw>
<msg timestamp="20140618 14:50:51.686" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:51.685" starttime="20140618 14:50:44.516"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140618 14:50:51.690" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:50:51.692" starttime="20140618 14:50:51.687"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:50:51.710" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:50:51.710" starttime="20140618 14:50:51.708"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:51.744" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:51.745" starttime="20140618 14:50:51.741"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:51.746" starttime="20140618 14:50:51.739"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:51.752" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:51.753" starttime="20140618 14:50:51.749"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:51.754" starttime="20140618 14:50:51.747"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:51.760" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:51.761" starttime="20140618 14:50:51.757"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:51.762" starttime="20140618 14:50:51.755"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:51.762" starttime="20140618 14:50:51.729"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:51.769" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:50:51.769" starttime="20140618 14:50:51.763"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.773" starttime="20140618 14:50:51.771"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.777" starttime="20140618 14:50:51.775"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.780" starttime="20140618 14:50:51.778"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.783" starttime="20140618 14:50:51.781"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.787" starttime="20140618 14:50:51.784"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.791" starttime="20140618 14:50:51.788"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:51.795" starttime="20140618 14:50:51.792"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:50:51.799" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:50:58.804" level="INFO">14:50:58,794 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:50:58,797 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:58.805" starttime="20140618 14:50:51.798"></status>
</kw>
<msg timestamp="20140618 14:50:58.808" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:58.808" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:50:58.806" starttime="20140618 14:50:51.796"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:58.826" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:50:58.825" starttime="20140618 14:50:58.822"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:58.830" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:58.830" starttime="20140618 14:50:58.827"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:58.834" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:58.833" starttime="20140618 14:50:58.831"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:58.840" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:58.841" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:58.842" starttime="20140618 14:50:58.837"></status>
</kw>
<msg timestamp="20140618 14:50:58.843" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:58.843" level="INFO">${return_log_entry} = 2014-06-18 14:50:58,797 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:58.842" starttime="20140618 14:50:58.835"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:58.855" starttime="20140618 14:50:58.853"></status>
</kw>
<msg timestamp="20140618 14:50:58.856" level="INFO">${return_log_entry} = 2014-06-18 14:50:58,797 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:58.856" starttime="20140618 14:50:58.845"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:58.867" starttime="20140618 14:50:58.865"></status>
</kw>
<msg timestamp="20140618 14:50:58.869" level="INFO">${return_log_entry} = 2014-06-18 14:50:58,797 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:50:58.868" starttime="20140618 14:50:58.857"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:58.880" starttime="20140618 14:50:58.877"></status>
</kw>
<msg timestamp="20140618 14:50:58.881" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:58.881" starttime="20140618 14:50:58.870"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:58.897" starttime="20140618 14:50:58.895"></status>
</kw>
<msg timestamp="20140618 14:50:58.898" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:58.898" starttime="20140618 14:50:58.882"></status>
</kw>
<msg timestamp="20140618 14:50:58.900" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:58.899" starttime="20140618 14:50:58.811"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:50:58.916" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:50:58.915" starttime="20140618 14:50:58.913"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:58.920" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:50:58.919" starttime="20140618 14:50:58.917"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:50:58.924" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:50:58.923" starttime="20140618 14:50:58.921"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:50:58.930" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:50:58.932" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:50:58.932" starttime="20140618 14:50:58.927"></status>
</kw>
<msg timestamp="20140618 14:50:58.933" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:50:58.934" level="INFO">${return_log_entry} = 2014-06-18 14:50:58,794 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:58.933" starttime="20140618 14:50:58.925"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:58.945" starttime="20140618 14:50:58.942"></status>
</kw>
<msg timestamp="20140618 14:50:58.946" level="INFO">${return_log_entry} = 2014-06-18 14:50:58,794 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:58.945" starttime="20140618 14:50:58.935"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:58.957" starttime="20140618 14:50:58.955"></status>
</kw>
<msg timestamp="20140618 14:50:58.958" level="INFO">${return_log_entry} = 2014-06-18 14:50:58,794 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:58.958" starttime="20140618 14:50:58.947"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:58.970" starttime="20140618 14:50:58.967"></status>
</kw>
<msg timestamp="20140618 14:50:58.972" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:58.971" starttime="20140618 14:50:58.960"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:58.988" starttime="20140618 14:50:58.985"></status>
</kw>
<msg timestamp="20140618 14:50:58.989" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:58.988" starttime="20140618 14:50:58.973"></status>
</kw>
<msg timestamp="20140618 14:50:58.990" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:58.990" starttime="20140618 14:50:58.902"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.005" starttime="20140618 14:50:59.004"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.008" starttime="20140618 14:50:59.006"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.010" starttime="20140618 14:50:59.009"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:50:59.024" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:50:59.025" starttime="20140618 14:50:59.021"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:59.026" starttime="20140618 14:50:59.019"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:59.026" starttime="20140618 14:50:59.011"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:59.027" starttime="20140618 14:50:58.992"></status>
</kw>
<msg timestamp="20140618 14:50:59.030" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:50:59.031" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:50:59.029" starttime="20140618 14:50:51.713"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.043" starttime="20140618 14:50:59.041"></status>
</kw>
<msg timestamp="20140618 14:50:59.044" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:59.044" starttime="20140618 14:50:59.032"></status>
</kw>
<msg timestamp="20140618 14:50:59.046" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:50:59.045" starttime="20140618 14:50:51.694"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140618 14:50:59.050" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:50:59.050" starttime="20140618 14:50:59.048"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:59.051" starttime="20140618 14:50:14.011"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Setup phone 1 subscriber accounts (only MainAccount shall have a credit) ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.054" starttime="20140618 14:50:59.053"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'!='true'</arg>
<arg>CRCE Clear All Balances By Imsi</arg>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.062" starttime="20140618 14:50:59.055"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'!='true'</arg>
<arg>CRCE Set Main Balance By Imsi</arg>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>10000000</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.069" starttime="20140618 14:50:59.063"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Prepare 2 Testsubscribers for FAKING ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.072" starttime="20140618 14:50:59.071"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'=='true'</arg>
<arg>Prepare Fake Subscribers</arg>
</arguments>
<kw type="kw" timeout="" name="suite-global-keyword-resource.Prepare Fake Subscribers">
<doc>cretes 2 test subscribers for faking calls (in development mode)</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create 2 test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.091" starttime="20140618 14:50:59.090"></status>
</kw>
<kw type="kw" timeout="" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<msg timestamp="20140618 14:50:59.095" level="INFO">${INITIAL_BALANCE} = 10000000</msg>
<status status="PASS" endtime="20140618 14:50:59.094" starttime="20140618 14:50:59.092"></status>
</kw>
<kw type="kw" timeout="" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20140618 14:50:59.116" level="INFO">msg=crce_host=10.105.140.125</msg>
<status status="PASS" endtime="20140618 14:50:59.116" starttime="20140618 14:50:59.113"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20140618 14:50:59.120" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20140618 14:50:59.120" starttime="20140618 14:50:59.117"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20140618 14:50:59.124" level="INFO">msg=crce_webservicesBasePath=/</msg>
<status status="PASS" endtime="20140618 14:50:59.124" starttime="20140618 14:50:59.121"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20140618 14:50:59.127" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20140618 14:50:59.128" starttime="20140618 14:50:59.125"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20140618 14:50:59.131" level="INFO">msg=imsiRangeStart=530052041010000</msg>
<status status="PASS" endtime="20140618 14:50:59.132" starttime="20140618 14:50:59.129"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20140618 14:50:59.135" level="INFO">msg=msisdnRangeStart=642041010000</msg>
<status status="PASS" endtime="20140618 14:50:59.136" starttime="20140618 14:50:59.133"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20140618 14:50:59.139" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:50:59.139" starttime="20140618 14:50:59.137"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20140618 14:50:59.143" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20140618 14:50:59.143" starttime="20140618 14:50:59.140"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20140618 14:50:59.147" level="INFO">msg=tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:50:59.147" starttime="20140618 14:50:59.144"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20140618 14:50:59.150" level="INFO">msg=balance=10000000</msg>
<status status="PASS" endtime="20140618 14:50:59.151" starttime="20140618 14:50:59.148"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:59.169" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:59.170" starttime="20140618 14:50:59.166"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:59.170" starttime="20140618 14:50:59.164"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:59.176" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:59.177" starttime="20140618 14:50:59.173"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:59.178" starttime="20140618 14:50:59.172"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:50:59.184" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:50:59.185" starttime="20140618 14:50:59.181"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:59.185" starttime="20140618 14:50:59.179"></status>
</kw>
<status status="PASS" endtime="20140618 14:50:59.186" starttime="20140618 14:50:59.154"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:50:59.190" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:50:59.190" starttime="20140618 14:50:59.187"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.194" starttime="20140618 14:50:59.192"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.198" starttime="20140618 14:50:59.195"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.202" starttime="20140618 14:50:59.199"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.204" starttime="20140618 14:50:59.203"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.207" starttime="20140618 14:50:59.205"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.210" starttime="20140618 14:50:59.208"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.214" starttime="20140618 14:50:59.212"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.218" starttime="20140618 14:50:59.215"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.222" starttime="20140618 14:50:59.219"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.226" starttime="20140618 14:50:59.223"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.229" starttime="20140618 14:50:59.227"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:50:59.233" starttime="20140618 14:50:59.231"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:50:59.239" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000']</msg>
<msg timestamp="20140618 14:51:01.372" level="INFO">14:51:01,364 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:01.373" starttime="20140618 14:50:59.236"></status>
</kw>
<msg timestamp="20140618 14:51:01.376" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:01.376" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:01.374" starttime="20140618 14:50:59.235"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:01.394" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:01.394" starttime="20140618 14:51:01.391"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:01.398" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:01.397" starttime="20140618 14:51:01.395"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:01.401" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:01.401" starttime="20140618 14:51:01.399"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:01.407" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:01.413" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:01.414" starttime="20140618 14:51:01.405"></status>
</kw>
<msg timestamp="20140618 14:51:01.415" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:01.416" level="INFO">${return_log_entry} = 2014-06-18 14:51:01,364 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:01.415" starttime="20140618 14:51:01.403"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.427" starttime="20140618 14:51:01.425"></status>
</kw>
<msg timestamp="20140618 14:51:01.428" level="INFO">${return_log_entry} = 2014-06-18 14:51:01,364 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:01.428" starttime="20140618 14:51:01.417"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.439" starttime="20140618 14:51:01.437"></status>
</kw>
<msg timestamp="20140618 14:51:01.440" level="INFO">${return_log_entry} = 2014-06-18 14:51:01,364 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:01.440" starttime="20140618 14:51:01.429"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.452" starttime="20140618 14:51:01.449"></status>
</kw>
<msg timestamp="20140618 14:51:01.453" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:01.453" starttime="20140618 14:51:01.441"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.469" starttime="20140618 14:51:01.467"></status>
</kw>
<msg timestamp="20140618 14:51:01.470" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:01.470" starttime="20140618 14:51:01.454"></status>
</kw>
<msg timestamp="20140618 14:51:01.472" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:01.471" starttime="20140618 14:51:01.379"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.485" starttime="20140618 14:51:01.484"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.488" starttime="20140618 14:51:01.486"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.490" starttime="20140618 14:51:01.489"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:01.508" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:01.509" starttime="20140618 14:51:01.500"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:01.510" starttime="20140618 14:51:01.498"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:01.510" starttime="20140618 14:51:01.491"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:01.511" starttime="20140618 14:51:01.473"></status>
</kw>
<msg timestamp="20140618 14:51:01.513" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20140618 14:51:01.512" starttime="20140618 14:50:59.098"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20140618 14:51:01.516" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:51:01.517" starttime="20140618 14:51:01.514"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_ATTACHED_ONNET_PHONE_1_IMSI} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
</arguments>
<msg timestamp="20140618 14:51:01.521" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_IMSI} = 530052041010000</msg>
<status status="PASS" endtime="20140618 14:51:01.520" starttime="20140618 14:51:01.518"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<msg timestamp="20140618 14:51:01.524" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:51:01.524" starttime="20140618 14:51:01.522"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_DESTINATION_IMSI} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}+1</arg>
</arguments>
<msg timestamp="20140618 14:51:01.544" level="INFO">${FAKE_DESTINATION_IMSI} = 530052041010001</msg>
<status status="PASS" endtime="20140618 14:51:01.543" starttime="20140618 14:51:01.525"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_DESTINATION_MSISDN} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}+1</arg>
</arguments>
<msg timestamp="20140618 14:51:01.552" level="INFO">${FAKE_DESTINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:51:01.551" starttime="20140618 14:51:01.545"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_ORIGINATION_MSISDN} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FAKE_DESTINATION_MSISDN}</arg>
</arguments>
<msg timestamp="20140618 14:51:01.555" level="INFO">${FAKE_ORIGINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:51:01.555" starttime="20140618 14:51:01.553"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Setup their acounts (only MainAccount shall have a credit) *******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.558" starttime="20140618 14:51:01.556"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances By Imsi">
<doc>Same as "CRCE Clear All Balances" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId *****</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.573" starttime="20140618 14:51:01.572"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:01.605" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:01.606" starttime="20140618 14:51:01.603"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:01.607" starttime="20140618 14:51:01.601"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:01.614" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:01.615" starttime="20140618 14:51:01.610"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:01.615" starttime="20140618 14:51:01.608"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:01.621" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:01.711" starttime="20140618 14:51:01.618"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:01.714" starttime="20140618 14:51:01.616"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:01.714" starttime="20140618 14:51:01.591"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:01.724" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:01.724" starttime="20140618 14:51:01.716"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.730" starttime="20140618 14:51:01.726"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.735" starttime="20140618 14:51:01.732"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.739" starttime="20140618 14:51:01.737"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.742" starttime="20140618 14:51:01.740"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.745" starttime="20140618 14:51:01.743"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:01.748" starttime="20140618 14:51:01.746"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:01.753" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000']</msg>
<msg timestamp="20140618 14:51:02.101" level="INFO">14:51:02,074 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
14:51:02,077 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
14:51:02,080 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14778
14:51:02,083 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000
14:51:02,086 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
14:51:02,089 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
14:51:02,092 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
14:51:02,094 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140618 14:51:02.103" starttime="20140618 14:51:01.751"></status>
</kw>
<msg timestamp="20140618 14:51:02.106" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:02.106" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:02.104" starttime="20140618 14:51:01.750"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:02.123" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:02.122" starttime="20140618 14:51:02.119"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.127" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:02.126" starttime="20140618 14:51:02.124"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.130" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:02.130" starttime="20140618 14:51:02.128"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.137" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:02.143" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:02.144" starttime="20140618 14:51:02.134"></status>
</kw>
<msg timestamp="20140618 14:51:02.145" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:02.145" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,074 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:02.144" starttime="20140618 14:51:02.132"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.158" starttime="20140618 14:51:02.155"></status>
</kw>
<msg timestamp="20140618 14:51:02.159" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,074 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:02.159" starttime="20140618 14:51:02.147"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.171" starttime="20140618 14:51:02.168"></status>
</kw>
<msg timestamp="20140618 14:51:02.172" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,074 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:02.171" starttime="20140618 14:51:02.160"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.184" starttime="20140618 14:51:02.181"></status>
</kw>
<msg timestamp="20140618 14:51:02.185" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:02.185" starttime="20140618 14:51:02.173"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.202" starttime="20140618 14:51:02.200"></status>
</kw>
<msg timestamp="20140618 14:51:02.203" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:02.203" starttime="20140618 14:51:02.187"></status>
</kw>
<msg timestamp="20140618 14:51:02.205" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:02.204" starttime="20140618 14:51:02.109"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:02.221" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140618 14:51:02.220" starttime="20140618 14:51:02.217"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.224" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:02.224" starttime="20140618 14:51:02.222"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.228" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:02.227" starttime="20140618 14:51:02.225"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.234" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:02.241" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:02.241" starttime="20140618 14:51:02.231"></status>
</kw>
<msg timestamp="20140618 14:51:02.242" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:02.243" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,077 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:51:02.242" starttime="20140618 14:51:02.229"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.254" starttime="20140618 14:51:02.252"></status>
</kw>
<msg timestamp="20140618 14:51:02.255" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,077 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:51:02.255" starttime="20140618 14:51:02.244"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.267" starttime="20140618 14:51:02.264"></status>
</kw>
<msg timestamp="20140618 14:51:02.268" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,077 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:51:02.267" starttime="20140618 14:51:02.256"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.280" starttime="20140618 14:51:02.277"></status>
</kw>
<msg timestamp="20140618 14:51:02.281" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:51:02.280" starttime="20140618 14:51:02.269"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.297" starttime="20140618 14:51:02.295"></status>
</kw>
<msg timestamp="20140618 14:51:02.298" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:51:02.298" starttime="20140618 14:51:02.282"></status>
</kw>
<msg timestamp="20140618 14:51:02.300" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140618 14:51:02.299" starttime="20140618 14:51:02.207"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:02.316" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140618 14:51:02.315" starttime="20140618 14:51:02.313"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.321" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:02.320" starttime="20140618 14:51:02.317"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.325" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:02.324" starttime="20140618 14:51:02.322"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.334" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:02.341" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:02.341" starttime="20140618 14:51:02.328"></status>
</kw>
<msg timestamp="20140618 14:51:02.343" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:02.343" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,083 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140618 14:51:02.342" starttime="20140618 14:51:02.326"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.356" starttime="20140618 14:51:02.354"></status>
</kw>
<msg timestamp="20140618 14:51:02.357" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,083 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140618 14:51:02.357" starttime="20140618 14:51:02.344"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.369" starttime="20140618 14:51:02.366"></status>
</kw>
<msg timestamp="20140618 14:51:02.370" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,083 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140618 14:51:02.370" starttime="20140618 14:51:02.359"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.382" starttime="20140618 14:51:02.379"></status>
</kw>
<msg timestamp="20140618 14:51:02.384" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:51:02.383" starttime="20140618 14:51:02.371"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.400" starttime="20140618 14:51:02.397"></status>
</kw>
<msg timestamp="20140618 14:51:02.401" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:51:02.400" starttime="20140618 14:51:02.385"></status>
</kw>
<msg timestamp="20140618 14:51:02.402" level="INFO">${msisdn} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:51:02.402" starttime="20140618 14:51:02.302"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:02.418" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140618 14:51:02.417" starttime="20140618 14:51:02.415"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.421" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:02.421" starttime="20140618 14:51:02.419"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.425" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:02.424" starttime="20140618 14:51:02.422"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.431" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:02.437" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:02.438" starttime="20140618 14:51:02.428"></status>
</kw>
<msg timestamp="20140618 14:51:02.439" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:02.439" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,080 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14778</msg>
<status status="PASS" endtime="20140618 14:51:02.438" starttime="20140618 14:51:02.426"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.450" starttime="20140618 14:51:02.447"></status>
</kw>
<msg timestamp="20140618 14:51:02.451" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,080 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14778</msg>
<status status="PASS" endtime="20140618 14:51:02.450" starttime="20140618 14:51:02.440"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.461" starttime="20140618 14:51:02.459"></status>
</kw>
<msg timestamp="20140618 14:51:02.463" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,080 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14778</msg>
<status status="PASS" endtime="20140618 14:51:02.462" starttime="20140618 14:51:02.452"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.474" starttime="20140618 14:51:02.471"></status>
</kw>
<msg timestamp="20140618 14:51:02.475" level="INFO">${resultCode} = 14778</msg>
<status status="PASS" endtime="20140618 14:51:02.474" starttime="20140618 14:51:02.464"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.491" starttime="20140618 14:51:02.489"></status>
</kw>
<msg timestamp="20140618 14:51:02.492" level="INFO">${resultCode} = 14778</msg>
<status status="PASS" endtime="20140618 14:51:02.491" starttime="20140618 14:51:02.476"></status>
</kw>
<msg timestamp="20140618 14:51:02.493" level="INFO">${id} = 14778</msg>
<status status="PASS" endtime="20140618 14:51:02.493" starttime="20140618 14:51:02.404"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:02.509" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140618 14:51:02.509" starttime="20140618 14:51:02.506"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.513" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:02.512" starttime="20140618 14:51:02.510"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.516" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:02.516" starttime="20140618 14:51:02.514"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.522" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:02.528" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:02.529" starttime="20140618 14:51:02.519"></status>
</kw>
<msg timestamp="20140618 14:51:02.530" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:02.531" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,086 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:02.530" starttime="20140618 14:51:02.517"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.542" starttime="20140618 14:51:02.539"></status>
</kw>
<msg timestamp="20140618 14:51:02.543" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,086 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:02.542" starttime="20140618 14:51:02.532"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.554" starttime="20140618 14:51:02.552"></status>
</kw>
<msg timestamp="20140618 14:51:02.555" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,086 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:02.555" starttime="20140618 14:51:02.544"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.567" starttime="20140618 14:51:02.564"></status>
</kw>
<msg timestamp="20140618 14:51:02.568" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:02.568" starttime="20140618 14:51:02.556"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.586" starttime="20140618 14:51:02.583"></status>
</kw>
<msg timestamp="20140618 14:51:02.587" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:02.586" starttime="20140618 14:51:02.569"></status>
</kw>
<msg timestamp="20140618 14:51:02.588" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:02.588" starttime="20140618 14:51:02.495"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:02.604" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140618 14:51:02.603" starttime="20140618 14:51:02.601"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.608" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:02.607" starttime="20140618 14:51:02.605"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.611" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:02.611" starttime="20140618 14:51:02.609"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.617" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:02.623" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:02.624" starttime="20140618 14:51:02.614"></status>
</kw>
<msg timestamp="20140618 14:51:02.625" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:02.625" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,089 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:51:02.624" starttime="20140618 14:51:02.612"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.636" starttime="20140618 14:51:02.633"></status>
</kw>
<msg timestamp="20140618 14:51:02.637" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,089 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:51:02.636" starttime="20140618 14:51:02.626"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.648" starttime="20140618 14:51:02.645"></status>
</kw>
<msg timestamp="20140618 14:51:02.649" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,089 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:51:02.648" starttime="20140618 14:51:02.638"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.747" starttime="20140618 14:51:02.658"></status>
</kw>
<msg timestamp="20140618 14:51:02.749" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:51:02.749" starttime="20140618 14:51:02.650"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.766" starttime="20140618 14:51:02.764"></status>
</kw>
<msg timestamp="20140618 14:51:02.767" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:51:02.766" starttime="20140618 14:51:02.750"></status>
</kw>
<msg timestamp="20140618 14:51:02.768" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140618 14:51:02.768" starttime="20140618 14:51:02.590"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:02.784" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140618 14:51:02.784" starttime="20140618 14:51:02.781"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.788" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:02.787" starttime="20140618 14:51:02.785"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.791" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:02.790" starttime="20140618 14:51:02.789"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.796" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:02.802" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:02.803" starttime="20140618 14:51:02.794"></status>
</kw>
<msg timestamp="20140618 14:51:02.804" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:02.804" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,092 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:02.803" starttime="20140618 14:51:02.792"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.814" starttime="20140618 14:51:02.812"></status>
</kw>
<msg timestamp="20140618 14:51:02.815" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,092 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:02.815" starttime="20140618 14:51:02.805"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.826" starttime="20140618 14:51:02.824"></status>
</kw>
<msg timestamp="20140618 14:51:02.827" level="INFO">${return_log_entry} = 2014-06-18 14:51:02,092 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:02.826" starttime="20140618 14:51:02.817"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.838" starttime="20140618 14:51:02.835"></status>
</kw>
<msg timestamp="20140618 14:51:02.839" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:02.838" starttime="20140618 14:51:02.828"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.854" starttime="20140618 14:51:02.852"></status>
</kw>
<msg timestamp="20140618 14:51:02.855" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:02.855" starttime="20140618 14:51:02.840"></status>
</kw>
<msg timestamp="20140618 14:51:02.856" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:02.856" starttime="20140618 14:51:02.771"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.869" starttime="20140618 14:51:02.868"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.871" starttime="20140618 14:51:02.870"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.874" starttime="20140618 14:51:02.872"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:02.892" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:02.893" starttime="20140618 14:51:02.884"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:02.893" starttime="20140618 14:51:02.882"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:02.894" starttime="20140618 14:51:02.875"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:02.894" starttime="20140618 14:51:02.858"></status>
</kw>
<msg timestamp="20140618 14:51:02.898" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:51:02.898" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140618 14:51:02.899" level="INFO">${msisdnDummy} = 642041010000</msg>
<msg timestamp="20140618 14:51:02.899" level="INFO">${subscriberId} = 14778</msg>
<msg timestamp="20140618 14:51:02.899" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140618 14:51:02.900" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140618 14:51:02.900" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:02.897" starttime="20140618 14:51:01.577"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.907" starttime="20140618 14:51:02.901"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Clear All Balances" *****</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.909" starttime="20140618 14:51:02.908"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances">
<doc>Sets passed subscribers balance of all accounts to zero</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve all accountIds ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.923" starttime="20140618 14:51:02.922"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, @{accountIds} = subscriber-admin-support-resource.CRCE Get Accounts">
<doc>This is a delegator to the CRCE webservice operation getAccounts and returnes the list of the subscriber's acountIds</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.953" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:02.954" starttime="20140618 14:51:02.951"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:02.955" starttime="20140618 14:51:02.949"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.960" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:02.961" starttime="20140618 14:51:02.958"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:02.962" starttime="20140618 14:51:02.956"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.968" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:02.969" starttime="20140618 14:51:02.965"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:02.969" starttime="20140618 14:51:02.963"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:02.970" starttime="20140618 14:51:02.939"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:02.974" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:02.974" starttime="20140618 14:51:02.971"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.978" starttime="20140618 14:51:02.975"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.982" starttime="20140618 14:51:02.979"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.986" starttime="20140618 14:51:02.983"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.988" starttime="20140618 14:51:02.987"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getAccounts</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.990" starttime="20140618 14:51:02.989"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getAccounts.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:02.994" starttime="20140618 14:51:02.992"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:02.999" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778']</msg>
<msg timestamp="20140618 14:51:03.674" level="INFO">14:51:03,664 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK
14:51:03,667 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14779;14782;14781;14780</msg>
<status status="PASS" endtime="20140618 14:51:03.675" starttime="20140618 14:51:02.997"></status>
</kw>
<msg timestamp="20140618 14:51:03.678" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:03.678" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:03.676" starttime="20140618 14:51:02.995"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:03.691" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:03.691" starttime="20140618 14:51:03.688"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:03.695" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:03.694" starttime="20140618 14:51:03.692"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:03.698" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:03.698" starttime="20140618 14:51:03.696"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:03.703" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:03.709" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:03.709" starttime="20140618 14:51:03.701"></status>
</kw>
<msg timestamp="20140618 14:51:03.710" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:03.711" level="INFO">${return_log_entry} = 2014-06-18 14:51:03,664 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:03.710" starttime="20140618 14:51:03.699"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:03.720" starttime="20140618 14:51:03.718"></status>
</kw>
<msg timestamp="20140618 14:51:03.721" level="INFO">${return_log_entry} = 2014-06-18 14:51:03,664 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:03.721" starttime="20140618 14:51:03.712"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:03.732" starttime="20140618 14:51:03.729"></status>
</kw>
<msg timestamp="20140618 14:51:03.733" level="INFO">${return_log_entry} = 2014-06-18 14:51:03,664 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:03.732" starttime="20140618 14:51:03.722"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:03.744" starttime="20140618 14:51:03.741"></status>
</kw>
<msg timestamp="20140618 14:51:03.745" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:03.745" starttime="20140618 14:51:03.734"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:03.760" starttime="20140618 14:51:03.758"></status>
</kw>
<msg timestamp="20140618 14:51:03.761" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:03.761" starttime="20140618 14:51:03.746"></status>
</kw>
<msg timestamp="20140618 14:51:03.763" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:03.762" starttime="20140618 14:51:03.680"></status>
</kw>
<kw type="kw" timeout="" name="${csvAccountIds} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.accountIds</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:03.776" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.accountIds=</msg>
<status status="PASS" endtime="20140618 14:51:03.775" starttime="20140618 14:51:03.773"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:03.779" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:03.779" starttime="20140618 14:51:03.777"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:03.783" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:03.782" starttime="20140618 14:51:03.780"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:03.788" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:03.794" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:03.795" starttime="20140618 14:51:03.786"></status>
</kw>
<msg timestamp="20140618 14:51:03.796" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:03.796" level="INFO">${return_log_entry} = 2014-06-18 14:51:03,667 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14779;14782;14781;14780</msg>
<status status="PASS" endtime="20140618 14:51:03.795" starttime="20140618 14:51:03.784"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:03.806" starttime="20140618 14:51:03.804"></status>
</kw>
<msg timestamp="20140618 14:51:03.807" level="INFO">${return_log_entry} = 2014-06-18 14:51:03,667 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14779;14782;14781;14780</msg>
<status status="PASS" endtime="20140618 14:51:03.807" starttime="20140618 14:51:03.798"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:03.818" starttime="20140618 14:51:03.816"></status>
</kw>
<msg timestamp="20140618 14:51:03.819" level="INFO">${return_log_entry} = 2014-06-18 14:51:03,667 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14779;14782;14781;14780</msg>
<status status="PASS" endtime="20140618 14:51:03.818" starttime="20140618 14:51:03.809"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:03.830" starttime="20140618 14:51:03.827"></status>
</kw>
<msg timestamp="20140618 14:51:03.831" level="INFO">${resultCode} = 14779;14782;14781;14780</msg>
<status status="PASS" endtime="20140618 14:51:03.831" starttime="20140618 14:51:03.820"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:03.846" starttime="20140618 14:51:03.844"></status>
</kw>
<msg timestamp="20140618 14:51:03.847" level="INFO">${resultCode} = 14779;14782;14781;14780</msg>
<status status="PASS" endtime="20140618 14:51:03.847" starttime="20140618 14:51:03.832"></status>
</kw>
<msg timestamp="20140618 14:51:03.849" level="INFO">${csvAccountIds} = 14779;14782;14781;14780</msg>
<status status="PASS" endtime="20140618 14:51:03.848" starttime="20140618 14:51:03.765"></status>
</kw>
<kw type="kw" timeout="" name="@{accountIds} = String.Split String">
<doc>Splits the `string` using `separator` as a delimiter string.</doc>
<arguments>
<arg>${csvAccountIds}</arg>
<arg>;</arg>
</arguments>
<msg timestamp="20140618 14:51:03.852" level="INFO">@{accountIds} = [ 14779 | 14782 | 14781 | 14780 ]</msg>
<status status="PASS" endtime="20140618 14:51:03.852" starttime="20140618 14:51:03.850"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetAccounts</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:03.940" starttime="20140618 14:51:03.936"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:03.942" starttime="20140618 14:51:03.941"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:03.944" starttime="20140618 14:51:03.943"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:03.964" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetAccounts*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetAccounts*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:03.965" starttime="20140618 14:51:03.956"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:03.966" starttime="20140618 14:51:03.955"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:03.967" starttime="20140618 14:51:03.946"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:03.967" starttime="20140618 14:51:03.854"></status>
</kw>
<msg timestamp="20140618 14:51:03.970" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:51:03.971" level="INFO">@{accountIds} = [ 14779 | 14782 | 14781 | 14780 ]</msg>
<status status="PASS" endtime="20140618 14:51:03.969" starttime="20140618 14:51:02.926"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying accounts of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:03.978" starttime="20140618 14:51:03.972"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Clear each account balance ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:03.980" starttime="20140618 14:51:03.979"></status>
</kw>
<kw type="for" timeout="" name="${accountId} IN [ @{accountIds} ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" timeout="" name="${accountId} = 14779">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:51:03.997" level="INFO">CRCE Set Balance( subscriberId=14778, accountId=14779, balance=0)</msg>
<status status="PASS" endtime="20140618 14:51:03.998" starttime="20140618 14:51:03.994"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:04.014" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:04.015" starttime="20140618 14:51:04.011"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:04.015" starttime="20140618 14:51:04.009"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:04.021" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:04.022" starttime="20140618 14:51:04.018"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:04.023" starttime="20140618 14:51:04.017"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:04.028" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:04.029" starttime="20140618 14:51:04.026"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:04.030" starttime="20140618 14:51:04.024"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:04.030" starttime="20140618 14:51:04.001"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:04.036" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:04.036" starttime="20140618 14:51:04.031"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.040" starttime="20140618 14:51:04.037"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.044" starttime="20140618 14:51:04.041"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.048" starttime="20140618 14:51:04.045"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.051" starttime="20140618 14:51:04.049"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.054" starttime="20140618 14:51:04.052"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.058" starttime="20140618 14:51:04.056"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.062" starttime="20140618 14:51:04.059"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.066" starttime="20140618 14:51:04.063"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:04.071" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:51:04.467" level="INFO">14:51:04,453 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:04.468" starttime="20140618 14:51:04.069"></status>
</kw>
<msg timestamp="20140618 14:51:04.469" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:04.470" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:04.468" starttime="20140618 14:51:04.067"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:04.488" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:04.487" starttime="20140618 14:51:04.482"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:04.491" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:04.491" starttime="20140618 14:51:04.489"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:04.494" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:04.494" starttime="20140618 14:51:04.492"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:04.500" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:04.505" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:04.506" starttime="20140618 14:51:04.497"></status>
</kw>
<msg timestamp="20140618 14:51:04.507" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:04.507" level="INFO">${return_log_entry} = 2014-06-18 14:51:04,453 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:04.506" starttime="20140618 14:51:04.495"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.517" starttime="20140618 14:51:04.515"></status>
</kw>
<msg timestamp="20140618 14:51:04.518" level="INFO">${return_log_entry} = 2014-06-18 14:51:04,453 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:04.517" starttime="20140618 14:51:04.508"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.528" starttime="20140618 14:51:04.526"></status>
</kw>
<msg timestamp="20140618 14:51:04.529" level="INFO">${return_log_entry} = 2014-06-18 14:51:04,453 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:04.529" starttime="20140618 14:51:04.519"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.540" starttime="20140618 14:51:04.538"></status>
</kw>
<msg timestamp="20140618 14:51:04.542" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:04.541" starttime="20140618 14:51:04.530"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.557" starttime="20140618 14:51:04.555"></status>
</kw>
<msg timestamp="20140618 14:51:04.558" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:04.557" starttime="20140618 14:51:04.543"></status>
</kw>
<msg timestamp="20140618 14:51:04.559" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:04.559" starttime="20140618 14:51:04.473"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.570" starttime="20140618 14:51:04.568"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.572" starttime="20140618 14:51:04.571"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.574" starttime="20140618 14:51:04.573"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:04.590" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:04.591" starttime="20140618 14:51:04.584"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:04.592" starttime="20140618 14:51:04.582"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:04.592" starttime="20140618 14:51:04.575"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:04.593" starttime="20140618 14:51:04.561"></status>
</kw>
<msg timestamp="20140618 14:51:04.595" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:04.594" starttime="20140618 14:51:03.984"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.602" starttime="20140618 14:51:04.596"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:04.602" starttime="20140618 14:51:03.982"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 14782">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:51:04.619" level="INFO">CRCE Set Balance( subscriberId=14778, accountId=14782, balance=0)</msg>
<status status="PASS" endtime="20140618 14:51:04.620" starttime="20140618 14:51:04.616"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:04.634" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:04.635" starttime="20140618 14:51:04.631"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:04.635" starttime="20140618 14:51:04.630"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:04.641" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:04.642" starttime="20140618 14:51:04.638"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:04.642" starttime="20140618 14:51:04.636"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:04.648" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:04.648" starttime="20140618 14:51:04.645"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:04.649" starttime="20140618 14:51:04.643"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:04.649" starttime="20140618 14:51:04.623"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:04.654" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:04.654" starttime="20140618 14:51:04.650"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.658" starttime="20140618 14:51:04.655"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.661" starttime="20140618 14:51:04.659"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.665" starttime="20140618 14:51:04.662"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.667" starttime="20140618 14:51:04.666"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.669" starttime="20140618 14:51:04.668"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.673" starttime="20140618 14:51:04.670"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.677" starttime="20140618 14:51:04.674"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.680" starttime="20140618 14:51:04.678"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:04.684" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:51:04.959" level="INFO">14:51:04,954 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:04.959" starttime="20140618 14:51:04.683"></status>
</kw>
<msg timestamp="20140618 14:51:04.961" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:04.961" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:04.960" starttime="20140618 14:51:04.681"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:04.973" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:04.973" starttime="20140618 14:51:04.970"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:04.977" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:04.976" starttime="20140618 14:51:04.974"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:04.980" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:04.979" starttime="20140618 14:51:04.978"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:04.985" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:04.986" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:04.987" starttime="20140618 14:51:04.983"></status>
</kw>
<msg timestamp="20140618 14:51:04.988" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:04.988" level="INFO">${return_log_entry} = 2014-06-18 14:51:04,954 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:04.987" starttime="20140618 14:51:04.981"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:04.999" starttime="20140618 14:51:04.996"></status>
</kw>
<msg timestamp="20140618 14:51:05.000" level="INFO">${return_log_entry} = 2014-06-18 14:51:04,954 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:04.999" starttime="20140618 14:51:04.989"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.010" starttime="20140618 14:51:05.008"></status>
</kw>
<msg timestamp="20140618 14:51:05.011" level="INFO">${return_log_entry} = 2014-06-18 14:51:04,954 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:05.011" starttime="20140618 14:51:05.001"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.023" starttime="20140618 14:51:05.020"></status>
</kw>
<msg timestamp="20140618 14:51:05.024" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:05.023" starttime="20140618 14:51:05.013"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.099" starttime="20140618 14:51:05.096"></status>
</kw>
<msg timestamp="20140618 14:51:05.100" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:05.100" starttime="20140618 14:51:05.080"></status>
</kw>
<msg timestamp="20140618 14:51:05.102" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:05.101" starttime="20140618 14:51:04.963"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.113" starttime="20140618 14:51:05.112"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.115" starttime="20140618 14:51:05.114"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.118" starttime="20140618 14:51:05.116"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:05.132" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:05.132" starttime="20140618 14:51:05.128"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.133" starttime="20140618 14:51:05.126"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.133" starttime="20140618 14:51:05.119"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.134" starttime="20140618 14:51:05.104"></status>
</kw>
<msg timestamp="20140618 14:51:05.136" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:05.135" starttime="20140618 14:51:04.606"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.143" starttime="20140618 14:51:05.137"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.144" starttime="20140618 14:51:04.603"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 14781">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:51:05.161" level="INFO">CRCE Set Balance( subscriberId=14778, accountId=14781, balance=0)</msg>
<status status="PASS" endtime="20140618 14:51:05.161" starttime="20140618 14:51:05.158"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:05.176" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:05.177" starttime="20140618 14:51:05.173"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.178" starttime="20140618 14:51:05.172"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:05.183" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:05.184" starttime="20140618 14:51:05.180"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.185" starttime="20140618 14:51:05.179"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:05.190" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:05.191" starttime="20140618 14:51:05.187"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.191" starttime="20140618 14:51:05.186"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.192" starttime="20140618 14:51:05.164"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:05.196" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:05.197" starttime="20140618 14:51:05.193"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.200" starttime="20140618 14:51:05.198"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.204" starttime="20140618 14:51:05.201"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.207" starttime="20140618 14:51:05.205"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.210" starttime="20140618 14:51:05.209"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.212" starttime="20140618 14:51:05.211"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.216" starttime="20140618 14:51:05.213"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.220" starttime="20140618 14:51:05.217"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.224" starttime="20140618 14:51:05.221"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:05.228" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:51:05.547" level="INFO">14:51:05,539 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:05.548" starttime="20140618 14:51:05.226"></status>
</kw>
<msg timestamp="20140618 14:51:05.550" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:05.550" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:05.549" starttime="20140618 14:51:05.225"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:05.565" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:05.565" starttime="20140618 14:51:05.563"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:05.569" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:05.568" starttime="20140618 14:51:05.566"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:05.572" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:05.571" starttime="20140618 14:51:05.570"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:05.577" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:05.578" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:05.579" starttime="20140618 14:51:05.575"></status>
</kw>
<msg timestamp="20140618 14:51:05.580" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:05.580" level="INFO">${return_log_entry} = 2014-06-18 14:51:05,539 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:05.579" starttime="20140618 14:51:05.573"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.590" starttime="20140618 14:51:05.588"></status>
</kw>
<msg timestamp="20140618 14:51:05.591" level="INFO">${return_log_entry} = 2014-06-18 14:51:05,539 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:05.591" starttime="20140618 14:51:05.581"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.601" starttime="20140618 14:51:05.599"></status>
</kw>
<msg timestamp="20140618 14:51:05.602" level="INFO">${return_log_entry} = 2014-06-18 14:51:05,539 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:05.602" starttime="20140618 14:51:05.592"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.613" starttime="20140618 14:51:05.610"></status>
</kw>
<msg timestamp="20140618 14:51:05.614" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:05.614" starttime="20140618 14:51:05.603"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.629" starttime="20140618 14:51:05.627"></status>
</kw>
<msg timestamp="20140618 14:51:05.630" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:05.630" starttime="20140618 14:51:05.615"></status>
</kw>
<msg timestamp="20140618 14:51:05.631" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:05.631" starttime="20140618 14:51:05.552"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.643" starttime="20140618 14:51:05.641"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.647" starttime="20140618 14:51:05.645"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.650" starttime="20140618 14:51:05.648"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:05.670" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:05.671" starttime="20140618 14:51:05.665"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.672" starttime="20140618 14:51:05.662"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.673" starttime="20140618 14:51:05.652"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.674" starttime="20140618 14:51:05.633"></status>
</kw>
<msg timestamp="20140618 14:51:05.677" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:05.675" starttime="20140618 14:51:05.147"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.687" starttime="20140618 14:51:05.679"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.688" starttime="20140618 14:51:05.145"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 14780">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:51:05.713" level="INFO">CRCE Set Balance( subscriberId=14778, accountId=14780, balance=0)</msg>
<status status="PASS" endtime="20140618 14:51:05.714" starttime="20140618 14:51:05.709"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:05.737" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:05.738" starttime="20140618 14:51:05.733"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.739" starttime="20140618 14:51:05.730"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:05.747" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:05.748" starttime="20140618 14:51:05.743"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.749" starttime="20140618 14:51:05.740"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:05.757" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:05.758" starttime="20140618 14:51:05.753"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.759" starttime="20140618 14:51:05.751"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:05.760" starttime="20140618 14:51:05.719"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:05.766" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:05.767" starttime="20140618 14:51:05.761"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.773" starttime="20140618 14:51:05.769"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.778" starttime="20140618 14:51:05.774"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.784" starttime="20140618 14:51:05.780"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.788" starttime="20140618 14:51:05.786"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.792" starttime="20140618 14:51:05.790"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.797" starttime="20140618 14:51:05.793"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.803" starttime="20140618 14:51:05.799"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:05.809" starttime="20140618 14:51:05.804"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:05.814" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:51:06.132" level="INFO">14:51:06,123 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:06.133" starttime="20140618 14:51:05.813"></status>
</kw>
<msg timestamp="20140618 14:51:06.138" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:06.138" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:06.136" starttime="20140618 14:51:05.810"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:06.160" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:06.159" starttime="20140618 14:51:06.155"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.165" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:06.164" starttime="20140618 14:51:06.161"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.169" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:06.169" starttime="20140618 14:51:06.166"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.177" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:06.179" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:06.179" starttime="20140618 14:51:06.174"></status>
</kw>
<msg timestamp="20140618 14:51:06.180" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:06.180" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,123 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:06.180" starttime="20140618 14:51:06.171"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.190" starttime="20140618 14:51:06.188"></status>
</kw>
<msg timestamp="20140618 14:51:06.191" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,123 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:06.191" starttime="20140618 14:51:06.182"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.202" starttime="20140618 14:51:06.200"></status>
</kw>
<msg timestamp="20140618 14:51:06.203" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,123 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:06.202" starttime="20140618 14:51:06.192"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.284" starttime="20140618 14:51:06.280"></status>
</kw>
<msg timestamp="20140618 14:51:06.285" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:06.285" starttime="20140618 14:51:06.204"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.301" starttime="20140618 14:51:06.299"></status>
</kw>
<msg timestamp="20140618 14:51:06.302" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:06.302" starttime="20140618 14:51:06.286"></status>
</kw>
<msg timestamp="20140618 14:51:06.303" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:06.303" starttime="20140618 14:51:06.143"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.314" starttime="20140618 14:51:06.313"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.316" starttime="20140618 14:51:06.315"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.318" starttime="20140618 14:51:06.317"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:06.332" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:06.332" starttime="20140618 14:51:06.328"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:06.333" starttime="20140618 14:51:06.326"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:06.334" starttime="20140618 14:51:06.319"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:06.334" starttime="20140618 14:51:06.306"></status>
</kw>
<msg timestamp="20140618 14:51:06.336" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:06.335" starttime="20140618 14:51:05.693"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.343" starttime="20140618 14:51:06.337"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:06.343" starttime="20140618 14:51:05.689"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:06.344" starttime="20140618 14:51:03.981"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:06.345" starttime="20140618 14:51:02.911"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:06.346" starttime="20140618 14:51:01.560"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances By Imsi">
<doc>Same as "CRCE Clear All Balances" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_DESTINATION_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId *****</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.359" starttime="20140618 14:51:06.358"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.385" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:06.386" starttime="20140618 14:51:06.383"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:06.387" starttime="20140618 14:51:06.381"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.392" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:06.393" starttime="20140618 14:51:06.389"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:06.393" starttime="20140618 14:51:06.388"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.399" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:06.400" starttime="20140618 14:51:06.396"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:06.400" starttime="20140618 14:51:06.394"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:06.401" starttime="20140618 14:51:06.374"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.405" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:06.405" starttime="20140618 14:51:06.402"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.409" starttime="20140618 14:51:06.406"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.412" starttime="20140618 14:51:06.410"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.416" starttime="20140618 14:51:06.413"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.418" starttime="20140618 14:51:06.417"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.420" starttime="20140618 14:51:06.419"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.423" starttime="20140618 14:51:06.421"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:06.427" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001']</msg>
<msg timestamp="20140618 14:51:06.731" level="INFO">14:51:06,696 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
14:51:06,700 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
14:51:06,704 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14783
14:51:06,707 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001
14:51:06,711 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
14:51:06,715 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
14:51:06,718 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
14:51:06,722 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140618 14:51:06.732" starttime="20140618 14:51:06.426"></status>
</kw>
<msg timestamp="20140618 14:51:06.733" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:06.734" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:06.733" starttime="20140618 14:51:06.424"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:06.746" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:06.745" starttime="20140618 14:51:06.743"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.749" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:06.749" starttime="20140618 14:51:06.747"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.752" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:06.752" starttime="20140618 14:51:06.750"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.758" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:06.759" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:06.759" starttime="20140618 14:51:06.755"></status>
</kw>
<msg timestamp="20140618 14:51:06.760" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:06.761" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,696 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:06.760" starttime="20140618 14:51:06.753"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.771" starttime="20140618 14:51:06.769"></status>
</kw>
<msg timestamp="20140618 14:51:06.772" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,696 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:06.772" starttime="20140618 14:51:06.762"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.782" starttime="20140618 14:51:06.780"></status>
</kw>
<msg timestamp="20140618 14:51:06.783" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,696 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:06.783" starttime="20140618 14:51:06.773"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.794" starttime="20140618 14:51:06.791"></status>
</kw>
<msg timestamp="20140618 14:51:06.795" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:06.795" starttime="20140618 14:51:06.784"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.810" starttime="20140618 14:51:06.808"></status>
</kw>
<msg timestamp="20140618 14:51:06.811" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:06.810" starttime="20140618 14:51:06.796"></status>
</kw>
<msg timestamp="20140618 14:51:06.812" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:06.812" starttime="20140618 14:51:06.736"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:06.824" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140618 14:51:06.824" starttime="20140618 14:51:06.821"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.828" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:06.827" starttime="20140618 14:51:06.825"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.831" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:06.830" starttime="20140618 14:51:06.828"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.836" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:06.837" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:06.838" starttime="20140618 14:51:06.833"></status>
</kw>
<msg timestamp="20140618 14:51:06.839" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:06.839" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,700 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:51:06.838" starttime="20140618 14:51:06.832"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.849" starttime="20140618 14:51:06.847"></status>
</kw>
<msg timestamp="20140618 14:51:06.850" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,700 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:51:06.849" starttime="20140618 14:51:06.840"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.860" starttime="20140618 14:51:06.858"></status>
</kw>
<msg timestamp="20140618 14:51:06.861" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,700 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:51:06.860" starttime="20140618 14:51:06.851"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.871" starttime="20140618 14:51:06.869"></status>
</kw>
<msg timestamp="20140618 14:51:06.872" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:51:06.872" starttime="20140618 14:51:06.862"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.888" starttime="20140618 14:51:06.886"></status>
</kw>
<msg timestamp="20140618 14:51:06.889" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:51:06.888" starttime="20140618 14:51:06.874"></status>
</kw>
<msg timestamp="20140618 14:51:06.890" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140618 14:51:06.890" starttime="20140618 14:51:06.814"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:06.902" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140618 14:51:06.902" starttime="20140618 14:51:06.899"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.906" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:06.905" starttime="20140618 14:51:06.903"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.909" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:06.908" starttime="20140618 14:51:06.907"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.914" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:06.916" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:06.916" starttime="20140618 14:51:06.911"></status>
</kw>
<msg timestamp="20140618 14:51:06.917" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:06.917" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,707 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140618 14:51:06.917" starttime="20140618 14:51:06.910"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.927" starttime="20140618 14:51:06.925"></status>
</kw>
<msg timestamp="20140618 14:51:06.928" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,707 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140618 14:51:06.928" starttime="20140618 14:51:06.919"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.939" starttime="20140618 14:51:06.937"></status>
</kw>
<msg timestamp="20140618 14:51:06.940" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,707 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140618 14:51:06.939" starttime="20140618 14:51:06.929"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.951" starttime="20140618 14:51:06.948"></status>
</kw>
<msg timestamp="20140618 14:51:06.952" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:51:06.951" starttime="20140618 14:51:06.941"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:06.966" starttime="20140618 14:51:06.964"></status>
</kw>
<msg timestamp="20140618 14:51:06.967" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:51:06.967" starttime="20140618 14:51:06.952"></status>
</kw>
<msg timestamp="20140618 14:51:06.969" level="INFO">${msisdn} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:51:06.968" starttime="20140618 14:51:06.892"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:06.981" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140618 14:51:06.980" starttime="20140618 14:51:06.978"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.985" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:06.984" starttime="20140618 14:51:06.982"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.988" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:06.987" starttime="20140618 14:51:06.986"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:06.993" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:06.994" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:06.995" starttime="20140618 14:51:06.991"></status>
</kw>
<msg timestamp="20140618 14:51:06.996" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:06.996" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,704 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14783</msg>
<status status="PASS" endtime="20140618 14:51:06.995" starttime="20140618 14:51:06.989"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.006" starttime="20140618 14:51:07.004"></status>
</kw>
<msg timestamp="20140618 14:51:07.008" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,704 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14783</msg>
<status status="PASS" endtime="20140618 14:51:07.007" starttime="20140618 14:51:06.997"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.018" starttime="20140618 14:51:07.016"></status>
</kw>
<msg timestamp="20140618 14:51:07.019" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,704 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14783</msg>
<status status="PASS" endtime="20140618 14:51:07.018" starttime="20140618 14:51:07.009"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.029" starttime="20140618 14:51:07.027"></status>
</kw>
<msg timestamp="20140618 14:51:07.030" level="INFO">${resultCode} = 14783</msg>
<status status="PASS" endtime="20140618 14:51:07.030" starttime="20140618 14:51:07.020"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.045" starttime="20140618 14:51:07.043"></status>
</kw>
<msg timestamp="20140618 14:51:07.046" level="INFO">${resultCode} = 14783</msg>
<status status="PASS" endtime="20140618 14:51:07.045" starttime="20140618 14:51:07.031"></status>
</kw>
<msg timestamp="20140618 14:51:07.048" level="INFO">${id} = 14783</msg>
<status status="PASS" endtime="20140618 14:51:07.047" starttime="20140618 14:51:06.970"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:07.060" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140618 14:51:07.059" starttime="20140618 14:51:07.057"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:07.063" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:07.063" starttime="20140618 14:51:07.061"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:07.066" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:07.066" starttime="20140618 14:51:07.064"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:07.072" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:07.073" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:07.074" starttime="20140618 14:51:07.069"></status>
</kw>
<msg timestamp="20140618 14:51:07.075" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:07.075" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,711 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:07.074" starttime="20140618 14:51:07.067"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.085" starttime="20140618 14:51:07.083"></status>
</kw>
<msg timestamp="20140618 14:51:07.086" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,711 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:07.086" starttime="20140618 14:51:07.076"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.146" starttime="20140618 14:51:07.143"></status>
</kw>
<msg timestamp="20140618 14:51:07.147" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,711 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:07.147" starttime="20140618 14:51:07.132"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.158" starttime="20140618 14:51:07.156"></status>
</kw>
<msg timestamp="20140618 14:51:07.159" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:07.159" starttime="20140618 14:51:07.148"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.177" starttime="20140618 14:51:07.175"></status>
</kw>
<msg timestamp="20140618 14:51:07.178" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:07.177" starttime="20140618 14:51:07.160"></status>
</kw>
<msg timestamp="20140618 14:51:07.179" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:07.179" starttime="20140618 14:51:07.050"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:07.192" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140618 14:51:07.192" starttime="20140618 14:51:07.190"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:07.196" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:07.195" starttime="20140618 14:51:07.194"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:07.199" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:07.198" starttime="20140618 14:51:07.197"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:07.205" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:07.206" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:07.206" starttime="20140618 14:51:07.202"></status>
</kw>
<msg timestamp="20140618 14:51:07.207" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:07.208" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,715 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:51:07.207" starttime="20140618 14:51:07.200"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.218" starttime="20140618 14:51:07.215"></status>
</kw>
<msg timestamp="20140618 14:51:07.219" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,715 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:51:07.218" starttime="20140618 14:51:07.209"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.229" starttime="20140618 14:51:07.227"></status>
</kw>
<msg timestamp="20140618 14:51:07.230" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,715 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:51:07.230" starttime="20140618 14:51:07.220"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.241" starttime="20140618 14:51:07.238"></status>
</kw>
<msg timestamp="20140618 14:51:07.242" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:51:07.242" starttime="20140618 14:51:07.231"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.258" starttime="20140618 14:51:07.256"></status>
</kw>
<msg timestamp="20140618 14:51:07.259" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:51:07.258" starttime="20140618 14:51:07.243"></status>
</kw>
<msg timestamp="20140618 14:51:07.260" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140618 14:51:07.260" starttime="20140618 14:51:07.182"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:07.273" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140618 14:51:07.272" starttime="20140618 14:51:07.270"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:07.276" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:07.275" starttime="20140618 14:51:07.274"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:07.279" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:07.279" starttime="20140618 14:51:07.277"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:07.285" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:07.286" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:07.287" starttime="20140618 14:51:07.282"></status>
</kw>
<msg timestamp="20140618 14:51:07.288" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:07.288" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,718 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:07.287" starttime="20140618 14:51:07.280"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.298" starttime="20140618 14:51:07.296"></status>
</kw>
<msg timestamp="20140618 14:51:07.299" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,718 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:07.299" starttime="20140618 14:51:07.289"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.310" starttime="20140618 14:51:07.308"></status>
</kw>
<msg timestamp="20140618 14:51:07.311" level="INFO">${return_log_entry} = 2014-06-18 14:51:06,718 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:07.311" starttime="20140618 14:51:07.300"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.322" starttime="20140618 14:51:07.320"></status>
</kw>
<msg timestamp="20140618 14:51:07.323" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:07.323" starttime="20140618 14:51:07.312"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.339" starttime="20140618 14:51:07.336"></status>
</kw>
<msg timestamp="20140618 14:51:07.340" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:07.339" starttime="20140618 14:51:07.324"></status>
</kw>
<msg timestamp="20140618 14:51:07.341" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:07.340" starttime="20140618 14:51:07.262"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.351" starttime="20140618 14:51:07.350"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.354" starttime="20140618 14:51:07.352"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.355" starttime="20140618 14:51:07.354"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:07.369" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:07.370" starttime="20140618 14:51:07.366"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:07.370" starttime="20140618 14:51:07.364"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:07.371" starttime="20140618 14:51:07.356"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:07.371" starttime="20140618 14:51:07.342"></status>
</kw>
<msg timestamp="20140618 14:51:07.375" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:51:07.376" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140618 14:51:07.376" level="INFO">${msisdnDummy} = 642041010001</msg>
<msg timestamp="20140618 14:51:07.376" level="INFO">${subscriberId} = 14783</msg>
<msg timestamp="20140618 14:51:07.377" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140618 14:51:07.377" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140618 14:51:07.377" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:07.374" starttime="20140618 14:51:06.363"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.384" starttime="20140618 14:51:07.378"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Clear All Balances" *****</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.387" starttime="20140618 14:51:07.385"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances">
<doc>Sets passed subscribers balance of all accounts to zero</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve all accountIds ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.399" starttime="20140618 14:51:07.398"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, @{accountIds} = subscriber-admin-support-resource.CRCE Get Accounts">
<doc>This is a delegator to the CRCE webservice operation getAccounts and returnes the list of the subscriber's acountIds</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:07.424" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:07.425" starttime="20140618 14:51:07.422"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:07.426" starttime="20140618 14:51:07.420"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:07.431" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:07.432" starttime="20140618 14:51:07.428"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:07.432" starttime="20140618 14:51:07.427"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:07.438" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:07.439" starttime="20140618 14:51:07.435"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:07.439" starttime="20140618 14:51:07.434"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:07.440" starttime="20140618 14:51:07.413"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:07.445" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:07.445" starttime="20140618 14:51:07.441"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.449" starttime="20140618 14:51:07.446"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.452" starttime="20140618 14:51:07.450"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.456" starttime="20140618 14:51:07.453"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.458" starttime="20140618 14:51:07.457"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getAccounts</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.460" starttime="20140618 14:51:07.459"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getAccounts.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:07.464" starttime="20140618 14:51:07.461"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:07.468" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783']</msg>
<msg timestamp="20140618 14:51:08.154" level="INFO">14:51:08,141 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK
14:51:08,146 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14784;14787;14786;14785</msg>
<status status="PASS" endtime="20140618 14:51:08.155" starttime="20140618 14:51:07.467"></status>
</kw>
<msg timestamp="20140618 14:51:08.157" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:08.158" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:08.156" starttime="20140618 14:51:07.465"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:08.170" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:08.170" starttime="20140618 14:51:08.167"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.173" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:08.173" starttime="20140618 14:51:08.171"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.177" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:08.176" starttime="20140618 14:51:08.174"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.182" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:08.183" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:08.184" starttime="20140618 14:51:08.179"></status>
</kw>
<msg timestamp="20140618 14:51:08.185" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:08.185" level="INFO">${return_log_entry} = 2014-06-18 14:51:08,141 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:08.184" starttime="20140618 14:51:08.178"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.196" starttime="20140618 14:51:08.194"></status>
</kw>
<msg timestamp="20140618 14:51:08.197" level="INFO">${return_log_entry} = 2014-06-18 14:51:08,141 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:08.196" starttime="20140618 14:51:08.186"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.207" starttime="20140618 14:51:08.205"></status>
</kw>
<msg timestamp="20140618 14:51:08.208" level="INFO">${return_log_entry} = 2014-06-18 14:51:08,141 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:08.207" starttime="20140618 14:51:08.198"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.219" starttime="20140618 14:51:08.216"></status>
</kw>
<msg timestamp="20140618 14:51:08.220" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:08.219" starttime="20140618 14:51:08.209"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.235" starttime="20140618 14:51:08.232"></status>
</kw>
<msg timestamp="20140618 14:51:08.236" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:08.235" starttime="20140618 14:51:08.220"></status>
</kw>
<msg timestamp="20140618 14:51:08.237" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:08.237" starttime="20140618 14:51:08.160"></status>
</kw>
<kw type="kw" timeout="" name="${csvAccountIds} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.accountIds</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:08.250" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.accountIds=</msg>
<status status="PASS" endtime="20140618 14:51:08.250" starttime="20140618 14:51:08.247"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.253" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:08.253" starttime="20140618 14:51:08.251"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.256" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:08.256" starttime="20140618 14:51:08.254"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.262" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:08.263" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:08.264" starttime="20140618 14:51:08.259"></status>
</kw>
<msg timestamp="20140618 14:51:08.265" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:08.265" level="INFO">${return_log_entry} = 2014-06-18 14:51:08,146 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14784;14787;14786;14785</msg>
<status status="PASS" endtime="20140618 14:51:08.264" starttime="20140618 14:51:08.258"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.275" starttime="20140618 14:51:08.273"></status>
</kw>
<msg timestamp="20140618 14:51:08.276" level="INFO">${return_log_entry} = 2014-06-18 14:51:08,146 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14784;14787;14786;14785</msg>
<status status="PASS" endtime="20140618 14:51:08.276" starttime="20140618 14:51:08.266"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.286" starttime="20140618 14:51:08.284"></status>
</kw>
<msg timestamp="20140618 14:51:08.287" level="INFO">${return_log_entry} = 2014-06-18 14:51:08,146 INFO  [log] LowLevelOps.getAccounts.output.accountIds=14784;14787;14786;14785</msg>
<status status="PASS" endtime="20140618 14:51:08.287" starttime="20140618 14:51:08.277"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.298" starttime="20140618 14:51:08.296"></status>
</kw>
<msg timestamp="20140618 14:51:08.299" level="INFO">${resultCode} = 14784;14787;14786;14785</msg>
<status status="PASS" endtime="20140618 14:51:08.299" starttime="20140618 14:51:08.288"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.355" starttime="20140618 14:51:08.352"></status>
</kw>
<msg timestamp="20140618 14:51:08.356" level="INFO">${resultCode} = 14784;14787;14786;14785</msg>
<status status="PASS" endtime="20140618 14:51:08.356" starttime="20140618 14:51:08.300"></status>
</kw>
<msg timestamp="20140618 14:51:08.358" level="INFO">${csvAccountIds} = 14784;14787;14786;14785</msg>
<status status="PASS" endtime="20140618 14:51:08.357" starttime="20140618 14:51:08.239"></status>
</kw>
<kw type="kw" timeout="" name="@{accountIds} = String.Split String">
<doc>Splits the `string` using `separator` as a delimiter string.</doc>
<arguments>
<arg>${csvAccountIds}</arg>
<arg>;</arg>
</arguments>
<msg timestamp="20140618 14:51:08.361" level="INFO">@{accountIds} = [ 14784 | 14787 | 14786 | 14785 ]</msg>
<status status="PASS" endtime="20140618 14:51:08.360" starttime="20140618 14:51:08.358"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetAccounts</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.373" starttime="20140618 14:51:08.371"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.375" starttime="20140618 14:51:08.373"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.377" starttime="20140618 14:51:08.376"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:08.390" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetAccounts*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetAccounts*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:08.391" starttime="20140618 14:51:08.387"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:08.391" starttime="20140618 14:51:08.385"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:08.392" starttime="20140618 14:51:08.378"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:08.392" starttime="20140618 14:51:08.363"></status>
</kw>
<msg timestamp="20140618 14:51:08.395" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:51:08.395" level="INFO">@{accountIds} = [ 14784 | 14787 | 14786 | 14785 ]</msg>
<status status="PASS" endtime="20140618 14:51:08.394" starttime="20140618 14:51:07.402"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying accounts of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.403" starttime="20140618 14:51:08.396"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Clear each account balance ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.405" starttime="20140618 14:51:08.404"></status>
</kw>
<kw type="for" timeout="" name="${accountId} IN [ @{accountIds} ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" timeout="" name="${accountId} = 14784">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:51:08.422" level="INFO">CRCE Set Balance( subscriberId=14783, accountId=14784, balance=0)</msg>
<status status="PASS" endtime="20140618 14:51:08.422" starttime="20140618 14:51:08.419"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.437" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:08.438" starttime="20140618 14:51:08.434"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:08.438" starttime="20140618 14:51:08.432"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.444" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:08.445" starttime="20140618 14:51:08.441"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:08.445" starttime="20140618 14:51:08.439"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.450" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:08.451" starttime="20140618 14:51:08.448"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:08.452" starttime="20140618 14:51:08.446"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:08.452" starttime="20140618 14:51:08.426"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.456" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:08.457" starttime="20140618 14:51:08.453"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.460" starttime="20140618 14:51:08.458"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.464" starttime="20140618 14:51:08.461"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.468" starttime="20140618 14:51:08.465"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.470" starttime="20140618 14:51:08.469"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.472" starttime="20140618 14:51:08.471"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.476" starttime="20140618 14:51:08.473"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.481" starttime="20140618 14:51:08.477"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.487" starttime="20140618 14:51:08.483"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:08.494" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:51:08.841" level="INFO">14:51:08,831 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:08.841" starttime="20140618 14:51:08.491"></status>
</kw>
<msg timestamp="20140618 14:51:08.842" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:08.842" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:08.842" starttime="20140618 14:51:08.489"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:08.855" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:08.854" starttime="20140618 14:51:08.852"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.859" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:08.858" starttime="20140618 14:51:08.856"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.862" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:08.861" starttime="20140618 14:51:08.860"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.867" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:08.868" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:08.869" starttime="20140618 14:51:08.865"></status>
</kw>
<msg timestamp="20140618 14:51:08.870" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:08.870" level="INFO">${return_log_entry} = 2014-06-18 14:51:08,831 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:08.869" starttime="20140618 14:51:08.863"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.880" starttime="20140618 14:51:08.878"></status>
</kw>
<msg timestamp="20140618 14:51:08.881" level="INFO">${return_log_entry} = 2014-06-18 14:51:08,831 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:08.881" starttime="20140618 14:51:08.871"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.891" starttime="20140618 14:51:08.889"></status>
</kw>
<msg timestamp="20140618 14:51:08.892" level="INFO">${return_log_entry} = 2014-06-18 14:51:08,831 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:08.892" starttime="20140618 14:51:08.882"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.903" starttime="20140618 14:51:08.900"></status>
</kw>
<msg timestamp="20140618 14:51:08.904" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:08.903" starttime="20140618 14:51:08.893"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.919" starttime="20140618 14:51:08.917"></status>
</kw>
<msg timestamp="20140618 14:51:08.920" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:08.919" starttime="20140618 14:51:08.905"></status>
</kw>
<msg timestamp="20140618 14:51:08.921" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:08.921" starttime="20140618 14:51:08.844"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.931" starttime="20140618 14:51:08.930"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.933" starttime="20140618 14:51:08.932"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.936" starttime="20140618 14:51:08.934"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:08.949" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:08.950" starttime="20140618 14:51:08.946"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:08.950" starttime="20140618 14:51:08.944"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:08.951" starttime="20140618 14:51:08.937"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:08.951" starttime="20140618 14:51:08.923"></status>
</kw>
<msg timestamp="20140618 14:51:08.952" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:08.952" starttime="20140618 14:51:08.409"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:08.959" starttime="20140618 14:51:08.953"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:08.959" starttime="20140618 14:51:08.406"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 14787">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:51:08.974" level="INFO">CRCE Set Balance( subscriberId=14783, accountId=14787, balance=0)</msg>
<status status="PASS" endtime="20140618 14:51:08.975" starttime="20140618 14:51:08.971"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.988" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:08.989" starttime="20140618 14:51:08.986"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:08.990" starttime="20140618 14:51:08.984"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:08.995" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:08.996" starttime="20140618 14:51:08.992"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:08.996" starttime="20140618 14:51:08.991"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:09.001" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:09.002" starttime="20140618 14:51:08.999"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:09.003" starttime="20140618 14:51:08.997"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:09.004" starttime="20140618 14:51:08.978"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:09.009" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:09.009" starttime="20140618 14:51:09.006"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.013" starttime="20140618 14:51:09.010"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.016" starttime="20140618 14:51:09.013"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.019" starttime="20140618 14:51:09.017"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.022" starttime="20140618 14:51:09.020"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.024" starttime="20140618 14:51:09.022"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.027" starttime="20140618 14:51:09.024"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.030" starttime="20140618 14:51:09.028"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.034" starttime="20140618 14:51:09.031"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:09.038" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:51:09.367" level="INFO">14:51:09,361 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:09.367" starttime="20140618 14:51:09.036"></status>
</kw>
<msg timestamp="20140618 14:51:09.368" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:09.369" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:09.368" starttime="20140618 14:51:09.035"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:09.381" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:09.381" starttime="20140618 14:51:09.378"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:09.384" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:09.384" starttime="20140618 14:51:09.382"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:09.387" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:09.387" starttime="20140618 14:51:09.385"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:09.392" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:09.393" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:09.394" starttime="20140618 14:51:09.390"></status>
</kw>
<msg timestamp="20140618 14:51:09.395" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:09.395" level="INFO">${return_log_entry} = 2014-06-18 14:51:09,361 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:09.394" starttime="20140618 14:51:09.388"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.405" starttime="20140618 14:51:09.403"></status>
</kw>
<msg timestamp="20140618 14:51:09.406" level="INFO">${return_log_entry} = 2014-06-18 14:51:09,361 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:09.406" starttime="20140618 14:51:09.396"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.418" starttime="20140618 14:51:09.416"></status>
</kw>
<msg timestamp="20140618 14:51:09.419" level="INFO">${return_log_entry} = 2014-06-18 14:51:09,361 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:09.419" starttime="20140618 14:51:09.408"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.476" starttime="20140618 14:51:09.472"></status>
</kw>
<msg timestamp="20140618 14:51:09.477" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:09.477" starttime="20140618 14:51:09.420"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.492" starttime="20140618 14:51:09.490"></status>
</kw>
<msg timestamp="20140618 14:51:09.492" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:09.492" starttime="20140618 14:51:09.478"></status>
</kw>
<msg timestamp="20140618 14:51:09.494" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:09.493" starttime="20140618 14:51:09.371"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.504" starttime="20140618 14:51:09.503"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.506" starttime="20140618 14:51:09.505"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.508" starttime="20140618 14:51:09.507"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:09.520" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:09.522" starttime="20140618 14:51:09.517"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:09.523" starttime="20140618 14:51:09.516"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:09.523" starttime="20140618 14:51:09.509"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:09.524" starttime="20140618 14:51:09.496"></status>
</kw>
<msg timestamp="20140618 14:51:09.527" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:09.525" starttime="20140618 14:51:08.962"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.533" starttime="20140618 14:51:09.527"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:09.533" starttime="20140618 14:51:08.960"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 14786">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:51:09.549" level="INFO">CRCE Set Balance( subscriberId=14783, accountId=14786, balance=0)</msg>
<status status="PASS" endtime="20140618 14:51:09.549" starttime="20140618 14:51:09.546"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:09.563" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:09.564" starttime="20140618 14:51:09.561"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:09.565" starttime="20140618 14:51:09.559"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:09.570" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:09.570" starttime="20140618 14:51:09.567"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:09.571" starttime="20140618 14:51:09.566"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:09.577" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:09.579" starttime="20140618 14:51:09.574"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:09.579" starttime="20140618 14:51:09.572"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:09.580" starttime="20140618 14:51:09.552"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:09.584" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:09.584" starttime="20140618 14:51:09.580"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.587" starttime="20140618 14:51:09.585"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.591" starttime="20140618 14:51:09.589"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.595" starttime="20140618 14:51:09.592"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.597" starttime="20140618 14:51:09.596"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.599" starttime="20140618 14:51:09.598"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.603" starttime="20140618 14:51:09.600"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.607" starttime="20140618 14:51:09.604"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.610" starttime="20140618 14:51:09.607"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:09.614" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:51:09.902" level="INFO">14:51:09,892 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:09.902" starttime="20140618 14:51:09.612"></status>
</kw>
<msg timestamp="20140618 14:51:09.903" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:09.904" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:09.903" starttime="20140618 14:51:09.611"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:09.932" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:09.915" starttime="20140618 14:51:09.913"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:09.935" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:09.935" starttime="20140618 14:51:09.933"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:09.939" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:09.938" starttime="20140618 14:51:09.936"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:09.944" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:09.945" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:09.946" starttime="20140618 14:51:09.942"></status>
</kw>
<msg timestamp="20140618 14:51:09.947" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:09.947" level="INFO">${return_log_entry} = 2014-06-18 14:51:09,892 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:09.946" starttime="20140618 14:51:09.940"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.957" starttime="20140618 14:51:09.955"></status>
</kw>
<msg timestamp="20140618 14:51:09.958" level="INFO">${return_log_entry} = 2014-06-18 14:51:09,892 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:09.957" starttime="20140618 14:51:09.948"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.967" starttime="20140618 14:51:09.965"></status>
</kw>
<msg timestamp="20140618 14:51:09.968" level="INFO">${return_log_entry} = 2014-06-18 14:51:09,892 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:09.968" starttime="20140618 14:51:09.959"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.978" starttime="20140618 14:51:09.976"></status>
</kw>
<msg timestamp="20140618 14:51:09.979" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:09.979" starttime="20140618 14:51:09.969"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:09.994" starttime="20140618 14:51:09.992"></status>
</kw>
<msg timestamp="20140618 14:51:09.995" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:09.994" starttime="20140618 14:51:09.980"></status>
</kw>
<msg timestamp="20140618 14:51:09.996" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:09.996" starttime="20140618 14:51:09.906"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.008" starttime="20140618 14:51:10.006"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.010" starttime="20140618 14:51:10.008"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.012" starttime="20140618 14:51:10.011"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:10.024" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:10.025" starttime="20140618 14:51:10.021"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.026" starttime="20140618 14:51:10.020"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.026" starttime="20140618 14:51:10.013"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.027" starttime="20140618 14:51:09.998"></status>
</kw>
<msg timestamp="20140618 14:51:10.029" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:10.028" starttime="20140618 14:51:09.537"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.035" starttime="20140618 14:51:10.030"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.036" starttime="20140618 14:51:09.535"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 14785">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:51:10.051" level="INFO">CRCE Set Balance( subscriberId=14783, accountId=14785, balance=0)</msg>
<status status="PASS" endtime="20140618 14:51:10.052" starttime="20140618 14:51:10.048"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:10.065" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:10.066" starttime="20140618 14:51:10.063"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.067" starttime="20140618 14:51:10.061"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:10.072" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:10.072" starttime="20140618 14:51:10.069"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.073" starttime="20140618 14:51:10.068"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:10.078" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:10.079" starttime="20140618 14:51:10.076"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.079" starttime="20140618 14:51:10.074"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.080" starttime="20140618 14:51:10.054"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:10.083" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:10.084" starttime="20140618 14:51:10.080"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.087" starttime="20140618 14:51:10.084"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.090" starttime="20140618 14:51:10.088"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.094" starttime="20140618 14:51:10.091"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.096" starttime="20140618 14:51:10.095"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.098" starttime="20140618 14:51:10.097"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.101" starttime="20140618 14:51:10.099"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.105" starttime="20140618 14:51:10.102"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.108" starttime="20140618 14:51:10.106"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:10.112" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140618 14:51:10.388" level="INFO">14:51:10,382 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:10.389" starttime="20140618 14:51:10.111"></status>
</kw>
<msg timestamp="20140618 14:51:10.390" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:10.390" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:10.389" starttime="20140618 14:51:10.109"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:10.402" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:10.402" starttime="20140618 14:51:10.399"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:10.405" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:10.405" starttime="20140618 14:51:10.403"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:10.408" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:10.408" starttime="20140618 14:51:10.406"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:10.413" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:10.414" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:10.415" starttime="20140618 14:51:10.411"></status>
</kw>
<msg timestamp="20140618 14:51:10.416" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:10.416" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,382 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:10.415" starttime="20140618 14:51:10.409"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.425" starttime="20140618 14:51:10.423"></status>
</kw>
<msg timestamp="20140618 14:51:10.426" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,382 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:10.426" starttime="20140618 14:51:10.417"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.478" starttime="20140618 14:51:10.475"></status>
</kw>
<msg timestamp="20140618 14:51:10.479" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,382 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:10.479" starttime="20140618 14:51:10.427"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.489" starttime="20140618 14:51:10.487"></status>
</kw>
<msg timestamp="20140618 14:51:10.490" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:10.490" starttime="20140618 14:51:10.480"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.504" starttime="20140618 14:51:10.503"></status>
</kw>
<msg timestamp="20140618 14:51:10.505" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:10.505" starttime="20140618 14:51:10.491"></status>
</kw>
<msg timestamp="20140618 14:51:10.507" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:10.506" starttime="20140618 14:51:10.392"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.517" starttime="20140618 14:51:10.516"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.519" starttime="20140618 14:51:10.518"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.521" starttime="20140618 14:51:10.520"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:10.533" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:10.534" starttime="20140618 14:51:10.530"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.534" starttime="20140618 14:51:10.528"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.535" starttime="20140618 14:51:10.522"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.535" starttime="20140618 14:51:10.509"></status>
</kw>
<msg timestamp="20140618 14:51:10.536" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:10.536" starttime="20140618 14:51:10.039"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.543" starttime="20140618 14:51:10.537"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.543" starttime="20140618 14:51:10.037"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.543" starttime="20140618 14:51:08.405"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.544" starttime="20140618 14:51:07.388"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.545" starttime="20140618 14:51:06.349"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance By Imsi">
<doc>Same as "CRCE Set Main Balance" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>10000000</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId for the passed imsi ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.557" starttime="20140618 14:51:10.556"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:10.581" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:10.582" starttime="20140618 14:51:10.579"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.583" starttime="20140618 14:51:10.577"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:10.587" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:10.588" starttime="20140618 14:51:10.585"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.589" starttime="20140618 14:51:10.584"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:10.594" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:10.594" starttime="20140618 14:51:10.591"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.595" starttime="20140618 14:51:10.590"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:10.595" starttime="20140618 14:51:10.571"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:10.599" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:10.599" starttime="20140618 14:51:10.596"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.602" starttime="20140618 14:51:10.600"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.606" starttime="20140618 14:51:10.603"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.609" starttime="20140618 14:51:10.607"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.611" starttime="20140618 14:51:10.610"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.613" starttime="20140618 14:51:10.612"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.616" starttime="20140618 14:51:10.614"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:10.620" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000']</msg>
<msg timestamp="20140618 14:51:10.931" level="INFO">14:51:10,889 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
14:51:10,894 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
14:51:10,899 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14778
14:51:10,904 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000
14:51:10,908 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
14:51:10,913 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
14:51:10,918 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
14:51:10,923 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140618 14:51:10.932" starttime="20140618 14:51:10.619"></status>
</kw>
<msg timestamp="20140618 14:51:10.933" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:10.933" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:10.933" starttime="20140618 14:51:10.617"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:10.945" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:10.945" starttime="20140618 14:51:10.943"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:10.949" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:10.949" starttime="20140618 14:51:10.947"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:10.952" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:10.952" starttime="20140618 14:51:10.950"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:10.957" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:10.958" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:10.959" starttime="20140618 14:51:10.955"></status>
</kw>
<msg timestamp="20140618 14:51:10.960" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:10.960" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,889 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:10.959" starttime="20140618 14:51:10.953"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.969" starttime="20140618 14:51:10.967"></status>
</kw>
<msg timestamp="20140618 14:51:10.970" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,889 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:10.970" starttime="20140618 14:51:10.961"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.980" starttime="20140618 14:51:10.978"></status>
</kw>
<msg timestamp="20140618 14:51:10.981" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,889 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:10.980" starttime="20140618 14:51:10.971"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:10.991" starttime="20140618 14:51:10.989"></status>
</kw>
<msg timestamp="20140618 14:51:10.992" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:10.992" starttime="20140618 14:51:10.982"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.006" starttime="20140618 14:51:11.004"></status>
</kw>
<msg timestamp="20140618 14:51:11.008" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:11.007" starttime="20140618 14:51:10.993"></status>
</kw>
<msg timestamp="20140618 14:51:11.010" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:11.009" starttime="20140618 14:51:10.935"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:11.022" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140618 14:51:11.021" starttime="20140618 14:51:11.019"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.024" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:11.024" starttime="20140618 14:51:11.022"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.027" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:11.027" starttime="20140618 14:51:11.025"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.032" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:11.033" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:11.034" starttime="20140618 14:51:11.030"></status>
</kw>
<msg timestamp="20140618 14:51:11.035" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:11.035" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,894 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:51:11.034" starttime="20140618 14:51:11.028"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.044" starttime="20140618 14:51:11.042"></status>
</kw>
<msg timestamp="20140618 14:51:11.045" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,894 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:51:11.045" starttime="20140618 14:51:11.036"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.055" starttime="20140618 14:51:11.053"></status>
</kw>
<msg timestamp="20140618 14:51:11.056" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,894 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:51:11.055" starttime="20140618 14:51:11.046"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.065" starttime="20140618 14:51:11.063"></status>
</kw>
<msg timestamp="20140618 14:51:11.066" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:51:11.066" starttime="20140618 14:51:11.057"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.080" starttime="20140618 14:51:11.078"></status>
</kw>
<msg timestamp="20140618 14:51:11.081" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:51:11.081" starttime="20140618 14:51:11.067"></status>
</kw>
<msg timestamp="20140618 14:51:11.082" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140618 14:51:11.082" starttime="20140618 14:51:11.012"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:11.094" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140618 14:51:11.093" starttime="20140618 14:51:11.091"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.097" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:11.096" starttime="20140618 14:51:11.095"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.100" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:11.099" starttime="20140618 14:51:11.098"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.105" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:11.106" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:11.106" starttime="20140618 14:51:11.102"></status>
</kw>
<msg timestamp="20140618 14:51:11.107" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:11.108" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,904 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140618 14:51:11.107" starttime="20140618 14:51:11.101"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.117" starttime="20140618 14:51:11.115"></status>
</kw>
<msg timestamp="20140618 14:51:11.118" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,904 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140618 14:51:11.117" starttime="20140618 14:51:11.109"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.127" starttime="20140618 14:51:11.125"></status>
</kw>
<msg timestamp="20140618 14:51:11.128" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,904 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140618 14:51:11.127" starttime="20140618 14:51:11.119"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.138" starttime="20140618 14:51:11.136"></status>
</kw>
<msg timestamp="20140618 14:51:11.139" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:51:11.139" starttime="20140618 14:51:11.129"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.153" starttime="20140618 14:51:11.151"></status>
</kw>
<msg timestamp="20140618 14:51:11.154" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:51:11.153" starttime="20140618 14:51:11.140"></status>
</kw>
<msg timestamp="20140618 14:51:11.155" level="INFO">${msisdn} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:51:11.155" starttime="20140618 14:51:11.084"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:11.167" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140618 14:51:11.166" starttime="20140618 14:51:11.164"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.170" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:11.169" starttime="20140618 14:51:11.168"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.173" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:11.172" starttime="20140618 14:51:11.171"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.177" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:11.179" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:11.179" starttime="20140618 14:51:11.175"></status>
</kw>
<msg timestamp="20140618 14:51:11.180" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:11.180" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,899 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14778</msg>
<status status="PASS" endtime="20140618 14:51:11.180" starttime="20140618 14:51:11.174"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.189" starttime="20140618 14:51:11.187"></status>
</kw>
<msg timestamp="20140618 14:51:11.190" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,899 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14778</msg>
<status status="PASS" endtime="20140618 14:51:11.190" starttime="20140618 14:51:11.181"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.200" starttime="20140618 14:51:11.198"></status>
</kw>
<msg timestamp="20140618 14:51:11.201" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,899 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14778</msg>
<status status="PASS" endtime="20140618 14:51:11.200" starttime="20140618 14:51:11.191"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.211" starttime="20140618 14:51:11.208"></status>
</kw>
<msg timestamp="20140618 14:51:11.212" level="INFO">${resultCode} = 14778</msg>
<status status="PASS" endtime="20140618 14:51:11.211" starttime="20140618 14:51:11.202"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.226" starttime="20140618 14:51:11.224"></status>
</kw>
<msg timestamp="20140618 14:51:11.227" level="INFO">${resultCode} = 14778</msg>
<status status="PASS" endtime="20140618 14:51:11.226" starttime="20140618 14:51:11.212"></status>
</kw>
<msg timestamp="20140618 14:51:11.228" level="INFO">${id} = 14778</msg>
<status status="PASS" endtime="20140618 14:51:11.227" starttime="20140618 14:51:11.157"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:11.240" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140618 14:51:11.239" starttime="20140618 14:51:11.237"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.243" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:11.242" starttime="20140618 14:51:11.241"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.245" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:11.245" starttime="20140618 14:51:11.243"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.288" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:11.290" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:11.290" starttime="20140618 14:51:11.285"></status>
</kw>
<msg timestamp="20140618 14:51:11.291" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:11.292" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,908 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:11.291" starttime="20140618 14:51:11.281"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.302" starttime="20140618 14:51:11.300"></status>
</kw>
<msg timestamp="20140618 14:51:11.303" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,908 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:11.302" starttime="20140618 14:51:11.293"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.312" starttime="20140618 14:51:11.310"></status>
</kw>
<msg timestamp="20140618 14:51:11.313" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,908 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:11.312" starttime="20140618 14:51:11.304"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.323" starttime="20140618 14:51:11.320"></status>
</kw>
<msg timestamp="20140618 14:51:11.324" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:11.323" starttime="20140618 14:51:11.314"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.337" starttime="20140618 14:51:11.335"></status>
</kw>
<msg timestamp="20140618 14:51:11.338" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:11.338" starttime="20140618 14:51:11.324"></status>
</kw>
<msg timestamp="20140618 14:51:11.339" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:11.339" starttime="20140618 14:51:11.230"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:11.351" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140618 14:51:11.351" starttime="20140618 14:51:11.348"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.354" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:11.354" starttime="20140618 14:51:11.352"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.357" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:11.357" starttime="20140618 14:51:11.355"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.362" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:11.363" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:11.364" starttime="20140618 14:51:11.360"></status>
</kw>
<msg timestamp="20140618 14:51:11.365" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:11.365" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,913 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:51:11.364" starttime="20140618 14:51:11.358"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.374" starttime="20140618 14:51:11.372"></status>
</kw>
<msg timestamp="20140618 14:51:11.375" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,913 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:51:11.375" starttime="20140618 14:51:11.366"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.384" starttime="20140618 14:51:11.382"></status>
</kw>
<msg timestamp="20140618 14:51:11.385" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,913 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:51:11.385" starttime="20140618 14:51:11.376"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.395" starttime="20140618 14:51:11.393"></status>
</kw>
<msg timestamp="20140618 14:51:11.396" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:51:11.396" starttime="20140618 14:51:11.386"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.410" starttime="20140618 14:51:11.408"></status>
</kw>
<msg timestamp="20140618 14:51:11.411" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:51:11.410" starttime="20140618 14:51:11.397"></status>
</kw>
<msg timestamp="20140618 14:51:11.412" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140618 14:51:11.411" starttime="20140618 14:51:11.341"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:11.423" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140618 14:51:11.423" starttime="20140618 14:51:11.421"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.426" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:11.426" starttime="20140618 14:51:11.424"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.429" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:11.429" starttime="20140618 14:51:11.427"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.434" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:11.435" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:11.436" starttime="20140618 14:51:11.432"></status>
</kw>
<msg timestamp="20140618 14:51:11.437" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:11.437" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,918 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:11.436" starttime="20140618 14:51:11.430"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.447" starttime="20140618 14:51:11.445"></status>
</kw>
<msg timestamp="20140618 14:51:11.448" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,918 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:11.447" starttime="20140618 14:51:11.438"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.457" starttime="20140618 14:51:11.455"></status>
</kw>
<msg timestamp="20140618 14:51:11.458" level="INFO">${return_log_entry} = 2014-06-18 14:51:10,918 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:11.458" starttime="20140618 14:51:11.449"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.468" starttime="20140618 14:51:11.466"></status>
</kw>
<msg timestamp="20140618 14:51:11.469" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:11.469" starttime="20140618 14:51:11.459"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.484" starttime="20140618 14:51:11.482"></status>
</kw>
<msg timestamp="20140618 14:51:11.485" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:11.484" starttime="20140618 14:51:11.470"></status>
</kw>
<msg timestamp="20140618 14:51:11.486" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:11.485" starttime="20140618 14:51:11.414"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.496" starttime="20140618 14:51:11.494"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.498" starttime="20140618 14:51:11.497"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.500" starttime="20140618 14:51:11.499"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:11.512" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:11.512" starttime="20140618 14:51:11.509"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:11.513" starttime="20140618 14:51:11.507"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:11.513" starttime="20140618 14:51:11.501"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:11.514" starttime="20140618 14:51:11.487"></status>
</kw>
<msg timestamp="20140618 14:51:11.517" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:51:11.518" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140618 14:51:11.518" level="INFO">${msisdnDummy} = 642041010000</msg>
<msg timestamp="20140618 14:51:11.518" level="INFO">${subscriberId} = 14778</msg>
<msg timestamp="20140618 14:51:11.519" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140618 14:51:11.519" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140618 14:51:11.519" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:11.516" starttime="20140618 14:51:10.561"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.526" starttime="20140618 14:51:11.520"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Set Main Balance" ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.528" starttime="20140618 14:51:11.526"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance">
<doc>Sets the passed subscriber's main account balance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve accountId of main account ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.539" starttime="20140618 14:51:11.538"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${accountId}, ${balanceDummy}, ${categoryDummy}, ${currencyIdDummy} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.563" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:11.564" starttime="20140618 14:51:11.561"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:11.565" starttime="20140618 14:51:11.559"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.569" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:11.570" starttime="20140618 14:51:11.567"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:11.571" starttime="20140618 14:51:11.565"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.576" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:11.576" starttime="20140618 14:51:11.573"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:11.577" starttime="20140618 14:51:11.572"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:11.577" starttime="20140618 14:51:11.553"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.581" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:11.581" starttime="20140618 14:51:11.578"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.584" starttime="20140618 14:51:11.582"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.588" starttime="20140618 14:51:11.585"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.592" starttime="20140618 14:51:11.589"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.594" starttime="20140618 14:51:11.592"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.596" starttime="20140618 14:51:11.594"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.599" starttime="20140618 14:51:11.597"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:11.604" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778']</msg>
<msg timestamp="20140618 14:51:11.900" level="INFO">14:51:11,870 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
14:51:11,875 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14779
14:51:11,881 INFO  [log] LowLevelOps.getMainAccount.output.balance=0
14:51:11,886 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
14:51:11,891 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:51:11.901" starttime="20140618 14:51:11.602"></status>
</kw>
<msg timestamp="20140618 14:51:11.904" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:11.905" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:11.902" starttime="20140618 14:51:11.600"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:11.917" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:11.916" starttime="20140618 14:51:11.914"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.920" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:11.919" starttime="20140618 14:51:11.918"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.922" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:11.922" starttime="20140618 14:51:11.920"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:11.927" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:11.933" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:11.933" starttime="20140618 14:51:11.925"></status>
</kw>
<msg timestamp="20140618 14:51:11.934" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:11.935" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,870 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:11.934" starttime="20140618 14:51:11.923"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.945" starttime="20140618 14:51:11.942"></status>
</kw>
<msg timestamp="20140618 14:51:11.946" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,870 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:11.945" starttime="20140618 14:51:11.936"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.955" starttime="20140618 14:51:11.953"></status>
</kw>
<msg timestamp="20140618 14:51:11.956" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,870 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:11.956" starttime="20140618 14:51:11.947"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.967" starttime="20140618 14:51:11.964"></status>
</kw>
<msg timestamp="20140618 14:51:11.968" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:11.967" starttime="20140618 14:51:11.957"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:11.981" starttime="20140618 14:51:11.980"></status>
</kw>
<msg timestamp="20140618 14:51:11.982" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:11.982" starttime="20140618 14:51:11.969"></status>
</kw>
<msg timestamp="20140618 14:51:11.984" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:11.983" starttime="20140618 14:51:11.907"></status>
</kw>
<kw type="kw" timeout="" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:11.998" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20140618 14:51:11.997" starttime="20140618 14:51:11.995"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.001" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:12.000" starttime="20140618 14:51:11.999"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.005" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:12.004" starttime="20140618 14:51:12.002"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.010" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:12.015" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:12.016" starttime="20140618 14:51:12.007"></status>
</kw>
<msg timestamp="20140618 14:51:12.017" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:12.017" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,875 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14779</msg>
<status status="PASS" endtime="20140618 14:51:12.016" starttime="20140618 14:51:12.006"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.026" starttime="20140618 14:51:12.024"></status>
</kw>
<msg timestamp="20140618 14:51:12.027" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,875 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14779</msg>
<status status="PASS" endtime="20140618 14:51:12.027" starttime="20140618 14:51:12.018"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.036" starttime="20140618 14:51:12.034"></status>
</kw>
<msg timestamp="20140618 14:51:12.037" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,875 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14779</msg>
<status status="PASS" endtime="20140618 14:51:12.037" starttime="20140618 14:51:12.028"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.047" starttime="20140618 14:51:12.045"></status>
</kw>
<msg timestamp="20140618 14:51:12.048" level="INFO">${resultCode} = 14779</msg>
<status status="PASS" endtime="20140618 14:51:12.048" starttime="20140618 14:51:12.038"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.062" starttime="20140618 14:51:12.060"></status>
</kw>
<msg timestamp="20140618 14:51:12.063" level="INFO">${resultCode} = 14779</msg>
<status status="PASS" endtime="20140618 14:51:12.062" starttime="20140618 14:51:12.049"></status>
</kw>
<msg timestamp="20140618 14:51:12.065" level="INFO">${accountId} = 14779</msg>
<status status="PASS" endtime="20140618 14:51:12.064" starttime="20140618 14:51:11.986"></status>
</kw>
<kw type="kw" timeout="" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:12.077" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20140618 14:51:12.076" starttime="20140618 14:51:12.074"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.119" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:12.118" starttime="20140618 14:51:12.078"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.125" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:12.124" starttime="20140618 14:51:12.121"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.130" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:12.135" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:12.136" starttime="20140618 14:51:12.127"></status>
</kw>
<msg timestamp="20140618 14:51:12.137" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:12.137" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,881 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140618 14:51:12.137" starttime="20140618 14:51:12.126"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.147" starttime="20140618 14:51:12.145"></status>
</kw>
<msg timestamp="20140618 14:51:12.148" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,881 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140618 14:51:12.148" starttime="20140618 14:51:12.138"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.158" starttime="20140618 14:51:12.156"></status>
</kw>
<msg timestamp="20140618 14:51:12.159" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,881 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140618 14:51:12.158" starttime="20140618 14:51:12.149"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.169" starttime="20140618 14:51:12.166"></status>
</kw>
<msg timestamp="20140618 14:51:12.170" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140618 14:51:12.169" starttime="20140618 14:51:12.160"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.184" starttime="20140618 14:51:12.182"></status>
</kw>
<msg timestamp="20140618 14:51:12.185" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140618 14:51:12.185" starttime="20140618 14:51:12.171"></status>
</kw>
<msg timestamp="20140618 14:51:12.186" level="INFO">${balance} = 0</msg>
<status status="PASS" endtime="20140618 14:51:12.186" starttime="20140618 14:51:12.066"></status>
</kw>
<kw type="kw" timeout="" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:12.198" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20140618 14:51:12.198" starttime="20140618 14:51:12.196"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.201" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:12.201" starttime="20140618 14:51:12.199"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.204" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:12.204" starttime="20140618 14:51:12.202"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.209" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:12.215" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:12.216" starttime="20140618 14:51:12.207"></status>
</kw>
<msg timestamp="20140618 14:51:12.217" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:12.217" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,886 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140618 14:51:12.216" starttime="20140618 14:51:12.205"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.226" starttime="20140618 14:51:12.224"></status>
</kw>
<msg timestamp="20140618 14:51:12.227" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,886 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140618 14:51:12.227" starttime="20140618 14:51:12.218"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.237" starttime="20140618 14:51:12.235"></status>
</kw>
<msg timestamp="20140618 14:51:12.238" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,886 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140618 14:51:12.237" starttime="20140618 14:51:12.228"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.248" starttime="20140618 14:51:12.245"></status>
</kw>
<msg timestamp="20140618 14:51:12.249" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140618 14:51:12.248" starttime="20140618 14:51:12.239"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.263" starttime="20140618 14:51:12.261"></status>
</kw>
<msg timestamp="20140618 14:51:12.264" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140618 14:51:12.263" starttime="20140618 14:51:12.250"></status>
</kw>
<msg timestamp="20140618 14:51:12.265" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20140618 14:51:12.265" starttime="20140618 14:51:12.188"></status>
</kw>
<kw type="kw" timeout="" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:12.277" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20140618 14:51:12.277" starttime="20140618 14:51:12.274"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.280" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:12.280" starttime="20140618 14:51:12.278"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.283" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:12.283" starttime="20140618 14:51:12.281"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.288" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:12.294" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:12.294" starttime="20140618 14:51:12.286"></status>
</kw>
<msg timestamp="20140618 14:51:12.295" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:12.295" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,891 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:51:12.295" starttime="20140618 14:51:12.284"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.305" starttime="20140618 14:51:12.303"></status>
</kw>
<msg timestamp="20140618 14:51:12.306" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,891 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:51:12.305" starttime="20140618 14:51:12.296"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.315" starttime="20140618 14:51:12.313"></status>
</kw>
<msg timestamp="20140618 14:51:12.316" level="INFO">${return_log_entry} = 2014-06-18 14:51:11,891 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:51:12.316" starttime="20140618 14:51:12.307"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.326" starttime="20140618 14:51:12.324"></status>
</kw>
<msg timestamp="20140618 14:51:12.327" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:51:12.327" starttime="20140618 14:51:12.317"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.341" starttime="20140618 14:51:12.339"></status>
</kw>
<msg timestamp="20140618 14:51:12.342" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:51:12.341" starttime="20140618 14:51:12.328"></status>
</kw>
<msg timestamp="20140618 14:51:12.343" level="INFO">${currencyId} = 1</msg>
<status status="PASS" endtime="20140618 14:51:12.342" starttime="20140618 14:51:12.267"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.352" starttime="20140618 14:51:12.351"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.354" starttime="20140618 14:51:12.353"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.356" starttime="20140618 14:51:12.355"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:12.372" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:12.373" starttime="20140618 14:51:12.365"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.373" starttime="20140618 14:51:12.363"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.374" starttime="20140618 14:51:12.357"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.374" starttime="20140618 14:51:12.344"></status>
</kw>
<msg timestamp="20140618 14:51:12.377" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:51:12.377" level="INFO">${accountId} = 14779</msg>
<msg timestamp="20140618 14:51:12.378" level="INFO">${balanceDummy} = 0</msg>
<msg timestamp="20140618 14:51:12.378" level="INFO">${categoryDummy} = MAIN</msg>
<msg timestamp="20140618 14:51:12.378" level="INFO">${currencyIdDummy} = 1</msg>
<status status="PASS" endtime="20140618 14:51:12.376" starttime="20140618 14:51:11.542"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying main account of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.384" starttime="20140618 14:51:12.379"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Set new balance ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.386" starttime="20140618 14:51:12.385"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:51:12.401" level="INFO">CRCE Set Balance( subscriberId=14778, accountId=14779, balance=10000000)</msg>
<status status="PASS" endtime="20140618 14:51:12.401" starttime="20140618 14:51:12.398"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.414" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:12.415" starttime="20140618 14:51:12.412"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.416" starttime="20140618 14:51:12.410"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.420" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:12.421" starttime="20140618 14:51:12.418"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.422" starttime="20140618 14:51:12.417"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.426" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:12.427" starttime="20140618 14:51:12.424"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.428" starttime="20140618 14:51:12.423"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.428" starttime="20140618 14:51:12.404"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.431" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:12.432" starttime="20140618 14:51:12.429"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.435" starttime="20140618 14:51:12.433"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.438" starttime="20140618 14:51:12.436"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.442" starttime="20140618 14:51:12.439"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.444" starttime="20140618 14:51:12.443"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.446" starttime="20140618 14:51:12.445"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.449" starttime="20140618 14:51:12.447"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.452" starttime="20140618 14:51:12.450"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.455" starttime="20140618 14:51:12.453"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:12.459" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000']</msg>
<msg timestamp="20140618 14:51:12.730" level="INFO">14:51:12,720 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:12.730" starttime="20140618 14:51:12.458"></status>
</kw>
<msg timestamp="20140618 14:51:12.731" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:12.732" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:12.731" starttime="20140618 14:51:12.456"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:12.743" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:12.743" starttime="20140618 14:51:12.741"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.747" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:12.746" starttime="20140618 14:51:12.745"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.750" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:12.749" starttime="20140618 14:51:12.748"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.755" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:12.756" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:12.756" starttime="20140618 14:51:12.752"></status>
</kw>
<msg timestamp="20140618 14:51:12.757" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:12.757" level="INFO">${return_log_entry} = 2014-06-18 14:51:12,720 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:12.757" starttime="20140618 14:51:12.751"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.767" starttime="20140618 14:51:12.765"></status>
</kw>
<msg timestamp="20140618 14:51:12.768" level="INFO">${return_log_entry} = 2014-06-18 14:51:12,720 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:12.767" starttime="20140618 14:51:12.758"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.777" starttime="20140618 14:51:12.776"></status>
</kw>
<msg timestamp="20140618 14:51:12.778" level="INFO">${return_log_entry} = 2014-06-18 14:51:12,720 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:12.778" starttime="20140618 14:51:12.769"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.788" starttime="20140618 14:51:12.786"></status>
</kw>
<msg timestamp="20140618 14:51:12.789" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:12.789" starttime="20140618 14:51:12.779"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.803" starttime="20140618 14:51:12.801"></status>
</kw>
<msg timestamp="20140618 14:51:12.804" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:12.804" starttime="20140618 14:51:12.790"></status>
</kw>
<msg timestamp="20140618 14:51:12.805" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:12.805" starttime="20140618 14:51:12.733"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.817" starttime="20140618 14:51:12.814"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.819" starttime="20140618 14:51:12.818"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.821" starttime="20140618 14:51:12.820"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:12.833" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:12.833" starttime="20140618 14:51:12.829"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.834" starttime="20140618 14:51:12.828"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.834" starttime="20140618 14:51:12.822"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.835" starttime="20140618 14:51:12.807"></status>
</kw>
<msg timestamp="20140618 14:51:12.836" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:12.835" starttime="20140618 14:51:12.389"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Setting balance of main accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.842" starttime="20140618 14:51:12.837"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.842" starttime="20140618 14:51:11.530"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.844" starttime="20140618 14:51:10.548"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance By Imsi">
<doc>Same as "CRCE Set Main Balance" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_DESTINATION_IMSI}</arg>
<arg>10000000</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId for the passed imsi ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.855" starttime="20140618 14:51:12.854"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.880" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:12.881" starttime="20140618 14:51:12.877"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.881" starttime="20140618 14:51:12.876"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.886" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:12.887" starttime="20140618 14:51:12.883"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.887" starttime="20140618 14:51:12.882"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.892" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:12.893" starttime="20140618 14:51:12.890"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.893" starttime="20140618 14:51:12.888"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:12.894" starttime="20140618 14:51:12.869"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:12.953" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:12.954" starttime="20140618 14:51:12.949"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.957" starttime="20140618 14:51:12.955"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.961" starttime="20140618 14:51:12.958"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.967" starttime="20140618 14:51:12.962"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.969" starttime="20140618 14:51:12.968"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.971" starttime="20140618 14:51:12.970"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:12.974" starttime="20140618 14:51:12.972"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:12.979" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001']</msg>
<msg timestamp="20140618 14:51:13.285" level="INFO">14:51:13,239 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
14:51:13,244 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
14:51:13,250 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14783
14:51:13,255 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001
14:51:13,260 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
14:51:13,266 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
14:51:13,271 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
14:51:13,276 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140618 14:51:13.286" starttime="20140618 14:51:12.978"></status>
</kw>
<msg timestamp="20140618 14:51:13.289" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:13.289" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:13.287" starttime="20140618 14:51:12.976"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:13.301" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:13.301" starttime="20140618 14:51:13.298"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.304" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:13.304" starttime="20140618 14:51:13.302"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.307" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:13.307" starttime="20140618 14:51:13.305"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.312" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:13.313" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:13.314" starttime="20140618 14:51:13.310"></status>
</kw>
<msg timestamp="20140618 14:51:13.314" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:13.315" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,239 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:13.314" starttime="20140618 14:51:13.308"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.325" starttime="20140618 14:51:13.323"></status>
</kw>
<msg timestamp="20140618 14:51:13.326" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,239 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:13.326" starttime="20140618 14:51:13.316"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.335" starttime="20140618 14:51:13.334"></status>
</kw>
<msg timestamp="20140618 14:51:13.336" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,239 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:13.336" starttime="20140618 14:51:13.327"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.347" starttime="20140618 14:51:13.344"></status>
</kw>
<msg timestamp="20140618 14:51:13.348" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:13.347" starttime="20140618 14:51:13.337"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.362" starttime="20140618 14:51:13.360"></status>
</kw>
<msg timestamp="20140618 14:51:13.363" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:13.362" starttime="20140618 14:51:13.349"></status>
</kw>
<msg timestamp="20140618 14:51:13.364" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:13.363" starttime="20140618 14:51:13.291"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:13.376" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140618 14:51:13.375" starttime="20140618 14:51:13.373"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.379" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:13.378" starttime="20140618 14:51:13.377"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.381" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:13.381" starttime="20140618 14:51:13.380"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.386" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:13.387" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:13.388" starttime="20140618 14:51:13.384"></status>
</kw>
<msg timestamp="20140618 14:51:13.389" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:13.389" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,244 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:51:13.389" starttime="20140618 14:51:13.382"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.399" starttime="20140618 14:51:13.397"></status>
</kw>
<msg timestamp="20140618 14:51:13.400" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,244 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:51:13.400" starttime="20140618 14:51:13.390"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.409" starttime="20140618 14:51:13.407"></status>
</kw>
<msg timestamp="20140618 14:51:13.410" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,244 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140618 14:51:13.410" starttime="20140618 14:51:13.401"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.420" starttime="20140618 14:51:13.418"></status>
</kw>
<msg timestamp="20140618 14:51:13.421" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:51:13.421" starttime="20140618 14:51:13.411"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.435" starttime="20140618 14:51:13.433"></status>
</kw>
<msg timestamp="20140618 14:51:13.436" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:51:13.435" starttime="20140618 14:51:13.422"></status>
</kw>
<msg timestamp="20140618 14:51:13.437" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140618 14:51:13.436" starttime="20140618 14:51:13.366"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:13.448" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140618 14:51:13.448" starttime="20140618 14:51:13.446"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.451" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:13.451" starttime="20140618 14:51:13.449"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.454" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:13.454" starttime="20140618 14:51:13.452"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.459" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:13.460" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:13.461" starttime="20140618 14:51:13.457"></status>
</kw>
<msg timestamp="20140618 14:51:13.462" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:13.462" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,255 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140618 14:51:13.461" starttime="20140618 14:51:13.455"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.471" starttime="20140618 14:51:13.469"></status>
</kw>
<msg timestamp="20140618 14:51:13.472" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,255 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140618 14:51:13.472" starttime="20140618 14:51:13.463"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.482" starttime="20140618 14:51:13.480"></status>
</kw>
<msg timestamp="20140618 14:51:13.483" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,255 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140618 14:51:13.482" starttime="20140618 14:51:13.473"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.492" starttime="20140618 14:51:13.490"></status>
</kw>
<msg timestamp="20140618 14:51:13.493" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:51:13.493" starttime="20140618 14:51:13.484"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.508" starttime="20140618 14:51:13.506"></status>
</kw>
<msg timestamp="20140618 14:51:13.508" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:51:13.508" starttime="20140618 14:51:13.494"></status>
</kw>
<msg timestamp="20140618 14:51:13.510" level="INFO">${msisdn} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:51:13.509" starttime="20140618 14:51:13.439"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:13.521" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140618 14:51:13.521" starttime="20140618 14:51:13.519"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.524" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:13.524" starttime="20140618 14:51:13.522"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.527" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:13.527" starttime="20140618 14:51:13.525"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.532" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:13.533" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:13.534" starttime="20140618 14:51:13.530"></status>
</kw>
<msg timestamp="20140618 14:51:13.535" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:13.535" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,250 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14783</msg>
<status status="PASS" endtime="20140618 14:51:13.534" starttime="20140618 14:51:13.528"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.544" starttime="20140618 14:51:13.542"></status>
</kw>
<msg timestamp="20140618 14:51:13.545" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,250 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14783</msg>
<status status="PASS" endtime="20140618 14:51:13.545" starttime="20140618 14:51:13.536"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.555" starttime="20140618 14:51:13.553"></status>
</kw>
<msg timestamp="20140618 14:51:13.556" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,250 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=14783</msg>
<status status="PASS" endtime="20140618 14:51:13.555" starttime="20140618 14:51:13.546"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.566" starttime="20140618 14:51:13.564"></status>
</kw>
<msg timestamp="20140618 14:51:13.567" level="INFO">${resultCode} = 14783</msg>
<status status="PASS" endtime="20140618 14:51:13.566" starttime="20140618 14:51:13.556"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.581" starttime="20140618 14:51:13.579"></status>
</kw>
<msg timestamp="20140618 14:51:13.582" level="INFO">${resultCode} = 14783</msg>
<status status="PASS" endtime="20140618 14:51:13.581" starttime="20140618 14:51:13.568"></status>
</kw>
<msg timestamp="20140618 14:51:13.583" level="INFO">${id} = 14783</msg>
<status status="PASS" endtime="20140618 14:51:13.582" starttime="20140618 14:51:13.511"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:13.594" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140618 14:51:13.594" starttime="20140618 14:51:13.592"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.597" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:13.597" starttime="20140618 14:51:13.595"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.600" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:13.599" starttime="20140618 14:51:13.598"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.604" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:13.606" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:13.606" starttime="20140618 14:51:13.602"></status>
</kw>
<msg timestamp="20140618 14:51:13.607" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:13.607" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,260 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:13.607" starttime="20140618 14:51:13.601"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.616" starttime="20140618 14:51:13.614"></status>
</kw>
<msg timestamp="20140618 14:51:13.617" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,260 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:13.616" starttime="20140618 14:51:13.608"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.626" starttime="20140618 14:51:13.624"></status>
</kw>
<msg timestamp="20140618 14:51:13.627" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,260 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:13.626" starttime="20140618 14:51:13.618"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.636" starttime="20140618 14:51:13.634"></status>
</kw>
<msg timestamp="20140618 14:51:13.637" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:13.637" starttime="20140618 14:51:13.628"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.650" starttime="20140618 14:51:13.649"></status>
</kw>
<msg timestamp="20140618 14:51:13.651" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:13.651" starttime="20140618 14:51:13.638"></status>
</kw>
<msg timestamp="20140618 14:51:13.653" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140618 14:51:13.652" starttime="20140618 14:51:13.585"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:13.664" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140618 14:51:13.664" starttime="20140618 14:51:13.662"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.667" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:13.667" starttime="20140618 14:51:13.665"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.670" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:13.669" starttime="20140618 14:51:13.668"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.674" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:13.676" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:13.676" starttime="20140618 14:51:13.672"></status>
</kw>
<msg timestamp="20140618 14:51:13.677" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:13.677" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,266 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:51:13.677" starttime="20140618 14:51:13.671"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.686" starttime="20140618 14:51:13.684"></status>
</kw>
<msg timestamp="20140618 14:51:13.687" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,266 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:51:13.686" starttime="20140618 14:51:13.678"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.696" starttime="20140618 14:51:13.694"></status>
</kw>
<msg timestamp="20140618 14:51:13.697" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,266 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140618 14:51:13.696" starttime="20140618 14:51:13.688"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.707" starttime="20140618 14:51:13.705"></status>
</kw>
<msg timestamp="20140618 14:51:13.708" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:51:13.707" starttime="20140618 14:51:13.698"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.722" starttime="20140618 14:51:13.720"></status>
</kw>
<msg timestamp="20140618 14:51:13.722" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140618 14:51:13.722" starttime="20140618 14:51:13.709"></status>
</kw>
<msg timestamp="20140618 14:51:13.724" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140618 14:51:13.723" starttime="20140618 14:51:13.654"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:13.736" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140618 14:51:13.735" starttime="20140618 14:51:13.733"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.738" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:13.738" starttime="20140618 14:51:13.736"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.741" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:13.741" starttime="20140618 14:51:13.739"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.746" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:13.747" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:13.747" starttime="20140618 14:51:13.744"></status>
</kw>
<msg timestamp="20140618 14:51:13.748" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:13.749" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,271 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:13.748" starttime="20140618 14:51:13.742"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.793" starttime="20140618 14:51:13.756"></status>
</kw>
<msg timestamp="20140618 14:51:13.795" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,271 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:13.794" starttime="20140618 14:51:13.750"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.806" starttime="20140618 14:51:13.804"></status>
</kw>
<msg timestamp="20140618 14:51:13.807" level="INFO">${return_log_entry} = 2014-06-18 14:51:13,271 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:13.807" starttime="20140618 14:51:13.796"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.817" starttime="20140618 14:51:13.814"></status>
</kw>
<msg timestamp="20140618 14:51:13.817" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:13.817" starttime="20140618 14:51:13.808"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.831" starttime="20140618 14:51:13.829"></status>
</kw>
<msg timestamp="20140618 14:51:13.832" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:13.832" starttime="20140618 14:51:13.818"></status>
</kw>
<msg timestamp="20140618 14:51:13.833" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:13.833" starttime="20140618 14:51:13.725"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.844" starttime="20140618 14:51:13.842"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.845" starttime="20140618 14:51:13.844"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.847" starttime="20140618 14:51:13.846"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:13.859" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:13.860" starttime="20140618 14:51:13.856"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:13.860" starttime="20140618 14:51:13.854"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:13.861" starttime="20140618 14:51:13.848"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:13.861" starttime="20140618 14:51:13.835"></status>
</kw>
<msg timestamp="20140618 14:51:13.864" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:51:13.865" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140618 14:51:13.865" level="INFO">${msisdnDummy} = 642041010001</msg>
<msg timestamp="20140618 14:51:13.865" level="INFO">${subscriberId} = 14783</msg>
<msg timestamp="20140618 14:51:13.866" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140618 14:51:13.866" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140618 14:51:13.866" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140618 14:51:13.863" starttime="20140618 14:51:12.859"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.872" starttime="20140618 14:51:13.867"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Set Main Balance" ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.874" starttime="20140618 14:51:13.873"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance">
<doc>Sets the passed subscriber's main account balance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve accountId of main account ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.887" starttime="20140618 14:51:13.886"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${accountId}, ${balanceDummy}, ${categoryDummy}, ${currencyIdDummy} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.910" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:13.911" starttime="20140618 14:51:13.908"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:13.911" starttime="20140618 14:51:13.906"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.916" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:13.917" starttime="20140618 14:51:13.914"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:13.917" starttime="20140618 14:51:13.912"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.922" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:13.923" starttime="20140618 14:51:13.920"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:13.924" starttime="20140618 14:51:13.918"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:13.924" starttime="20140618 14:51:13.900"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:13.927" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:13.928" starttime="20140618 14:51:13.925"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.931" starttime="20140618 14:51:13.929"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.934" starttime="20140618 14:51:13.932"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.938" starttime="20140618 14:51:13.935"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.940" starttime="20140618 14:51:13.938"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.942" starttime="20140618 14:51:13.940"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:13.945" starttime="20140618 14:51:13.943"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:13.949" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14783']</msg>
<msg timestamp="20140618 14:51:14.279" level="INFO">14:51:14,246 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
14:51:14,252 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14784
14:51:14,257 INFO  [log] LowLevelOps.getMainAccount.output.balance=0
14:51:14,263 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
14:51:14,269 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:51:14.280" starttime="20140618 14:51:13.948"></status>
</kw>
<msg timestamp="20140618 14:51:14.282" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:14.283" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:14.281" starttime="20140618 14:51:13.946"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:14.294" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:14.294" starttime="20140618 14:51:14.292"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.297" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:14.297" starttime="20140618 14:51:14.295"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.300" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:14.300" starttime="20140618 14:51:14.298"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.305" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:14.306" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:14.307" starttime="20140618 14:51:14.303"></status>
</kw>
<msg timestamp="20140618 14:51:14.307" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:14.308" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,246 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:14.307" starttime="20140618 14:51:14.301"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.317" starttime="20140618 14:51:14.315"></status>
</kw>
<msg timestamp="20140618 14:51:14.318" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,246 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:14.317" starttime="20140618 14:51:14.309"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.327" starttime="20140618 14:51:14.325"></status>
</kw>
<msg timestamp="20140618 14:51:14.328" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,246 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:14.327" starttime="20140618 14:51:14.319"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.338" starttime="20140618 14:51:14.335"></status>
</kw>
<msg timestamp="20140618 14:51:14.339" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:14.338" starttime="20140618 14:51:14.329"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.352" starttime="20140618 14:51:14.350"></status>
</kw>
<msg timestamp="20140618 14:51:14.353" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:14.352" starttime="20140618 14:51:14.339"></status>
</kw>
<msg timestamp="20140618 14:51:14.354" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:14.354" starttime="20140618 14:51:14.284"></status>
</kw>
<kw type="kw" timeout="" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:14.366" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20140618 14:51:14.365" starttime="20140618 14:51:14.363"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.368" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:14.368" starttime="20140618 14:51:14.366"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.371" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:14.371" starttime="20140618 14:51:14.369"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.376" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:14.377" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:14.378" starttime="20140618 14:51:14.374"></status>
</kw>
<msg timestamp="20140618 14:51:14.379" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:14.379" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,252 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14784</msg>
<status status="PASS" endtime="20140618 14:51:14.378" starttime="20140618 14:51:14.372"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.388" starttime="20140618 14:51:14.386"></status>
</kw>
<msg timestamp="20140618 14:51:14.389" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,252 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14784</msg>
<status status="PASS" endtime="20140618 14:51:14.388" starttime="20140618 14:51:14.380"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.397" starttime="20140618 14:51:14.396"></status>
</kw>
<msg timestamp="20140618 14:51:14.398" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,252 INFO  [log] LowLevelOps.getMainAccount.output.accountId=14784</msg>
<status status="PASS" endtime="20140618 14:51:14.398" starttime="20140618 14:51:14.389"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.408" starttime="20140618 14:51:14.406"></status>
</kw>
<msg timestamp="20140618 14:51:14.409" level="INFO">${resultCode} = 14784</msg>
<status status="PASS" endtime="20140618 14:51:14.408" starttime="20140618 14:51:14.399"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.422" starttime="20140618 14:51:14.420"></status>
</kw>
<msg timestamp="20140618 14:51:14.423" level="INFO">${resultCode} = 14784</msg>
<status status="PASS" endtime="20140618 14:51:14.422" starttime="20140618 14:51:14.410"></status>
</kw>
<msg timestamp="20140618 14:51:14.424" level="INFO">${accountId} = 14784</msg>
<status status="PASS" endtime="20140618 14:51:14.424" starttime="20140618 14:51:14.356"></status>
</kw>
<kw type="kw" timeout="" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:14.436" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20140618 14:51:14.435" starttime="20140618 14:51:14.433"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.438" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:14.438" starttime="20140618 14:51:14.436"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.441" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:14.441" starttime="20140618 14:51:14.439"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.446" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:14.447" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:14.447" starttime="20140618 14:51:14.444"></status>
</kw>
<msg timestamp="20140618 14:51:14.448" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:14.449" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,257 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140618 14:51:14.448" starttime="20140618 14:51:14.442"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.457" starttime="20140618 14:51:14.456"></status>
</kw>
<msg timestamp="20140618 14:51:14.458" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,257 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140618 14:51:14.458" starttime="20140618 14:51:14.449"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.467" starttime="20140618 14:51:14.466"></status>
</kw>
<msg timestamp="20140618 14:51:14.468" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,257 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140618 14:51:14.468" starttime="20140618 14:51:14.459"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.478" starttime="20140618 14:51:14.475"></status>
</kw>
<msg timestamp="20140618 14:51:14.479" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140618 14:51:14.478" starttime="20140618 14:51:14.469"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.492" starttime="20140618 14:51:14.490"></status>
</kw>
<msg timestamp="20140618 14:51:14.493" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140618 14:51:14.492" starttime="20140618 14:51:14.479"></status>
</kw>
<msg timestamp="20140618 14:51:14.494" level="INFO">${balance} = 0</msg>
<status status="PASS" endtime="20140618 14:51:14.493" starttime="20140618 14:51:14.426"></status>
</kw>
<kw type="kw" timeout="" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:14.505" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20140618 14:51:14.505" starttime="20140618 14:51:14.503"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.508" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:14.508" starttime="20140618 14:51:14.506"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.511" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:14.511" starttime="20140618 14:51:14.509"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.516" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:14.517" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:14.517" starttime="20140618 14:51:14.513"></status>
</kw>
<msg timestamp="20140618 14:51:14.518" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:14.518" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,263 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140618 14:51:14.518" starttime="20140618 14:51:14.512"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.527" starttime="20140618 14:51:14.525"></status>
</kw>
<msg timestamp="20140618 14:51:14.528" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,263 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140618 14:51:14.528" starttime="20140618 14:51:14.519"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.537" starttime="20140618 14:51:14.535"></status>
</kw>
<msg timestamp="20140618 14:51:14.538" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,263 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140618 14:51:14.537" starttime="20140618 14:51:14.529"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.547" starttime="20140618 14:51:14.545"></status>
</kw>
<msg timestamp="20140618 14:51:14.548" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140618 14:51:14.548" starttime="20140618 14:51:14.539"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.562" starttime="20140618 14:51:14.560"></status>
</kw>
<msg timestamp="20140618 14:51:14.562" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140618 14:51:14.562" starttime="20140618 14:51:14.549"></status>
</kw>
<msg timestamp="20140618 14:51:14.564" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20140618 14:51:14.563" starttime="20140618 14:51:14.496"></status>
</kw>
<kw type="kw" timeout="" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:14.575" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20140618 14:51:14.575" starttime="20140618 14:51:14.573"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.578" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:14.578" starttime="20140618 14:51:14.576"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.581" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:14.580" starttime="20140618 14:51:14.579"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.585" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:14.586" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:14.587" starttime="20140618 14:51:14.583"></status>
</kw>
<msg timestamp="20140618 14:51:14.588" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:14.588" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,269 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:51:14.587" starttime="20140618 14:51:14.582"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.597" starttime="20140618 14:51:14.595"></status>
</kw>
<msg timestamp="20140618 14:51:14.598" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,269 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:51:14.597" starttime="20140618 14:51:14.589"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.607" starttime="20140618 14:51:14.605"></status>
</kw>
<msg timestamp="20140618 14:51:14.607" level="INFO">${return_log_entry} = 2014-06-18 14:51:14,269 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140618 14:51:14.607" starttime="20140618 14:51:14.599"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.652" starttime="20140618 14:51:14.649"></status>
</kw>
<msg timestamp="20140618 14:51:14.653" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:51:14.653" starttime="20140618 14:51:14.608"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.666" starttime="20140618 14:51:14.665"></status>
</kw>
<msg timestamp="20140618 14:51:14.667" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140618 14:51:14.667" starttime="20140618 14:51:14.654"></status>
</kw>
<msg timestamp="20140618 14:51:14.668" level="INFO">${currencyId} = 1</msg>
<status status="PASS" endtime="20140618 14:51:14.668" starttime="20140618 14:51:14.565"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.679" starttime="20140618 14:51:14.678"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.681" starttime="20140618 14:51:14.680"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.683" starttime="20140618 14:51:14.681"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:14.694" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:14.695" starttime="20140618 14:51:14.691"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:14.695" starttime="20140618 14:51:14.690"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:14.696" starttime="20140618 14:51:14.683"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:14.696" starttime="20140618 14:51:14.670"></status>
</kw>
<msg timestamp="20140618 14:51:14.699" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:51:14.699" level="INFO">${accountId} = 14784</msg>
<msg timestamp="20140618 14:51:14.700" level="INFO">${balanceDummy} = 0</msg>
<msg timestamp="20140618 14:51:14.700" level="INFO">${categoryDummy} = MAIN</msg>
<msg timestamp="20140618 14:51:14.700" level="INFO">${currencyIdDummy} = 1</msg>
<status status="PASS" endtime="20140618 14:51:14.698" starttime="20140618 14:51:13.889"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying main account of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.706" starttime="20140618 14:51:14.701"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Set new balance ***</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.708" starttime="20140618 14:51:14.707"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140618 14:51:14.723" level="INFO">CRCE Set Balance( subscriberId=14783, accountId=14784, balance=10000000)</msg>
<status status="PASS" endtime="20140618 14:51:14.723" starttime="20140618 14:51:14.720"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.736" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:14.737" starttime="20140618 14:51:14.734"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:14.738" starttime="20140618 14:51:14.732"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.743" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:14.743" starttime="20140618 14:51:14.740"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:14.744" starttime="20140618 14:51:14.739"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.748" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:14.749" starttime="20140618 14:51:14.746"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:14.750" starttime="20140618 14:51:14.745"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:14.750" starttime="20140618 14:51:14.726"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:14.754" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:14.754" starttime="20140618 14:51:14.751"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.757" starttime="20140618 14:51:14.755"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.761" starttime="20140618 14:51:14.758"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.764" starttime="20140618 14:51:14.762"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.766" starttime="20140618 14:51:14.765"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.768" starttime="20140618 14:51:14.767"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.772" starttime="20140618 14:51:14.769"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.775" starttime="20140618 14:51:14.773"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:14.779" starttime="20140618 14:51:14.776"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:14.782" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=10000000']</msg>
<msg timestamp="20140618 14:51:15.058" level="INFO">14:51:15,048 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:15.059" starttime="20140618 14:51:14.781"></status>
</kw>
<msg timestamp="20140618 14:51:15.061" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:15.062" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:51:15.060" starttime="20140618 14:51:14.780"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:51:15.074" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:51:15.073" starttime="20140618 14:51:15.071"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:15.077" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:51:15.076" starttime="20140618 14:51:15.075"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:51:15.079" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:51:15.079" starttime="20140618 14:51:15.077"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:51:15.084" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:51:15.085" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:51:15.086" starttime="20140618 14:51:15.082"></status>
</kw>
<msg timestamp="20140618 14:51:15.087" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:51:15.087" level="INFO">${return_log_entry} = 2014-06-18 14:51:15,048 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:15.086" starttime="20140618 14:51:15.080"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:15.097" starttime="20140618 14:51:15.095"></status>
</kw>
<msg timestamp="20140618 14:51:15.098" level="INFO">${return_log_entry} = 2014-06-18 14:51:15,048 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:15.097" starttime="20140618 14:51:15.088"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:15.107" starttime="20140618 14:51:15.105"></status>
</kw>
<msg timestamp="20140618 14:51:15.108" level="INFO">${return_log_entry} = 2014-06-18 14:51:15,048 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:51:15.108" starttime="20140618 14:51:15.099"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:15.118" starttime="20140618 14:51:15.116"></status>
</kw>
<msg timestamp="20140618 14:51:15.119" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:15.118" starttime="20140618 14:51:15.109"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:15.133" starttime="20140618 14:51:15.131"></status>
</kw>
<msg timestamp="20140618 14:51:15.134" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:15.133" starttime="20140618 14:51:15.120"></status>
</kw>
<msg timestamp="20140618 14:51:15.135" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:15.134" starttime="20140618 14:51:15.063"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:15.145" starttime="20140618 14:51:15.144"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:15.147" starttime="20140618 14:51:15.146"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:15.149" starttime="20140618 14:51:15.148"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:51:15.161" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:51:15.162" starttime="20140618 14:51:15.158"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:15.162" starttime="20140618 14:51:15.156"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:15.162" starttime="20140618 14:51:15.149"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:15.163" starttime="20140618 14:51:15.136"></status>
</kw>
<msg timestamp="20140618 14:51:15.165" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:51:15.164" starttime="20140618 14:51:14.711"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Setting balance of main accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:15.171" starttime="20140618 14:51:15.165"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:15.171" starttime="20140618 14:51:13.877"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:15.172" starttime="20140618 14:51:12.846"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Expose corresponding suite global variables *******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:15.175" starttime="20140618 14:51:15.174"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<msg timestamp="20140618 14:51:15.177" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_IMSI} = 530052041010000</msg>
<status status="PASS" endtime="20140618 14:51:15.177" starttime="20140618 14:51:15.175"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN}</arg>
</arguments>
<msg timestamp="20140618 14:51:15.180" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN} = 642041010000</msg>
<status status="PASS" endtime="20140618 14:51:15.180" starttime="20140618 14:51:15.178"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_DESTINATION_IMSI}</arg>
</arguments>
<msg timestamp="20140618 14:51:15.182" level="INFO">${FAKE_DESTINATION_IMSI} = 530052041010001</msg>
<status status="PASS" endtime="20140618 14:51:15.183" starttime="20140618 14:51:15.181"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_DESTINATION_MSISDN}</arg>
</arguments>
<msg timestamp="20140618 14:51:15.185" level="INFO">${FAKE_DESTINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:51:15.185" starttime="20140618 14:51:15.184"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_ORIGINATION_MSISDN}</arg>
</arguments>
<msg timestamp="20140618 14:51:15.188" level="INFO">${FAKE_ORIGINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:51:15.188" starttime="20140618 14:51:15.186"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:15.188" starttime="20140618 14:50:59.081"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:15.189" starttime="20140618 14:50:59.073"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:15.190" starttime="20140618 14:50:13.931"></status>
</kw>
<test id="s1-t1" timeout="" name="Run Prepaid MTC Long Duration">
<kw type="setup" timeout="" name="InewSelenium2Library.Open Browser">
<doc></doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>firefox</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:19.545" starttime="20140618 14:51:15.205"></status>
</kw>
<kw type="kw" timeout="" name="Run Voice Call And Check Phone 1 Ticket">
<doc>Runs a call between the passed devices and checks if a CRM ticket was written for Phone 1</doc>
<arguments>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${ATTACHED_PHONE_1_MSISDN_FORMAT1}</arg>
</arguments>
<kw type="kw" timeout="" name="${phone1_imsi} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'=='true'</arg>
<arg>Set Variable</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:19.577" starttime="20140618 14:51:19.574"></status>
</kw>
<msg timestamp="20140618 14:51:19.579" level="INFO">${phone1_imsi} = 530052041010000</msg>
<status status="PASS" endtime="20140618 14:51:19.578" starttime="20140618 14:51:19.565"></status>
</kw>
<kw type="kw" timeout="" name="${marker_ticket_timestamp}, ${type_dummy} = crm_support-resource.CRM Get Latest Ticket">
<doc>queries the passed subscriber's latest CRM ticket</doc>
<arguments>
<arg>${phone1_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Login">
<doc>Logs into the CRM portal via login page</doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>${CRM_PORTAL_USER}</arg>
<arg>${CRM_PORTAL_PSWD}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Ensure beeing in Login page ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:19.600" starttime="20140618 14:51:19.599"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140618 14:51:19.696" level="INFO">${isLoginPage} = true</msg>
<status status="PASS" endtime="20140618 14:51:19.696" starttime="20140618 14:51:19.601"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>CRM Portal Logout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:19.706" starttime="20140618 14:51:19.698"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140618 14:51:19.724" level="INFO">${isLoginPage} = true</msg>
<status status="PASS" endtime="20140618 14:51:19.724" starttime="20140618 14:51:19.707"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>Go To</arg>
<arg>${crm_portal_login_url}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:19.732" starttime="20140618 14:51:19.726"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
<arg>timeout=10s</arg>
<arg>error=Login Page not displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:19.755" starttime="20140618 14:51:19.734"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** log in to CRM as Customer Care user ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:19.759" starttime="20140618 14:51:19.757"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogin</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:19.765" starttime="20140618 14:51:19.759"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=username</arg>
<arg>${crm_portal_user}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:19.877" starttime="20140618 14:51:19.766"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=password</arg>
<arg>${crm_portal_pswd}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:19.978" starttime="20140618 14:51:19.878"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:21.314" starttime="20140618 14:51:19.979"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogin</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:21.324" starttime="20140618 14:51:21.317"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:21.325" starttime="20140618 14:51:19.591"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** CRM: in dashboard enter IMSI and press Submit</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:21.329" starttime="20140618 14:51:21.327"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterInput</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:21.338" starttime="20140618 14:51:21.331"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=filter_imsi</arg>
<arg>${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:21.438" starttime="20140618 14:51:21.339"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** in History tab, get the interesting cells of the first data row</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:21.441" starttime="20140618 14:51:21.439"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterSubmit</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:21.448" starttime="20140618 14:51:21.443"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Submit']</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:22.945" starttime="20140618 14:51:21.449"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
<arg>timeout=10s</arg>
<arg>error=History Tab NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:23.058" starttime="20140618 14:51:22.949"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:23.258" starttime="20140618 14:51:23.061"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Select Frame">
<doc></doc>
<arguments>
<arg>contentiframe</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:23.320" starttime="20140618 14:51:23.260"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
<arg>timeout=10s</arg>
<arg>error=History Search button NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:23.726" starttime="20140618 14:51:23.322"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:23.833" starttime="20140618 14:51:23.728"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>timeout=10s</arg>
<arg>error=History Table not displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:24.748" starttime="20140618 14:51:23.835"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_NEWEST_ROW} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140618 14:51:24.755" level="INFO">${HISTORY_NEWEST_ROW} = 2</msg>
<status status="PASS" endtime="20140618 14:51:24.754" starttime="20140618 14:51:24.752"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_DATETIME_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20140618 14:51:24.758" level="INFO">${HISTORY_DATETIME_COL} = 1</msg>
<status status="PASS" endtime="20140618 14:51:24.757" starttime="20140618 14:51:24.756"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CALLINGCALLED_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140618 14:51:24.761" level="INFO">${HISTORY_CALLINGCALLED_COL} = 2</msg>
<status status="PASS" endtime="20140618 14:51:24.760" starttime="20140618 14:51:24.759"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_TYPE_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20140618 14:51:24.764" level="INFO">${HISTORY_TYPE_COL} = 5</msg>
<status status="PASS" endtime="20140618 14:51:24.763" starttime="20140618 14:51:24.762"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CANNEL_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>9</arg>
</arguments>
<msg timestamp="20140618 14:51:24.766" level="INFO">${HISTORY_CANNEL_COL} = 9</msg>
<status status="PASS" endtime="20140618 14:51:24.766" starttime="20140618 14:51:24.765"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${datetime} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_DATETIME_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_DATETIME_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:24.874" starttime="20140618 14:51:24.770"></status>
</kw>
<msg timestamp="20140618 14:51:24.876" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:51:24.876" level="INFO">${datetime} = 19/06/2014 - 02:48:28</msg>
<status status="PASS" endtime="20140618 14:51:24.875" starttime="20140618 14:51:24.768"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${callingcalled} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CALLINGCALLED_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CALLINGCALLED_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:24.984" starttime="20140618 14:51:24.882"></status>
</kw>
<msg timestamp="20140618 14:51:24.985" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:51:24.986" level="INFO">${callingcalled} = </msg>
<status status="PASS" endtime="20140618 14:51:24.985" starttime="20140618 14:51:24.879"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${type} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_TYPE_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_TYPE_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.116" starttime="20140618 14:51:24.989"></status>
</kw>
<msg timestamp="20140618 14:51:25.120" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:51:25.121" level="INFO">${type} = tariffPlanTopup</msg>
<status status="PASS" endtime="20140618 14:51:25.119" starttime="20140618 14:51:24.987"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${channel} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CANNEL_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CANNEL_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.229" starttime="20140618 14:51:25.125"></status>
</kw>
<msg timestamp="20140618 14:51:25.230" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:51:25.230" level="INFO">${channel} = AUTOMATIC</msg>
<status status="PASS" endtime="20140618 14:51:25.229" starttime="20140618 14:51:25.123"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Unselect Frame">
<doc></doc>
<arguments>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.247" starttime="20140618 14:51:25.232"></status>
</kw>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Logout">
<doc>Clicks the logout button of the current page if it is available</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.264" starttime="20140618 14:51:25.258"></status>
</kw>
<kw type="kw" timeout="" name="${pageContainsLogout} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<msg timestamp="20140618 14:51:25.279" level="INFO">${pageContainsLogout} = true</msg>
<status status="PASS" endtime="20140618 14:51:25.278" starttime="20140618 14:51:25.265"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pageContainsLogout}'=='true'</arg>
<arg>Click Element</arg>
<arg>id=logout</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.820" starttime="20140618 14:51:25.288"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:25.821" starttime="20140618 14:51:25.280"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.830" starttime="20140618 14:51:25.824"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:25.830" starttime="20140618 14:51:25.249"></status>
</kw>
<msg timestamp="20140618 14:51:25.833" level="INFO">${marker_ticket_timestamp} = 19/06/2014 - 02:48:28</msg>
<msg timestamp="20140618 14:51:25.833" level="INFO">${type_dummy} = [u'', u'tariffPlanTopup', u'AUTOMATIC']</msg>
<status status="PASS" endtime="20140618 14:51:25.832" starttime="20140618 14:51:19.583"></status>
</kw>
<kw type="kw" timeout="" name="Run Voice Call">
<doc>executes a one slice voice call between 2 Phones</doc>
<arguments>
<arg>${cg_device_imsi}</arg>
<arg>${cd_device_imsi}</arg>
<arg>${dial_msisdn}</arg>
</arguments>
<kw type="kw" timeout="" name="${call_duration_millis} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>3*1000*${MOC_SLICE_SIZE_SECS}</arg>
</arguments>
<msg timestamp="20140618 14:51:25.850" level="INFO">${call_duration_millis} = 180000</msg>
<status status="PASS" endtime="20140618 14:51:25.849" starttime="20140618 14:51:25.843"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Voice Call">
<doc>executes a voice call between 2 Android Phones attached to an Android Remoting Server.</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${cg_device_imsi}</arg>
<arg>${cd_device_imsi}</arg>
<arg>${dial_msisdn}</arg>
<arg>${call_duration_millis}</arg>
<arg>released_by_cg=true</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:25.882" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:25.883" starttime="20140618 14:51:25.879"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:25.884" starttime="20140618 14:51:25.877"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:25.905" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:25.906" starttime="20140618 14:51:25.886"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:25.907" starttime="20140618 14:51:25.885"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:51:25.912" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:51:25.913" starttime="20140618 14:51:25.909"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:25.913" starttime="20140618 14:51:25.907"></status>
</kw>
<status status="PASS" endtime="20140618 14:51:25.914" starttime="20140618 14:51:25.870"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:51:25.919" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:51:25.919" starttime="20140618 14:51:25.915"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.923" starttime="20140618 14:51:25.920"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.926" starttime="20140618 14:51:25.924"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.928" starttime="20140618 14:51:25.927"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Call</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.930" starttime="20140618 14:51:25.929"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.cgDeviceImsi=${cg_device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.934" starttime="20140618 14:51:25.931"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.cdDeviceImsi=${cd_device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.937" starttime="20140618 14:51:25.935"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.dialMsisdn=${dial_msisdn}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.941" starttime="20140618 14:51:25.938"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.callDurationMillis=${call_duration_millis}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.944" starttime="20140618 14:51:25.942"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Call.input.releasedByCg=${released_by_cg}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:51:25.947" starttime="20140618 14:51:25.945"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:51:25.951" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Call.input.cgDeviceImsi=232033013972239', u'Testcases.Call.input.cdDeviceImsi=232033013972240', u'Testcases.Call.input.dialMsisdn=0676844901411', u'Testcases.Call.input.callDurationMillis=180000', u'Testcases.Call.input.releasedByCg=true']</msg>
<msg timestamp="20140618 14:54:35.329" level="INFO">14:54:35,291 INFO  [log] Testcases.Call.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:35.330" starttime="20140618 14:51:25.950"></status>
</kw>
<msg timestamp="20140618 14:54:35.333" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:35.333" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:54:35.332" starttime="20140618 14:51:25.949"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Call.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:35.347" level="INFO">${return_marker} = Testcases.Call.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:54:35.347" starttime="20140618 14:54:35.344"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:35.350" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:35.350" starttime="20140618 14:54:35.348"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:35.353" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:35.353" starttime="20140618 14:54:35.351"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:35.358" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:35.363" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:35.363" starttime="20140618 14:54:35.356"></status>
</kw>
<msg timestamp="20140618 14:54:35.364" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:35.365" level="INFO">${return_log_entry} = 2014-06-18 14:54:35,291 INFO  [log] Testcases.Call.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:35.364" starttime="20140618 14:54:35.354"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:35.375" starttime="20140618 14:54:35.373"></status>
</kw>
<msg timestamp="20140618 14:54:35.376" level="INFO">${return_log_entry} = 2014-06-18 14:54:35,291 INFO  [log] Testcases.Call.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:35.375" starttime="20140618 14:54:35.366"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:35.385" starttime="20140618 14:54:35.383"></status>
</kw>
<msg timestamp="20140618 14:54:35.386" level="INFO">${return_log_entry} = 2014-06-18 14:54:35,291 INFO  [log] Testcases.Call.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:35.386" starttime="20140618 14:54:35.377"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:35.396" starttime="20140618 14:54:35.394"></status>
</kw>
<msg timestamp="20140618 14:54:35.397" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:35.397" starttime="20140618 14:54:35.387"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:35.411" starttime="20140618 14:54:35.409"></status>
</kw>
<msg timestamp="20140618 14:54:35.412" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:35.411" starttime="20140618 14:54:35.398"></status>
</kw>
<msg timestamp="20140618 14:54:35.413" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:35.412" starttime="20140618 14:54:35.336"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Call</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:35.424" starttime="20140618 14:54:35.422"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:35.426" starttime="20140618 14:54:35.424"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:35.428" starttime="20140618 14:54:35.427"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:54:35.443" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Call*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Call*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:54:35.444" starttime="20140618 14:54:35.437"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:35.444" starttime="20140618 14:54:35.435"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:35.445" starttime="20140618 14:54:35.429"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:35.445" starttime="20140618 14:54:35.414"></status>
</kw>
<msg timestamp="20140618 14:54:35.447" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:35.446" starttime="20140618 14:51:25.854"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20140618 14:54:35.450" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:54:35.450" starttime="20140618 14:54:35.448"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'=='true'</arg>
<arg>Fake Voice Call Impact On Testbed</arg>
</arguments>
<kw type="kw" timeout="" name="Fake Voice Call Impact On Testbed">
<doc>Runs a CG MTC 1s session towards the faked phone 1</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${rc} = cg_support-resource.CG Run MTC 1s">
<doc>Runs a standard (i.e. non-roaming) MTC 1s session</doc>
<arguments>
<arg>${FAKE_ORIGINATION_MSISDN}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MTC REQ QUEUE}</arg>
<arg>${AMQ-SIG MTC RES QUEUE}</arg>
</arguments>
<kw type="kw" timeout="" name="${rc} = cg_support-resource.CG Run Standard MTC CGS">
<doc>Runs a standard (non-roaming) MTC session (meaning a session that needs only mscAddress and mtcAPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>mtc1s</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_imsi}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_mtc_req}</arg>
<arg>${queue_mtc_res}</arg>
</arguments>
<kw type="kw" timeout="" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20140618 14:54:35.497" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-subscribers.csv</msg>
<status status="PASS" endtime="20140618 14:54:35.496" starttime="20140618 14:54:35.494"></status>
</kw>
<kw type="kw" timeout="" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20140618 14:54:35.500" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-fleXml.csv</msg>
<status status="PASS" endtime="20140618 14:54:35.500" starttime="20140618 14:54:35.498"></status>
</kw>
<kw type="kw" timeout="" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20140618 14:54:35.504" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-workspace.ini</msg>
<status status="PASS" endtime="20140618 14:54:35.504" starttime="20140618 14:54:35.501"></status>
</kw>
<kw type="kw" timeout="" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20140618 14:54:35.508" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/mtc1s.cgs</msg>
<status status="PASS" endtime="20140618 14:54:35.508" starttime="20140618 14:54:35.505"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:35.510" starttime="20140618 14:54:35.509"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cd_imsi};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20140618 14:54:35.515" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:35.516" starttime="20140618 14:54:35.511"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:35.518" starttime="20140618 14:54:35.517"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mtcAPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20140618 14:54:35.522" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:35.523" starttime="20140618 14:54:35.519"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20140618 14:54:35.532" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:35.533" starttime="20140618 14:54:35.523"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:35.535" starttime="20140618 14:54:35.534"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20140618 14:54:35.540" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:35.540" starttime="20140618 14:54:35.536"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MTC;${queue_mtc_req};${queue_mtc_res};6;1;1</arg>
</arguments>
<msg timestamp="20140618 14:54:35.548" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:35.549" starttime="20140618 14:54:35.541"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:35.551" starttime="20140618 14:54:35.549"></status>
</kw>
<kw type="kw" timeout="" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20140618 14:54:35.585" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-5.2.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/mtc1s.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc1s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20140618 14:54:41.402" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20140618 14:54:41.401" starttime="20140618 14:54:35.552"></status>
</kw>
<msg timestamp="20140618 14:54:41.405" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20140618 14:54:41.403" starttime="20140618 14:54:35.481"></status>
</kw>
<msg timestamp="20140618 14:54:41.407" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20140618 14:54:41.405" starttime="20140618 14:54:35.466"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=Faking CG session failed</arg>
</arguments>
<msg timestamp="20140618 14:54:41.410" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:54:41.411" starttime="20140618 14:54:41.408"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:41.411" starttime="20140618 14:54:35.457"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:41.413" starttime="20140618 14:54:35.451"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:41.414" starttime="20140618 14:51:25.835"></status>
</kw>
<kw type="kw" timeout="" name="crm_support-resource.CRM New Ticket Should Exist">
<doc>checks whether a previous call of device_imsi resulted in a CRM history ticket</doc>
<arguments>
<arg>${phone1_imsi}</arg>
<arg>${marker_ticket_timestamp}</arg>
<arg>ticket_type=Voice</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Parameters: device_imsi=${device_imsi} marker_timestamp=${marker_timestamp} (ticket_type)=${ticket_type} (ticket_channel)=${ticket_channel} (calling_called_number)=${calling_called_number}</arg>
</arguments>
<msg timestamp="20140618 14:54:41.435" level="INFO">Parameters: device_imsi=530052041010000 marker_timestamp=19/06/2014 - 02:48:28 (ticket_type)=Voice (ticket_channel)= (calling_called_number)=</msg>
<status status="PASS" endtime="20140618 14:54:41.435" starttime="20140618 14:54:41.431"></status>
</kw>
<kw type="kw" timeout="" name="${current_datetime}, ${current_calling_called_number}, ${current_type}, ${current_channel} = crm_support-resource.CRM Get Latest Ticket">
<doc>queries the passed subscriber's latest CRM ticket</doc>
<arguments>
<arg>${device_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Login">
<doc>Logs into the CRM portal via login page</doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>${CRM_PORTAL_USER}</arg>
<arg>${CRM_PORTAL_PSWD}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Ensure beeing in Login page ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:41.459" starttime="20140618 14:54:41.458"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140618 14:54:41.489" level="INFO">${isLoginPage} = true</msg>
<status status="PASS" endtime="20140618 14:54:41.488" starttime="20140618 14:54:41.460"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>CRM Portal Logout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:41.495" starttime="20140618 14:54:41.490"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140618 14:54:41.515" level="INFO">${isLoginPage} = true</msg>
<status status="PASS" endtime="20140618 14:54:41.515" starttime="20140618 14:54:41.496"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>Go To</arg>
<arg>${crm_portal_login_url}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:41.522" starttime="20140618 14:54:41.517"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
<arg>timeout=10s</arg>
<arg>error=Login Page not displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:41.540" starttime="20140618 14:54:41.523"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** log in to CRM as Customer Care user ******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:41.543" starttime="20140618 14:54:41.542"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogin</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:41.549" starttime="20140618 14:54:41.544"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=username</arg>
<arg>${crm_portal_user}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:41.640" starttime="20140618 14:54:41.550"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=password</arg>
<arg>${crm_portal_pswd}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:41.731" starttime="20140618 14:54:41.641"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:43.103" starttime="20140618 14:54:41.732"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogin</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:43.112" starttime="20140618 14:54:43.106"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:43.113" starttime="20140618 14:54:41.448"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** CRM: in dashboard enter IMSI and press Submit</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:43.116" starttime="20140618 14:54:43.115"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterInput</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:43.122" starttime="20140618 14:54:43.117"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=filter_imsi</arg>
<arg>${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:43.214" starttime="20140618 14:54:43.123"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** in History tab, get the interesting cells of the first data row</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:43.217" starttime="20140618 14:54:43.215"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterSubmit</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:43.224" starttime="20140618 14:54:43.219"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Submit']</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:44.594" starttime="20140618 14:54:43.225"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
<arg>timeout=10s</arg>
<arg>error=History Tab NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:44.727" starttime="20140618 14:54:44.597"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:44.941" starttime="20140618 14:54:44.729"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Select Frame">
<doc></doc>
<arguments>
<arg>contentiframe</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:45.291" starttime="20140618 14:54:44.942"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
<arg>timeout=10s</arg>
<arg>error=History Search button NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:45.320" starttime="20140618 14:54:45.294"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:45.427" starttime="20140618 14:54:45.322"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>timeout=10s</arg>
<arg>error=History Table not displayed</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:45.923" starttime="20140618 14:54:45.429"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_NEWEST_ROW} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140618 14:54:45.928" level="INFO">${HISTORY_NEWEST_ROW} = 2</msg>
<status status="PASS" endtime="20140618 14:54:45.927" starttime="20140618 14:54:45.925"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_DATETIME_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20140618 14:54:45.931" level="INFO">${HISTORY_DATETIME_COL} = 1</msg>
<status status="PASS" endtime="20140618 14:54:45.931" starttime="20140618 14:54:45.929"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CALLINGCALLED_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140618 14:54:45.934" level="INFO">${HISTORY_CALLINGCALLED_COL} = 2</msg>
<status status="PASS" endtime="20140618 14:54:45.934" starttime="20140618 14:54:45.932"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_TYPE_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20140618 14:54:45.936" level="INFO">${HISTORY_TYPE_COL} = 5</msg>
<status status="PASS" endtime="20140618 14:54:45.936" starttime="20140618 14:54:45.935"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CANNEL_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>9</arg>
</arguments>
<msg timestamp="20140618 14:54:45.939" level="INFO">${HISTORY_CANNEL_COL} = 9</msg>
<status status="PASS" endtime="20140618 14:54:45.939" starttime="20140618 14:54:45.937"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${datetime} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_DATETIME_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_DATETIME_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:46.047" starttime="20140618 14:54:45.942"></status>
</kw>
<msg timestamp="20140618 14:54:46.050" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:54:46.050" level="INFO">${datetime} = 19/06/2014 - 02:54:37</msg>
<status status="PASS" endtime="20140618 14:54:46.049" starttime="20140618 14:54:45.940"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${callingcalled} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CALLINGCALLED_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CALLINGCALLED_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:46.178" starttime="20140618 14:54:46.053"></status>
</kw>
<msg timestamp="20140618 14:54:46.179" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:54:46.180" level="INFO">${callingcalled} = 642041010001</msg>
<status status="PASS" endtime="20140618 14:54:46.179" starttime="20140618 14:54:46.052"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${type} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_TYPE_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_TYPE_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:46.283" starttime="20140618 14:54:46.183"></status>
</kw>
<msg timestamp="20140618 14:54:46.285" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:54:46.285" level="INFO">${type} = Voice</msg>
<status status="PASS" endtime="20140618 14:54:46.284" starttime="20140618 14:54:46.181"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${channel} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CANNEL_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CANNEL_COL}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:46.394" starttime="20140618 14:54:46.290"></status>
</kw>
<msg timestamp="20140618 14:54:46.395" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140618 14:54:46.396" level="INFO">${channel} = MTC</msg>
<status status="PASS" endtime="20140618 14:54:46.395" starttime="20140618 14:54:46.287"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Unselect Frame">
<doc></doc>
<arguments>
</arguments>
<status status="PASS" endtime="20140618 14:54:46.411" starttime="20140618 14:54:46.397"></status>
</kw>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Logout">
<doc>Clicks the logout button of the current page if it is available</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:46.429" starttime="20140618 14:54:46.422"></status>
</kw>
<kw type="kw" timeout="" name="${pageContainsLogout} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<msg timestamp="20140618 14:54:46.448" level="INFO">${pageContainsLogout} = true</msg>
<status status="PASS" endtime="20140618 14:54:46.447" starttime="20140618 14:54:46.430"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pageContainsLogout}'=='true'</arg>
<arg>Click Element</arg>
<arg>id=logout</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:46.930" starttime="20140618 14:54:46.454"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:46.932" starttime="20140618 14:54:46.449"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:46.940" starttime="20140618 14:54:46.933"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:46.941" starttime="20140618 14:54:46.414"></status>
</kw>
<msg timestamp="20140618 14:54:46.944" level="INFO">${current_datetime} = 19/06/2014 - 02:54:37</msg>
<msg timestamp="20140618 14:54:46.945" level="INFO">${current_calling_called_number} = 642041010001</msg>
<msg timestamp="20140618 14:54:46.945" level="INFO">${current_type} = Voice</msg>
<msg timestamp="20140618 14:54:46.945" level="INFO">${current_channel} = MTC</msg>
<status status="PASS" endtime="20140618 14:54:46.943" starttime="20140618 14:54:41.439"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Not Be Equal As Strings">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${current_datetime}</arg>
<arg>${marker_timestamp}</arg>
<arg>msg=No ticket written for IMSI ${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:54:46.949" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:54:46.950" starttime="20140618 14:54:46.946"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'$ticket_type}'!='${EMPTY}'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${current_type}</arg>
<arg>${ticket_type}</arg>
<arg>msg=No ${ticket_type} ticket written for IMSI ${device_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${current_type}</arg>
<arg>${ticket_type}</arg>
<arg>msg=No ${ticket_type} ticket written for IMSI ${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:54:46.960" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:54:46.960" starttime="20140618 14:54:46.957"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:46.961" starttime="20140618 14:54:46.951"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ticket_channel}'!='${EMPTY}'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${current_channel}</arg>
<arg>${ticket_channel}</arg>
<arg>msg=No ${ticket_channel} channel ticket written for IMSI ${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:46.968" starttime="20140618 14:54:46.962"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${calling_called_number}'!='${EMPTY}'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${current_calling_called_number}</arg>
<arg>${calling_called_number}</arg>
<arg>msg=No ${calling_called_number} Calling/Called ticket written for IMSI ${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:46.974" starttime="20140618 14:54:46.969"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:46.975" starttime="20140618 14:54:41.421"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:46.976" starttime="20140618 14:51:19.552"></status>
</kw>
<kw type="teardown" timeout="" name="InewSelenium2Library.Close Browser">
<doc></doc>
<arguments>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.112" starttime="20140618 14:54:46.978"></status>
</kw>
<doc>Runs a one slice on-net Phone 2 Call to on-net Phone 1 by dialing Phone 1 MSISDN format 1
Plus ticket existance check for Phone 1 subscriber
=========================================================</doc>
<tags>
<tag>End2EndTest</tag>
<tag>experimental</tag>
<tag>TNZ_supported</tag>
<tag>walter.heincz</tag>
</tags>
<status status="PASS" critical="yes" endtime="20140618 14:54:47.114" starttime="20140618 14:51:15.192"></status>
</test>
<kw type="teardown" timeout="" name="suite-global-keyword-resource.Teardown Suite">
<doc>This is the suite teardown procedure that is called from "Suite Teardown" keyword</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Logout">
<doc>Clicks the logout button of the current page if it is available</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.137" starttime="20140618 14:54:47.131"></status>
</kw>
<kw type="kw" timeout="" name="${pageContainsLogout} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<msg timestamp="20140618 14:54:47.141" level="INFO">${pageContainsLogout} = false</msg>
<status status="PASS" endtime="20140618 14:54:47.141" starttime="20140618 14:54:47.138"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pageContainsLogout}'=='true'</arg>
<arg>Click Element</arg>
<arg>id=logout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.147" starttime="20140618 14:54:47.142"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogout</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.154" starttime="20140618 14:54:47.148"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:47.154" starttime="20140618 14:54:47.125"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Browser</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.156" starttime="20140618 14:54:47.155"></status>
</kw>
<kw type="kw" timeout="" name="suite-global-keyword-resource.Reset All Phones">
<doc>This helper for the TCs and Suite Setup script ensures that</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:54:47.175" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972240</msg>
<status status="PASS" endtime="20140618 14:54:47.176" starttime="20140618 14:54:47.173"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:47.189" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:47.190" starttime="20140618 14:54:47.187"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:47.190" starttime="20140618 14:54:47.185"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:47.196" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:47.196" starttime="20140618 14:54:47.193"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:47.197" starttime="20140618 14:54:47.191"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:47.202" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:47.203" starttime="20140618 14:54:47.199"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:47.203" starttime="20140618 14:54:47.198"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:47.204" starttime="20140618 14:54:47.179"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:54:47.207" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:54:47.208" starttime="20140618 14:54:47.204"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.211" starttime="20140618 14:54:47.208"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.214" starttime="20140618 14:54:47.212"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.216" starttime="20140618 14:54:47.215"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.218" starttime="20140618 14:54:47.217"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.222" starttime="20140618 14:54:47.219"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:54:47.226" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140618 14:54:47.568" level="INFO">14:54:47,559 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140618 14:54:47.582" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 13
Size: 528
Timestamp: Wed Jun 18 14:54:47 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972240&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:54:47.585" starttime="20140618 14:54:47.224"></status>
</kw>
<msg timestamp="20140618 14:54:47.586" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:54:47.587" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 13
Size: 528
Timestamp: Wed Jun 18 14:54:47 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:54:47.586" starttime="20140618 14:54:47.223"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:47.599" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:54:47.598" starttime="20140618 14:54:47.595"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:47.602" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:47.601" starttime="20140618 14:54:47.600"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:47.605" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:47.604" starttime="20140618 14:54:47.603"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:47.610" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:47.611" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:47.611" starttime="20140618 14:54:47.607"></status>
</kw>
<msg timestamp="20140618 14:54:47.612" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:47.613" level="INFO">${return_log_entry} = 2014-06-18 14:54:47,559 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:47.612" starttime="20140618 14:54:47.606"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.621" starttime="20140618 14:54:47.620"></status>
</kw>
<msg timestamp="20140618 14:54:47.622" level="INFO">${return_log_entry} = 2014-06-18 14:54:47,559 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:47.622" starttime="20140618 14:54:47.614"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.632" starttime="20140618 14:54:47.630"></status>
</kw>
<msg timestamp="20140618 14:54:47.633" level="INFO">${return_log_entry} = 2014-06-18 14:54:47,559 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:47.632" starttime="20140618 14:54:47.623"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.642" starttime="20140618 14:54:47.640"></status>
</kw>
<msg timestamp="20140618 14:54:47.643" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:47.643" starttime="20140618 14:54:47.634"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.657" starttime="20140618 14:54:47.655"></status>
</kw>
<msg timestamp="20140618 14:54:47.658" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:47.657" starttime="20140618 14:54:47.644"></status>
</kw>
<msg timestamp="20140618 14:54:47.659" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:47.659" starttime="20140618 14:54:47.589"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.669" starttime="20140618 14:54:47.667"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.671" starttime="20140618 14:54:47.669"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.673" starttime="20140618 14:54:47.671"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:54:47.685" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:47.686" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:47.687" starttime="20140618 14:54:47.682"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:47.687" starttime="20140618 14:54:47.680"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:47.688" starttime="20140618 14:54:47.674"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:47.688" starttime="20140618 14:54:47.660"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:47.689" starttime="20140618 14:54:47.165"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:54:47.702" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140618 14:54:47.702" starttime="20140618 14:54:47.699"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:47.715" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:47.716" starttime="20140618 14:54:47.713"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:47.717" starttime="20140618 14:54:47.711"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:47.722" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:47.723" starttime="20140618 14:54:47.719"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:47.723" starttime="20140618 14:54:47.718"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:47.728" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:47.729" starttime="20140618 14:54:47.726"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:47.729" starttime="20140618 14:54:47.724"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:47.730" starttime="20140618 14:54:47.705"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:54:47.734" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:54:47.734" starttime="20140618 14:54:47.731"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.737" starttime="20140618 14:54:47.735"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.740" starttime="20140618 14:54:47.738"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.742" starttime="20140618 14:54:47.741"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.744" starttime="20140618 14:54:47.743"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:47.748" starttime="20140618 14:54:47.745"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:54:47.752" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140618 14:54:48.118" level="INFO">14:54:48,108 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140618 14:54:48.133" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Wed Jun 18 14:54:47 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972239&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:54:48.135" starttime="20140618 14:54:47.750"></status>
</kw>
<msg timestamp="20140618 14:54:48.138" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:54:48.138" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Wed Jun 18 14:54:47 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:54:48.137" starttime="20140618 14:54:47.749"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:48.151" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:54:48.150" starttime="20140618 14:54:48.148"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.154" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:48.153" starttime="20140618 14:54:48.151"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.157" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:48.156" starttime="20140618 14:54:48.155"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.162" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:48.163" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:48.164" starttime="20140618 14:54:48.160"></status>
</kw>
<msg timestamp="20140618 14:54:48.164" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:48.165" level="INFO">${return_log_entry} = 2014-06-18 14:54:48,108 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:48.164" starttime="20140618 14:54:48.158"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.175" starttime="20140618 14:54:48.173"></status>
</kw>
<msg timestamp="20140618 14:54:48.176" level="INFO">${return_log_entry} = 2014-06-18 14:54:48,108 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:48.176" starttime="20140618 14:54:48.166"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.185" starttime="20140618 14:54:48.183"></status>
</kw>
<msg timestamp="20140618 14:54:48.186" level="INFO">${return_log_entry} = 2014-06-18 14:54:48,108 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:48.186" starttime="20140618 14:54:48.177"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.196" starttime="20140618 14:54:48.194"></status>
</kw>
<msg timestamp="20140618 14:54:48.197" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:48.197" starttime="20140618 14:54:48.187"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.211" starttime="20140618 14:54:48.209"></status>
</kw>
<msg timestamp="20140618 14:54:48.212" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:48.212" starttime="20140618 14:54:48.198"></status>
</kw>
<msg timestamp="20140618 14:54:48.213" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:48.213" starttime="20140618 14:54:48.140"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.223" starttime="20140618 14:54:48.221"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.225" starttime="20140618 14:54:48.224"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.227" starttime="20140618 14:54:48.226"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:54:48.239" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:48.240" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:48.241" starttime="20140618 14:54:48.236"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.241" starttime="20140618 14:54:48.234"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.242" starttime="20140618 14:54:48.228"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.242" starttime="20140618 14:54:48.214"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.243" starttime="20140618 14:54:47.691"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.257" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:54:48.258" starttime="20140618 14:54:48.255"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.271" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:48.272" starttime="20140618 14:54:48.269"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.272" starttime="20140618 14:54:48.267"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.278" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:48.278" starttime="20140618 14:54:48.275"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.279" starttime="20140618 14:54:48.273"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.284" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:48.285" starttime="20140618 14:54:48.282"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.285" starttime="20140618 14:54:48.280"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.286" starttime="20140618 14:54:48.260"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.289" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:54:48.290" starttime="20140618 14:54:48.287"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.293" starttime="20140618 14:54:48.291"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.296" starttime="20140618 14:54:48.294"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.298" starttime="20140618 14:54:48.297"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.300" starttime="20140618 14:54:48.299"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.304" starttime="20140618 14:54:48.301"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:54:48.308" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:54:48.622" level="INFO">14:54:48,613 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140618 14:54:48.635" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Wed Jun 18 14:54:48 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:54:48.638" starttime="20140618 14:54:48.306"></status>
</kw>
<msg timestamp="20140618 14:54:48.639" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:54:48.639" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Wed Jun 18 14:54:48 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:54:48.638" starttime="20140618 14:54:48.305"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:48.651" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:54:48.650" starttime="20140618 14:54:48.648"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.654" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:48.653" starttime="20140618 14:54:48.652"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.657" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:48.656" starttime="20140618 14:54:48.655"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.662" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:48.663" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:48.663" starttime="20140618 14:54:48.659"></status>
</kw>
<msg timestamp="20140618 14:54:48.664" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:48.665" level="INFO">${return_log_entry} = 2014-06-18 14:54:48,613 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:48.664" starttime="20140618 14:54:48.658"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.673" starttime="20140618 14:54:48.672"></status>
</kw>
<msg timestamp="20140618 14:54:48.674" level="INFO">${return_log_entry} = 2014-06-18 14:54:48,613 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:48.674" starttime="20140618 14:54:48.666"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.684" starttime="20140618 14:54:48.682"></status>
</kw>
<msg timestamp="20140618 14:54:48.685" level="INFO">${return_log_entry} = 2014-06-18 14:54:48,613 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:48.684" starttime="20140618 14:54:48.675"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.694" starttime="20140618 14:54:48.692"></status>
</kw>
<msg timestamp="20140618 14:54:48.695" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:48.695" starttime="20140618 14:54:48.686"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.709" starttime="20140618 14:54:48.707"></status>
</kw>
<msg timestamp="20140618 14:54:48.710" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:48.709" starttime="20140618 14:54:48.696"></status>
</kw>
<msg timestamp="20140618 14:54:48.711" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:48.710" starttime="20140618 14:54:48.641"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.720" starttime="20140618 14:54:48.719"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.723" starttime="20140618 14:54:48.721"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.725" starttime="20140618 14:54:48.723"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:54:48.737" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:48.738" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:48.739" starttime="20140618 14:54:48.733"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.739" starttime="20140618 14:54:48.732"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.740" starttime="20140618 14:54:48.725"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.740" starttime="20140618 14:54:48.712"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.741" starttime="20140618 14:54:48.247"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.754" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:54:48.754" starttime="20140618 14:54:48.751"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.767" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:48.768" starttime="20140618 14:54:48.765"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.769" starttime="20140618 14:54:48.763"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.774" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:48.775" starttime="20140618 14:54:48.772"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.775" starttime="20140618 14:54:48.770"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.781" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:48.781" starttime="20140618 14:54:48.778"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.782" starttime="20140618 14:54:48.776"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:48.782" starttime="20140618 14:54:48.757"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:54:48.786" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:54:48.786" starttime="20140618 14:54:48.783"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.790" starttime="20140618 14:54:48.787"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.793" starttime="20140618 14:54:48.791"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.795" starttime="20140618 14:54:48.794"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.798" starttime="20140618 14:54:48.796"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:48.801" starttime="20140618 14:54:48.799"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:54:48.805" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:54:49.146" level="INFO">14:54:49,136 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140618 14:54:49.161" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 10
Size: 528
Timestamp: Wed Jun 18 14:54:48 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140618 14:54:49.163" starttime="20140618 14:54:48.804"></status>
</kw>
<msg timestamp="20140618 14:54:49.166" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140618 14:54:49.166" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 10
Size: 528
Timestamp: Wed Jun 18 14:54:48 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140618 14:54:49.165" starttime="20140618 14:54:48.802"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:49.179" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:54:49.178" starttime="20140618 14:54:49.176"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.181" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:49.181" starttime="20140618 14:54:49.179"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.184" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:49.184" starttime="20140618 14:54:49.182"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.189" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:49.191" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:49.191" starttime="20140618 14:54:49.187"></status>
</kw>
<msg timestamp="20140618 14:54:49.192" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:49.192" level="INFO">${return_log_entry} = 2014-06-18 14:54:49,136 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:49.192" starttime="20140618 14:54:49.185"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.202" starttime="20140618 14:54:49.200"></status>
</kw>
<msg timestamp="20140618 14:54:49.203" level="INFO">${return_log_entry} = 2014-06-18 14:54:49,136 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:49.203" starttime="20140618 14:54:49.193"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.212" starttime="20140618 14:54:49.210"></status>
</kw>
<msg timestamp="20140618 14:54:49.213" level="INFO">${return_log_entry} = 2014-06-18 14:54:49,136 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:49.213" starttime="20140618 14:54:49.204"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.223" starttime="20140618 14:54:49.221"></status>
</kw>
<msg timestamp="20140618 14:54:49.224" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:49.224" starttime="20140618 14:54:49.214"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.237" starttime="20140618 14:54:49.235"></status>
</kw>
<msg timestamp="20140618 14:54:49.238" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:49.238" starttime="20140618 14:54:49.225"></status>
</kw>
<msg timestamp="20140618 14:54:49.239" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140618 14:54:49.239" starttime="20140618 14:54:49.168"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.249" starttime="20140618 14:54:49.248"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.251" starttime="20140618 14:54:49.250"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.253" starttime="20140618 14:54:49.252"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:54:49.265" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:49.267" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:49.268" starttime="20140618 14:54:49.262"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.269" starttime="20140618 14:54:49.260"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.269" starttime="20140618 14:54:49.254"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.269" starttime="20140618 14:54:49.241"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.270" starttime="20140618 14:54:48.743"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.284" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972240</msg>
<status status="PASS" endtime="20140618 14:54:49.285" starttime="20140618 14:54:49.282"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.298" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:49.299" starttime="20140618 14:54:49.296"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.299" starttime="20140618 14:54:49.294"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.304" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:49.305" starttime="20140618 14:54:49.302"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.306" starttime="20140618 14:54:49.300"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.311" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:49.312" starttime="20140618 14:54:49.308"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.312" starttime="20140618 14:54:49.307"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.313" starttime="20140618 14:54:49.287"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.316" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:54:49.316" starttime="20140618 14:54:49.313"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.320" starttime="20140618 14:54:49.317"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.323" starttime="20140618 14:54:49.321"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.325" starttime="20140618 14:54:49.324"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.327" starttime="20140618 14:54:49.326"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.331" starttime="20140618 14:54:49.328"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:54:49.335" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140618 14:54:49.679" level="INFO">14:54:49,637 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:54:49,642 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:49.679" starttime="20140618 14:54:49.333"></status>
</kw>
<msg timestamp="20140618 14:54:49.681" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:49.681" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:54:49.680" starttime="20140618 14:54:49.332"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:49.692" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:54:49.692" starttime="20140618 14:54:49.689"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.695" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:49.695" starttime="20140618 14:54:49.693"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.698" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:49.698" starttime="20140618 14:54:49.696"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.703" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:49.704" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:49.705" starttime="20140618 14:54:49.701"></status>
</kw>
<msg timestamp="20140618 14:54:49.706" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:49.706" level="INFO">${return_log_entry} = 2014-06-18 14:54:49,642 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:49.705" starttime="20140618 14:54:49.699"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.715" starttime="20140618 14:54:49.713"></status>
</kw>
<msg timestamp="20140618 14:54:49.716" level="INFO">${return_log_entry} = 2014-06-18 14:54:49,642 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:49.715" starttime="20140618 14:54:49.707"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.725" starttime="20140618 14:54:49.723"></status>
</kw>
<msg timestamp="20140618 14:54:49.726" level="INFO">${return_log_entry} = 2014-06-18 14:54:49,642 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:49.725" starttime="20140618 14:54:49.717"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.735" starttime="20140618 14:54:49.733"></status>
</kw>
<msg timestamp="20140618 14:54:49.736" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:49.736" starttime="20140618 14:54:49.727"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.750" starttime="20140618 14:54:49.748"></status>
</kw>
<msg timestamp="20140618 14:54:49.751" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:49.750" starttime="20140618 14:54:49.737"></status>
</kw>
<msg timestamp="20140618 14:54:49.752" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:49.751" starttime="20140618 14:54:49.683"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:49.763" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:54:49.763" starttime="20140618 14:54:49.761"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.766" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:49.766" starttime="20140618 14:54:49.764"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.769" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:49.769" starttime="20140618 14:54:49.767"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.774" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:49.775" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:49.776" starttime="20140618 14:54:49.772"></status>
</kw>
<msg timestamp="20140618 14:54:49.777" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:49.777" level="INFO">${return_log_entry} = 2014-06-18 14:54:49,637 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:54:49.776" starttime="20140618 14:54:49.770"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.786" starttime="20140618 14:54:49.784"></status>
</kw>
<msg timestamp="20140618 14:54:49.787" level="INFO">${return_log_entry} = 2014-06-18 14:54:49,637 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:54:49.787" starttime="20140618 14:54:49.778"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.796" starttime="20140618 14:54:49.794"></status>
</kw>
<msg timestamp="20140618 14:54:49.797" level="INFO">${return_log_entry} = 2014-06-18 14:54:49,637 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:54:49.797" starttime="20140618 14:54:49.788"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.807" starttime="20140618 14:54:49.804"></status>
</kw>
<msg timestamp="20140618 14:54:49.808" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:49.807" starttime="20140618 14:54:49.798"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.821" starttime="20140618 14:54:49.819"></status>
</kw>
<msg timestamp="20140618 14:54:49.822" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:49.822" starttime="20140618 14:54:49.809"></status>
</kw>
<msg timestamp="20140618 14:54:49.823" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:49.823" starttime="20140618 14:54:49.754"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.833" starttime="20140618 14:54:49.831"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.835" starttime="20140618 14:54:49.834"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.837" starttime="20140618 14:54:49.835"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:54:49.848" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:54:49.849" starttime="20140618 14:54:49.845"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.850" starttime="20140618 14:54:49.844"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.850" starttime="20140618 14:54:49.838"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.850" starttime="20140618 14:54:49.824"></status>
</kw>
<msg timestamp="20140618 14:54:49.852" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:54:49.852" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:49.851" starttime="20140618 14:54:49.274"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140618 14:54:49.855" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:54:49.855" starttime="20140618 14:54:49.853"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 1</arg>
</arguments>
<msg timestamp="20140618 14:54:49.858" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:54:49.859" starttime="20140618 14:54:49.856"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.872" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140618 14:54:49.872" starttime="20140618 14:54:49.869"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.885" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:49.886" starttime="20140618 14:54:49.883"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.887" starttime="20140618 14:54:49.881"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.892" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:49.892" starttime="20140618 14:54:49.889"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.893" starttime="20140618 14:54:49.887"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.898" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:49.898" starttime="20140618 14:54:49.895"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.899" starttime="20140618 14:54:49.894"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:49.899" starttime="20140618 14:54:49.875"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:54:49.903" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:54:49.903" starttime="20140618 14:54:49.900"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.906" starttime="20140618 14:54:49.904"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.909" starttime="20140618 14:54:49.907"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.911" starttime="20140618 14:54:49.910"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.913" starttime="20140618 14:54:49.912"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:49.917" starttime="20140618 14:54:49.914"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:54:49.921" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140618 14:54:50.301" level="INFO">14:54:50,259 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:54:50,264 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:50.302" starttime="20140618 14:54:49.919"></status>
</kw>
<msg timestamp="20140618 14:54:50.305" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:50.305" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:54:50.304" starttime="20140618 14:54:49.917"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:50.318" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:54:50.317" starttime="20140618 14:54:50.315"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.321" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:50.320" starttime="20140618 14:54:50.319"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.324" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:50.323" starttime="20140618 14:54:50.322"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.329" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:50.330" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:50.330" starttime="20140618 14:54:50.326"></status>
</kw>
<msg timestamp="20140618 14:54:50.331" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:50.331" level="INFO">${return_log_entry} = 2014-06-18 14:54:50,264 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:50.331" starttime="20140618 14:54:50.325"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.341" starttime="20140618 14:54:50.339"></status>
</kw>
<msg timestamp="20140618 14:54:50.342" level="INFO">${return_log_entry} = 2014-06-18 14:54:50,264 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:50.342" starttime="20140618 14:54:50.332"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.352" starttime="20140618 14:54:50.350"></status>
</kw>
<msg timestamp="20140618 14:54:50.353" level="INFO">${return_log_entry} = 2014-06-18 14:54:50,264 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:50.352" starttime="20140618 14:54:50.343"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.362" starttime="20140618 14:54:50.360"></status>
</kw>
<msg timestamp="20140618 14:54:50.363" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:50.363" starttime="20140618 14:54:50.354"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.377" starttime="20140618 14:54:50.375"></status>
</kw>
<msg timestamp="20140618 14:54:50.378" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:50.377" starttime="20140618 14:54:50.364"></status>
</kw>
<msg timestamp="20140618 14:54:50.379" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:50.379" starttime="20140618 14:54:50.308"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:50.390" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:54:50.390" starttime="20140618 14:54:50.388"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.393" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:50.393" starttime="20140618 14:54:50.391"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.396" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:50.396" starttime="20140618 14:54:50.394"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.401" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:50.402" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:50.402" starttime="20140618 14:54:50.399"></status>
</kw>
<msg timestamp="20140618 14:54:50.403" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:50.404" level="INFO">${return_log_entry} = 2014-06-18 14:54:50,259 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:54:50.403" starttime="20140618 14:54:50.397"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.412" starttime="20140618 14:54:50.410"></status>
</kw>
<msg timestamp="20140618 14:54:50.413" level="INFO">${return_log_entry} = 2014-06-18 14:54:50,259 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:54:50.413" starttime="20140618 14:54:50.405"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.422" starttime="20140618 14:54:50.420"></status>
</kw>
<msg timestamp="20140618 14:54:50.423" level="INFO">${return_log_entry} = 2014-06-18 14:54:50,259 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:54:50.423" starttime="20140618 14:54:50.414"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.432" starttime="20140618 14:54:50.430"></status>
</kw>
<msg timestamp="20140618 14:54:50.433" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:50.433" starttime="20140618 14:54:50.424"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.446" starttime="20140618 14:54:50.444"></status>
</kw>
<msg timestamp="20140618 14:54:50.447" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:50.447" starttime="20140618 14:54:50.434"></status>
</kw>
<msg timestamp="20140618 14:54:50.448" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:50.448" starttime="20140618 14:54:50.381"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.458" starttime="20140618 14:54:50.457"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.460" starttime="20140618 14:54:50.459"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.462" starttime="20140618 14:54:50.461"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:54:50.473" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:54:50.474" starttime="20140618 14:54:50.471"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:50.475" starttime="20140618 14:54:50.469"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:50.475" starttime="20140618 14:54:50.463"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:50.476" starttime="20140618 14:54:50.450"></status>
</kw>
<msg timestamp="20140618 14:54:50.478" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:54:50.478" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:50.477" starttime="20140618 14:54:49.862"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140618 14:54:50.481" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:54:50.481" starttime="20140618 14:54:50.479"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 2</arg>
</arguments>
<msg timestamp="20140618 14:54:50.484" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:54:50.485" starttime="20140618 14:54:50.482"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.498" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:54:50.498" starttime="20140618 14:54:50.495"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.511" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:50.512" starttime="20140618 14:54:50.509"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:50.513" starttime="20140618 14:54:50.507"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.517" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:50.518" starttime="20140618 14:54:50.515"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:50.519" starttime="20140618 14:54:50.513"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.524" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:50.524" starttime="20140618 14:54:50.521"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:50.525" starttime="20140618 14:54:50.520"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:50.525" starttime="20140618 14:54:50.501"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.529" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:54:50.531" starttime="20140618 14:54:50.526"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.534" starttime="20140618 14:54:50.531"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.537" starttime="20140618 14:54:50.535"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.539" starttime="20140618 14:54:50.538"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.541" starttime="20140618 14:54:50.540"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.544" starttime="20140618 14:54:50.542"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:54:50.548" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:54:50.889" level="INFO">14:54:50,849 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:54:50,854 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:50.889" starttime="20140618 14:54:50.547"></status>
</kw>
<msg timestamp="20140618 14:54:50.890" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:50.891" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:54:50.890" starttime="20140618 14:54:50.545"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:50.902" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:54:50.902" starttime="20140618 14:54:50.899"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.905" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:50.905" starttime="20140618 14:54:50.903"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.908" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:50.907" starttime="20140618 14:54:50.906"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.913" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:50.914" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:50.914" starttime="20140618 14:54:50.910"></status>
</kw>
<msg timestamp="20140618 14:54:50.915" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:50.916" level="INFO">${return_log_entry} = 2014-06-18 14:54:50,854 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:50.915" starttime="20140618 14:54:50.909"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.924" starttime="20140618 14:54:50.923"></status>
</kw>
<msg timestamp="20140618 14:54:50.925" level="INFO">${return_log_entry} = 2014-06-18 14:54:50,854 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:50.925" starttime="20140618 14:54:50.916"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.935" starttime="20140618 14:54:50.933"></status>
</kw>
<msg timestamp="20140618 14:54:50.936" level="INFO">${return_log_entry} = 2014-06-18 14:54:50,854 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:50.935" starttime="20140618 14:54:50.926"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.945" starttime="20140618 14:54:50.943"></status>
</kw>
<msg timestamp="20140618 14:54:50.946" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:50.946" starttime="20140618 14:54:50.937"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.960" starttime="20140618 14:54:50.958"></status>
</kw>
<msg timestamp="20140618 14:54:50.961" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:50.961" starttime="20140618 14:54:50.947"></status>
</kw>
<msg timestamp="20140618 14:54:50.962" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:50.962" starttime="20140618 14:54:50.892"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:50.975" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:54:50.974" starttime="20140618 14:54:50.972"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.978" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:50.978" starttime="20140618 14:54:50.976"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.981" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:50.981" starttime="20140618 14:54:50.979"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:50.986" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:50.987" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:50.988" starttime="20140618 14:54:50.984"></status>
</kw>
<msg timestamp="20140618 14:54:50.988" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:50.989" level="INFO">${return_log_entry} = 2014-06-18 14:54:50,849 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:54:50.988" starttime="20140618 14:54:50.982"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:50.997" starttime="20140618 14:54:50.996"></status>
</kw>
<msg timestamp="20140618 14:54:50.998" level="INFO">${return_log_entry} = 2014-06-18 14:54:50,849 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:54:50.998" starttime="20140618 14:54:50.990"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.008" starttime="20140618 14:54:51.006"></status>
</kw>
<msg timestamp="20140618 14:54:51.010" level="INFO">${return_log_entry} = 2014-06-18 14:54:50,849 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:54:51.009" starttime="20140618 14:54:50.999"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.019" starttime="20140618 14:54:51.017"></status>
</kw>
<msg timestamp="20140618 14:54:51.020" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:51.020" starttime="20140618 14:54:51.011"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.034" starttime="20140618 14:54:51.032"></status>
</kw>
<msg timestamp="20140618 14:54:51.035" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:51.035" starttime="20140618 14:54:51.021"></status>
</kw>
<msg timestamp="20140618 14:54:51.037" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:51.036" starttime="20140618 14:54:50.965"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.046" starttime="20140618 14:54:51.045"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.048" starttime="20140618 14:54:51.047"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.050" starttime="20140618 14:54:51.049"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:54:51.097" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:54:51.098" starttime="20140618 14:54:51.093"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:51.099" starttime="20140618 14:54:51.057"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:51.099" starttime="20140618 14:54:51.051"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:51.100" starttime="20140618 14:54:51.038"></status>
</kw>
<msg timestamp="20140618 14:54:51.102" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:54:51.102" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:51.101" starttime="20140618 14:54:50.488"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140618 14:54:51.105" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:54:51.105" starttime="20140618 14:54:51.103"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 12</arg>
</arguments>
<msg timestamp="20140618 14:54:51.108" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:54:51.109" starttime="20140618 14:54:51.106"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.122" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140618 14:54:51.122" starttime="20140618 14:54:51.119"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.135" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:51.136" starttime="20140618 14:54:51.133"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:51.136" starttime="20140618 14:54:51.131"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.141" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:51.142" starttime="20140618 14:54:51.139"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:51.143" starttime="20140618 14:54:51.137"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.147" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:51.148" starttime="20140618 14:54:51.145"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:51.149" starttime="20140618 14:54:51.143"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:51.149" starttime="20140618 14:54:51.125"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.153" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:54:51.153" starttime="20140618 14:54:51.150"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.156" starttime="20140618 14:54:51.154"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.159" starttime="20140618 14:54:51.157"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.162" starttime="20140618 14:54:51.160"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.164" starttime="20140618 14:54:51.162"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.167" starttime="20140618 14:54:51.164"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:54:51.171" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140618 14:54:51.515" level="INFO">14:54:51,472 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
14:54:51,478 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:51.515" starttime="20140618 14:54:51.169"></status>
</kw>
<msg timestamp="20140618 14:54:51.516" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:51.517" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:54:51.516" starttime="20140618 14:54:51.168"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:51.529" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:54:51.528" starttime="20140618 14:54:51.526"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.532" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:51.531" starttime="20140618 14:54:51.530"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.534" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:51.534" starttime="20140618 14:54:51.532"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.539" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:51.540" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:51.541" starttime="20140618 14:54:51.537"></status>
</kw>
<msg timestamp="20140618 14:54:51.542" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:51.542" level="INFO">${return_log_entry} = 2014-06-18 14:54:51,478 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:51.541" starttime="20140618 14:54:51.535"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.552" starttime="20140618 14:54:51.550"></status>
</kw>
<msg timestamp="20140618 14:54:51.553" level="INFO">${return_log_entry} = 2014-06-18 14:54:51,478 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:51.552" starttime="20140618 14:54:51.543"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.562" starttime="20140618 14:54:51.560"></status>
</kw>
<msg timestamp="20140618 14:54:51.563" level="INFO">${return_log_entry} = 2014-06-18 14:54:51,478 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:51.562" starttime="20140618 14:54:51.554"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.572" starttime="20140618 14:54:51.570"></status>
</kw>
<msg timestamp="20140618 14:54:51.573" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:51.573" starttime="20140618 14:54:51.564"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.586" starttime="20140618 14:54:51.584"></status>
</kw>
<msg timestamp="20140618 14:54:51.587" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:51.586" starttime="20140618 14:54:51.574"></status>
</kw>
<msg timestamp="20140618 14:54:51.588" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:51.588" starttime="20140618 14:54:51.519"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:51.599" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140618 14:54:51.599" starttime="20140618 14:54:51.597"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.602" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:51.602" starttime="20140618 14:54:51.600"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.605" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:51.605" starttime="20140618 14:54:51.603"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.611" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:51.612" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:51.612" starttime="20140618 14:54:51.608"></status>
</kw>
<msg timestamp="20140618 14:54:51.613" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:51.613" level="INFO">${return_log_entry} = 2014-06-18 14:54:51,472 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:54:51.613" starttime="20140618 14:54:51.606"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.622" starttime="20140618 14:54:51.620"></status>
</kw>
<msg timestamp="20140618 14:54:51.623" level="INFO">${return_log_entry} = 2014-06-18 14:54:51,472 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:54:51.623" starttime="20140618 14:54:51.614"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.632" starttime="20140618 14:54:51.630"></status>
</kw>
<msg timestamp="20140618 14:54:51.633" level="INFO">${return_log_entry} = 2014-06-18 14:54:51,472 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140618 14:54:51.632" starttime="20140618 14:54:51.624"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.642" starttime="20140618 14:54:51.640"></status>
</kw>
<msg timestamp="20140618 14:54:51.643" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:51.643" starttime="20140618 14:54:51.634"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.656" starttime="20140618 14:54:51.654"></status>
</kw>
<msg timestamp="20140618 14:54:51.657" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:51.657" starttime="20140618 14:54:51.644"></status>
</kw>
<msg timestamp="20140618 14:54:51.658" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:51.658" starttime="20140618 14:54:51.590"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.668" starttime="20140618 14:54:51.666"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.670" starttime="20140618 14:54:51.669"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.672" starttime="20140618 14:54:51.670"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:54:51.684" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:54:51.685" starttime="20140618 14:54:51.681"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:51.685" starttime="20140618 14:54:51.679"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:51.686" starttime="20140618 14:54:51.672"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:51.686" starttime="20140618 14:54:51.660"></status>
</kw>
<msg timestamp="20140618 14:54:51.688" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:54:51.688" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140618 14:54:51.687" starttime="20140618 14:54:51.111"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140618 14:54:51.691" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:54:51.691" starttime="20140618 14:54:51.689"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 13</arg>
</arguments>
<msg timestamp="20140618 14:54:51.694" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:54:51.694" starttime="20140618 14:54:51.692"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:54:51.707" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:54:51.706" starttime="20140618 14:54:51.705"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.730" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:51.731" starttime="20140618 14:54:51.728"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:51.732" starttime="20140618 14:54:51.726"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.737" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:51.737" starttime="20140618 14:54:51.734"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:51.738" starttime="20140618 14:54:51.733"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.743" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:51.744" starttime="20140618 14:54:51.740"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:51.744" starttime="20140618 14:54:51.739"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:51.744" starttime="20140618 14:54:51.720"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:54:51.748" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:54:51.748" starttime="20140618 14:54:51.745"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.752" starttime="20140618 14:54:51.749"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.755" starttime="20140618 14:54:51.753"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.757" starttime="20140618 14:54:51.756"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.759" starttime="20140618 14:54:51.758"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.763" starttime="20140618 14:54:51.760"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.766" starttime="20140618 14:54:51.764"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:51.770" starttime="20140618 14:54:51.767"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:54:51.774" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:54:58.717" level="INFO">14:54:58,701 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:54:58,710 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:58.718" starttime="20140618 14:54:51.772"></status>
</kw>
<msg timestamp="20140618 14:54:58.720" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:58.721" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:54:58.719" starttime="20140618 14:54:51.771"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:58.733" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:54:58.733" starttime="20140618 14:54:58.730"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:58.736" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:58.736" starttime="20140618 14:54:58.734"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:58.739" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:58.738" starttime="20140618 14:54:58.737"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:58.744" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:58.745" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:58.745" starttime="20140618 14:54:58.742"></status>
</kw>
<msg timestamp="20140618 14:54:58.746" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:58.747" level="INFO">${return_log_entry} = 2014-06-18 14:54:58,710 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:58.746" starttime="20140618 14:54:58.740"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:58.755" starttime="20140618 14:54:58.753"></status>
</kw>
<msg timestamp="20140618 14:54:58.756" level="INFO">${return_log_entry} = 2014-06-18 14:54:58,710 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:58.756" starttime="20140618 14:54:58.748"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:58.765" starttime="20140618 14:54:58.763"></status>
</kw>
<msg timestamp="20140618 14:54:58.766" level="INFO">${return_log_entry} = 2014-06-18 14:54:58,710 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:54:58.766" starttime="20140618 14:54:58.757"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:58.810" starttime="20140618 14:54:58.806"></status>
</kw>
<msg timestamp="20140618 14:54:58.811" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:58.810" starttime="20140618 14:54:58.767"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:58.824" starttime="20140618 14:54:58.822"></status>
</kw>
<msg timestamp="20140618 14:54:58.825" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:58.824" starttime="20140618 14:54:58.812"></status>
</kw>
<msg timestamp="20140618 14:54:58.826" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:58.825" starttime="20140618 14:54:58.723"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:54:58.838" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:54:58.837" starttime="20140618 14:54:58.835"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:58.841" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:54:58.840" starttime="20140618 14:54:58.839"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:54:58.843" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:54:58.843" starttime="20140618 14:54:58.841"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:54:58.848" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:54:58.850" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:54:58.850" starttime="20140618 14:54:58.846"></status>
</kw>
<msg timestamp="20140618 14:54:58.851" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:54:58.851" level="INFO">${return_log_entry} = 2014-06-18 14:54:58,701 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:54:58.851" starttime="20140618 14:54:58.845"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:58.860" starttime="20140618 14:54:58.858"></status>
</kw>
<msg timestamp="20140618 14:54:58.861" level="INFO">${return_log_entry} = 2014-06-18 14:54:58,701 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:54:58.861" starttime="20140618 14:54:58.852"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:58.871" starttime="20140618 14:54:58.868"></status>
</kw>
<msg timestamp="20140618 14:54:58.872" level="INFO">${return_log_entry} = 2014-06-18 14:54:58,701 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:54:58.872" starttime="20140618 14:54:58.862"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:58.887" starttime="20140618 14:54:58.883"></status>
</kw>
<msg timestamp="20140618 14:54:58.888" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:54:58.888" starttime="20140618 14:54:58.874"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:58.908" starttime="20140618 14:54:58.905"></status>
</kw>
<msg timestamp="20140618 14:54:58.910" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:54:58.910" starttime="20140618 14:54:58.890"></status>
</kw>
<msg timestamp="20140618 14:54:58.911" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:54:58.911" starttime="20140618 14:54:58.828"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:58.921" starttime="20140618 14:54:58.920"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:58.923" starttime="20140618 14:54:58.922"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:58.925" starttime="20140618 14:54:58.924"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:54:58.936" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:54:58.937" starttime="20140618 14:54:58.933"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:58.938" starttime="20140618 14:54:58.931"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:58.938" starttime="20140618 14:54:58.925"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:58.938" starttime="20140618 14:54:58.913"></status>
</kw>
<msg timestamp="20140618 14:54:58.941" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:54:58.941" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:54:58.939" starttime="20140618 14:54:51.709"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:58.950" starttime="20140618 14:54:58.949"></status>
</kw>
<msg timestamp="20140618 14:54:58.951" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:58.951" starttime="20140618 14:54:58.942"></status>
</kw>
<msg timestamp="20140618 14:54:58.953" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:54:58.952" starttime="20140618 14:54:51.696"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140618 14:54:58.956" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:54:58.956" starttime="20140618 14:54:58.954"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:54:58.968" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:54:58.968" starttime="20140618 14:54:58.966"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:58.991" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:58.992" starttime="20140618 14:54:58.988"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:58.992" starttime="20140618 14:54:58.987"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:58.997" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:58.998" starttime="20140618 14:54:58.994"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:58.998" starttime="20140618 14:54:58.993"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:54:59.003" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:54:59.004" starttime="20140618 14:54:59.001"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:59.004" starttime="20140618 14:54:58.999"></status>
</kw>
<status status="PASS" endtime="20140618 14:54:59.006" starttime="20140618 14:54:58.980"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:54:59.010" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:54:59.010" starttime="20140618 14:54:59.007"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:59.013" starttime="20140618 14:54:59.011"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:59.016" starttime="20140618 14:54:59.014"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:59.018" starttime="20140618 14:54:59.017"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:59.020" starttime="20140618 14:54:59.019"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:59.023" starttime="20140618 14:54:59.021"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:59.027" starttime="20140618 14:54:59.024"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:54:59.030" starttime="20140618 14:54:59.027"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:54:59.034" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:55:05.451" level="INFO">14:55:05,434 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:55:05,441 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:55:05.451" starttime="20140618 14:54:59.032"></status>
</kw>
<msg timestamp="20140618 14:55:05.454" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:55:05.454" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:55:05.453" starttime="20140618 14:54:59.031"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:55:05.465" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:55:05.465" starttime="20140618 14:55:05.462"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:55:05.468" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:55:05.467" starttime="20140618 14:55:05.466"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:55:05.471" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:55:05.470" starttime="20140618 14:55:05.469"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:55:05.475" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:55:05.476" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:55:05.477" starttime="20140618 14:55:05.473"></status>
</kw>
<msg timestamp="20140618 14:55:05.478" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:55:05.478" level="INFO">${return_log_entry} = 2014-06-18 14:55:05,441 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:55:05.477" starttime="20140618 14:55:05.472"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.487" starttime="20140618 14:55:05.485"></status>
</kw>
<msg timestamp="20140618 14:55:05.488" level="INFO">${return_log_entry} = 2014-06-18 14:55:05,441 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:55:05.487" starttime="20140618 14:55:05.479"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.496" starttime="20140618 14:55:05.495"></status>
</kw>
<msg timestamp="20140618 14:55:05.497" level="INFO">${return_log_entry} = 2014-06-18 14:55:05,441 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:55:05.497" starttime="20140618 14:55:05.488"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.507" starttime="20140618 14:55:05.504"></status>
</kw>
<msg timestamp="20140618 14:55:05.508" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:05.507" starttime="20140618 14:55:05.498"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.520" starttime="20140618 14:55:05.519"></status>
</kw>
<msg timestamp="20140618 14:55:05.521" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:05.521" starttime="20140618 14:55:05.508"></status>
</kw>
<msg timestamp="20140618 14:55:05.522" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:05.522" starttime="20140618 14:55:05.455"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:55:05.534" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:55:05.533" starttime="20140618 14:55:05.531"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:55:05.537" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:55:05.536" starttime="20140618 14:55:05.535"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:55:05.539" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:55:05.539" starttime="20140618 14:55:05.538"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:55:05.544" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:55:05.545" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:55:05.546" starttime="20140618 14:55:05.542"></status>
</kw>
<msg timestamp="20140618 14:55:05.547" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:55:05.547" level="INFO">${return_log_entry} = 2014-06-18 14:55:05,434 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:05.546" starttime="20140618 14:55:05.540"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.556" starttime="20140618 14:55:05.554"></status>
</kw>
<msg timestamp="20140618 14:55:05.557" level="INFO">${return_log_entry} = 2014-06-18 14:55:05,434 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:05.556" starttime="20140618 14:55:05.548"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.566" starttime="20140618 14:55:05.564"></status>
</kw>
<msg timestamp="20140618 14:55:05.566" level="INFO">${return_log_entry} = 2014-06-18 14:55:05,434 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:05.566" starttime="20140618 14:55:05.558"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.576" starttime="20140618 14:55:05.574"></status>
</kw>
<msg timestamp="20140618 14:55:05.577" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:05.576" starttime="20140618 14:55:05.567"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.590" starttime="20140618 14:55:05.588"></status>
</kw>
<msg timestamp="20140618 14:55:05.590" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:05.590" starttime="20140618 14:55:05.578"></status>
</kw>
<msg timestamp="20140618 14:55:05.592" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:05.591" starttime="20140618 14:55:05.524"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.601" starttime="20140618 14:55:05.600"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.603" starttime="20140618 14:55:05.602"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.605" starttime="20140618 14:55:05.604"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:55:05.616" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:55:05.617" starttime="20140618 14:55:05.614"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:05.618" starttime="20140618 14:55:05.612"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:05.618" starttime="20140618 14:55:05.606"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:05.619" starttime="20140618 14:55:05.593"></status>
</kw>
<msg timestamp="20140618 14:55:05.621" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:55:05.621" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:05.619" starttime="20140618 14:54:58.970"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.631" starttime="20140618 14:55:05.629"></status>
</kw>
<msg timestamp="20140618 14:55:05.631" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:05.631" starttime="20140618 14:55:05.622"></status>
</kw>
<msg timestamp="20140618 14:55:05.633" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:05.632" starttime="20140618 14:54:58.958"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140618 14:55:05.636" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:55:05.636" starttime="20140618 14:55:05.634"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:55:05.648" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:55:05.648" starttime="20140618 14:55:05.647"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:55:05.671" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:55:05.672" starttime="20140618 14:55:05.669"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:05.673" starttime="20140618 14:55:05.667"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:55:05.677" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:55:05.678" starttime="20140618 14:55:05.675"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:05.679" starttime="20140618 14:55:05.673"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:55:05.683" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:55:05.684" starttime="20140618 14:55:05.681"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:05.685" starttime="20140618 14:55:05.679"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:05.685" starttime="20140618 14:55:05.661"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:55:05.688" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:55:05.689" starttime="20140618 14:55:05.686"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.692" starttime="20140618 14:55:05.690"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.695" starttime="20140618 14:55:05.693"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.697" starttime="20140618 14:55:05.696"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.699" starttime="20140618 14:55:05.698"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.702" starttime="20140618 14:55:05.700"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.705" starttime="20140618 14:55:05.703"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:05.709" starttime="20140618 14:55:05.706"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:55:05.713" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:55:12.238" level="INFO">14:55:12,221 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:55:12,227 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:55:12.239" starttime="20140618 14:55:05.711"></status>
</kw>
<msg timestamp="20140618 14:55:12.241" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:55:12.242" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:55:12.240" starttime="20140618 14:55:05.710"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:55:12.254" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:55:12.253" starttime="20140618 14:55:12.251"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:55:12.257" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:55:12.256" starttime="20140618 14:55:12.255"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:55:12.259" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:55:12.259" starttime="20140618 14:55:12.257"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:55:12.264" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:55:12.265" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:55:12.266" starttime="20140618 14:55:12.262"></status>
</kw>
<msg timestamp="20140618 14:55:12.267" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:55:12.267" level="INFO">${return_log_entry} = 2014-06-18 14:55:12,227 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:55:12.266" starttime="20140618 14:55:12.260"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.276" starttime="20140618 14:55:12.275"></status>
</kw>
<msg timestamp="20140618 14:55:12.277" level="INFO">${return_log_entry} = 2014-06-18 14:55:12,227 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:55:12.277" starttime="20140618 14:55:12.268"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.286" starttime="20140618 14:55:12.284"></status>
</kw>
<msg timestamp="20140618 14:55:12.287" level="INFO">${return_log_entry} = 2014-06-18 14:55:12,227 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:55:12.287" starttime="20140618 14:55:12.278"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.296" starttime="20140618 14:55:12.294"></status>
</kw>
<msg timestamp="20140618 14:55:12.297" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:12.297" starttime="20140618 14:55:12.288"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.310" starttime="20140618 14:55:12.308"></status>
</kw>
<msg timestamp="20140618 14:55:12.311" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:12.311" starttime="20140618 14:55:12.298"></status>
</kw>
<msg timestamp="20140618 14:55:12.312" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:12.312" starttime="20140618 14:55:12.244"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:55:12.324" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:55:12.323" starttime="20140618 14:55:12.321"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:55:12.326" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:55:12.326" starttime="20140618 14:55:12.324"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:55:12.329" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:55:12.329" starttime="20140618 14:55:12.327"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:55:12.334" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:55:12.335" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:55:12.335" starttime="20140618 14:55:12.332"></status>
</kw>
<msg timestamp="20140618 14:55:12.336" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:55:12.337" level="INFO">${return_log_entry} = 2014-06-18 14:55:12,221 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:12.336" starttime="20140618 14:55:12.330"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.345" starttime="20140618 14:55:12.343"></status>
</kw>
<msg timestamp="20140618 14:55:12.346" level="INFO">${return_log_entry} = 2014-06-18 14:55:12,221 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:12.346" starttime="20140618 14:55:12.337"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.355" starttime="20140618 14:55:12.354"></status>
</kw>
<msg timestamp="20140618 14:55:12.356" level="INFO">${return_log_entry} = 2014-06-18 14:55:12,221 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:12.356" starttime="20140618 14:55:12.347"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.366" starttime="20140618 14:55:12.363"></status>
</kw>
<msg timestamp="20140618 14:55:12.367" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:12.366" starttime="20140618 14:55:12.357"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.380" starttime="20140618 14:55:12.378"></status>
</kw>
<msg timestamp="20140618 14:55:12.381" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:12.380" starttime="20140618 14:55:12.367"></status>
</kw>
<msg timestamp="20140618 14:55:12.382" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:12.382" starttime="20140618 14:55:12.314"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.391" starttime="20140618 14:55:12.390"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.393" starttime="20140618 14:55:12.392"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.395" starttime="20140618 14:55:12.394"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:55:12.407" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:55:12.407" starttime="20140618 14:55:12.404"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:12.408" starttime="20140618 14:55:12.402"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:12.408" starttime="20140618 14:55:12.396"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:12.409" starttime="20140618 14:55:12.383"></status>
</kw>
<msg timestamp="20140618 14:55:12.411" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:55:12.411" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:12.410" starttime="20140618 14:55:05.650"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.421" starttime="20140618 14:55:12.419"></status>
</kw>
<msg timestamp="20140618 14:55:12.421" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:12.421" starttime="20140618 14:55:12.412"></status>
</kw>
<msg timestamp="20140618 14:55:12.423" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:12.422" starttime="20140618 14:55:05.638"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140618 14:55:12.426" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:55:12.426" starttime="20140618 14:55:12.424"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140618 14:55:12.438" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140618 14:55:12.438" starttime="20140618 14:55:12.437"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140618 14:55:12.461" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:55:12.462" starttime="20140618 14:55:12.458"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:12.462" starttime="20140618 14:55:12.457"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140618 14:55:12.467" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:55:12.468" starttime="20140618 14:55:12.465"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:12.469" starttime="20140618 14:55:12.463"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140618 14:55:12.474" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140618 14:55:12.474" starttime="20140618 14:55:12.471"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:12.475" starttime="20140618 14:55:12.470"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:12.475" starttime="20140618 14:55:12.450"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140618 14:55:12.479" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140618 14:55:12.479" starttime="20140618 14:55:12.476"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.482" starttime="20140618 14:55:12.480"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.485" starttime="20140618 14:55:12.483"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.487" starttime="20140618 14:55:12.486"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.489" starttime="20140618 14:55:12.488"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.492" starttime="20140618 14:55:12.490"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.495" starttime="20140618 14:55:12.493"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:12.499" starttime="20140618 14:55:12.496"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140618 14:55:12.503" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14782', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14781', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14780', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14787', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14786', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14785', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14778', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14778', u'LowLevelOps.setBalance.input.accountId=14779', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=14783', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=14783', u'LowLevelOps.setBalance.input.accountId=14784', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140618 14:55:19.325" level="INFO">14:55:19,307 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
14:55:19,314 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:55:19.326" starttime="20140618 14:55:12.501"></status>
</kw>
<msg timestamp="20140618 14:55:19.328" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:55:19.328" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140618 14:55:19.327" starttime="20140618 14:55:12.499"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:55:19.340" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140618 14:55:19.340" starttime="20140618 14:55:19.338"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:55:19.343" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:55:19.343" starttime="20140618 14:55:19.341"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:55:19.346" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:55:19.345" starttime="20140618 14:55:19.344"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:55:19.350" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:55:19.351" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:55:19.352" starttime="20140618 14:55:19.348"></status>
</kw>
<msg timestamp="20140618 14:55:19.353" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:55:19.353" level="INFO">${return_log_entry} = 2014-06-18 14:55:19,314 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:55:19.352" starttime="20140618 14:55:19.347"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:19.362" starttime="20140618 14:55:19.361"></status>
</kw>
<msg timestamp="20140618 14:55:19.363" level="INFO">${return_log_entry} = 2014-06-18 14:55:19,314 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:55:19.363" starttime="20140618 14:55:19.354"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:19.372" starttime="20140618 14:55:19.370"></status>
</kw>
<msg timestamp="20140618 14:55:19.373" level="INFO">${return_log_entry} = 2014-06-18 14:55:19,314 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140618 14:55:19.373" starttime="20140618 14:55:19.364"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:19.382" starttime="20140618 14:55:19.380"></status>
</kw>
<msg timestamp="20140618 14:55:19.383" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:19.383" starttime="20140618 14:55:19.374"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:19.396" starttime="20140618 14:55:19.394"></status>
</kw>
<msg timestamp="20140618 14:55:19.397" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:19.397" starttime="20140618 14:55:19.384"></status>
</kw>
<msg timestamp="20140618 14:55:19.398" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:19.398" starttime="20140618 14:55:19.330"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140618 14:55:19.409" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140618 14:55:19.409" starttime="20140618 14:55:19.407"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:55:19.412" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140618 14:55:19.411" starttime="20140618 14:55:19.410"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140618 14:55:19.414" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140618 14:55:19.414" starttime="20140618 14:55:19.413"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140618 14:55:19.419" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140618 14:55:19.420" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140618 14:55:19.421" starttime="20140618 14:55:19.417"></status>
</kw>
<msg timestamp="20140618 14:55:19.422" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140618 14:55:19.422" level="INFO">${return_log_entry} = 2014-06-18 14:55:19,307 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:19.421" starttime="20140618 14:55:19.415"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:19.430" starttime="20140618 14:55:19.429"></status>
</kw>
<msg timestamp="20140618 14:55:19.431" level="INFO">${return_log_entry} = 2014-06-18 14:55:19,307 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:19.431" starttime="20140618 14:55:19.423"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:19.440" starttime="20140618 14:55:19.438"></status>
</kw>
<msg timestamp="20140618 14:55:19.441" level="INFO">${return_log_entry} = 2014-06-18 14:55:19,307 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:19.440" starttime="20140618 14:55:19.432"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:19.450" starttime="20140618 14:55:19.448"></status>
</kw>
<msg timestamp="20140618 14:55:19.451" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:19.450" starttime="20140618 14:55:19.442"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:19.464" starttime="20140618 14:55:19.462"></status>
</kw>
<msg timestamp="20140618 14:55:19.465" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:19.464" starttime="20140618 14:55:19.452"></status>
</kw>
<msg timestamp="20140618 14:55:19.466" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:19.465" starttime="20140618 14:55:19.399"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:19.475" starttime="20140618 14:55:19.474"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:19.477" starttime="20140618 14:55:19.476"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:19.479" starttime="20140618 14:55:19.478"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140618 14:55:19.490" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_003-PrepaidMTC-LongDuration/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140618 14:55:19.491" starttime="20140618 14:55:19.487"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:19.492" starttime="20140618 14:55:19.486"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:19.492" starttime="20140618 14:55:19.480"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:19.492" starttime="20140618 14:55:19.467"></status>
</kw>
<msg timestamp="20140618 14:55:19.494" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140618 14:55:19.495" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140618 14:55:19.493" starttime="20140618 14:55:12.440"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140618 14:55:19.504" starttime="20140618 14:55:19.502"></status>
</kw>
<msg timestamp="20140618 14:55:19.505" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:19.504" starttime="20140618 14:55:19.496"></status>
</kw>
<msg timestamp="20140618 14:55:19.507" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140618 14:55:19.506" starttime="20140618 14:55:12.428"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140618 14:55:19.509" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140618 14:55:19.510" starttime="20140618 14:55:19.508"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:19.510" starttime="20140618 14:54:47.157"></status>
</kw>
<status status="PASS" endtime="20140618 14:55:19.511" starttime="20140618 14:54:47.119"></status>
</kw>
<doc>This is an end-to-end testing implementation of the IN_PP_MTC_003 - Prepaid MTC - Long Duration TC
ATTENTION: This is an exact copy of IN_PP_MTC_001-PrepaidMTC-ShortDuration-robot-suite.txt except that the slice amount was raised from 1 to 3 (see call_duration_millis in "Run Voice Call")
Although it would be more efficient (from point of maintainability) to combine both TCs in one Robot suite file
this redundant duplication seemed acceptable to reach the goal of "Having each Excel TC in a separate file titeled with the TC name"
---------------------------------------------------------------
Run Prepaid MTC Long Duration

===============================================================================
Run with arguments:
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/MEX-resource.txt
============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20140618 14:55:19.512" starttime="20140618 14:50:07.341"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" info="" doc="" combined="" fail="0" links="">End2EndTest</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">experimental</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">TNZ_supported</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">walter.heincz</stat>
</tag>
<suite>
<stat pass="1" id="s1" fail="0" name="IN PP MTC 003-PrepaidMTC-LongDuration-robot-suite">IN PP MTC 003-PrepaidMTC-LongDuration-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
