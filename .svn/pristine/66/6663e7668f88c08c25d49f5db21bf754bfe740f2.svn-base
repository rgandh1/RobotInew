<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20150605 14:06:24.346">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/regression-robot-suite.txt" id="s1" name="Regression-Robot-Suite">
<kw type="setup" name="Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20150605 14:06:26.202" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20150605 14:06:26.205" level="INFO">${date} = Fri Jun  5 14:06:26 CEST 2015</msg>
<status status="PASS" endtime="20150605 14:06:26.204" starttime="20150605 14:06:26.188"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150605 14:06:26.210" level="INFO">Date and time: Fri Jun  5 14:06:26 CEST 2015</msg>
<status status="PASS" endtime="20150605 14:06:26.211" starttime="20150605 14:06:26.207"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<msg timestamp="20150605 14:06:26.222" level="INFO">${INITIAL_BALANCE} = 10000000</msg>
<status status="PASS" endtime="20150605 14:06:26.220" starttime="20150605 14:06:26.215"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>1</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20150605 14:06:26.282" level="INFO">msg=crce_host=10.105.180.125</msg>
<status status="PASS" endtime="20150605 14:06:26.284" starttime="20150605 14:06:26.277"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20150605 14:06:26.294" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20150605 14:06:26.296" starttime="20150605 14:06:26.289"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20150605 14:06:26.305" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20150605 14:06:26.307" starttime="20150605 14:06:26.299"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20150605 14:06:26.314" level="INFO">msg=amount=1</msg>
<status status="PASS" endtime="20150605 14:06:26.316" starttime="20150605 14:06:26.310"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20150605 14:06:26.322" level="INFO">msg=imsiRangeStart=730013000010000</msg>
<status status="PASS" endtime="20150605 14:06:26.324" starttime="20150605 14:06:26.318"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20150605 14:06:26.330" level="INFO">msg=msisdnRangeStart=56952910000</msg>
<status status="PASS" endtime="20150605 14:06:26.332" starttime="20150605 14:06:26.326"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20150605 14:06:26.338" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20150605 14:06:26.340" starttime="20150605 14:06:26.334"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20150605 14:06:26.346" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20150605 14:06:26.347" starttime="20150605 14:06:26.342"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20150605 14:06:26.354" level="INFO">msg=tariffId=101005</msg>
<status status="PASS" endtime="20150605 14:06:26.355" starttime="20150605 14:06:26.350"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20150605 14:06:26.361" level="INFO">msg=balance=10000000</msg>
<status status="PASS" endtime="20150605 14:06:26.363" starttime="20150605 14:06:26.358"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20150605 14:06:26.402" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150605 14:06:26.404" starttime="20150605 14:06:26.395"></status>
</kw>
<status status="PASS" endtime="20150605 14:06:26.406" starttime="20150605 14:06:26.391"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20150605 14:06:26.418" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150605 14:06:26.420" starttime="20150605 14:06:26.413"></status>
</kw>
<status status="PASS" endtime="20150605 14:06:26.422" starttime="20150605 14:06:26.408"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20150605 14:06:26.433" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150605 14:06:26.436" starttime="20150605 14:06:26.429"></status>
</kw>
<status status="PASS" endtime="20150605 14:06:26.437" starttime="20150605 14:06:26.424"></status>
</kw>
<status status="PASS" endtime="20150605 14:06:26.439" starttime="20150605 14:06:26.367"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20150605 14:06:26.444" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20150605 14:06:26.445" starttime="20150605 14:06:26.440"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:26.449" starttime="20150605 14:06:26.446"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:26.452" starttime="20150605 14:06:26.450"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:26.456" starttime="20150605 14:06:26.454"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:26.459" starttime="20150605 14:06:26.458"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:26.463" starttime="20150605 14:06:26.461"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:26.466" starttime="20150605 14:06:26.464"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:26.470" starttime="20150605 14:06:26.468"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:26.474" starttime="20150605 14:06:26.471"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:26.477" starttime="20150605 14:06:26.475"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:26.481" starttime="20150605 14:06:26.479"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:26.484" starttime="20150605 14:06:26.482"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:26.488" starttime="20150605 14:06:26.486"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20150605 14:06:26.493" level="INFO">Running with the following project properties set: [u'crceHost=10.105.180.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=730013000010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=56952910000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101005', u'HighLevelOps.createTestSubscribers.input.balance=10000000']</msg>
<msg timestamp="20150605 14:06:31.108" level="INFO">14:06:26,664 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/ext] for external libraries
14:06:26,664 INFO  [DefaultSoapUICore] Creating new settings at [/home/msanseovic/soapui-settings.xml]
14:06:28,560 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/crce-subscriberadmin/robot_crce_bridge-soapui-project.xml]
14:06:28,572 INFO  [SoapUITestCaseRunner] Setting project property [crceHost] to [10.105.180.125]
14:06:28,573 INFO  [SoapUITestCaseRunner] Setting project property [crcePort] to [8080]
14:06:28,573 INFO  [SoapUITestCaseRunner] Setting project property [crceWebservicesBasePath] to [/inew-mvno-crce-webservices/]
14:06:28,573 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.amount] to [1]
14:06:28,573 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.imsiRangeStart] to [730013000010000]
14:06:28,573 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.msisdnRangeStart] to [56952910000]
14:06:28,573 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.type] to [PREPAID]
14:06:28,573 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.languageid] to [1]
14:06:28,574 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.tariffId] to [101005]
14:06:28,574 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.balance] to [10000000]
14:06:28,574 INFO  [SoapUITestCaseRunner] Running SoapUI tests in project [Robotframework_CRCE-Bridge]
14:06:28,574 INFO  [SoapUITestCaseRunner] Running TestCase [createTestSubscribers]
14:06:28,583 INFO  [SoapUITestCaseRunner] Running SoapUI testcase [createTestSubscribers]
14:06:28,589 INFO  [SoapUITestCaseRunner] running step [init_repeat_counter]
14:06:29,144 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
14:06:29,205 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
14:06:29,389 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:06:29,390 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
14:06:29,428 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:06:29,435 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:06:29,609 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:06:29,609 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:06:29,614 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:06:29,614 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
14:06:29,710 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
14:06:30,121 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
14:06:30,148 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
14:06:30,150 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:06:30,152 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:06:30,152 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
14:06:30,299 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:06:30,300 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:06:30,307 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:06:30,307 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:06:30,307 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:06:30,308 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
14:06:30,378 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
14:06:30,384 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
14:06:30,433 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
14:06:30,437 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:06:30,438 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:06:30,439 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
14:06:30,473 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:06:30,473 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:06:30,476 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:06:30,476 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:06:30,476 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:06:30,476 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
14:06:30,507 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
14:06:30,512 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
14:06:30,532 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
14:06:30,533 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:06:30,535 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:06:30,535 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
14:06:30,593 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:06:30,593 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:06:30,598 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:06:30,598 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:06:30,598 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:06:30,598 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
14:06:30,651 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
14:06:30,655 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
14:06:30,688 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
14:06:30,690 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:06:30,691 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:06:30,691 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
14:06:30,713 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:06:30,713 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:06:30,725 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:06:30,725 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:06:30,725 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:06:30,726 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
14:06:30,786 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
14:06:30,805 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
14:06:30,849 INFO  [SoapUITestCaseRunner] running step [setBalance]
14:06:30,852 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:06:30,855 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:06:30,855 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
14:06:30,896 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:06:30,896 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:06:30,908 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:06:30,908 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:06:30,908 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:06:30,909 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
14:06:30,973 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
14:06:30,983 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
14:06:31,026 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
14:06:31,073 INFO  [SoapUITestCaseRunner] running step [finish_successful]
14:06:31,104 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK
14:06:31,105 INFO  [SoapUITestCaseRunner] Finished running SoapUI testcase [createTestSubscribers], time taken: 2481ms, status: FINISHED
14:06:31,105 INFO  [SoapUITestCaseRunner] TestCase [createTestSubscribers] finished with status [FINISHED] in 2481ms</msg>
<status status="PASS" endtime="20150605 14:06:31.112" starttime="20150605 14:06:26.491"></status>
</kw>
<msg timestamp="20150605 14:06:31.116" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150605 14:06:31.117" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20150605 14:06:31.114" starttime="20150605 14:06:26.489"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150605 14:06:31.141" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20150605 14:06:31.141" starttime="20150605 14:06:31.137"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150605 14:06:31.147" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150605 14:06:31.147" starttime="20150605 14:06:31.144"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150605 14:06:31.153" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150605 14:06:31.152" starttime="20150605 14:06:31.150"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150605 14:06:31.162" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150605 14:06:31.168" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20150605 14:06:31.170" starttime="20150605 14:06:31.159"></status>
</kw>
<msg timestamp="20150605 14:06:31.172" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150605 14:06:31.173" level="INFO">${return_log_entry} = 2015-06-05 14:06:31,104 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20150605 14:06:31.171" starttime="20150605 14:06:31.155"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:31.190" starttime="20150605 14:06:31.188"></status>
</kw>
<msg timestamp="20150605 14:06:31.192" level="INFO">${return_log_entry} = 2015-06-05 14:06:31,104 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20150605 14:06:31.192" starttime="20150605 14:06:31.175"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:31.204" starttime="20150605 14:06:31.201"></status>
</kw>
<msg timestamp="20150605 14:06:31.206" level="INFO">${return_log_entry} = 2015-06-05 14:06:31,104 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20150605 14:06:31.205" starttime="20150605 14:06:31.195"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:31.217" starttime="20150605 14:06:31.214"></status>
</kw>
<msg timestamp="20150605 14:06:31.219" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150605 14:06:31.218" starttime="20150605 14:06:31.207"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:31.231" starttime="20150605 14:06:31.229"></status>
</kw>
<msg timestamp="20150605 14:06:31.233" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150605 14:06:31.232" starttime="20150605 14:06:31.220"></status>
</kw>
<msg timestamp="20150605 14:06:31.235" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150605 14:06:31.234" starttime="20150605 14:06:31.122"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:31.250" starttime="20150605 14:06:31.248"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:31.254" starttime="20150605 14:06:31.252"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:31.257" starttime="20150605 14:06:31.255"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20150605 14:06:31.272" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20150605 14:06:31.272" starttime="20150605 14:06:31.265"></status>
</kw>
<status status="PASS" endtime="20150605 14:06:31.273" starttime="20150605 14:06:31.263"></status>
</kw>
<status status="PASS" endtime="20150605 14:06:31.274" starttime="20150605 14:06:31.258"></status>
</kw>
<status status="PASS" endtime="20150605 14:06:31.275" starttime="20150605 14:06:31.237"></status>
</kw>
<msg timestamp="20150605 14:06:31.278" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20150605 14:06:31.277" starttime="20150605 14:06:26.230"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20150605 14:06:31.281" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20150605 14:06:31.282" starttime="20150605 14:06:31.279"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150605 14:06:31.285" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20150605 14:06:31.286" starttime="20150605 14:06:31.283"></status>
</kw>
<kw type="kw" name="${week} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date +%V</arg>
</arguments>
<msg timestamp="20150605 14:06:31.293" level="INFO">Running command 'date +%V 2&gt;&amp;1'</msg>
<msg timestamp="20150605 14:06:31.299" level="INFO">${week} = 23</msg>
<status status="PASS" endtime="20150605 14:06:31.298" starttime="20150605 14:06:31.287"></status>
</kw>
<kw type="kw" name="${year} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date +%Y</arg>
</arguments>
<msg timestamp="20150605 14:06:31.305" level="INFO">Running command 'date +%Y 2&gt;&amp;1'</msg>
<msg timestamp="20150605 14:06:31.308" level="INFO">${year} = 2015</msg>
<status status="PASS" endtime="20150605 14:06:31.307" starttime="20150605 14:06:31.300"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${YYYYwWW}</arg>
<arg>${year}w${week}</arg>
</arguments>
<msg timestamp="20150605 14:06:31.340" level="INFO">${YYYYwWW} = 2015w23</msg>
<status status="PASS" endtime="20150605 14:06:31.341" starttime="20150605 14:06:31.310"></status>
</kw>
<status status="PASS" endtime="20150605 14:06:31.342" starttime="20150605 14:06:26.173"></status>
</kw>
<test id="s1-t1" name="Run Long MOC Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Connect with XDR, IN, CRCE and start the log monitoring</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:31.361" starttime="20150605 14:06:31.359"></status>
</kw>
<kw type="kw" name="${ssh_connection_xdr} = ssh-support-resource.SSH Login And Start File Monitor">
<doc>Combines 'SSH Login' and 'SSH Start File Monitor' for compacter coding style</doc>
<arguments>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR_LOG_FILE_PATH}</arg>
<arg>host=${XDR HOST}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
<arg>${rsa_key_file}</arg>
<arg>ssh_connection=${ssh_connection}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:31.414" starttime="20150605 14:06:31.411"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:31.542" starttime="20150605 14:06:31.422"></status>
</kw>
<msg timestamp="20150605 14:06:31.544" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20150605 14:06:31.543" starttime="20150605 14:06:31.415"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20150605 14:06:31.555" level="INFO">Logging into '10.105.180.171:22' as 'qa_automation'.</msg>
<msg timestamp="20150605 14:06:31.993" level="INFO">Read output: Last login: Fri Jun  5 11:22:54 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb08 ~]$</msg>
<status status="PASS" endtime="20150605 14:06:31.994" starttime="20150605 14:06:31.552"></status>
</kw>
<status status="PASS" endtime="20150605 14:06:31.995" starttime="20150605 14:06:31.545"></status>
</kw>
<msg timestamp="20150605 14:06:31.997" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20150605 14:06:31.996" starttime="20150605 14:06:31.399"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Start File Monitor">
<doc>Executes a 'tail -f' for the passed file on the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
<arg>${monitored_file_path}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:32.012" starttime="20150605 14:06:32.010"></status>
</kw>
<kw type="kw" name="SSHLibrary.Start Command">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>tail -f ${monitored_file_path} &gt; tmpfilemonitor${ssh_connection}.log</arg>
</arguments>
<msg timestamp="20150605 14:06:32.015" level="INFO">Starting command 'tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log'.</msg>
<status status="PASS" endtime="20150605 14:06:32.021" starttime="20150605 14:06:32.013"></status>
</kw>
<status status="PASS" endtime="20150605 14:06:32.022" starttime="20150605 14:06:31.999"></status>
</kw>
<msg timestamp="20150605 14:06:32.025" level="INFO">${ssh_connection_xdr} = 1</msg>
<status status="PASS" endtime="20150605 14:06:32.024" starttime="20150605 14:06:31.384"></status>
</kw>
<kw type="kw" name="${ssh_connection_in} = ssh-support-resource.SSH Login And Start File Monitor">
<doc>Combines 'SSH Login' and 'SSH Start File Monitor' for compacter coding style</doc>
<arguments>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN_MOC_LOG_FILE_PATH}${IN_LOG_FILE_NAME}</arg>
<arg>host=${IN-APP HOST}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
<arg>${rsa_key_file}</arg>
<arg>ssh_connection=${ssh_connection}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:32.077" starttime="20150605 14:06:32.075"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:32.124" starttime="20150605 14:06:32.083"></status>
</kw>
<msg timestamp="20150605 14:06:32.126" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20150605 14:06:32.125" starttime="20150605 14:06:32.078"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20150605 14:06:32.135" level="INFO">Logging into '10.105.180.135:22' as 'qa_automation'.</msg>
<msg timestamp="20150605 14:06:32.814" level="INFO">Read output: Last login: Fri Jun  5 11:22:55 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb08 ~]$</msg>
<status status="PASS" endtime="20150605 14:06:32.815" starttime="20150605 14:06:32.132"></status>
</kw>
<status status="PASS" endtime="20150605 14:06:32.816" starttime="20150605 14:06:32.127"></status>
</kw>
<msg timestamp="20150605 14:06:32.818" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20150605 14:06:32.817" starttime="20150605 14:06:32.061"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Start File Monitor">
<doc>Executes a 'tail -f' for the passed file on the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
<arg>${monitored_file_path}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:32.831" starttime="20150605 14:06:32.829"></status>
</kw>
<kw type="kw" name="SSHLibrary.Start Command">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>tail -f ${monitored_file_path} &gt; tmpfilemonitor${ssh_connection}.log</arg>
</arguments>
<msg timestamp="20150605 14:06:32.834" level="INFO">Starting command 'tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log'.</msg>
<status status="PASS" endtime="20150605 14:06:32.838" starttime="20150605 14:06:32.832"></status>
</kw>
<status status="PASS" endtime="20150605 14:06:32.838" starttime="20150605 14:06:32.820"></status>
</kw>
<msg timestamp="20150605 14:06:32.840" level="INFO">${ssh_connection_in} = 2</msg>
<status status="PASS" endtime="20150605 14:06:32.840" starttime="20150605 14:06:32.044"></status>
</kw>
<kw type="kw" name="${ssh_connection_crce} = ssh-support-resource.SSH Login And Start File Monitor">
<doc>Combines 'SSH Login' and 'SSH Start File Monitor' for compacter coding style</doc>
<arguments>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE_LOG_FILE_PATH}</arg>
<arg>host=${CRCE HOST}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
<arg>${rsa_key_file}</arg>
<arg>ssh_connection=${ssh_connection}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:32.883" starttime="20150605 14:06:32.881"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:32.929" starttime="20150605 14:06:32.889"></status>
</kw>
<msg timestamp="20150605 14:06:32.930" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20150605 14:06:32.930" starttime="20150605 14:06:32.884"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20150605 14:06:32.939" level="INFO">Logging into '10.105.180.125:22' as 'qa_automation'.</msg>
<msg timestamp="20150605 14:06:33.552" level="INFO">Read output: Last login: Fri Jun  5 11:22:55 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@crce01.tb08 ~]$</msg>
<status status="PASS" endtime="20150605 14:06:33.554" starttime="20150605 14:06:32.937"></status>
</kw>
<status status="PASS" endtime="20150605 14:06:33.557" starttime="20150605 14:06:32.932"></status>
</kw>
<msg timestamp="20150605 14:06:33.563" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20150605 14:06:33.562" starttime="20150605 14:06:32.871"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Start File Monitor">
<doc>Executes a 'tail -f' for the passed file on the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
<arg>${monitored_file_path}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:33.576" starttime="20150605 14:06:33.574"></status>
</kw>
<kw type="kw" name="SSHLibrary.Start Command">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>tail -f ${monitored_file_path} &gt; tmpfilemonitor${ssh_connection}.log</arg>
</arguments>
<msg timestamp="20150605 14:06:33.579" level="INFO">Starting command 'tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log'.</msg>
<status status="PASS" endtime="20150605 14:06:33.582" starttime="20150605 14:06:33.577"></status>
</kw>
<status status="PASS" endtime="20150605 14:06:33.583" starttime="20150605 14:06:33.565"></status>
</kw>
<msg timestamp="20150605 14:06:33.585" level="INFO">${ssh_connection_crce} = 3</msg>
<status status="PASS" endtime="20150605 14:06:33.584" starttime="20150605 14:06:32.857"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run Auto-MOC *******</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:33.588" starttime="20150605 14:06:33.587"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the Long MOC call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150605 14:06:33.591" level="INFO">Running the Long MOC call...</msg>
<status status="PASS" endtime="20150605 14:06:33.592" starttime="20150605 14:06:33.589"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC 136s">
<doc>Runs a standard MOC 136s session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc136s</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20150605 14:06:33.625" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv</msg>
<status status="PASS" endtime="20150605 14:06:33.624" starttime="20150605 14:06:33.623"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20150605 14:06:33.629" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv</msg>
<status status="PASS" endtime="20150605 14:06:33.628" starttime="20150605 14:06:33.626"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20150605 14:06:33.632" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini</msg>
<status status="PASS" endtime="20150605 14:06:33.632" starttime="20150605 14:06:33.630"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20150605 14:06:33.636" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc136s.cgs</msg>
<status status="PASS" endtime="20150605 14:06:33.635" starttime="20150605 14:06:33.633"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:33.638" starttime="20150605 14:06:33.637"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20150605 14:06:33.643" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150605 14:06:33.643" starttime="20150605 14:06:33.639"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:33.646" starttime="20150605 14:06:33.644"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20150605 14:06:33.650" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150605 14:06:33.650" starttime="20150605 14:06:33.647"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20150605 14:06:33.655" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150605 14:06:33.655" starttime="20150605 14:06:33.651"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:33.658" starttime="20150605 14:06:33.657"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20150605 14:06:33.662" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150605 14:06:33.663" starttime="20150605 14:06:33.659"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20150605 14:06:33.668" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150605 14:06:33.668" starttime="20150605 14:06:33.664"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20150605 14:06:33.671" starttime="20150605 14:06:33.669"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20150605 14:06:33.680" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc136s.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20150605 14:08:53.698" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20150605 14:08:53.689" starttime="20150605 14:06:33.672"></status>
</kw>
<msg timestamp="20150605 14:08:53.707" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20150605 14:08:53.706" starttime="20150605 14:06:33.609"></status>
</kw>
<msg timestamp="20150605 14:08:53.710" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20150605 14:08:53.709" starttime="20150605 14:06:33.594"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20150605 14:08:58.715" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20150605 14:08:58.717" starttime="20150605 14:08:53.711"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150605 14:08:58.725" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20150605 14:08:58.727" starttime="20150605 14:08:58.721"></status>
</kw>
<kw type="kw" name="${tailed_text} = ssh-support-resource.SSH Close File Monitor And Logout">
<doc>Combines 'SSH Close File Monitor' and 'SSH Logout' for compacter coding style</doc>
<arguments>
<arg>${ssh_connection_in}</arg>
<arg>LongMOC_${TAILED_IN_LOG_FILE}</arg>
</arguments>
<kw type="kw" name="${tailed_text} = ssh-support-resource.SSH Close File Monitor">
<doc>Closes a file monitor created via 'SSH Start File Monitor' and returns all grabbed text</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:08:58.773" starttime="20150605 14:08:58.770"></status>
</kw>
<kw type="kw" name="${CTRL_C} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>chr(int(3))</arg>
</arguments>
<msg timestamp="20150605 14:08:58.780" level="INFO">${CTRL_C} = </msg>
<status status="PASS" endtime="20150605 14:08:58.779" starttime="20150605 14:08:58.774"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${CTRL_C}</arg>
</arguments>
<msg timestamp="20150605 14:08:58.787" level="INFO">[m ^C</msg>
<status status="PASS" endtime="20150605 14:08:58.788" starttime="20150605 14:08:58.782"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Kill User Processes">
<doc>This is a helper to cleanup zombie processes left by the SSH lib's 'Start Command'</doc>
<arguments>
<arg>${ssh_connection}</arg>
<arg>tail</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:08:58.803" starttime="20150605 14:08:58.801"></status>
</kw>
<kw type="kw" name="${user} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>id -un</arg>
</arguments>
<msg timestamp="20150605 14:08:58.807" level="INFO">Executing command 'id -un'.</msg>
<msg timestamp="20150605 14:08:58.899" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150605 14:08:58.902" level="INFO">${user} = qa_automation</msg>
<status status="PASS" endtime="20150605 14:08:58.901" starttime="20150605 14:08:58.805"></status>
</kw>
<kw type="kw" name="${processes_string} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ps U ${user} --no-heading | grep ${command_name}</arg>
</arguments>
<msg timestamp="20150605 14:08:58.908" level="INFO">Executing command 'ps U qa_automation --no-heading | grep tail'.</msg>
<msg timestamp="20150605 14:08:59.027" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150605 14:08:59.030" level="INFO">${processes_string} =   519 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log &gt; tmpfilemonitor2.log
  534 ?        S      0:01 tail -f /var/log/inew/core-in-service/1.3.5/sms...</msg>
<status status="PASS" endtime="20150605 14:08:59.029" starttime="20150605 14:08:58.904"></status>
</kw>
<kw type="kw" name="@{processes_list} = String.Split String">
<doc>Splits the `string` using `separator` as a delimiter string.</doc>
<arguments>
<arg>${processes_string}</arg>
<arg>${\n}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.036" level="INFO">@{processes_list} = [   519 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log &gt; tmpfilemonitor2.log |   534 ?        S      0:01 tail -f /var/log/inew/core-in-service/1.3.5...</msg>
<status status="PASS" endtime="20150605 14:08:59.034" starttime="20150605 14:08:59.031"></status>
</kw>
<kw type="for" name="${process} IN [ @{processes_list} ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" name="${process} =   519 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.042" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:08:59.041" starttime="20150605 14:08:59.039"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.044" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:08:59.107" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:08:59.108" starttime="20150605 14:08:59.043"></status>
</kw>
<status status="PASS" endtime="20150605 14:08:59.109" starttime="20150605 14:08:59.038"></status>
</kw>
<kw type="foritem" name="${process} =   534 ?        S      0:01 tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.113" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:08:59.113" starttime="20150605 14:08:59.111"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.117" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:08:59.182" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:08:59.183" starttime="20150605 14:08:59.115"></status>
</kw>
<status status="PASS" endtime="20150605 14:08:59.184" starttime="20150605 14:08:59.110"></status>
</kw>
<kw type="foritem" name="${process} =   549 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.189" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:08:59.188" starttime="20150605 14:08:59.186"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.192" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:08:59.257" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:08:59.259" starttime="20150605 14:08:59.190"></status>
</kw>
<status status="PASS" endtime="20150605 14:08:59.259" starttime="20150605 14:08:59.185"></status>
</kw>
<kw type="foritem" name="${process} =   564 ?        S      0:02 tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.264" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:08:59.263" starttime="20150605 14:08:59.261"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.266" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:08:59.332" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:08:59.333" starttime="20150605 14:08:59.265"></status>
</kw>
<status status="PASS" endtime="20150605 14:08:59.334" starttime="20150605 14:08:59.260"></status>
</kw>
<kw type="foritem" name="${process} =   601 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log &gt; tmpfilemonitor8.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.339" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:08:59.338" starttime="20150605 14:08:59.336"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.342" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:08:59.408" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:08:59.409" starttime="20150605 14:08:59.340"></status>
</kw>
<status status="PASS" endtime="20150605 14:08:59.410" starttime="20150605 14:08:59.335"></status>
</kw>
<kw type="foritem" name="${process} =   616 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.414" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:08:59.414" starttime="20150605 14:08:59.412"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.417" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:08:59.484" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:08:59.485" starttime="20150605 14:08:59.416"></status>
</kw>
<status status="PASS" endtime="20150605 14:08:59.486" starttime="20150605 14:08:59.411"></status>
</kw>
<kw type="foritem" name="${process} =   767 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.490" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:08:59.489" starttime="20150605 14:08:59.487"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.493" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:08:59.559" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:08:59.560" starttime="20150605 14:08:59.491"></status>
</kw>
<status status="PASS" endtime="20150605 14:08:59.562" starttime="20150605 14:08:59.486"></status>
</kw>
<kw type="foritem" name="${process} =   782 ?        S      0:02 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.566" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:08:59.566" starttime="20150605 14:08:59.563"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.569" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:08:59.634" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:08:59.636" starttime="20150605 14:08:59.567"></status>
</kw>
<status status="PASS" endtime="20150605 14:08:59.636" starttime="20150605 14:08:59.562"></status>
</kw>
<kw type="foritem" name="${process} =   927 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.641" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:08:59.640" starttime="20150605 14:08:59.638"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.644" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:08:59.709" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:08:59.711" starttime="20150605 14:08:59.642"></status>
</kw>
<status status="PASS" endtime="20150605 14:08:59.711" starttime="20150605 14:08:59.637"></status>
</kw>
<kw type="foritem" name="${process} =   944 ?        S      0:02 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.716" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:08:59.715" starttime="20150605 14:08:59.713"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.718" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:08:59.787" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:08:59.789" starttime="20150605 14:08:59.717"></status>
</kw>
<status status="PASS" endtime="20150605 14:08:59.790" starttime="20150605 14:08:59.712"></status>
</kw>
<kw type="foritem" name="${process} =  1144 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.795" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:08:59.794" starttime="20150605 14:08:59.792"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.797" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:08:59.865" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:08:59.867" starttime="20150605 14:08:59.796"></status>
</kw>
<status status="PASS" endtime="20150605 14:08:59.868" starttime="20150605 14:08:59.791"></status>
</kw>
<kw type="foritem" name="${process} =  1159 ?        S      0:02 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.872" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:08:59.871" starttime="20150605 14:08:59.869"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.874" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:08:59.940" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:08:59.941" starttime="20150605 14:08:59.873"></status>
</kw>
<status status="PASS" endtime="20150605 14:08:59.942" starttime="20150605 14:08:59.868"></status>
</kw>
<kw type="foritem" name="${process} =  1192 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.946" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:08:59.946" starttime="20150605 14:08:59.943"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:08:59.949" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:00.027" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:00.028" starttime="20150605 14:08:59.947"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:00.029" starttime="20150605 14:08:59.942"></status>
</kw>
<kw type="foritem" name="${process} =  1207 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.034" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:00.033" starttime="20150605 14:09:00.031"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.037" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:00.102" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:00.103" starttime="20150605 14:09:00.035"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:00.104" starttime="20150605 14:09:00.030"></status>
</kw>
<kw type="foritem" name="${process} =  1208 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.108" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:00.108" starttime="20150605 14:09:00.105"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.111" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:00.176" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:00.177" starttime="20150605 14:09:00.109"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:00.178" starttime="20150605 14:09:00.105"></status>
</kw>
<kw type="foritem" name="${process} =  1222 ?        S      0:01 tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.182" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:00.181" starttime="20150605 14:09:00.179"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.185" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:00.252" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:00.254" starttime="20150605 14:09:00.183"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:00.254" starttime="20150605 14:09:00.178"></status>
</kw>
<kw type="foritem" name="${process} =  1595 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.259" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:00.258" starttime="20150605 14:09:00.256"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.261" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:00.326" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:00.327" starttime="20150605 14:09:00.260"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:00.328" starttime="20150605 14:09:00.255"></status>
</kw>
<kw type="foritem" name="${process} =  1610 ?        S      0:01 tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.332" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:00.332" starttime="20150605 14:09:00.329"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.335" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:00.401" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:00.402" starttime="20150605 14:09:00.333"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:00.403" starttime="20150605 14:09:00.328"></status>
</kw>
<kw type="foritem" name="${process} =  1747 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.407" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:00.406" starttime="20150605 14:09:00.404"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.410" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:00.474" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:00.475" starttime="20150605 14:09:00.408"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:00.476" starttime="20150605 14:09:00.403"></status>
</kw>
<kw type="foritem" name="${process} =  1763 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.480" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:00.480" starttime="20150605 14:09:00.477"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.483" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:00.547" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:00.548" starttime="20150605 14:09:00.481"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:00.549" starttime="20150605 14:09:00.476"></status>
</kw>
<kw type="foritem" name="${process} =  1765 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.554" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:00.554" starttime="20150605 14:09:00.550"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.557" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:00.621" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:00.622" starttime="20150605 14:09:00.555"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:00.623" starttime="20150605 14:09:00.549"></status>
</kw>
<kw type="foritem" name="${process} =  1780 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.627" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:00.626" starttime="20150605 14:09:00.624"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.630" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:00.693" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:00.695" starttime="20150605 14:09:00.628"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:00.695" starttime="20150605 14:09:00.623"></status>
</kw>
<kw type="foritem" name="${process} =  1906 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.699" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:00.699" starttime="20150605 14:09:00.697"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.702" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:00.766" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:00.767" starttime="20150605 14:09:00.700"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:00.768" starttime="20150605 14:09:00.696"></status>
</kw>
<kw type="foritem" name="${process} =  1918 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.772" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:00.772" starttime="20150605 14:09:00.769"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.775" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:00.839" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:00.840" starttime="20150605 14:09:00.773"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:00.840" starttime="20150605 14:09:00.769"></status>
</kw>
<kw type="foritem" name="${process} =  1935 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.844" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:00.844" starttime="20150605 14:09:00.842"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.847" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:00.912" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:00.914" starttime="20150605 14:09:00.845"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:00.914" starttime="20150605 14:09:00.841"></status>
</kw>
<kw type="foritem" name="${process} =  1937 ?        S      0:03 tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.919" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:00.918" starttime="20150605 14:09:00.916"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.921" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:00.985" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:00.986" starttime="20150605 14:09:00.920"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:00.987" starttime="20150605 14:09:00.915"></status>
</kw>
<kw type="foritem" name="${process} =  1994 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.991" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:00.990" starttime="20150605 14:09:00.988"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:00.993" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:01.058" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:01.060" starttime="20150605 14:09:00.992"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:01.061" starttime="20150605 14:09:00.987"></status>
</kw>
<kw type="foritem" name="${process} =  2016 ?        S      0:01 tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.066" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:01.066" starttime="20150605 14:09:01.063"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.069" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:01.132" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:01.133" starttime="20150605 14:09:01.067"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:01.134" starttime="20150605 14:09:01.062"></status>
</kw>
<kw type="foritem" name="${process} =  2064 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.138" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:01.138" starttime="20150605 14:09:01.135"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.141" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:01.205" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:01.206" starttime="20150605 14:09:01.139"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:01.207" starttime="20150605 14:09:01.135"></status>
</kw>
<kw type="foritem" name="${process} =  2080 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.211" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:01.210" starttime="20150605 14:09:01.208"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.213" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:01.276" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:01.277" starttime="20150605 14:09:01.212"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:01.278" starttime="20150605 14:09:01.207"></status>
</kw>
<kw type="foritem" name="${process} =  2313 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.282" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:01.282" starttime="20150605 14:09:01.279"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.285" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:01.349" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:01.351" starttime="20150605 14:09:01.283"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:01.351" starttime="20150605 14:09:01.278"></status>
</kw>
<kw type="foritem" name="${process} =  2328 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.355" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:01.355" starttime="20150605 14:09:01.353"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.358" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:01.425" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:01.426" starttime="20150605 14:09:01.356"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:01.427" starttime="20150605 14:09:01.352"></status>
</kw>
<kw type="foritem" name="${process} =  2439 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.431" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:01.431" starttime="20150605 14:09:01.428"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.434" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:01.500" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:01.501" starttime="20150605 14:09:01.432"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:01.502" starttime="20150605 14:09:01.427"></status>
</kw>
<kw type="foritem" name="${process} =  2454 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.506" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:01.505" starttime="20150605 14:09:01.503"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.508" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:01.575" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:01.576" starttime="20150605 14:09:01.507"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:01.577" starttime="20150605 14:09:01.502"></status>
</kw>
<kw type="foritem" name="${process} =  2478 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.581" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:01.581" starttime="20150605 14:09:01.578"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.584" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:01.648" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:01.649" starttime="20150605 14:09:01.582"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:01.650" starttime="20150605 14:09:01.577"></status>
</kw>
<kw type="foritem" name="${process} =  2493 ?        S      0:02 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.654" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:01.653" starttime="20150605 14:09:01.651"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.656" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:01.724" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:01.725" starttime="20150605 14:09:01.655"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:01.726" starttime="20150605 14:09:01.650"></status>
</kw>
<kw type="foritem" name="${process} =  2574 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.730" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:01.730" starttime="20150605 14:09:01.727"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.733" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:01.799" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:01.802" starttime="20150605 14:09:01.731"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:01.803" starttime="20150605 14:09:01.727"></status>
</kw>
<kw type="foritem" name="${process} =  2593 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.813" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:01.812" starttime="20150605 14:09:01.807"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.816" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:01.873" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:01.875" starttime="20150605 14:09:01.814"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:01.876" starttime="20150605 14:09:01.804"></status>
</kw>
<kw type="foritem" name="${process} =  2841 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.881" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:01.880" starttime="20150605 14:09:01.877"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.884" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:01.946" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:01.947" starttime="20150605 14:09:01.882"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:01.948" starttime="20150605 14:09:01.876"></status>
</kw>
<kw type="foritem" name="${process} =  2853 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.952" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:01.951" starttime="20150605 14:09:01.949"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:01.954" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:02.020" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:02.021" starttime="20150605 14:09:01.953"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:02.022" starttime="20150605 14:09:01.948"></status>
</kw>
<kw type="foritem" name="${process} =  2857 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.027" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:02.026" starttime="20150605 14:09:02.024"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.029" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:02.093" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:02.095" starttime="20150605 14:09:02.028"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:02.095" starttime="20150605 14:09:02.023"></status>
</kw>
<kw type="foritem" name="${process} =  2868 ?        S      0:01 tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.099" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:02.099" starttime="20150605 14:09:02.097"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.102" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:02.167" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:02.168" starttime="20150605 14:09:02.100"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:02.169" starttime="20150605 14:09:02.096"></status>
</kw>
<kw type="foritem" name="${process} =  2871 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.173" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:02.172" starttime="20150605 14:09:02.170"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.175" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:02.240" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:02.241" starttime="20150605 14:09:02.174"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:02.242" starttime="20150605 14:09:02.169"></status>
</kw>
<kw type="foritem" name="${process} =  2886 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.246" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:02.246" starttime="20150605 14:09:02.244"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.249" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:02.318" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:02.319" starttime="20150605 14:09:02.247"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:02.320" starttime="20150605 14:09:02.243"></status>
</kw>
<kw type="foritem" name="${process} =  3037 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.324" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:02.324" starttime="20150605 14:09:02.322"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.327" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:02.391" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:02.392" starttime="20150605 14:09:02.325"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:02.393" starttime="20150605 14:09:02.321"></status>
</kw>
<kw type="foritem" name="${process} =  3052 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.397" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:02.397" starttime="20150605 14:09:02.394"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.400" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:02.474" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:02.475" starttime="20150605 14:09:02.398"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:02.476" starttime="20150605 14:09:02.393"></status>
</kw>
<kw type="foritem" name="${process} =  3101 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.480" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:02.479" starttime="20150605 14:09:02.477"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.483" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:02.547" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:02.548" starttime="20150605 14:09:02.481"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:02.549" starttime="20150605 14:09:02.476"></status>
</kw>
<kw type="foritem" name="${process} =  3116 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.553" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:02.552" starttime="20150605 14:09:02.550"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.555" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:02.621" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:02.622" starttime="20150605 14:09:02.554"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:02.623" starttime="20150605 14:09:02.549"></status>
</kw>
<kw type="foritem" name="${process} =  3255 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.627" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:02.626" starttime="20150605 14:09:02.624"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.629" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:02.694" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:02.695" starttime="20150605 14:09:02.628"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:02.696" starttime="20150605 14:09:02.623"></status>
</kw>
<kw type="foritem" name="${process} =  3270 ?        S      0:02 tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.700" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:02.699" starttime="20150605 14:09:02.697"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.702" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:02.768" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:02.769" starttime="20150605 14:09:02.701"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:02.770" starttime="20150605 14:09:02.696"></status>
</kw>
<kw type="foritem" name="${process} =  3276 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log &gt; tmpfilemonitor5.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.774" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:02.773" starttime="20150605 14:09:02.771"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.776" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:02.841" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:02.842" starttime="20150605 14:09:02.775"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:02.843" starttime="20150605 14:09:02.770"></status>
</kw>
<kw type="foritem" name="${process} =  3291 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.847" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:02.846" starttime="20150605 14:09:02.844"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.849" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:02.914" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:02.915" starttime="20150605 14:09:02.848"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:02.916" starttime="20150605 14:09:02.843"></status>
</kw>
<kw type="foritem" name="${process} =  3542 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.920" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:02.919" starttime="20150605 14:09:02.917"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.922" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:02.986" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:02.987" starttime="20150605 14:09:02.921"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:02.988" starttime="20150605 14:09:02.916"></status>
</kw>
<kw type="foritem" name="${process} =  3557 ?        S      0:02 tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.992" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:02.991" starttime="20150605 14:09:02.989"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:02.994" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:03.059" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:03.061" starttime="20150605 14:09:02.993"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:03.062" starttime="20150605 14:09:02.988"></status>
</kw>
<kw type="foritem" name="${process} =  3603 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log &gt; tmpfilemonitor5.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.067" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:03.066" starttime="20150605 14:09:03.064"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.069" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:03.132" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:03.133" starttime="20150605 14:09:03.068"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:03.134" starttime="20150605 14:09:03.063"></status>
</kw>
<kw type="foritem" name="${process} =  3618 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.138" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:03.138" starttime="20150605 14:09:03.135"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.141" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:03.204" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:03.205" starttime="20150605 14:09:03.139"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:03.205" starttime="20150605 14:09:03.135"></status>
</kw>
<kw type="foritem" name="${process} =  3675 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor5.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.209" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:03.209" starttime="20150605 14:09:03.207"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.212" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:03.276" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:03.278" starttime="20150605 14:09:03.210"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:03.278" starttime="20150605 14:09:03.206"></status>
</kw>
<kw type="foritem" name="${process} =  3690 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.282" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:03.282" starttime="20150605 14:09:03.279"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.285" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:03.348" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:03.349" starttime="20150605 14:09:03.283"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:03.350" starttime="20150605 14:09:03.279"></status>
</kw>
<kw type="foritem" name="${process} =  3691 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.354" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:03.354" starttime="20150605 14:09:03.351"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.357" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:03.421" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:03.422" starttime="20150605 14:09:03.355"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:03.423" starttime="20150605 14:09:03.350"></status>
</kw>
<kw type="foritem" name="${process} =  3706 ?        S      0:03 tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.427" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:03.426" starttime="20150605 14:09:03.424"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.429" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:03.495" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:03.496" starttime="20150605 14:09:03.428"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:03.497" starttime="20150605 14:09:03.423"></status>
</kw>
<kw type="foritem" name="${process} =  4305 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.502" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:03.501" starttime="20150605 14:09:03.498"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.505" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:03.569" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:03.570" starttime="20150605 14:09:03.503"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:03.571" starttime="20150605 14:09:03.497"></status>
</kw>
<kw type="foritem" name="${process} =  4321 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.575" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:03.574" starttime="20150605 14:09:03.572"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.577" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:03.643" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:03.644" starttime="20150605 14:09:03.576"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:03.644" starttime="20150605 14:09:03.571"></status>
</kw>
<kw type="foritem" name="${process} =  4366 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log &gt; tmpfilemonitor5.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.648" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:03.648" starttime="20150605 14:09:03.646"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.651" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:03.720" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:03.722" starttime="20150605 14:09:03.649"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:03.722" starttime="20150605 14:09:03.645"></status>
</kw>
<kw type="foritem" name="${process} =  4381 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.726" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:03.726" starttime="20150605 14:09:03.724"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.729" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:03.793" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:03.794" starttime="20150605 14:09:03.727"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:03.795" starttime="20150605 14:09:03.723"></status>
</kw>
<kw type="foritem" name="${process} =  4867 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.799" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:03.798" starttime="20150605 14:09:03.796"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.801" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:03.867" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:03.868" starttime="20150605 14:09:03.800"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:03.869" starttime="20150605 14:09:03.795"></status>
</kw>
<kw type="foritem" name="${process} =  4876 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log &gt; tmpfilemonitor8.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.873" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:03.872" starttime="20150605 14:09:03.870"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.875" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:03.940" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:03.941" starttime="20150605 14:09:03.874"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:03.941" starttime="20150605 14:09:03.869"></status>
</kw>
<kw type="foritem" name="${process} =  4882 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.946" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:03.945" starttime="20150605 14:09:03.943"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:03.948" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:04.014" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:04.015" starttime="20150605 14:09:03.947"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:04.016" starttime="20150605 14:09:03.942"></status>
</kw>
<kw type="foritem" name="${process} =  4892 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.021" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:04.020" starttime="20150605 14:09:04.018"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.023" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:04.088" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:04.090" starttime="20150605 14:09:04.022"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:04.090" starttime="20150605 14:09:04.017"></status>
</kw>
<kw type="foritem" name="${process} =  5003 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.094" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:04.094" starttime="20150605 14:09:04.092"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.097" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:04.166" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:04.168" starttime="20150605 14:09:04.095"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:04.168" starttime="20150605 14:09:04.091"></status>
</kw>
<kw type="foritem" name="${process} =  5018 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.172" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:04.172" starttime="20150605 14:09:04.170"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.175" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:04.240" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:04.241" starttime="20150605 14:09:04.173"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:04.242" starttime="20150605 14:09:04.169"></status>
</kw>
<kw type="foritem" name="${process} =  5069 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.246" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:04.245" starttime="20150605 14:09:04.243"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.248" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:04.314" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:04.316" starttime="20150605 14:09:04.247"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:04.316" starttime="20150605 14:09:04.242"></status>
</kw>
<kw type="foritem" name="${process} =  5084 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.320" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:04.320" starttime="20150605 14:09:04.317"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.323" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:04.388" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:04.389" starttime="20150605 14:09:04.321"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:04.390" starttime="20150605 14:09:04.317"></status>
</kw>
<kw type="foritem" name="${process} =  5232 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.394" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:04.393" starttime="20150605 14:09:04.391"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.396" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:04.464" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:04.465" starttime="20150605 14:09:04.394"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:04.465" starttime="20150605 14:09:04.390"></status>
</kw>
<kw type="foritem" name="${process} =  5247 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.469" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:04.469" starttime="20150605 14:09:04.467"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.472" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:04.537" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:04.539" starttime="20150605 14:09:04.470"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:04.539" starttime="20150605 14:09:04.466"></status>
</kw>
<kw type="foritem" name="${process} =  5297 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log &gt; tmpfilemonitor5.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.543" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:04.543" starttime="20150605 14:09:04.540"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.546" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:04.612" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:04.613" starttime="20150605 14:09:04.544"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:04.613" starttime="20150605 14:09:04.540"></status>
</kw>
<kw type="foritem" name="${process} =  5312 ?        S      0:01 tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.617" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:04.617" starttime="20150605 14:09:04.615"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.620" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:04.688" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:04.689" starttime="20150605 14:09:04.618"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:04.690" starttime="20150605 14:09:04.614"></status>
</kw>
<kw type="foritem" name="${process} =  5503 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log &gt; tmpfilemonitor8.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.693" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:04.693" starttime="20150605 14:09:04.691"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.696" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:04.761" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:04.762" starttime="20150605 14:09:04.694"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:04.763" starttime="20150605 14:09:04.690"></status>
</kw>
<kw type="foritem" name="${process} =  5518 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.767" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:04.767" starttime="20150605 14:09:04.764"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.770" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:04.835" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:04.836" starttime="20150605 14:09:04.768"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:04.837" starttime="20150605 14:09:04.763"></status>
</kw>
<kw type="foritem" name="${process} =  5545 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.841" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:04.840" starttime="20150605 14:09:04.838"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.843" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:04.922" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:04.923" starttime="20150605 14:09:04.842"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:04.924" starttime="20150605 14:09:04.837"></status>
</kw>
<kw type="foritem" name="${process} =  5560 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.929" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:04.928" starttime="20150605 14:09:04.926"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.931" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:04.994" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:04.995" starttime="20150605 14:09:04.930"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:04.995" starttime="20150605 14:09:04.925"></status>
</kw>
<kw type="foritem" name="${process} =  5962 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:04.999" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:04.999" starttime="20150605 14:09:04.997"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.002" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:05.067" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:05.068" starttime="20150605 14:09:05.000"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:05.068" starttime="20150605 14:09:04.996"></status>
</kw>
<kw type="foritem" name="${process} =  5977 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.073" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:05.073" starttime="20150605 14:09:05.071"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.076" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:05.140" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:05.141" starttime="20150605 14:09:05.074"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:05.141" starttime="20150605 14:09:05.070"></status>
</kw>
<kw type="foritem" name="${process} =  6091 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.145" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:05.145" starttime="20150605 14:09:05.143"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.148" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:05.213" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:05.214" starttime="20150605 14:09:05.146"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:05.215" starttime="20150605 14:09:05.142"></status>
</kw>
<kw type="foritem" name="${process} =  6106 ?        S      0:01 tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.219" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:05.218" starttime="20150605 14:09:05.216"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.221" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:05.286" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:05.287" starttime="20150605 14:09:05.220"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:05.287" starttime="20150605 14:09:05.215"></status>
</kw>
<kw type="foritem" name="${process} =  6410 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.291" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:05.291" starttime="20150605 14:09:05.289"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.294" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:05.359" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:05.360" starttime="20150605 14:09:05.292"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:05.360" starttime="20150605 14:09:05.288"></status>
</kw>
<kw type="foritem" name="${process} =  6425 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.364" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:05.364" starttime="20150605 14:09:05.362"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.367" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:05.432" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:05.433" starttime="20150605 14:09:05.365"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:05.434" starttime="20150605 14:09:05.361"></status>
</kw>
<kw type="foritem" name="${process} =  6448 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.438" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:05.437" starttime="20150605 14:09:05.435"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.440" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:05.505" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:05.506" starttime="20150605 14:09:05.439"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:05.507" starttime="20150605 14:09:05.434"></status>
</kw>
<kw type="foritem" name="${process} =  6463 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.511" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:05.510" starttime="20150605 14:09:05.508"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.513" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:05.599" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:05.600" starttime="20150605 14:09:05.512"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:05.600" starttime="20150605 14:09:05.507"></status>
</kw>
<kw type="foritem" name="${process} =  6489 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log &gt; tmpfilemonitor5.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.605" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:05.604" starttime="20150605 14:09:05.602"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.607" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:05.672" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:05.673" starttime="20150605 14:09:05.606"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:05.674" starttime="20150605 14:09:05.601"></status>
</kw>
<kw type="foritem" name="${process} =  6504 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.678" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:05.677" starttime="20150605 14:09:05.675"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.680" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:05.747" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:05.748" starttime="20150605 14:09:05.678"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:05.749" starttime="20150605 14:09:05.674"></status>
</kw>
<kw type="foritem" name="${process} =  6574 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log &gt; tmpfilemonitor4.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.753" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:05.752" starttime="20150605 14:09:05.750"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.755" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:05.821" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:05.822" starttime="20150605 14:09:05.753"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:05.823" starttime="20150605 14:09:05.749"></status>
</kw>
<kw type="foritem" name="${process} =  6589 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.830" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:05.829" starttime="20150605 14:09:05.825"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.835" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:05.894" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:05.896" starttime="20150605 14:09:05.832"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:05.897" starttime="20150605 14:09:05.824"></status>
</kw>
<kw type="foritem" name="${process} =  6727 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.904" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:05.903" starttime="20150605 14:09:05.899"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.909" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:05.967" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:05.968" starttime="20150605 14:09:05.906"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:05.970" starttime="20150605 14:09:05.898"></status>
</kw>
<kw type="foritem" name="${process} =  6742 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.976" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:05.975" starttime="20150605 14:09:05.972"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:05.980" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:06.041" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:06.043" starttime="20150605 14:09:05.977"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:06.045" starttime="20150605 14:09:05.970"></status>
</kw>
<kw type="foritem" name="${process} =  7284 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log &gt; tmpfilemonitor11.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.052" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:06.051" starttime="20150605 14:09:06.048"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.056" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:06.115" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:06.116" starttime="20150605 14:09:06.054"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:06.117" starttime="20150605 14:09:06.046"></status>
</kw>
<kw type="foritem" name="${process} =  7299 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.120" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:06.120" starttime="20150605 14:09:06.118"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.123" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:06.188" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:06.189" starttime="20150605 14:09:06.121"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:06.189" starttime="20150605 14:09:06.117"></status>
</kw>
<kw type="foritem" name="${process} =  7467 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.193" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:06.193" starttime="20150605 14:09:06.191"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.195" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:06.261" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:06.262" starttime="20150605 14:09:06.194"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:06.263" starttime="20150605 14:09:06.190"></status>
</kw>
<kw type="foritem" name="${process} =  7483 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.267" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:06.266" starttime="20150605 14:09:06.264"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.269" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:06.334" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:06.336" starttime="20150605 14:09:06.267"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:06.336" starttime="20150605 14:09:06.263"></status>
</kw>
<kw type="foritem" name="${process} =  7534 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log &gt; tmpfilemonitor5.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.340" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:06.339" starttime="20150605 14:09:06.337"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.342" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:06.407" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:06.408" starttime="20150605 14:09:06.341"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:06.409" starttime="20150605 14:09:06.337"></status>
</kw>
<kw type="foritem" name="${process} =  7549 ?        S      0:01 tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.412" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:06.412" starttime="20150605 14:09:06.410"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.415" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:06.480" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:06.481" starttime="20150605 14:09:06.413"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:06.482" starttime="20150605 14:09:06.409"></status>
</kw>
<kw type="foritem" name="${process} =  7919 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.485" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:06.485" starttime="20150605 14:09:06.483"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.487" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:06.554" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:06.555" starttime="20150605 14:09:06.486"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:06.556" starttime="20150605 14:09:06.482"></status>
</kw>
<kw type="foritem" name="${process} =  7934 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.560" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:06.559" starttime="20150605 14:09:06.557"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.563" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:06.628" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:06.629" starttime="20150605 14:09:06.561"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:06.629" starttime="20150605 14:09:06.556"></status>
</kw>
<kw type="foritem" name="${process} =  8212 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log &gt; tmpfilemonitor7.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.633" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:06.633" starttime="20150605 14:09:06.631"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.635" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:06.701" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:06.703" starttime="20150605 14:09:06.634"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:06.704" starttime="20150605 14:09:06.630"></status>
</kw>
<kw type="foritem" name="${process} =  8227 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mfc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.712" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:06.711" starttime="20150605 14:09:06.707"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.717" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:06.775" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:06.777" starttime="20150605 14:09:06.714"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:06.778" starttime="20150605 14:09:06.705"></status>
</kw>
<kw type="foritem" name="${process} =  8313 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.786" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:06.785" starttime="20150605 14:09:06.781"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.790" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:06.851" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:06.853" starttime="20150605 14:09:06.787"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:06.854" starttime="20150605 14:09:06.779"></status>
</kw>
<kw type="foritem" name="${process} =  8328 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.861" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:06.860" starttime="20150605 14:09:06.856"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.866" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:06.925" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:06.926" starttime="20150605 14:09:06.863"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:06.927" starttime="20150605 14:09:06.855"></status>
</kw>
<kw type="foritem" name="${process} =  8897 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.934" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:06.933" starttime="20150605 14:09:06.930"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:06.940" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:07.007" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:07.009" starttime="20150605 14:09:06.936"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:07.011" starttime="20150605 14:09:06.928"></status>
</kw>
<kw type="foritem" name="${process} =  8912 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/moc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.019" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:07.018" starttime="20150605 14:09:07.014"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.024" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:07.082" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:07.083" starttime="20150605 14:09:07.021"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:07.085" starttime="20150605 14:09:07.012"></status>
</kw>
<kw type="foritem" name="${process} =  8977 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log &gt; tmpfilemonitor5.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.092" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:07.091" starttime="20150605 14:09:07.087"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.097" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:07.158" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:07.159" starttime="20150605 14:09:07.093"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:07.161" starttime="20150605 14:09:07.085"></status>
</kw>
<kw type="foritem" name="${process} =  8992 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.168" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:07.167" starttime="20150605 14:09:07.163"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.172" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:07.232" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:07.233" starttime="20150605 14:09:07.169"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:07.234" starttime="20150605 14:09:07.161"></status>
</kw>
<kw type="foritem" name="${process} =  9038 ?        Ss     0:00 bash -c ps U qa_automation --no-heading | grep tail">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.241" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:07.240" starttime="20150605 14:09:07.236"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.246" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:07.306" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:07.307" starttime="20150605 14:09:07.243"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:07.309" starttime="20150605 14:09:07.235"></status>
</kw>
<kw type="foritem" name="${process} =  9054 ?        S      0:00 grep tail">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.316" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:07.315" starttime="20150605 14:09:07.311"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.321" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:07.380" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:07.382" starttime="20150605 14:09:07.318"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:07.383" starttime="20150605 14:09:07.309"></status>
</kw>
<kw type="foritem" name="${process} =  9164 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log &gt; tmpfilemonitor2.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.390" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:07.389" starttime="20150605 14:09:07.385"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.395" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:07.455" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:07.456" starttime="20150605 14:09:07.392"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:07.457" starttime="20150605 14:09:07.384"></status>
</kw>
<kw type="foritem" name="${process} =  9179 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.464" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:07.463" starttime="20150605 14:09:07.459"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.469" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:07.527" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:07.529" starttime="20150605 14:09:07.466"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:07.530" starttime="20150605 14:09:07.458"></status>
</kw>
<kw type="foritem" name="${process} =  9601 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log &gt; tmpfilemonitor5.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.537" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:07.536" starttime="20150605 14:09:07.532"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.542" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:07.601" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:07.602" starttime="20150605 14:09:07.539"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:07.603" starttime="20150605 14:09:07.530"></status>
</kw>
<kw type="foritem" name="${process} =  9616 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/mtc/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.610" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:07.609" starttime="20150605 14:09:07.605"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.615" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:07.674" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:07.675" starttime="20150605 14:09:07.612"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:07.676" starttime="20150605 14:09:07.604"></status>
</kw>
<kw type="foritem" name="${process} =  9958 ?        Ss     0:00 bash -c tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log &gt; tmpfilemonitor10.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.683" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:07.682" starttime="20150605 14:09:07.678"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.688" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:07.751" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:07.752" starttime="20150605 14:09:07.685"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:07.753" starttime="20150605 14:09:07.677"></status>
</kw>
<kw type="foritem" name="${process} =  9973 ?        S      0:00 tail -f /var/log/inew/core-in-service/1.3.5/smsc-receive/inew-in.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.761" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:07.760" starttime="20150605 14:09:07.756"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:07.766" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:07.826" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:07.827" starttime="20150605 14:09:07.762"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:07.828" starttime="20150605 14:09:07.754"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:07.829" starttime="20150605 14:08:59.037"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:07.831" starttime="20150605 14:08:58.790"></status>
</kw>
<kw type="kw" name="SSHLibrary.Start Command">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>cat tmpfilemonitor${ssh_connection}.log</arg>
</arguments>
<msg timestamp="20150605 14:09:07.838" level="INFO">Starting command 'cat tmpfilemonitor2.log'.</msg>
<status status="PASS" endtime="20150605 14:09:07.868" starttime="20150605 14:09:07.835"></status>
</kw>
<kw type="kw" name="${stdout_string} = SSHLibrary.Read Command Output">
<doc>Returns outputs of the most recent started command.</doc>
<arguments>
</arguments>
<msg timestamp="20150605 14:09:07.873" level="INFO">Reading output of command 'cat tmpfilemonitor2.log'.</msg>
<msg timestamp="20150605 14:09:07.963" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150605 14:09:07.968" level="INFO">${stdout_string} = [2015-06-05 12:05:27,265][INFO ][..m.c.c.AbstractContextComponent                  ][][][][][] Context count: 0
[2015-06-05 12:05:27,265][DEBUG][..m.c.c.AbstractContextComponent$ContextCountTask ][][]...</msg>
<status status="PASS" endtime="20150605 14:09:07.966" starttime="20150605 14:09:07.870"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>rm tmpfilemonitor${ssh_connection}.log</arg>
</arguments>
<msg timestamp="20150605 14:09:07.974" level="INFO">Executing command 'rm tmpfilemonitor2.log'.</msg>
<msg timestamp="20150605 14:09:08.039" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20150605 14:09:08.041" starttime="20150605 14:09:07.970"></status>
</kw>
<msg timestamp="20150605 14:09:08.046" level="INFO">${tailed_text} = [2015-06-05 12:05:27,265][INFO ][..m.c.c.AbstractContextComponent                  ][][][][][] Context count: 0
[2015-06-05 12:05:27,265][DEBUG][..m.c.c.AbstractContextComponent$ContextCountTask ][][]...</msg>
<status status="PASS" endtime="20150605 14:09:08.044" starttime="20150605 14:08:58.755"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword Unless">
<doc>Runs the given keyword with the given arguments, if `condition` is false.</doc>
<arguments>
<arg>'${store_to_file_path}'=='${EMPTY}'</arg>
<arg>Create File</arg>
<arg>${store_to_file_path}</arg>
<arg>${tailed_text}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${store_to_file_path}</arg>
<arg>${tailed_text}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.066" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/LongMOC_ssh_tail_log-in.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/LongMOC_ssh_tail_log-in.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150605 14:09:08.068" starttime="20150605 14:09:08.058"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:08.069" starttime="20150605 14:09:08.048"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:08.090" starttime="20150605 14:09:08.087"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20150605 14:09:08.097" starttime="20150605 14:09:08.092"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:08.100" starttime="20150605 14:09:08.072"></status>
</kw>
<msg timestamp="20150605 14:09:08.104" level="INFO">${tailed_text} = [2015-06-05 12:05:27,265][INFO ][..m.c.c.AbstractContextComponent                  ][][][][][] Context count: 0
[2015-06-05 12:05:27,265][DEBUG][..m.c.c.AbstractContextComponent$ContextCountTask ][][]...</msg>
<status status="PASS" endtime="20150605 14:09:08.102" starttime="20150605 14:08:58.734"></status>
</kw>
<kw type="kw" name="Check Long MOC IN log">
<doc>Checks the tailed log file of multi-slice (long) MOC call created on IN.</doc>
<arguments>
<arg>LongMOC_${TAILED_IN_LOG_FILE}</arg>
<arg>${rc}</arg>
</arguments>
<kw type="kw" name="${temp} = OperatingSystem.Get File">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${log_file}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.126" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/LongMOC_ssh_tail_log-in.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/LongMOC_ssh_tail_log-in.log&lt;/a&gt;'</msg>
<msg timestamp="20150605 14:09:08.130" level="INFO">${temp} = [2015-06-05 12:05:27,265][INFO ][..m.c.c.AbstractContextComponent                  ][][][][][] Context count: 0
[2015-06-05 12:05:27,265][DEBUG][..m.c.c.AbstractContextComponent$ContextCountTask ][][]...</msg>
<status status="PASS" endtime="20150605 14:09:08.129" starttime="20150605 14:09:08.123"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rel_c}</arg>
<arg>0</arg>
<arg>msg=CG session failed - check MOC IN log</arg>
</arguments>
<msg timestamp="20150605 14:09:08.136" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20150605 14:09:08.137" starttime="20150605 14:09:08.132"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${temp}</arg>
<arg>TrafficType: Originating</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:08.143" starttime="20150605 14:09:08.139"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${temp}</arg>
<arg>Imsi: ${TESTSUBCRIBERS IMSI RANGE START}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:08.150" starttime="20150605 14:09:08.145"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${temp}</arg>
<arg>UsedTime: 136000</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:08.155" starttime="20150605 14:09:08.151"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Not Contain">
<doc>Fails if `item1` contains `item2` one or more times.</doc>
<arguments>
<arg>${temp}</arg>
<arg>Exception</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:08.161" starttime="20150605 14:09:08.157"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:08.163" starttime="20150605 14:09:08.107"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN OK...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150605 14:09:08.167" level="INFO">IN OK...</msg>
<status status="PASS" endtime="20150605 14:09:08.169" starttime="20150605 14:09:08.164"></status>
</kw>
<kw type="kw" name="${tailed_text} = ssh-support-resource.SSH Close File Monitor And Logout">
<doc>Combines 'SSH Close File Monitor' and 'SSH Logout' for compacter coding style</doc>
<arguments>
<arg>${ssh_connection_xdr}</arg>
<arg>MOC_${TAILED_XDR_LOG_FILE}</arg>
</arguments>
<kw type="kw" name="${tailed_text} = ssh-support-resource.SSH Close File Monitor">
<doc>Closes a file monitor created via 'SSH Start File Monitor' and returns all grabbed text</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:08.197" starttime="20150605 14:09:08.195"></status>
</kw>
<kw type="kw" name="${CTRL_C} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>chr(int(3))</arg>
</arguments>
<msg timestamp="20150605 14:09:08.201" level="INFO">${CTRL_C} = </msg>
<status status="PASS" endtime="20150605 14:09:08.201" starttime="20150605 14:09:08.198"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${CTRL_C}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.207" level="INFO">[m ^C</msg>
<status status="PASS" endtime="20150605 14:09:08.208" starttime="20150605 14:09:08.202"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Kill User Processes">
<doc>This is a helper to cleanup zombie processes left by the SSH lib's 'Start Command'</doc>
<arguments>
<arg>${ssh_connection}</arg>
<arg>tail</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:08.218" starttime="20150605 14:09:08.216"></status>
</kw>
<kw type="kw" name="${user} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>id -un</arg>
</arguments>
<msg timestamp="20150605 14:09:08.220" level="INFO">Executing command 'id -un'.</msg>
<msg timestamp="20150605 14:09:08.313" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150605 14:09:08.316" level="INFO">${user} = qa_automation</msg>
<status status="PASS" endtime="20150605 14:09:08.314" starttime="20150605 14:09:08.218"></status>
</kw>
<kw type="kw" name="${processes_string} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ps U ${user} --no-heading | grep ${command_name}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.321" level="INFO">Executing command 'ps U qa_automation --no-heading | grep tail'.</msg>
<msg timestamp="20150605 14:09:08.420" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150605 14:09:08.422" level="INFO">${processes_string} =   473 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log
  489 ?        S      0:04 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log
  542 ?        S...</msg>
<status status="PASS" endtime="20150605 14:09:08.421" starttime="20150605 14:09:08.317"></status>
</kw>
<kw type="kw" name="@{processes_list} = String.Split String">
<doc>Splits the `string` using `separator` as a delimiter string.</doc>
<arguments>
<arg>${processes_string}</arg>
<arg>${\n}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.431" level="INFO">@{processes_list} = [   473 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log |   489 ?        S      0:04 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log |   542 ?   ...</msg>
<status status="PASS" endtime="20150605 14:09:08.429" starttime="20150605 14:09:08.424"></status>
</kw>
<kw type="for" name="${process} IN [ @{processes_list} ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" name="${process} =   473 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.441" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:08.440" starttime="20150605 14:09:08.437"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.447" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:08.498" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:08.500" starttime="20150605 14:09:08.443"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:08.501" starttime="20150605 14:09:08.435"></status>
</kw>
<kw type="foritem" name="${process} =   489 ?        S      0:04 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.508" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:08.507" starttime="20150605 14:09:08.503"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.513" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:08.577" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:08.578" starttime="20150605 14:09:08.510"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:08.579" starttime="20150605 14:09:08.502"></status>
</kw>
<kw type="foritem" name="${process} =   542 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor4.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.587" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:08.586" starttime="20150605 14:09:08.582"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.591" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:08.655" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:08.657" starttime="20150605 14:09:08.588"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:08.658" starttime="20150605 14:09:08.580"></status>
</kw>
<kw type="foritem" name="${process} =   557 ?        S      0:00 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.665" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:08.664" starttime="20150605 14:09:08.660"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.670" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:08.735" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:08.737" starttime="20150605 14:09:08.667"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:08.738" starttime="20150605 14:09:08.659"></status>
</kw>
<kw type="foritem" name="${process} =   762 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.746" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:08.744" starttime="20150605 14:09:08.740"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.750" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:08.813" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:08.814" starttime="20150605 14:09:08.747"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:08.815" starttime="20150605 14:09:08.738"></status>
</kw>
<kw type="foritem" name="${process} =   777 ?        S      0:00 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.823" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:08.822" starttime="20150605 14:09:08.818"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.827" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:08.890" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:08.892" starttime="20150605 14:09:08.824"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:08.893" starttime="20150605 14:09:08.816"></status>
</kw>
<kw type="foritem" name="${process} =   797 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.900" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:08.899" starttime="20150605 14:09:08.895"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.905" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:08.967" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:08.969" starttime="20150605 14:09:08.902"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:08.970" starttime="20150605 14:09:08.893"></status>
</kw>
<kw type="foritem" name="${process} =   812 ?        S      0:03 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.978" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:08.977" starttime="20150605 14:09:08.972"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:08.983" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:09.047" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:09.048" starttime="20150605 14:09:08.979"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:09.051" starttime="20150605 14:09:08.971"></status>
</kw>
<kw type="foritem" name="${process} =  1314 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.058" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:09.057" starttime="20150605 14:09:09.054"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.064" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:09.126" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:09.127" starttime="20150605 14:09:09.060"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:09.128" starttime="20150605 14:09:09.052"></status>
</kw>
<kw type="foritem" name="${process} =  1329 ?        S      0:01 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.136" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:09.135" starttime="20150605 14:09:09.131"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.141" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:09.204" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:09.206" starttime="20150605 14:09:09.138"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:09.207" starttime="20150605 14:09:09.129"></status>
</kw>
<kw type="foritem" name="${process} =  1396 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor4.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.214" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:09.213" starttime="20150605 14:09:09.209"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.219" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:09.281" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:09.282" starttime="20150605 14:09:09.216"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:09.283" starttime="20150605 14:09:09.208"></status>
</kw>
<kw type="foritem" name="${process} =  1411 ?        S      0:01 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.290" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:09.289" starttime="20150605 14:09:09.286"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.296" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:09.360" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:09.361" starttime="20150605 14:09:09.292"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:09.362" starttime="20150605 14:09:09.284"></status>
</kw>
<kw type="foritem" name="${process} =  1492 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor7.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.369" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:09.368" starttime="20150605 14:09:09.364"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.374" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:09.438" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:09.439" starttime="20150605 14:09:09.371"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:09.440" starttime="20150605 14:09:09.363"></status>
</kw>
<kw type="foritem" name="${process} =  1508 ?        S      0:01 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.447" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:09.446" starttime="20150605 14:09:09.443"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.453" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:09.516" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:09.517" starttime="20150605 14:09:09.450"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:09.518" starttime="20150605 14:09:09.441"></status>
</kw>
<kw type="foritem" name="${process} =  1572 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.525" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:09.524" starttime="20150605 14:09:09.520"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.530" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:09.594" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:09.595" starttime="20150605 14:09:09.527"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:09.596" starttime="20150605 14:09:09.519"></status>
</kw>
<kw type="foritem" name="${process} =  1587 ?        S      0:02 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.603" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:09.602" starttime="20150605 14:09:09.598"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.608" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:09.672" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:09.673" starttime="20150605 14:09:09.605"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:09.675" starttime="20150605 14:09:09.597"></status>
</kw>
<kw type="foritem" name="${process} =  1601 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.681" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:09.681" starttime="20150605 14:09:09.677"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.686" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:09.753" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:09.755" starttime="20150605 14:09:09.683"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:09.756" starttime="20150605 14:09:09.675"></status>
</kw>
<kw type="foritem" name="${process} =  1616 ?        S      0:06 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.765" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:09.764" starttime="20150605 14:09:09.759"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.769" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:09.833" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:09.834" starttime="20150605 14:09:09.766"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:09.835" starttime="20150605 14:09:09.757"></status>
</kw>
<kw type="foritem" name="${process} =  1658 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor4.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.842" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:09.841" starttime="20150605 14:09:09.837"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.847" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:09.910" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:09.912" starttime="20150605 14:09:09.844"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:09.913" starttime="20150605 14:09:09.836"></status>
</kw>
<kw type="foritem" name="${process} =  1673 ?        S      0:03 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.920" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:09.919" starttime="20150605 14:09:09.915"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.924" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:09.988" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:09.989" starttime="20150605 14:09:09.922"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:09.990" starttime="20150605 14:09:09.914"></status>
</kw>
<kw type="foritem" name="${process} =  1700 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:09.997" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:09.996" starttime="20150605 14:09:09.992"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.002" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:10.065" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:10.066" starttime="20150605 14:09:09.999"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:10.069" starttime="20150605 14:09:09.991"></status>
</kw>
<kw type="foritem" name="${process} =  1715 ?        S      0:06 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.076" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:10.075" starttime="20150605 14:09:10.072"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.081" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:10.143" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:10.144" starttime="20150605 14:09:10.078"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:10.146" starttime="20150605 14:09:10.070"></status>
</kw>
<kw type="foritem" name="${process} =  1832 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.152" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:10.151" starttime="20150605 14:09:10.148"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.157" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:10.220" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:10.221" starttime="20150605 14:09:10.154"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:10.222" starttime="20150605 14:09:10.146"></status>
</kw>
<kw type="foritem" name="${process} =  1847 ?        S      0:09 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.229" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:10.228" starttime="20150605 14:09:10.225"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.234" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:10.297" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:10.298" starttime="20150605 14:09:10.231"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:10.299" starttime="20150605 14:09:10.223"></status>
</kw>
<kw type="foritem" name="${process} =  2151 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.306" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:10.305" starttime="20150605 14:09:10.302"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.311" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:10.376" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:10.378" starttime="20150605 14:09:10.308"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:10.379" starttime="20150605 14:09:10.300"></status>
</kw>
<kw type="foritem" name="${process} =  2166 ?        S      0:00 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.386" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:10.385" starttime="20150605 14:09:10.381"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.391" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:10.454" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:10.455" starttime="20150605 14:09:10.388"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:10.456" starttime="20150605 14:09:10.380"></status>
</kw>
<kw type="foritem" name="${process} =  2222 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor4.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.463" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:10.462" starttime="20150605 14:09:10.458"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.468" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:10.532" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:10.533" starttime="20150605 14:09:10.465"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:10.535" starttime="20150605 14:09:10.457"></status>
</kw>
<kw type="foritem" name="${process} =  2237 ?        S      0:00 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.541" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:10.540" starttime="20150605 14:09:10.537"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.546" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:10.610" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:10.611" starttime="20150605 14:09:10.543"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:10.612" starttime="20150605 14:09:10.535"></status>
</kw>
<kw type="foritem" name="${process} =  2274 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.619" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:10.618" starttime="20150605 14:09:10.614"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.624" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:10.688" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:10.690" starttime="20150605 14:09:10.621"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:10.691" starttime="20150605 14:09:10.613"></status>
</kw>
<kw type="foritem" name="${process} =  2289 ?        S      0:02 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.698" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:10.697" starttime="20150605 14:09:10.693"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.703" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:10.766" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:10.767" starttime="20150605 14:09:10.700"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:10.769" starttime="20150605 14:09:10.691"></status>
</kw>
<kw type="foritem" name="${process} =  2415 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.775" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:10.774" starttime="20150605 14:09:10.771"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.780" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:10.844" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:10.845" starttime="20150605 14:09:10.777"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:10.846" starttime="20150605 14:09:10.769"></status>
</kw>
<kw type="foritem" name="${process} =  2430 ?        S      0:04 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.853" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:10.852" starttime="20150605 14:09:10.849"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.858" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:10.922" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:10.923" starttime="20150605 14:09:10.855"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:10.924" starttime="20150605 14:09:10.847"></status>
</kw>
<kw type="foritem" name="${process} =  2680 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.931" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:10.930" starttime="20150605 14:09:10.926"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:10.936" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:11.000" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:11.002" starttime="20150605 14:09:10.933"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:11.004" starttime="20150605 14:09:10.925"></status>
</kw>
<kw type="foritem" name="${process} =  2696 ?        S      0:02 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.012" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:11.011" starttime="20150605 14:09:11.007"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.017" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:11.078" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:11.079" starttime="20150605 14:09:11.014"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:11.080" starttime="20150605 14:09:11.006"></status>
</kw>
<kw type="foritem" name="${process} =  2912 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.087" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:11.086" starttime="20150605 14:09:11.082"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.092" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:11.156" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:11.157" starttime="20150605 14:09:11.089"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:11.158" starttime="20150605 14:09:11.081"></status>
</kw>
<kw type="foritem" name="${process} =  2927 ?        S      0:03 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.165" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:11.164" starttime="20150605 14:09:11.160"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.169" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:11.234" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:11.235" starttime="20150605 14:09:11.166"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:11.236" starttime="20150605 14:09:11.159"></status>
</kw>
<kw type="foritem" name="${process} =  3640 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.243" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:11.242" starttime="20150605 14:09:11.238"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.248" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:11.312" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:11.313" starttime="20150605 14:09:11.245"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:11.314" starttime="20150605 14:09:11.237"></status>
</kw>
<kw type="foritem" name="${process} =  3660 ?        S      0:00 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.321" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:11.320" starttime="20150605 14:09:11.316"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.326" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:11.389" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:11.390" starttime="20150605 14:09:11.323"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:11.392" starttime="20150605 14:09:11.315"></status>
</kw>
<kw type="foritem" name="${process} =  3669 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.398" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:11.397" starttime="20150605 14:09:11.394"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.403" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:11.467" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:11.468" starttime="20150605 14:09:11.400"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:11.469" starttime="20150605 14:09:11.392"></status>
</kw>
<kw type="foritem" name="${process} =  3684 ?        S      0:02 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.476" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:11.475" starttime="20150605 14:09:11.472"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.481" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:11.546" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:11.547" starttime="20150605 14:09:11.478"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:11.548" starttime="20150605 14:09:11.470"></status>
</kw>
<kw type="foritem" name="${process} =  4031 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.555" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:11.554" starttime="20150605 14:09:11.550"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.559" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:11.625" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:11.626" starttime="20150605 14:09:11.556"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:11.627" starttime="20150605 14:09:11.549"></status>
</kw>
<kw type="foritem" name="${process} =  4046 ?        S      0:02 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.634" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:11.633" starttime="20150605 14:09:11.629"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.638" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:11.703" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:11.704" starttime="20150605 14:09:11.635"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:11.705" starttime="20150605 14:09:11.628"></status>
</kw>
<kw type="foritem" name="${process} =  4131 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor4.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.712" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:11.711" starttime="20150605 14:09:11.707"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.717" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:11.786" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:11.787" starttime="20150605 14:09:11.714"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:11.788" starttime="20150605 14:09:11.706"></status>
</kw>
<kw type="foritem" name="${process} =  4146 ?        S      0:03 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.795" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:11.794" starttime="20150605 14:09:11.790"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.800" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:11.864" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:11.865" starttime="20150605 14:09:11.797"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:11.866" starttime="20150605 14:09:11.789"></status>
</kw>
<kw type="foritem" name="${process} =  4440 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.873" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:11.872" starttime="20150605 14:09:11.869"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.878" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:11.941" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:11.942" starttime="20150605 14:09:11.875"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:11.943" starttime="20150605 14:09:11.867"></status>
</kw>
<kw type="foritem" name="${process} =  4455 ?        S      0:02 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.950" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:11.949" starttime="20150605 14:09:11.945"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:11.954" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:12.019" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:12.021" starttime="20150605 14:09:11.952"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:12.023" starttime="20150605 14:09:11.944"></status>
</kw>
<kw type="foritem" name="${process} =  4798 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.035" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:12.034" starttime="20150605 14:09:12.026"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.039" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:12.097" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:12.098" starttime="20150605 14:09:12.036"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:12.099" starttime="20150605 14:09:12.025"></status>
</kw>
<kw type="foritem" name="${process} =  4813 ?        S      0:02 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.106" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:12.105" starttime="20150605 14:09:12.101"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.110" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:12.174" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:12.175" starttime="20150605 14:09:12.107"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:12.176" starttime="20150605 14:09:12.100"></status>
</kw>
<kw type="foritem" name="${process} =  4854 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.183" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:12.182" starttime="20150605 14:09:12.179"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.188" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:12.252" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:12.253" starttime="20150605 14:09:12.185"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:12.254" starttime="20150605 14:09:12.177"></status>
</kw>
<kw type="foritem" name="${process} =  4869 ?        S      0:02 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.261" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:12.260" starttime="20150605 14:09:12.256"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.265" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:12.329" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:12.330" starttime="20150605 14:09:12.262"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:12.331" starttime="20150605 14:09:12.255"></status>
</kw>
<kw type="foritem" name="${process} =  5062 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor4.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.338" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:12.337" starttime="20150605 14:09:12.333"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.342" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:12.406" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:12.407" starttime="20150605 14:09:12.339"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:12.408" starttime="20150605 14:09:12.332"></status>
</kw>
<kw type="foritem" name="${process} =  5077 ?        S      0:00 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.414" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:12.413" starttime="20150605 14:09:12.410"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.419" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:12.482" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:12.483" starttime="20150605 14:09:12.416"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:12.484" starttime="20150605 14:09:12.409"></status>
</kw>
<kw type="foritem" name="${process} =  5293 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.490" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:12.489" starttime="20150605 14:09:12.486"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.495" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:12.558" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:12.559" starttime="20150605 14:09:12.492"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:12.560" starttime="20150605 14:09:12.485"></status>
</kw>
<kw type="foritem" name="${process} =  5308 ?        S      0:06 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.567" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:12.566" starttime="20150605 14:09:12.562"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.571" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:12.635" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:12.636" starttime="20150605 14:09:12.568"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:12.637" starttime="20150605 14:09:12.561"></status>
</kw>
<kw type="foritem" name="${process} =  5446 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.644" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:12.643" starttime="20150605 14:09:12.639"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.648" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:12.714" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:12.715" starttime="20150605 14:09:12.645"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:12.716" starttime="20150605 14:09:12.638"></status>
</kw>
<kw type="foritem" name="${process} =  5461 ?        S      0:02 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.725" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:12.724" starttime="20150605 14:09:12.719"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.729" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:12.792" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:12.793" starttime="20150605 14:09:12.727"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:12.794" starttime="20150605 14:09:12.717"></status>
</kw>
<kw type="foritem" name="${process} =  5612 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.801" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:12.800" starttime="20150605 14:09:12.796"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.805" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:12.872" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:12.873" starttime="20150605 14:09:12.802"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:12.874" starttime="20150605 14:09:12.795"></status>
</kw>
<kw type="foritem" name="${process} =  5620 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.880" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:12.879" starttime="20150605 14:09:12.876"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.884" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:12.963" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:12.965" starttime="20150605 14:09:12.882"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:12.966" starttime="20150605 14:09:12.875"></status>
</kw>
<kw type="foritem" name="${process} =  5628 ?        S      0:03 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.973" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:12.972" starttime="20150605 14:09:12.968"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:12.977" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:13.041" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:13.042" starttime="20150605 14:09:12.975"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:13.044" starttime="20150605 14:09:12.966"></status>
</kw>
<kw type="foritem" name="${process} =  5635 ?        S      0:06 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.052" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:13.051" starttime="20150605 14:09:13.047"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.056" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:13.119" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:13.121" starttime="20150605 14:09:13.053"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:13.122" starttime="20150605 14:09:13.046"></status>
</kw>
<kw type="foritem" name="${process} =  5982 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor4.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.128" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:13.127" starttime="20150605 14:09:13.124"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.132" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:13.197" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:13.198" starttime="20150605 14:09:13.130"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:13.199" starttime="20150605 14:09:13.122"></status>
</kw>
<kw type="foritem" name="${process} =  5997 ?        S      0:06 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.206" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:13.205" starttime="20150605 14:09:13.201"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.210" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:13.275" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:13.276" starttime="20150605 14:09:13.207"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:13.277" starttime="20150605 14:09:13.200"></status>
</kw>
<kw type="foritem" name="${process} =  6372 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor7.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.283" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:13.282" starttime="20150605 14:09:13.279"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.288" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:13.352" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:13.354" starttime="20150605 14:09:13.285"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:13.354" starttime="20150605 14:09:13.278"></status>
</kw>
<kw type="foritem" name="${process} =  6387 ?        S      0:06 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.361" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:13.360" starttime="20150605 14:09:13.357"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.365" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:13.430" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:13.431" starttime="20150605 14:09:13.362"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:13.432" starttime="20150605 14:09:13.355"></status>
</kw>
<kw type="foritem" name="${process} =  6932 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.439" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:13.438" starttime="20150605 14:09:13.434"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.443" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:13.508" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:13.509" starttime="20150605 14:09:13.440"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:13.510" starttime="20150605 14:09:13.433"></status>
</kw>
<kw type="foritem" name="${process} =  6947 ?        S      0:08 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.516" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:13.515" starttime="20150605 14:09:13.512"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.521" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:13.586" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:13.587" starttime="20150605 14:09:13.518"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:13.588" starttime="20150605 14:09:13.511"></status>
</kw>
<kw type="foritem" name="${process} =  7107 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.594" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:13.593" starttime="20150605 14:09:13.590"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.598" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:13.664" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:13.666" starttime="20150605 14:09:13.596"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:13.667" starttime="20150605 14:09:13.588"></status>
</kw>
<kw type="foritem" name="${process} =  7122 ?        S      0:00 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.673" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:13.672" starttime="20150605 14:09:13.669"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.678" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:13.741" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:13.742" starttime="20150605 14:09:13.675"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:13.743" starttime="20150605 14:09:13.667"></status>
</kw>
<kw type="foritem" name="${process} =  7166 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.745" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:13.745" starttime="20150605 14:09:13.743"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.747" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:13.819" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:13.819" starttime="20150605 14:09:13.746"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:13.820" starttime="20150605 14:09:13.743"></status>
</kw>
<kw type="foritem" name="${process} =  7169 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.823" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:13.823" starttime="20150605 14:09:13.821"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.825" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:13.897" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:13.898" starttime="20150605 14:09:13.824"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:13.899" starttime="20150605 14:09:13.820"></status>
</kw>
<kw type="foritem" name="${process} =  7182 ?        S      0:00 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.906" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:13.905" starttime="20150605 14:09:13.901"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.910" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:13.974" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:13.975" starttime="20150605 14:09:13.907"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:13.977" starttime="20150605 14:09:13.900"></status>
</kw>
<kw type="foritem" name="${process} =  7184 ?        S      0:02 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.983" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:13.982" starttime="20150605 14:09:13.978"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:13.987" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:14.053" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:14.054" starttime="20150605 14:09:13.984"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:14.056" starttime="20150605 14:09:13.977"></status>
</kw>
<kw type="foritem" name="${process} =  7223 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.064" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:14.063" starttime="20150605 14:09:14.059"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.068" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:14.130" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:14.132" starttime="20150605 14:09:14.065"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:14.133" starttime="20150605 14:09:14.058"></status>
</kw>
<kw type="foritem" name="${process} =  7238 ?        S      0:08 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.139" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:14.138" starttime="20150605 14:09:14.135"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.143" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:14.208" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:14.208" starttime="20150605 14:09:14.141"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:14.209" starttime="20150605 14:09:14.133"></status>
</kw>
<kw type="foritem" name="${process} =  7257 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor6.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.212" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:14.211" starttime="20150605 14:09:14.210"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.213" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:14.285" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:14.286" starttime="20150605 14:09:14.212"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:14.286" starttime="20150605 14:09:14.209"></status>
</kw>
<kw type="foritem" name="${process} =  7272 ?        S      0:00 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.289" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:14.288" starttime="20150605 14:09:14.287"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.291" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:14.363" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:14.364" starttime="20150605 14:09:14.290"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:14.365" starttime="20150605 14:09:14.286"></status>
</kw>
<kw type="foritem" name="${process} =  7279 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.371" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:14.370" starttime="20150605 14:09:14.367"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.376" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:14.441" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:14.442" starttime="20150605 14:09:14.373"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:14.443" starttime="20150605 14:09:14.366"></status>
</kw>
<kw type="foritem" name="${process} =  7294 ?        S      0:02 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.450" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:14.449" starttime="20150605 14:09:14.445"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.454" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:14.519" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:14.520" starttime="20150605 14:09:14.451"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:14.521" starttime="20150605 14:09:14.444"></status>
</kw>
<kw type="foritem" name="${process} =  7335 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor9.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.528" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:14.527" starttime="20150605 14:09:14.523"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.532" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:14.597" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:14.598" starttime="20150605 14:09:14.529"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:14.599" starttime="20150605 14:09:14.522"></status>
</kw>
<kw type="foritem" name="${process} =  7350 ?        S      0:00 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.606" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:14.605" starttime="20150605 14:09:14.601"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.610" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:14.673" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:14.675" starttime="20150605 14:09:14.607"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:14.676" starttime="20150605 14:09:14.600"></status>
</kw>
<kw type="foritem" name="${process} =  7378 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.682" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:14.681" starttime="20150605 14:09:14.678"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.686" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:14.751" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:14.752" starttime="20150605 14:09:14.683"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:14.753" starttime="20150605 14:09:14.676"></status>
</kw>
<kw type="foritem" name="${process} =  7393 ?        S      0:02 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.759" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:14.758" starttime="20150605 14:09:14.755"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.763" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:14.828" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:14.830" starttime="20150605 14:09:14.761"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:14.831" starttime="20150605 14:09:14.754"></status>
</kw>
<kw type="foritem" name="${process} =  8244 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.837" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:14.836" starttime="20150605 14:09:14.832"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.841" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:14.906" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:14.907" starttime="20150605 14:09:14.838"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:14.908" starttime="20150605 14:09:14.831"></status>
</kw>
<kw type="foritem" name="${process} =  8259 ?        S      0:02 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.914" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:14.913" starttime="20150605 14:09:14.910"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.918" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:14.983" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:14.984" starttime="20150605 14:09:14.915"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:14.985" starttime="20150605 14:09:14.908"></status>
</kw>
<kw type="foritem" name="${process} = 15689 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log &gt; tmpfilemonitor1.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.992" level="INFO">${pid} = 15689</msg>
<status status="PASS" endtime="20150605 14:09:14.991" starttime="20150605 14:09:14.987"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:14.996" level="INFO">Executing command 'kill -9 15689'.</msg>
<msg timestamp="20150605 14:09:15.061" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20150605 14:09:15.063" starttime="20150605 14:09:14.993"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:15.065" starttime="20150605 14:09:14.986"></status>
</kw>
<kw type="foritem" name="${process} = 15704 ?        S      0:00 tail -f /var/log/inew/xdr/5.2.2/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.072" level="INFO">${pid} = 15704</msg>
<status status="PASS" endtime="20150605 14:09:15.071" starttime="20150605 14:09:15.068"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.076" level="INFO">Executing command 'kill -9 15704'.</msg>
<msg timestamp="20150605 14:09:15.139" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20150605 14:09:15.140" starttime="20150605 14:09:15.073"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:15.141" starttime="20150605 14:09:15.066"></status>
</kw>
<kw type="foritem" name="${process} = 15929 ?        Ss     0:00 bash -c ps U qa_automation --no-heading | grep tail">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.147" level="INFO">${pid} = 15929</msg>
<status status="PASS" endtime="20150605 14:09:15.146" starttime="20150605 14:09:15.143"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.151" level="INFO">Executing command 'kill -9 15929'.</msg>
<msg timestamp="20150605 14:09:15.217" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:15.218" starttime="20150605 14:09:15.148"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:15.219" starttime="20150605 14:09:15.141"></status>
</kw>
<kw type="foritem" name="${process} = 15945 ?        S      0:00 grep tail">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.225" level="INFO">${pid} = 15945</msg>
<status status="PASS" endtime="20150605 14:09:15.225" starttime="20150605 14:09:15.221"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.230" level="INFO">Executing command 'kill -9 15945'.</msg>
<msg timestamp="20150605 14:09:15.295" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:15.296" starttime="20150605 14:09:15.227"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:15.297" starttime="20150605 14:09:15.220"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:15.298" starttime="20150605 14:09:08.433"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:15.300" starttime="20150605 14:09:08.209"></status>
</kw>
<kw type="kw" name="SSHLibrary.Start Command">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>cat tmpfilemonitor${ssh_connection}.log</arg>
</arguments>
<msg timestamp="20150605 14:09:15.305" level="INFO">Starting command 'cat tmpfilemonitor1.log'.</msg>
<status status="PASS" endtime="20150605 14:09:15.337" starttime="20150605 14:09:15.302"></status>
</kw>
<kw type="kw" name="${stdout_string} = SSHLibrary.Read Command Output">
<doc>Returns outputs of the most recent started command.</doc>
<arguments>
</arguments>
<msg timestamp="20150605 14:09:15.341" level="INFO">Reading output of command 'cat tmpfilemonitor1.log'.</msg>
<msg timestamp="20150605 14:09:15.381" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150605 14:09:15.383" level="INFO">${stdout_string} = [2015-06-05 12:06:30,626][INFO ][ActiveMQ Session Task-8][XDRConsumerImpl                                   ][ 318] -------- xdr processed successfully --------
[2015-06-05 12:06:30,627][INFO ][Active...</msg>
<status status="PASS" endtime="20150605 14:09:15.382" starttime="20150605 14:09:15.339"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>rm tmpfilemonitor${ssh_connection}.log</arg>
</arguments>
<msg timestamp="20150605 14:09:15.387" level="INFO">Executing command 'rm tmpfilemonitor1.log'.</msg>
<msg timestamp="20150605 14:09:15.453" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20150605 14:09:15.454" starttime="20150605 14:09:15.384"></status>
</kw>
<msg timestamp="20150605 14:09:15.458" level="INFO">${tailed_text} = [2015-06-05 12:06:30,626][INFO ][ActiveMQ Session Task-8][XDRConsumerImpl                                   ][ 318] -------- xdr processed successfully --------
[2015-06-05 12:06:30,627][INFO ][Active...</msg>
<status status="PASS" endtime="20150605 14:09:15.456" starttime="20150605 14:09:08.188"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword Unless">
<doc>Runs the given keyword with the given arguments, if `condition` is false.</doc>
<arguments>
<arg>'${store_to_file_path}'=='${EMPTY}'</arg>
<arg>Create File</arg>
<arg>${store_to_file_path}</arg>
<arg>${tailed_text}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${store_to_file_path}</arg>
<arg>${tailed_text}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.474" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/MOC_ssh_tail_log-xdr.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/MOC_ssh_tail_log-xdr.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150605 14:09:15.475" starttime="20150605 14:09:15.469"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:15.477" starttime="20150605 14:09:15.460"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:15.495" starttime="20150605 14:09:15.492"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20150605 14:09:15.499" starttime="20150605 14:09:15.497"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:15.502" starttime="20150605 14:09:15.479"></status>
</kw>
<msg timestamp="20150605 14:09:15.506" level="INFO">${tailed_text} = [2015-06-05 12:06:30,626][INFO ][ActiveMQ Session Task-8][XDRConsumerImpl                                   ][ 318] -------- xdr processed successfully --------
[2015-06-05 12:06:30,627][INFO ][Active...</msg>
<status status="PASS" endtime="20150605 14:09:15.504" starttime="20150605 14:09:08.173"></status>
</kw>
<kw type="kw" name="Check Long MOC XDR log">
<doc>Checks the tailed log file of MOC call created on XDR.</doc>
<arguments>
<arg>MOC_${TAILED_XDR_LOG_FILE}</arg>
</arguments>
<kw type="kw" name="${temp} = OperatingSystem.Get File">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${log_file}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.524" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/MOC_ssh_tail_log-xdr.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/MOC_ssh_tail_log-xdr.log&lt;/a&gt;'</msg>
<msg timestamp="20150605 14:09:15.527" level="INFO">${temp} = [2015-06-05 12:06:30,626][INFO ][ActiveMQ Session Task-8][XDRConsumerImpl                                   ][ 318] -------- xdr processed successfully --------
[2015-06-05 12:06:30,627][INFO ][Active...</msg>
<status status="PASS" endtime="20150605 14:09:15.526" starttime="20150605 14:09:15.521"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Log</arg>
<arg>${temp}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:15.531" starttime="20150605 14:09:15.529"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Should Not Contain</arg>
<arg>${temp}</arg>
<arg>Exception</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:15.534" starttime="20150605 14:09:15.532"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${test_type}' == 'NOK'</arg>
<arg>Should Contain</arg>
<arg>${temp}</arg>
<arg>Exception</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:15.538" starttime="20150605 14:09:15.536"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${temp}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:15.543" starttime="20150605 14:09:15.540"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${temp}</arg>
<arg>CRCE|CDR</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:15.548" starttime="20150605 14:09:15.545"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${temp}</arg>
<arg>136000|136000</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:15.552" starttime="20150605 14:09:15.549"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${temp}</arg>
<arg>Onnet|Originating</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:15.556" starttime="20150605 14:09:15.553"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:15.558" starttime="20150605 14:09:15.509"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR OK...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150605 14:09:15.562" level="INFO">XDR OK...</msg>
<status status="PASS" endtime="20150605 14:09:15.563" starttime="20150605 14:09:15.559"></status>
</kw>
<kw type="kw" name="${tailed_text} = ssh-support-resource.SSH Close File Monitor And Logout">
<doc>Combines 'SSH Close File Monitor' and 'SSH Logout' for compacter coding style</doc>
<arguments>
<arg>${ssh_connection_crce}</arg>
<arg>MOC_${TAILED_CRCE_LOG_FILE}</arg>
</arguments>
<kw type="kw" name="${tailed_text} = ssh-support-resource.SSH Close File Monitor">
<doc>Closes a file monitor created via 'SSH Start File Monitor' and returns all grabbed text</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:15.597" starttime="20150605 14:09:15.594"></status>
</kw>
<kw type="kw" name="${CTRL_C} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>chr(int(3))</arg>
</arguments>
<msg timestamp="20150605 14:09:15.605" level="INFO">${CTRL_C} = </msg>
<status status="PASS" endtime="20150605 14:09:15.604" starttime="20150605 14:09:15.598"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${CTRL_C}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.612" level="INFO">[m ^C</msg>
<status status="PASS" endtime="20150605 14:09:15.613" starttime="20150605 14:09:15.606"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Kill User Processes">
<doc>This is a helper to cleanup zombie processes left by the SSH lib's 'Start Command'</doc>
<arguments>
<arg>${ssh_connection}</arg>
<arg>tail</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:15.631" starttime="20150605 14:09:15.628"></status>
</kw>
<kw type="kw" name="${user} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>id -un</arg>
</arguments>
<msg timestamp="20150605 14:09:15.635" level="INFO">Executing command 'id -un'.</msg>
<msg timestamp="20150605 14:09:15.746" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150605 14:09:15.749" level="INFO">${user} = qa_automation</msg>
<status status="PASS" endtime="20150605 14:09:15.748" starttime="20150605 14:09:15.633"></status>
</kw>
<kw type="kw" name="${processes_string} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ps U ${user} --no-heading | grep ${command_name}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.755" level="INFO">Executing command 'ps U qa_automation --no-heading | grep tail'.</msg>
<msg timestamp="20150605 14:09:15.857" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150605 14:09:15.859" level="INFO">${processes_string} =   409 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log
  424 ?        S      0:01 tail -f /var/log/inew/crce/5.2.13/negret-0.log
  577 ?        Ss     ...</msg>
<status status="PASS" endtime="20150605 14:09:15.858" starttime="20150605 14:09:15.751"></status>
</kw>
<kw type="kw" name="@{processes_list} = String.Split String">
<doc>Splits the `string` using `separator` as a delimiter string.</doc>
<arguments>
<arg>${processes_string}</arg>
<arg>${\n}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.867" level="INFO">@{processes_list} = [   409 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log |   424 ?        S      0:01 tail -f /var/log/inew/crce/5.2.13/negret-0.log |   577 ?        S...</msg>
<status status="PASS" endtime="20150605 14:09:15.864" starttime="20150605 14:09:15.861"></status>
</kw>
<kw type="for" name="${process} IN [ @{processes_list} ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" name="${process} =   409 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.875" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:15.874" starttime="20150605 14:09:15.871"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.879" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:15.935" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:15.936" starttime="20150605 14:09:15.876"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:15.937" starttime="20150605 14:09:15.870"></status>
</kw>
<kw type="foritem" name="${process} =   424 ?        S      0:01 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.943" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:15.942" starttime="20150605 14:09:15.939"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:15.947" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:16.012" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:16.014" starttime="20150605 14:09:15.945"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:16.016" starttime="20150605 14:09:15.938"></status>
</kw>
<kw type="foritem" name="${process} =   577 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.023" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:16.022" starttime="20150605 14:09:16.018"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.027" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:16.091" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:16.092" starttime="20150605 14:09:16.024"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:16.093" starttime="20150605 14:09:16.017"></status>
</kw>
<kw type="foritem" name="${process} =   592 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.099" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:16.098" starttime="20150605 14:09:16.095"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.103" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:16.167" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:16.169" starttime="20150605 14:09:16.100"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:16.170" starttime="20150605 14:09:16.093"></status>
</kw>
<kw type="foritem" name="${process} =   666 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.175" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:16.174" starttime="20150605 14:09:16.171"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.179" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:16.245" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:16.246" starttime="20150605 14:09:16.177"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:16.247" starttime="20150605 14:09:16.170"></status>
</kw>
<kw type="foritem" name="${process} =   682 ?        S      0:01 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.253" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:16.252" starttime="20150605 14:09:16.249"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.257" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:16.324" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:16.325" starttime="20150605 14:09:16.254"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:16.326" starttime="20150605 14:09:16.248"></status>
</kw>
<kw type="foritem" name="${process} =   747 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.332" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:16.331" starttime="20150605 14:09:16.328"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.336" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:16.401" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:16.402" starttime="20150605 14:09:16.333"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:16.403" starttime="20150605 14:09:16.327"></status>
</kw>
<kw type="foritem" name="${process} =   763 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.410" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:16.409" starttime="20150605 14:09:16.405"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.414" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:16.479" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:16.480" starttime="20150605 14:09:16.412"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:16.481" starttime="20150605 14:09:16.404"></status>
</kw>
<kw type="foritem" name="${process} =   943 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.487" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:16.486" starttime="20150605 14:09:16.483"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.491" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:16.557" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:16.558" starttime="20150605 14:09:16.489"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:16.559" starttime="20150605 14:09:16.482"></status>
</kw>
<kw type="foritem" name="${process} =   958 ?        S      0:01 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.565" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:16.564" starttime="20150605 14:09:16.561"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.569" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:16.635" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:16.636" starttime="20150605 14:09:16.566"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:16.637" starttime="20150605 14:09:16.559"></status>
</kw>
<kw type="foritem" name="${process} =  1098 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.643" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:16.642" starttime="20150605 14:09:16.639"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.647" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:16.712" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:16.713" starttime="20150605 14:09:16.645"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:16.714" starttime="20150605 14:09:16.638"></status>
</kw>
<kw type="foritem" name="${process} =  1113 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.720" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:16.719" starttime="20150605 14:09:16.716"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.724" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:16.790" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:16.791" starttime="20150605 14:09:16.722"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:16.792" starttime="20150605 14:09:16.715"></status>
</kw>
<kw type="foritem" name="${process} =  1228 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.798" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:16.797" starttime="20150605 14:09:16.794"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.802" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:16.869" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:16.870" starttime="20150605 14:09:16.800"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:16.871" starttime="20150605 14:09:16.793"></status>
</kw>
<kw type="foritem" name="${process} =  1243 ?        S      0:01 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.877" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:16.876" starttime="20150605 14:09:16.873"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.881" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:16.948" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:16.949" starttime="20150605 14:09:16.879"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:16.950" starttime="20150605 14:09:16.872"></status>
</kw>
<kw type="foritem" name="${process} =  1438 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.956" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:16.955" starttime="20150605 14:09:16.952"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:16.960" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:17.027" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:17.028" starttime="20150605 14:09:16.958"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:17.030" starttime="20150605 14:09:16.951"></status>
</kw>
<kw type="foritem" name="${process} =  1455 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.037" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:17.036" starttime="20150605 14:09:17.033"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.041" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:17.105" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:17.106" starttime="20150605 14:09:17.038"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:17.107" starttime="20150605 14:09:17.032"></status>
</kw>
<kw type="foritem" name="${process} =  1513 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor6.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.113" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:17.112" starttime="20150605 14:09:17.109"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.117" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:17.183" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:17.184" starttime="20150605 14:09:17.114"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:17.185" starttime="20150605 14:09:17.107"></status>
</kw>
<kw type="foritem" name="${process} =  1529 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.191" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:17.190" starttime="20150605 14:09:17.187"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.195" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:17.260" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:17.261" starttime="20150605 14:09:17.192"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:17.262" starttime="20150605 14:09:17.185"></status>
</kw>
<kw type="foritem" name="${process} =  1826 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.268" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:17.267" starttime="20150605 14:09:17.264"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.272" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:17.339" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:17.340" starttime="20150605 14:09:17.269"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:17.341" starttime="20150605 14:09:17.263"></status>
</kw>
<kw type="foritem" name="${process} =  1841 ?        S      0:01 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.347" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:17.346" starttime="20150605 14:09:17.343"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.351" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:17.417" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:17.418" starttime="20150605 14:09:17.348"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:17.419" starttime="20150605 14:09:17.342"></status>
</kw>
<kw type="foritem" name="${process} =  2277 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.425" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:17.424" starttime="20150605 14:09:17.421"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.429" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:17.494" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:17.495" starttime="20150605 14:09:17.427"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:17.496" starttime="20150605 14:09:17.420"></status>
</kw>
<kw type="foritem" name="${process} =  2292 ?        S      0:01 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.502" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:17.501" starttime="20150605 14:09:17.498"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.506" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:17.570" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:17.571" starttime="20150605 14:09:17.503"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:17.572" starttime="20150605 14:09:17.496"></status>
</kw>
<kw type="foritem" name="${process} =  2412 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.578" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:17.577" starttime="20150605 14:09:17.574"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.582" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:17.647" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:17.648" starttime="20150605 14:09:17.580"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:17.650" starttime="20150605 14:09:17.573"></status>
</kw>
<kw type="foritem" name="${process} =  2427 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.656" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:17.655" starttime="20150605 14:09:17.652"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.660" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:17.725" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:17.726" starttime="20150605 14:09:17.658"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:17.727" starttime="20150605 14:09:17.651"></status>
</kw>
<kw type="foritem" name="${process} =  2503 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor6.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.733" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:17.732" starttime="20150605 14:09:17.729"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.737" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:17.804" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:17.805" starttime="20150605 14:09:17.734"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:17.806" starttime="20150605 14:09:17.728"></status>
</kw>
<kw type="foritem" name="${process} =  2519 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.812" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:17.811" starttime="20150605 14:09:17.807"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.816" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:17.882" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:17.883" starttime="20150605 14:09:17.813"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:17.884" starttime="20150605 14:09:17.806"></status>
</kw>
<kw type="foritem" name="${process} =  2850 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.890" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:17.889" starttime="20150605 14:09:17.886"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.894" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:17.959" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:17.960" starttime="20150605 14:09:17.891"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:17.961" starttime="20150605 14:09:17.884"></status>
</kw>
<kw type="foritem" name="${process} =  2865 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.967" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:17.966" starttime="20150605 14:09:17.963"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:17.971" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:18.037" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:18.039" starttime="20150605 14:09:17.968"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:18.041" starttime="20150605 14:09:17.961"></status>
</kw>
<kw type="foritem" name="${process} =  2907 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.048" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:18.047" starttime="20150605 14:09:18.044"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.052" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:18.116" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:18.117" starttime="20150605 14:09:18.049"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:18.118" starttime="20150605 14:09:18.042"></status>
</kw>
<kw type="foritem" name="${process} =  2922 ?        S      0:01 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.123" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:18.122" starttime="20150605 14:09:18.119"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.127" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:18.193" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:18.194" starttime="20150605 14:09:18.125"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:18.195" starttime="20150605 14:09:18.118"></status>
</kw>
<kw type="foritem" name="${process} =  2933 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor6.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.201" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:18.200" starttime="20150605 14:09:18.197"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.205" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:18.271" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:18.272" starttime="20150605 14:09:18.203"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:18.273" starttime="20150605 14:09:18.196"></status>
</kw>
<kw type="foritem" name="${process} =  2948 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.279" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:18.278" starttime="20150605 14:09:18.275"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.283" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:18.348" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:18.349" starttime="20150605 14:09:18.280"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:18.350" starttime="20150605 14:09:18.274"></status>
</kw>
<kw type="foritem" name="${process} =  3370 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.355" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:18.354" starttime="20150605 14:09:18.351"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.359" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:18.424" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:18.425" starttime="20150605 14:09:18.357"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:18.426" starttime="20150605 14:09:18.350"></status>
</kw>
<kw type="foritem" name="${process} =  3385 ?        S      0:01 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.432" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:18.431" starttime="20150605 14:09:18.428"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.437" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:18.501" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:18.502" starttime="20150605 14:09:18.434"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:18.503" starttime="20150605 14:09:18.427"></status>
</kw>
<kw type="foritem" name="${process} =  3687 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.509" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:18.508" starttime="20150605 14:09:18.505"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.513" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:18.580" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:18.581" starttime="20150605 14:09:18.511"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:18.582" starttime="20150605 14:09:18.504"></status>
</kw>
<kw type="foritem" name="${process} =  3702 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.587" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:18.586" starttime="20150605 14:09:18.583"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.591" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:18.657" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:18.658" starttime="20150605 14:09:18.589"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:18.659" starttime="20150605 14:09:18.582"></status>
</kw>
<kw type="foritem" name="${process} =  3763 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor6.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.664" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:18.664" starttime="20150605 14:09:18.660"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.668" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:18.735" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:18.737" starttime="20150605 14:09:18.666"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:18.738" starttime="20150605 14:09:18.659"></status>
</kw>
<kw type="foritem" name="${process} =  3778 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.744" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:18.743" starttime="20150605 14:09:18.739"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.748" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:18.826" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:18.827" starttime="20150605 14:09:18.745"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:18.828" starttime="20150605 14:09:18.738"></status>
</kw>
<kw type="foritem" name="${process} =  3830 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.832" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:18.831" starttime="20150605 14:09:18.829"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.834" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:18.904" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:18.905" starttime="20150605 14:09:18.833"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:18.905" starttime="20150605 14:09:18.828"></status>
</kw>
<kw type="foritem" name="${process} =  3845 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.909" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:18.908" starttime="20150605 14:09:18.906"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.911" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:18.982" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:18.983" starttime="20150605 14:09:18.909"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:18.983" starttime="20150605 14:09:18.906"></status>
</kw>
<kw type="foritem" name="${process} =  4247 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.986" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:18.986" starttime="20150605 14:09:18.984"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:18.988" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:19.060" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:19.061" starttime="20150605 14:09:18.987"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:19.062" starttime="20150605 14:09:18.984"></status>
</kw>
<kw type="foritem" name="${process} =  4263 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.066" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:19.065" starttime="20150605 14:09:19.064"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.068" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:19.138" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:19.139" starttime="20150605 14:09:19.066"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:19.139" starttime="20150605 14:09:19.063"></status>
</kw>
<kw type="foritem" name="${process} =  4328 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor6.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.142" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:19.142" starttime="20150605 14:09:19.140"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.144" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:19.214" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:19.215" starttime="20150605 14:09:19.143"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:19.216" starttime="20150605 14:09:19.140"></status>
</kw>
<kw type="foritem" name="${process} =  4343 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.219" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:19.218" starttime="20150605 14:09:19.217"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.221" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:19.292" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:19.293" starttime="20150605 14:09:19.220"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:19.294" starttime="20150605 14:09:19.216"></status>
</kw>
<kw type="foritem" name="${process} =  4487 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor5.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.297" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:19.296" starttime="20150605 14:09:19.295"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.298" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:19.369" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:19.370" starttime="20150605 14:09:19.297"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:19.371" starttime="20150605 14:09:19.294"></status>
</kw>
<kw type="foritem" name="${process} =  4502 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.374" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:19.373" starttime="20150605 14:09:19.372"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.376" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:19.447" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:19.447" starttime="20150605 14:09:19.375"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:19.448" starttime="20150605 14:09:19.371"></status>
</kw>
<kw type="foritem" name="${process} =  4554 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor8.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.451" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:19.451" starttime="20150605 14:09:19.449"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.453" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:19.524" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:19.525" starttime="20150605 14:09:19.452"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:19.525" starttime="20150605 14:09:19.448"></status>
</kw>
<kw type="foritem" name="${process} =  4574 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.528" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:19.528" starttime="20150605 14:09:19.526"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.530" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:19.600" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:19.601" starttime="20150605 14:09:19.529"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:19.602" starttime="20150605 14:09:19.525"></status>
</kw>
<kw type="foritem" name="${process} =  4612 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor11.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.605" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:19.605" starttime="20150605 14:09:19.603"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.607" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:19.678" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:19.679" starttime="20150605 14:09:19.606"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:19.679" starttime="20150605 14:09:19.602"></status>
</kw>
<kw type="foritem" name="${process} =  4627 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.682" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:19.682" starttime="20150605 14:09:19.680"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.684" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:19.756" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:19.757" starttime="20150605 14:09:19.683"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:19.757" starttime="20150605 14:09:19.679"></status>
</kw>
<kw type="foritem" name="${process} =  5232 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.761" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:19.760" starttime="20150605 14:09:19.758"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.762" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:19.834" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:19.835" starttime="20150605 14:09:19.761"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:19.836" starttime="20150605 14:09:19.758"></status>
</kw>
<kw type="foritem" name="${process} =  5247 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.839" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:19.838" starttime="20150605 14:09:19.837"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.841" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:19.911" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:19.912" starttime="20150605 14:09:19.839"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:19.913" starttime="20150605 14:09:19.836"></status>
</kw>
<kw type="foritem" name="${process} =  5310 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor6.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.916" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:19.916" starttime="20150605 14:09:19.914"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.918" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:19.989" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:19.990" starttime="20150605 14:09:19.917"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:19.992" starttime="20150605 14:09:19.913"></status>
</kw>
<kw type="foritem" name="${process} =  5325 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:19.998" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:19.997" starttime="20150605 14:09:19.993"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.002" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:20.066" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:20.067" starttime="20150605 14:09:19.999"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:20.069" starttime="20150605 14:09:19.992"></status>
</kw>
<kw type="foritem" name="${process} =  5412 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.075" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:20.074" starttime="20150605 14:09:20.071"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.078" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:20.143" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:20.144" starttime="20150605 14:09:20.076"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:20.145" starttime="20150605 14:09:20.070"></status>
</kw>
<kw type="foritem" name="${process} =  5427 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.150" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:20.149" starttime="20150605 14:09:20.146"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.153" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:20.221" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:20.222" starttime="20150605 14:09:20.151"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:20.223" starttime="20150605 14:09:20.145"></status>
</kw>
<kw type="foritem" name="${process} =  5488 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.229" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:20.228" starttime="20150605 14:09:20.225"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.233" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:20.298" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:20.299" starttime="20150605 14:09:20.230"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:20.300" starttime="20150605 14:09:20.224"></status>
</kw>
<kw type="foritem" name="${process} =  5503 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.306" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:20.305" starttime="20150605 14:09:20.302"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.310" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:20.377" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:20.378" starttime="20150605 14:09:20.308"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:20.379" starttime="20150605 14:09:20.301"></status>
</kw>
<kw type="foritem" name="${process} =  5704 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.385" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:20.384" starttime="20150605 14:09:20.381"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.388" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:20.453" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:20.454" starttime="20150605 14:09:20.386"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:20.455" starttime="20150605 14:09:20.380"></status>
</kw>
<kw type="foritem" name="${process} =  5719 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.458" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:20.457" starttime="20150605 14:09:20.456"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.460" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:20.532" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:20.534" starttime="20150605 14:09:20.458"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:20.534" starttime="20150605 14:09:20.455"></status>
</kw>
<kw type="foritem" name="${process} =  5866 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.539" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:20.538" starttime="20150605 14:09:20.536"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.541" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:20.609" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:20.610" starttime="20150605 14:09:20.539"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:20.611" starttime="20150605 14:09:20.535"></status>
</kw>
<kw type="foritem" name="${process} =  5881 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.614" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:20.613" starttime="20150605 14:09:20.612"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.616" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:20.687" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:20.688" starttime="20150605 14:09:20.614"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:20.688" starttime="20150605 14:09:20.611"></status>
</kw>
<kw type="foritem" name="${process} =  6115 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.691" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:20.691" starttime="20150605 14:09:20.689"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.693" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:20.764" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:20.765" starttime="20150605 14:09:20.692"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:20.765" starttime="20150605 14:09:20.688"></status>
</kw>
<kw type="foritem" name="${process} =  6130 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.768" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:20.768" starttime="20150605 14:09:20.766"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.770" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:20.841" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:20.842" starttime="20150605 14:09:20.769"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:20.842" starttime="20150605 14:09:20.765"></status>
</kw>
<kw type="foritem" name="${process} =  6266 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.845" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:20.845" starttime="20150605 14:09:20.843"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.847" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:20.918" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:20.919" starttime="20150605 14:09:20.846"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:20.919" starttime="20150605 14:09:20.843"></status>
</kw>
<kw type="foritem" name="${process} =  6281 ?        S      0:01 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.922" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:20.922" starttime="20150605 14:09:20.920"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:20.924" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:20.995" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:20.996" starttime="20150605 14:09:20.923"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:20.996" starttime="20150605 14:09:20.919"></status>
</kw>
<kw type="foritem" name="${process} =  6339 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor5.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.000" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:20.999" starttime="20150605 14:09:20.998"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.002" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:21.072" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:21.073" starttime="20150605 14:09:21.001"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:21.073" starttime="20150605 14:09:20.997"></status>
</kw>
<kw type="foritem" name="${process} =  6354 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.078" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:21.077" starttime="20150605 14:09:21.075"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.080" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:21.148" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:21.149" starttime="20150605 14:09:21.079"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:21.150" starttime="20150605 14:09:21.074"></status>
</kw>
<kw type="foritem" name="${process} =  6406 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor8.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.155" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:21.154" starttime="20150605 14:09:21.152"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.157" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:21.224" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:21.225" starttime="20150605 14:09:21.155"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:21.226" starttime="20150605 14:09:21.150"></status>
</kw>
<kw type="foritem" name="${process} =  6421 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.229" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:21.229" starttime="20150605 14:09:21.227"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.231" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:21.300" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:21.301" starttime="20150605 14:09:21.230"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:21.302" starttime="20150605 14:09:21.226"></status>
</kw>
<kw type="foritem" name="${process} =  6433 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.305" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:21.305" starttime="20150605 14:09:21.303"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.307" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:21.377" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:21.378" starttime="20150605 14:09:21.306"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:21.379" starttime="20150605 14:09:21.302"></status>
</kw>
<kw type="foritem" name="${process} =  6448 ?        S      0:01 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.382" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:21.381" starttime="20150605 14:09:21.380"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.384" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:21.455" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:21.456" starttime="20150605 14:09:21.382"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:21.457" starttime="20150605 14:09:21.379"></status>
</kw>
<kw type="foritem" name="${process} =  6458 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.461" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:21.460" starttime="20150605 14:09:21.458"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.463" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:21.532" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:21.533" starttime="20150605 14:09:21.462"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:21.534" starttime="20150605 14:09:21.457"></status>
</kw>
<kw type="foritem" name="${process} =  6466 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor11.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.538" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:21.537" starttime="20150605 14:09:21.535"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.540" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:21.610" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:21.611" starttime="20150605 14:09:21.539"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:21.612" starttime="20150605 14:09:21.534"></status>
</kw>
<kw type="foritem" name="${process} =  6473 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.615" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:21.615" starttime="20150605 14:09:21.613"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.617" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:21.687" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:21.688" starttime="20150605 14:09:21.616"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:21.688" starttime="20150605 14:09:21.612"></status>
</kw>
<kw type="foritem" name="${process} =  6482 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.691" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:21.691" starttime="20150605 14:09:21.689"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.693" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:21.763" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:21.764" starttime="20150605 14:09:21.692"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:21.765" starttime="20150605 14:09:21.689"></status>
</kw>
<kw type="foritem" name="${process} =  6582 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.768" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:21.767" starttime="20150605 14:09:21.766"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.769" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:21.841" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:21.842" starttime="20150605 14:09:21.768"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:21.842" starttime="20150605 14:09:21.765"></status>
</kw>
<kw type="foritem" name="${process} =  6597 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.845" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:21.845" starttime="20150605 14:09:21.843"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.847" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:21.918" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:21.919" starttime="20150605 14:09:21.846"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:21.920" starttime="20150605 14:09:21.842"></status>
</kw>
<kw type="foritem" name="${process} =  6635 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.937" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:21.936" starttime="20150605 14:09:21.921"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.939" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:21.994" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:21.995" starttime="20150605 14:09:21.938"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:21.995" starttime="20150605 14:09:21.920"></status>
</kw>
<kw type="foritem" name="${process} =  6650 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:21.998" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:21.998" starttime="20150605 14:09:21.996"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.000" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:22.070" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:22.071" starttime="20150605 14:09:21.999"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:22.072" starttime="20150605 14:09:21.996"></status>
</kw>
<kw type="foritem" name="${process} =  6694 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.076" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:22.075" starttime="20150605 14:09:22.074"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.078" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:22.148" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:22.149" starttime="20150605 14:09:22.077"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:22.150" starttime="20150605 14:09:22.073"></status>
</kw>
<kw type="foritem" name="${process} =  6709 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.153" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:22.152" starttime="20150605 14:09:22.151"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.154" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:22.224" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:22.225" starttime="20150605 14:09:22.153"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:22.226" starttime="20150605 14:09:22.150"></status>
</kw>
<kw type="foritem" name="${process} =  6835 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.229" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:22.228" starttime="20150605 14:09:22.227"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.230" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:22.302" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:22.302" starttime="20150605 14:09:22.229"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:22.303" starttime="20150605 14:09:22.226"></status>
</kw>
<kw type="foritem" name="${process} =  6850 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.306" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:22.305" starttime="20150605 14:09:22.304"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.308" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:22.379" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:22.380" starttime="20150605 14:09:22.306"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:22.380" starttime="20150605 14:09:22.303"></status>
</kw>
<kw type="foritem" name="${process} =  6894 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor6.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.383" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:22.383" starttime="20150605 14:09:22.381"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.385" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:22.456" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:22.457" starttime="20150605 14:09:22.384"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:22.457" starttime="20150605 14:09:22.381"></status>
</kw>
<kw type="foritem" name="${process} =  6909 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.460" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:22.460" starttime="20150605 14:09:22.458"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.462" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:22.533" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:22.534" starttime="20150605 14:09:22.461"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:22.534" starttime="20150605 14:09:22.458"></status>
</kw>
<kw type="foritem" name="${process} =  6945 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor9.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.537" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:22.537" starttime="20150605 14:09:22.535"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.539" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:22.610" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:22.611" starttime="20150605 14:09:22.538"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:22.611" starttime="20150605 14:09:22.535"></status>
</kw>
<kw type="foritem" name="${process} =  6960 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.614" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:22.614" starttime="20150605 14:09:22.612"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.616" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:22.687" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:22.688" starttime="20150605 14:09:22.615"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:22.688" starttime="20150605 14:09:22.611"></status>
</kw>
<kw type="foritem" name="${process} =  7530 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.691" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:22.691" starttime="20150605 14:09:22.689"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.693" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:22.764" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:22.765" starttime="20150605 14:09:22.692"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:22.766" starttime="20150605 14:09:22.689"></status>
</kw>
<kw type="foritem" name="${process} =  7545 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.769" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:22.768" starttime="20150605 14:09:22.767"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.770" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:22.843" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:22.844" starttime="20150605 14:09:22.769"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:22.844" starttime="20150605 14:09:22.766"></status>
</kw>
<kw type="foritem" name="${process} =  8268 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.847" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:22.846" starttime="20150605 14:09:22.845"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.849" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:22.919" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:22.920" starttime="20150605 14:09:22.848"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:22.921" starttime="20150605 14:09:22.844"></status>
</kw>
<kw type="foritem" name="${process} =  8283 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.924" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:22.923" starttime="20150605 14:09:22.922"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:22.925" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:22.998" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:22.999" starttime="20150605 14:09:22.924"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:22.999" starttime="20150605 14:09:22.921"></status>
</kw>
<kw type="foritem" name="${process} =  8323 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.002" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:23.002" starttime="20150605 14:09:23.000"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.004" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:23.074" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:23.075" starttime="20150605 14:09:23.003"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:23.076" starttime="20150605 14:09:22.999"></status>
</kw>
<kw type="foritem" name="${process} =  8338 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.079" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:23.079" starttime="20150605 14:09:23.077"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.081" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:23.151" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:23.152" starttime="20150605 14:09:23.080"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:23.153" starttime="20150605 14:09:23.076"></status>
</kw>
<kw type="foritem" name="${process} =  8380 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor6.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.155" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:23.155" starttime="20150605 14:09:23.153"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.157" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:23.228" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:23.229" starttime="20150605 14:09:23.156"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:23.229" starttime="20150605 14:09:23.153"></status>
</kw>
<kw type="foritem" name="${process} =  8395 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.232" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:23.231" starttime="20150605 14:09:23.230"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.234" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:23.305" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:23.306" starttime="20150605 14:09:23.232"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:23.306" starttime="20150605 14:09:23.229"></status>
</kw>
<kw type="foritem" name="${process} =  8432 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor9.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.309" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:23.309" starttime="20150605 14:09:23.307"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.311" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:23.384" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:23.385" starttime="20150605 14:09:23.310"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:23.385" starttime="20150605 14:09:23.306"></status>
</kw>
<kw type="foritem" name="${process} =  8447 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.388" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:23.388" starttime="20150605 14:09:23.386"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.390" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:23.460" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:23.461" starttime="20150605 14:09:23.389"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:23.462" starttime="20150605 14:09:23.386"></status>
</kw>
<kw type="foritem" name="${process} =  8483 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor12.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.465" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:23.465" starttime="20150605 14:09:23.463"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.467" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:23.538" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:23.539" starttime="20150605 14:09:23.466"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:23.539" starttime="20150605 14:09:23.462"></status>
</kw>
<kw type="foritem" name="${process} =  8498 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.542" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:23.541" starttime="20150605 14:09:23.540"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.544" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:23.615" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:23.616" starttime="20150605 14:09:23.543"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:23.616" starttime="20150605 14:09:23.539"></status>
</kw>
<kw type="foritem" name="${process} =  8560 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.620" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:23.619" starttime="20150605 14:09:23.617"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.621" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:23.693" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:23.694" starttime="20150605 14:09:23.620"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:23.695" starttime="20150605 14:09:23.617"></status>
</kw>
<kw type="foritem" name="${process} =  8575 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.698" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:23.697" starttime="20150605 14:09:23.696"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.699" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:23.794" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:23.795" starttime="20150605 14:09:23.698"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:23.796" starttime="20150605 14:09:23.695"></status>
</kw>
<kw type="foritem" name="${process} =  8732 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.798" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:23.798" starttime="20150605 14:09:23.796"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.800" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:23.872" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:23.873" starttime="20150605 14:09:23.799"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:23.874" starttime="20150605 14:09:23.796"></status>
</kw>
<kw type="foritem" name="${process} =  8747 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.877" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:23.876" starttime="20150605 14:09:23.875"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.878" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:23.950" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:23.951" starttime="20150605 14:09:23.877"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:23.951" starttime="20150605 14:09:23.874"></status>
</kw>
<kw type="foritem" name="${process} =  9602 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.954" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:23.954" starttime="20150605 14:09:23.952"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:23.956" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:24.027" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:24.028" starttime="20150605 14:09:23.955"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:24.029" starttime="20150605 14:09:23.951"></status>
</kw>
<kw type="foritem" name="${process} =  9617 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.033" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:24.032" starttime="20150605 14:09:24.031"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.034" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:24.107" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:24.108" starttime="20150605 14:09:24.033"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:24.108" starttime="20150605 14:09:24.030"></status>
</kw>
<kw type="foritem" name="${process} =  9693 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor6.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.111" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:24.111" starttime="20150605 14:09:24.109"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.113" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:24.183" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:24.184" starttime="20150605 14:09:24.112"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:24.185" starttime="20150605 14:09:24.109"></status>
</kw>
<kw type="foritem" name="${process} =  9708 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.188" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:24.188" starttime="20150605 14:09:24.186"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.190" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:24.261" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:24.262" starttime="20150605 14:09:24.189"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:24.262" starttime="20150605 14:09:24.185"></status>
</kw>
<kw type="foritem" name="${process} =  9769 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor9.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.265" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:24.265" starttime="20150605 14:09:24.263"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.267" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:24.338" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:24.339" starttime="20150605 14:09:24.266"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:24.339" starttime="20150605 14:09:24.262"></status>
</kw>
<kw type="foritem" name="${process} =  9784 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.342" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:24.342" starttime="20150605 14:09:24.340"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.344" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:24.414" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:24.415" starttime="20150605 14:09:24.343"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:24.415" starttime="20150605 14:09:24.339"></status>
</kw>
<kw type="foritem" name="${process} =  9850 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor12.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.418" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:24.418" starttime="20150605 14:09:24.416"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.420" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:24.491" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:24.492" starttime="20150605 14:09:24.419"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:24.492" starttime="20150605 14:09:24.416"></status>
</kw>
<kw type="foritem" name="${process} =  9865 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.495" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150605 14:09:24.495" starttime="20150605 14:09:24.493"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.497" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150605 14:09:24.569" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:24.570" starttime="20150605 14:09:24.496"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:24.570" starttime="20150605 14:09:24.493"></status>
</kw>
<kw type="foritem" name="${process} = 25284 ?        Ss     0:00 bash -c tail -f /var/log/inew/crce/5.2.13/negret-0.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.573" level="INFO">${pid} = 25284</msg>
<status status="PASS" endtime="20150605 14:09:24.573" starttime="20150605 14:09:24.571"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.575" level="INFO">Executing command 'kill -9 25284'.</msg>
<msg timestamp="20150605 14:09:24.647" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20150605 14:09:24.648" starttime="20150605 14:09:24.574"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:24.648" starttime="20150605 14:09:24.571"></status>
</kw>
<kw type="foritem" name="${process} = 25300 ?        S      0:00 tail -f /var/log/inew/crce/5.2.13/negret-0.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.652" level="INFO">${pid} = 25300</msg>
<status status="PASS" endtime="20150605 14:09:24.651" starttime="20150605 14:09:24.649"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.654" level="INFO">Executing command 'kill -9 25300'.</msg>
<msg timestamp="20150605 14:09:24.724" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20150605 14:09:24.725" starttime="20150605 14:09:24.653"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:24.725" starttime="20150605 14:09:24.649"></status>
</kw>
<kw type="foritem" name="${process} = 25387 ?        Ss     0:00 bash -c ps U qa_automation --no-heading | grep tail">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.728" level="INFO">${pid} = 25387</msg>
<status status="PASS" endtime="20150605 14:09:24.728" starttime="20150605 14:09:24.726"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.730" level="INFO">Executing command 'kill -9 25387'.</msg>
<msg timestamp="20150605 14:09:24.802" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:24.803" starttime="20150605 14:09:24.729"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:24.804" starttime="20150605 14:09:24.726"></status>
</kw>
<kw type="foritem" name="${process} = 25403 ?        S      0:00 grep tail">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.807" level="INFO">${pid} = 25403</msg>
<status status="PASS" endtime="20150605 14:09:24.806" starttime="20150605 14:09:24.805"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150605 14:09:24.808" level="INFO">Executing command 'kill -9 25403'.</msg>
<msg timestamp="20150605 14:09:24.880" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150605 14:09:24.881" starttime="20150605 14:09:24.807"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:24.882" starttime="20150605 14:09:24.804"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:24.882" starttime="20150605 14:09:15.868"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:24.883" starttime="20150605 14:09:15.615"></status>
</kw>
<kw type="kw" name="SSHLibrary.Start Command">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>cat tmpfilemonitor${ssh_connection}.log</arg>
</arguments>
<msg timestamp="20150605 14:09:24.885" level="INFO">Starting command 'cat tmpfilemonitor3.log'.</msg>
<status status="PASS" endtime="20150605 14:09:24.922" starttime="20150605 14:09:24.884"></status>
</kw>
<kw type="kw" name="${stdout_string} = SSHLibrary.Read Command Output">
<doc>Returns outputs of the most recent started command.</doc>
<arguments>
</arguments>
<msg timestamp="20150605 14:09:24.923" level="INFO">Reading output of command 'cat tmpfilemonitor3.log'.</msg>
<msg timestamp="20150605 14:09:24.976" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150605 14:09:24.978" level="INFO">${stdout_string} = [2015-06-05 12:06:30,875][FINEST][264][                  TransactionalQueryExecutor.run()] Opening a new database transaction [thread=264]
[2015-06-05 12:06:30,879][FINEST][264][                  Tran...</msg>
<status status="PASS" endtime="20150605 14:09:24.978" starttime="20150605 14:09:24.923"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>rm tmpfilemonitor${ssh_connection}.log</arg>
</arguments>
<msg timestamp="20150605 14:09:24.981" level="INFO">Executing command 'rm tmpfilemonitor3.log'.</msg>
<msg timestamp="20150605 14:09:25.039" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20150605 14:09:25.040" starttime="20150605 14:09:24.979"></status>
</kw>
<msg timestamp="20150605 14:09:25.043" level="INFO">${tailed_text} = [2015-06-05 12:06:30,875][FINEST][264][                  TransactionalQueryExecutor.run()] Opening a new database transaction [thread=264]
[2015-06-05 12:06:30,879][FINEST][264][                  Tran...</msg>
<status status="PASS" endtime="20150605 14:09:25.042" starttime="20150605 14:09:15.581"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword Unless">
<doc>Runs the given keyword with the given arguments, if `condition` is false.</doc>
<arguments>
<arg>'${store_to_file_path}'=='${EMPTY}'</arg>
<arg>Create File</arg>
<arg>${store_to_file_path}</arg>
<arg>${tailed_text}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${store_to_file_path}</arg>
<arg>${tailed_text}</arg>
</arguments>
<msg timestamp="20150605 14:09:25.051" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/MOC_ssh_tail_log-crce.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/MOC_ssh_tail_log-crce.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150605 14:09:25.052" starttime="20150605 14:09:25.048"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:25.052" starttime="20150605 14:09:25.043"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.060" starttime="20150605 14:09:25.059"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.062" starttime="20150605 14:09:25.061"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:25.064" starttime="20150605 14:09:25.053"></status>
</kw>
<msg timestamp="20150605 14:09:25.066" level="INFO">${tailed_text} = [2015-06-05 12:06:30,875][FINEST][264][                  TransactionalQueryExecutor.run()] Opening a new database transaction [thread=264]
[2015-06-05 12:06:30,879][FINEST][264][                  Tran...</msg>
<status status="PASS" endtime="20150605 14:09:25.065" starttime="20150605 14:09:15.567"></status>
</kw>
<kw type="kw" name="Check Long MOC CRCE log">
<doc>Checks the tailed log file created on CRCE.</doc>
<arguments>
<arg>MOC_${TAILED_CRCE_LOG_FILE}</arg>
</arguments>
<kw type="kw" name="${temp} = OperatingSystem.Get File">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${log_file}</arg>
</arguments>
<msg timestamp="20150605 14:09:25.074" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/MOC_ssh_tail_log-crce.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/MOC_ssh_tail_log-crce.log&lt;/a&gt;'</msg>
<msg timestamp="20150605 14:09:25.076" level="INFO">${temp} = [2015-06-05 12:06:30,875][FINEST][264][                  TransactionalQueryExecutor.run()] Opening a new database transaction [thread=264]
[2015-06-05 12:06:30,879][FINEST][264][                  Tran...</msg>
<status status="PASS" endtime="20150605 14:09:25.075" starttime="20150605 14:09:25.073"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Should Not Contain</arg>
<arg>${temp}</arg>
<arg>Exception</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.077" starttime="20150605 14:09:25.076"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${temp}</arg>
<arg>finalCommit=true, usedTime=136000</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.079" starttime="20150605 14:09:25.078"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${temp}</arg>
<arg>Voice|FALSE|${MSC ADDRESS}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.081" starttime="20150605 14:09:25.080"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${temp}</arg>
<arg>136000|136000</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.083" starttime="20150605 14:09:25.082"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:25.084" starttime="20150605 14:09:25.067"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE OK...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150605 14:09:25.086" level="INFO">CRCE OK...</msg>
<status status="PASS" endtime="20150605 14:09:25.086" starttime="20150605 14:09:25.085"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Check XDR DB *******</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.088" starttime="20150605 14:09:25.087"></status>
</kw>
<kw type="kw" name="dblib_support-resource.DBLIB Connect to PostgresDB">
<doc>this helper shields testsuite developers from the necessity to know driver and connection string details.</doc>
<arguments>
<arg>${XDR DB HOST}</arg>
<arg>${XDR DB PORT}</arg>
<arg>${XDR DB NAME}</arg>
<arg>${XDR DB USER}</arg>
<arg>${XDR DB PWD}</arg>
</arguments>
<kw type="kw" name="org.robot.database.keywords.DatabaseLibrary.Connect To Database">
<doc></doc>
<arguments>
<arg>org.postgresql.Driver</arg>
<arg>jdbc:postgresql://${host}:${port}/${dbName}</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.164" starttime="20150605 14:09:25.096"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:25.166" starttime="20150605 14:09:25.089"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>AnalyseDBTable</arg>
<arg>xdr</arg>
<arg>crce_cdr_${YYYYwWW}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.170" starttime="20150605 14:09:25.167"></status>
</kw>
<kw type="kw" name="org.robot.database.keywords.DatabaseLibrary.Disconnect From Database">
<doc></doc>
<arguments>
</arguments>
<msg timestamp="20150605 14:09:25.174" level="INFO">SQL Warnings on this connection: null</msg>
<status status="PASS" endtime="20150605 14:09:25.175" starttime="20150605 14:09:25.171"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR DB OK...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150605 14:09:25.178" level="INFO">XDR DB OK...</msg>
<status status="PASS" endtime="20150605 14:09:25.180" starttime="20150605 14:09:25.176"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.183" starttime="20150605 14:09:25.181"></status>
</kw>
<kw type="kw" name="Check Subscriber Balance">
<doc>Check the CRCE DB entry for test subscriber's monetary account balance.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${EXPECTED_BALANCE_136S_MOC}</arg>
</arguments>
<kw type="kw" name="dblib_support-resource.DBLIB Connect to PostgresDB">
<doc>this helper shields testsuite developers from the necessity to know driver and connection string details.</doc>
<arguments>
<arg>${CRCE DB HOST}</arg>
<arg>${CRCE DB PORT}</arg>
<arg>${CRCE DB NAME}</arg>
<arg>${CRCE DB USER}</arg>
<arg>${CRCE DB PWD}</arg>
</arguments>
<kw type="kw" name="org.robot.database.keywords.DatabaseLibrary.Connect To Database">
<doc></doc>
<arguments>
<arg>org.postgresql.Driver</arg>
<arg>jdbc:postgresql://${host}:${port}/${dbName}</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.226" starttime="20150605 14:09:25.214"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:25.227" starttime="20150605 14:09:25.200"></status>
</kw>
<kw type="kw" name="@{queryRows} = dblib_support-resource.DBLIB Query">
<doc>this helper executes the passed select statement and returns the result as a list.</doc>
<arguments>
<arg>select balance from acc_subscriber_accounts where category=1 and subscriber_id in (select id from profiler_subscriber_profiles where msisdn='${subscriber}');</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Execute Query *****</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.245" starttime="20150605 14:09:25.243"></status>
</kw>
<kw type="kw" name="org.robot.database.keywords.DatabaseLibrary.Store Query Result To File">
<doc></doc>
<arguments>
<arg>${selectStatement}</arg>
<arg>${TMP_QUERY_RESULT_FILE}</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.303" starttime="20150605 14:09:25.246"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Load Result from file</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.307" starttime="20150605 14:09:25.305"></status>
</kw>
<kw type="kw" name="${queryResultSetLines} = OperatingSystem.Get File">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${TMP_QUERY_RESULT_FILE}</arg>
</arguments>
<msg timestamp="20150605 14:09:25.314" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/tmp_query_result.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/standard_regression_testsuite/tmp_query_result.txt&lt;/a&gt;'</msg>
<msg timestamp="20150605 14:09:25.317" level="INFO">${queryResultSetLines} = 9928000|
</msg>
<status status="PASS" endtime="20150605 14:09:25.316" starttime="20150605 14:09:25.309"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Transform single string result into list of lines *****</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.320" starttime="20150605 14:09:25.318"></status>
</kw>
<kw type="kw" name="@{queryResultSet} = String.Split To Lines">
<doc>Converts the `string` into a list of lines.</doc>
<arguments>
<arg>${queryResultSetLines}</arg>
</arguments>
<msg timestamp="20150605 14:09:25.324" level="INFO">1 lines returned</msg>
<msg timestamp="20150605 14:09:25.326" level="INFO">@{queryResultSet} = [ 9928000| ]</msg>
<status status="PASS" endtime="20150605 14:09:25.325" starttime="20150605 14:09:25.322"></status>
</kw>
<msg timestamp="20150605 14:09:25.329" level="INFO">@{queryRows} = [ 9928000| ]</msg>
<status status="PASS" endtime="20150605 14:09:25.328" starttime="20150605 14:09:25.230"></status>
</kw>
<kw type="kw" name="@{fields} = String.Split String">
<doc>Splits the `string` using `separator` as a delimiter string.</doc>
<arguments>
<arg>@{queryRows}[0]</arg>
<arg>|</arg>
</arguments>
<msg timestamp="20150605 14:09:25.334" level="INFO">@{fields} = [ 9928000 |  ]</msg>
<status status="PASS" endtime="20150605 14:09:25.334" starttime="20150605 14:09:25.330"></status>
</kw>
<kw type="kw" name="${balance} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{fields}[0]</arg>
</arguments>
<msg timestamp="20150605 14:09:25.339" level="INFO">${balance} = 9928000</msg>
<status status="PASS" endtime="20150605 14:09:25.338" starttime="20150605 14:09:25.336"></status>
</kw>
<kw type="kw" name="org.robot.database.keywords.DatabaseLibrary.Disconnect From Database">
<doc></doc>
<arguments>
</arguments>
<msg timestamp="20150605 14:09:25.343" level="INFO">SQL Warnings on this connection: null</msg>
<status status="PASS" endtime="20150605 14:09:25.343" starttime="20150605 14:09:25.340"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${balance}</arg>
<arg>${expected_bal}</arg>
<arg>msg=Balance ${balance} NOT OK!</arg>
</arguments>
<msg timestamp="20150605 14:09:25.348" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20150605 14:09:25.349" starttime="20150605 14:09:25.345"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Balance= ${balance} OK!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150605 14:09:25.353" level="INFO">Balance= 9928000 OK!</msg>
<status status="PASS" endtime="20150605 14:09:25.354" starttime="20150605 14:09:25.350"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:25.355" starttime="20150605 14:09:25.185"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close All Connections">
<doc>Closes all open connections.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.360" starttime="20150605 14:09:25.357"></status>
</kw>
<doc>Longer MOC call is long 136s. The goal is to have call duration longer than 1 slice (60secs)
==</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>TNZ_supported</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150605 14:09:25.362" starttime="20150605 14:06:31.344"></status>
</test>
<kw type="teardown" name="Teardown Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Disconnect From Database</arg>
</arguments>
<status status="PASS" endtime="20150605 14:09:25.381" starttime="20150605 14:09:25.379"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Cleaning up</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150605 14:09:25.384" level="INFO">Cleaning up</msg>
<status status="PASS" endtime="20150605 14:09:25.385" starttime="20150605 14:09:25.382"></status>
</kw>
<kw type="kw" name="OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>mv *ssh_tail*.log log/</arg>
</arguments>
<msg timestamp="20150605 14:09:25.399" level="INFO">Running command 'mv *ssh_tail*.log log/ 2&gt;&amp;1'</msg>
<status status="PASS" endtime="20150605 14:09:25.401" starttime="20150605 14:09:25.386"></status>
</kw>
<status status="PASS" endtime="20150605 14:09:25.403" starttime="20150605 14:09:25.370"></status>
</kw>
<doc>This suite tests the set of "standard" calls: MOC, MTC, MFC and SMS.
It uses standardised library keywords encapsulating Call Generator's functionality. Tests try to
check other components (at the moment IN, CRCE and XDR) for evidences of calls - in log and in DB.

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150605 14:09:25.404" starttime="20150605 14:06:24.358"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" info="" doc="" combined="" fail="0" links="">matko.sanseovic</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">TNZ_supported</stat>
</tag>
<suite>
<stat pass="1" id="s1" fail="0" name="Regression-Robot-Suite">Regression-Robot-Suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
