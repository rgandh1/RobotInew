<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20151014 10:24:10.405">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/MOC_PREPAID_ONNET-NoAnswer-robot-suite.txt" id="s1" name="MOC PREPAID ONNET-NoAnswer-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20151014 10:24:12.889" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20151014 10:24:12.893" level="INFO">${date} = Wed Oct 14 10:24:12 CEST 2015</msg>
<status status="PASS" endtime="20151014 10:24:12.892" starttime="20151014 10:24:12.875"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151014 10:24:12.899" level="INFO">Date and time: Wed Oct 14 10:24:12 CEST 2015</msg>
<status status="PASS" endtime="20151014 10:24:12.900" starttime="20151014 10:24:12.896"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151014 10:24:12.905" level="INFO">Target IN machine: 10.105.170.135</msg>
<status status="PASS" endtime="20151014 10:24:12.906" starttime="20151014 10:24:12.902"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:13.085" starttime="20151014 10:24:13.080"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:13.351" starttime="20151014 10:24:13.117"></status>
</kw>
<msg timestamp="20151014 10:24:13.356" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20151014 10:24:13.354" starttime="20151014 10:24:13.090"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151014 10:24:13.382" level="INFO">Logging into '10.105.170.135:22' as 'qa_automation'.</msg>
<msg timestamp="20151014 10:24:13.839" level="INFO">Read output: Last login: Wed Oct 14 08:12:46 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app.tb07 ~]$</msg>
<status status="PASS" endtime="20151014 10:24:13.842" starttime="20151014 10:24:13.375"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:13.844" starttime="20151014 10:24:13.360"></status>
</kw>
<msg timestamp="20151014 10:24:13.850" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20151014 10:24:13.849" starttime="20151014 10:24:13.042"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151014 10:24:13.866" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151014 10:24:13.865" starttime="20151014 10:24:13.854"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151014 10:24:13.875" level="INFO">Executing command 'sudo service inew-mvno-corein-service-moc-2.1.1 status'.</msg>
<msg timestamp="20151014 10:24:14.249" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151014 10:24:14.255" level="INFO">${output} = I-New MVNO VirginMobile Colombia - Core - Service 2.1.1 is running PID: 485 </msg>
<status status="PASS" endtime="20151014 10:24:14.252" starttime="20151014 10:24:13.870"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:14.273" starttime="20151014 10:24:14.266"></status>
</kw>
<msg timestamp="20151014 10:24:14.277" level="INFO">${status} = PASS</msg>
<msg timestamp="20151014 10:24:14.279" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151014 10:24:14.276" starttime="20151014 10:24:14.260"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:14.299" starttime="20151014 10:24:14.295"></status>
</kw>
<msg timestamp="20151014 10:24:14.352" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151014 10:24:14.301" starttime="20151014 10:24:14.283"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20151014 10:24:14.369" level="INFO">${version_r} =  2.1.1 is running PID: 485 </msg>
<status status="PASS" endtime="20151014 10:24:14.368" starttime="20151014 10:24:14.359"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151014 10:24:14.384" level="INFO">${version} =  2.1.1 </msg>
<status status="PASS" endtime="20151014 10:24:14.382" starttime="20151014 10:24:14.375"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:14.395" starttime="20151014 10:24:14.390"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:14.434" starttime="20151014 10:24:14.428"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151014 10:24:14.449" starttime="20151014 10:24:14.443"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:14.455" starttime="20151014 10:24:14.402"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:14.477" starttime="20151014 10:24:14.472"></status>
</kw>
<msg timestamp="20151014 10:24:14.480" level="INFO">${ver} =  2.1.1 </msg>
<status status="PASS" endtime="20151014 10:24:14.479" starttime="20151014 10:24:14.459"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:14.489" starttime="20151014 10:24:14.484"></status>
</kw>
<msg timestamp="20151014 10:24:14.496" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20151014 10:24:14.497" level="INFO">${in_version} =  2.1.1 </msg>
<status status="PASS" endtime="20151014 10:24:14.493" starttime="20151014 10:24:12.953"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:14.567" starttime="20151014 10:24:14.565"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:14.644" starttime="20151014 10:24:14.575"></status>
</kw>
<msg timestamp="20151014 10:24:14.648" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20151014 10:24:14.647" starttime="20151014 10:24:14.569"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151014 10:24:14.667" level="INFO">Logging into '10.105.170.171:22' as 'qa_automation'.</msg>
<msg timestamp="20151014 10:24:27.159" level="INFO">Read output: Last login: Wed Oct 14 08:12:59 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr.tb07 ~]$</msg>
<status status="PASS" endtime="20151014 10:24:27.162" starttime="20151014 10:24:14.664"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:27.165" starttime="20151014 10:24:14.656"></status>
</kw>
<msg timestamp="20151014 10:24:27.171" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20151014 10:24:27.169" starttime="20151014 10:24:14.551"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151014 10:24:27.183" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151014 10:24:27.182" starttime="20151014 10:24:27.174"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151014 10:24:27.190" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20151014 10:24:27.564" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151014 10:24:27.568" level="INFO">${output} = I-New CS MVNO - XDR Writer - Server 5.1.0.16360 is running PID: 8775 </msg>
<status status="PASS" endtime="20151014 10:24:27.566" starttime="20151014 10:24:27.186"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:27.585" starttime="20151014 10:24:27.578"></status>
</kw>
<msg timestamp="20151014 10:24:27.588" level="INFO">${status} = PASS</msg>
<msg timestamp="20151014 10:24:27.590" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151014 10:24:27.587" starttime="20151014 10:24:27.571"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:27.610" starttime="20151014 10:24:27.606"></status>
</kw>
<msg timestamp="20151014 10:24:27.614" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151014 10:24:27.612" starttime="20151014 10:24:27.593"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20151014 10:24:27.624" level="INFO">${version_r} =  5.1.0.16360 is running PID: 8775 </msg>
<status status="PASS" endtime="20151014 10:24:27.622" starttime="20151014 10:24:27.617"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151014 10:24:27.634" level="INFO">${version} =  5.1.0.16360 </msg>
<status status="PASS" endtime="20151014 10:24:27.633" starttime="20151014 10:24:27.628"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:27.641" starttime="20151014 10:24:27.637"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:27.674" starttime="20151014 10:24:27.669"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151014 10:24:27.682" starttime="20151014 10:24:27.677"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:27.686" starttime="20151014 10:24:27.645"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:27.706" starttime="20151014 10:24:27.701"></status>
</kw>
<msg timestamp="20151014 10:24:27.710" level="INFO">${ver} =  5.1.0.16360 </msg>
<status status="PASS" endtime="20151014 10:24:27.708" starttime="20151014 10:24:27.689"></status>
</kw>
<msg timestamp="20151014 10:24:27.717" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20151014 10:24:27.718" level="INFO">${xdr_version} =  5.1.0.16360 </msg>
<status status="PASS" endtime="20151014 10:24:27.714" starttime="20151014 10:24:14.518"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:27.796" starttime="20151014 10:24:27.794"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:27.859" starttime="20151014 10:24:27.803"></status>
</kw>
<msg timestamp="20151014 10:24:27.862" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20151014 10:24:27.861" starttime="20151014 10:24:27.797"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151014 10:24:27.885" level="INFO">Logging into '10.105.170.125:22' as 'qa_automation'.</msg>
<msg timestamp="20151014 10:24:28.369" level="INFO">Read output: Last login: Wed Oct 14 08:13:00 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@crce01.tb07 ~]$</msg>
<status status="PASS" endtime="20151014 10:24:28.371" starttime="20151014 10:24:27.880"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:28.375" starttime="20151014 10:24:27.866"></status>
</kw>
<msg timestamp="20151014 10:24:28.383" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20151014 10:24:28.381" starttime="20151014 10:24:27.781"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151014 10:24:28.398" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151014 10:24:28.397" starttime="20151014 10:24:28.387"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151014 10:24:28.407" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20151014 10:24:28.585" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151014 10:24:28.589" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 5.1.14.25039
Negret Rating &amp; Charging Engine 5.1.14.25039 is running (PID:9531, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20151014 10:24:28.588" starttime="20151014 10:24:28.402"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:28.606" starttime="20151014 10:24:28.599"></status>
</kw>
<msg timestamp="20151014 10:24:28.610" level="INFO">${status} = PASS</msg>
<msg timestamp="20151014 10:24:28.611" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151014 10:24:28.608" starttime="20151014 10:24:28.593"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:28.631" starttime="20151014 10:24:28.627"></status>
</kw>
<msg timestamp="20151014 10:24:28.635" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151014 10:24:28.633" starttime="20151014 10:24:28.614"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20151014 10:24:28.644" level="INFO">${version_r} =  5.1.14.25039 is running (PID:9531, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20151014 10:24:28.643" starttime="20151014 10:24:28.638"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151014 10:24:28.654" level="INFO">${version} =  5.1.14.25039 </msg>
<status status="PASS" endtime="20151014 10:24:28.653" starttime="20151014 10:24:28.648"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:28.661" starttime="20151014 10:24:28.657"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:28.692" starttime="20151014 10:24:28.687"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151014 10:24:28.705" starttime="20151014 10:24:28.695"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:28.708" starttime="20151014 10:24:28.665"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:28.726" starttime="20151014 10:24:28.721"></status>
</kw>
<msg timestamp="20151014 10:24:28.730" level="INFO">${ver} =  5.1.14.25039 </msg>
<status status="PASS" endtime="20151014 10:24:28.728" starttime="20151014 10:24:28.711"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:28.738" starttime="20151014 10:24:28.733"></status>
</kw>
<msg timestamp="20151014 10:24:28.744" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20151014 10:24:28.746" level="INFO">${crce_version} =  5.1.14.25039 </msg>
<status status="PASS" endtime="20151014 10:24:28.742" starttime="20151014 10:24:27.752"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151014 10:24:28.755" level="INFO">IN state= OK version= 2.1.1 </msg>
<status status="PASS" endtime="20151014 10:24:28.757" starttime="20151014 10:24:28.749"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151014 10:24:28.767" level="INFO">XDR state= OK version= 5.1.0.16360 </msg>
<status status="PASS" endtime="20151014 10:24:28.769" starttime="20151014 10:24:28.760"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151014 10:24:28.778" level="INFO">CRCE state= OK version= 5.1.14.25039 </msg>
<status status="PASS" endtime="20151014 10:24:28.780" starttime="20151014 10:24:28.772"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20151014 10:24:28.788" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151014 10:24:28.790" starttime="20151014 10:24:28.783"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20151014 10:24:28.798" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151014 10:24:28.800" starttime="20151014 10:24:28.793"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20151014 10:24:28.809" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151014 10:24:28.811" starttime="20151014 10:24:28.803"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:28.840" starttime="20151014 10:24:28.830"></status>
</kw>
<msg timestamp="20151014 10:24:28.843" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20151014 10:24:28.842" starttime="20151014 10:24:28.814"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20151014 10:24:28.853" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20151014 10:24:28.854" starttime="20151014 10:24:28.846"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:28.857" starttime="20151014 10:24:12.863"></status>
</kw>
<test id="s1-t1" name="Run MOC NoAnswer Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:28.882" starttime="20151014 10:24:28.880"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<msg timestamp="20151014 10:24:28.886" level="INFO">${INITIAL_BALANCE} = 10000000</msg>
<status status="PASS" endtime="20151014 10:24:28.885" starttime="20151014 10:24:28.883"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>1</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20151014 10:24:28.906" level="INFO">msg=crce_host=10.105.170.125</msg>
<status status="PASS" endtime="20151014 10:24:28.907" starttime="20151014 10:24:28.904"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20151014 10:24:28.910" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20151014 10:24:28.911" starttime="20151014 10:24:28.908"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20151014 10:24:28.914" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20151014 10:24:28.915" starttime="20151014 10:24:28.912"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20151014 10:24:28.918" level="INFO">msg=amount=1</msg>
<status status="PASS" endtime="20151014 10:24:28.919" starttime="20151014 10:24:28.916"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20151014 10:24:28.922" level="INFO">msg=imsiRangeStart=732123710001000</msg>
<status status="PASS" endtime="20151014 10:24:28.923" starttime="20151014 10:24:28.920"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20151014 10:24:28.926" level="INFO">msg=msisdnRangeStart=573190001000</msg>
<status status="PASS" endtime="20151014 10:24:28.927" starttime="20151014 10:24:28.924"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20151014 10:24:28.930" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20151014 10:24:28.931" starttime="20151014 10:24:28.928"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20151014 10:24:28.934" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20151014 10:24:28.935" starttime="20151014 10:24:28.932"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20151014 10:24:28.938" level="INFO">msg=tariffId=101002</msg>
<status status="PASS" endtime="20151014 10:24:28.939" starttime="20151014 10:24:28.936"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20151014 10:24:28.942" level="INFO">msg=balance=10000000</msg>
<status status="PASS" endtime="20151014 10:24:28.943" starttime="20151014 10:24:28.940"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151014 10:24:28.961" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151014 10:24:28.962" starttime="20151014 10:24:28.957"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:28.963" starttime="20151014 10:24:28.955"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151014 10:24:28.984" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151014 10:24:28.986" starttime="20151014 10:24:28.978"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:28.988" starttime="20151014 10:24:28.972"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151014 10:24:29.001" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151014 10:24:29.003" starttime="20151014 10:24:28.996"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:29.007" starttime="20151014 10:24:28.991"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:29.010" starttime="20151014 10:24:28.946"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151014 10:24:29.023" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151014 10:24:29.024" starttime="20151014 10:24:29.014"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:29.032" starttime="20151014 10:24:29.027"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:29.040" starttime="20151014 10:24:29.035"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:29.049" starttime="20151014 10:24:29.043"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:29.055" starttime="20151014 10:24:29.052"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:29.062" starttime="20151014 10:24:29.058"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:29.070" starttime="20151014 10:24:29.065"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:29.078" starttime="20151014 10:24:29.073"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:29.086" starttime="20151014 10:24:29.081"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:29.094" starttime="20151014 10:24:29.089"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:29.101" starttime="20151014 10:24:29.096"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:29.109" starttime="20151014 10:24:29.104"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:29.117" starttime="20151014 10:24:29.112"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151014 10:24:29.127" level="INFO">Running with the following project properties set: [u'crceHost=10.105.170.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=732123710001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=573190001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101002', u'HighLevelOps.createTestSubscribers.input.balance=10000000']</msg>
<msg timestamp="20151014 10:24:36.780" level="INFO">10:24:29,441 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/ext] for external libraries
10:24:29,442 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
10:24:31,827 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/crce-subscriberadmin/robot_crce_bridge-soapui-project.xml]
10:24:31,845 INFO  [SoapUITestCaseRunner] Setting project property [crceHost] to [10.105.170.125]
10:24:31,846 INFO  [SoapUITestCaseRunner] Setting project property [crcePort] to [8080]
10:24:31,846 INFO  [SoapUITestCaseRunner] Setting project property [crceWebservicesBasePath] to [/inew-mvno-crce-webservices/]
10:24:31,846 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.amount] to [1]
10:24:31,846 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.imsiRangeStart] to [732123710001000]
10:24:31,846 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.msisdnRangeStart] to [573190001000]
10:24:31,846 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.type] to [PREPAID]
10:24:31,846 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.languageid] to [1]
10:24:31,847 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.tariffId] to [101002]
10:24:31,847 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.balance] to [10000000]
10:24:31,847 INFO  [SoapUITestCaseRunner] Running SoapUI tests in project [Robotframework_CRCE-Bridge]
10:24:31,847 INFO  [SoapUITestCaseRunner] Running TestCase [createTestSubscribers]
10:24:31,856 INFO  [SoapUITestCaseRunner] Running SoapUI testcase [createTestSubscribers]
10:24:31,862 INFO  [SoapUITestCaseRunner] running step [init_repeat_counter]
10:24:32,439 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
10:24:32,502 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
10:24:32,690 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:24:32,691 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
10:24:32,728 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:24:32,735 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:24:32,984 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:24:32,985 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:24:32,985 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:24:32,985 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
10:24:33,125 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
10:24:33,463 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
10:24:33,490 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
10:24:33,492 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:24:33,493 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:24:33,493 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
10:24:34,667 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:24:34,668 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:24:34,676 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:24:34,676 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:24:34,676 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:24:34,677 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
10:24:34,747 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
10:24:34,754 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
10:24:34,803 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
10:24:34,807 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:24:34,809 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:24:34,809 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
10:24:34,837 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:24:34,837 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:24:34,843 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:24:34,844 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:24:34,844 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:24:34,844 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
10:24:34,913 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
10:24:34,924 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
10:24:34,974 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
10:24:34,978 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:24:34,980 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:24:34,980 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
10:24:35,476 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:24:35,477 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:24:35,484 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:24:35,484 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:24:35,484 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:24:35,485 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
10:24:35,551 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
10:24:35,557 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
10:24:35,603 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
10:24:35,607 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:24:35,609 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:24:35,609 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
10:24:35,967 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:24:35,967 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:24:35,981 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:24:35,981 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:24:35,981 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:24:35,982 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
10:24:36,056 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
10:24:36,078 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
10:24:36,124 INFO  [SoapUITestCaseRunner] running step [setBalance]
10:24:36,126 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:24:36,128 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:24:36,128 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
10:24:36,542 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:24:36,542 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:24:36,555 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:24:36,555 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:24:36,555 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:24:36,555 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
10:24:36,620 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
10:24:36,631 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
10:24:36,675 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
10:24:36,736 INFO  [SoapUITestCaseRunner] running step [finish_successful]
10:24:36,776 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK
10:24:36,777 INFO  [SoapUITestCaseRunner] Finished running SoapUI testcase [createTestSubscribers], time taken: 4872ms, status: FINISHED
10:24:36,777 INFO  [SoapUITestCaseRunner] TestCase [createTestSubscribers] finished with status [FINISHED] in 4872ms</msg>
<status status="PASS" endtime="20151014 10:24:36.784" starttime="20151014 10:24:29.124"></status>
</kw>
<msg timestamp="20151014 10:24:36.788" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:36.789" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151014 10:24:36.786" starttime="20151014 10:24:29.120"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151014 10:24:36.809" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20151014 10:24:36.809" starttime="20151014 10:24:36.805"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:36.814" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151014 10:24:36.813" starttime="20151014 10:24:36.811"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:36.819" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151014 10:24:36.818" starttime="20151014 10:24:36.816"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151014 10:24:36.827" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151014 10:24:36.833" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20151014 10:24:36.834" starttime="20151014 10:24:36.823"></status>
</kw>
<msg timestamp="20151014 10:24:36.836" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:36.837" level="INFO">${return_log_entry} = 2015-10-14 10:24:36,776 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151014 10:24:36.835" starttime="20151014 10:24:36.820"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:36.858" starttime="20151014 10:24:36.851"></status>
</kw>
<msg timestamp="20151014 10:24:36.862" level="INFO">${return_log_entry} = 2015-10-14 10:24:36,776 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151014 10:24:36.860" starttime="20151014 10:24:36.839"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:36.879" starttime="20151014 10:24:36.876"></status>
</kw>
<msg timestamp="20151014 10:24:36.881" level="INFO">${return_log_entry} = 2015-10-14 10:24:36,776 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151014 10:24:36.880" starttime="20151014 10:24:36.865"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:36.891" starttime="20151014 10:24:36.888"></status>
</kw>
<msg timestamp="20151014 10:24:36.893" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151014 10:24:36.893" starttime="20151014 10:24:36.882"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:36.907" starttime="20151014 10:24:36.904"></status>
</kw>
<msg timestamp="20151014 10:24:36.909" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151014 10:24:36.908" starttime="20151014 10:24:36.895"></status>
</kw>
<msg timestamp="20151014 10:24:36.911" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151014 10:24:36.910" starttime="20151014 10:24:36.792"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:36.926" starttime="20151014 10:24:36.924"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:36.930" starttime="20151014 10:24:36.928"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:36.933" starttime="20151014 10:24:36.931"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151014 10:24:36.950" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151014 10:24:36.951" starttime="20151014 10:24:36.943"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:36.952" starttime="20151014 10:24:36.940"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:36.953" starttime="20151014 10:24:36.935"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:36.954" starttime="20151014 10:24:36.913"></status>
</kw>
<msg timestamp="20151014 10:24:36.957" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20151014 10:24:36.956" starttime="20151014 10:24:28.889"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20151014 10:24:36.961" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151014 10:24:36.962" starttime="20151014 10:24:36.959"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151014 10:24:36.966" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20151014 10:24:36.967" starttime="20151014 10:24:36.964"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC NoAnswer *******</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:36.970" starttime="20151014 10:24:36.968"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the MOC NoAnswer call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151014 10:24:36.973" level="INFO">Running the MOC NoAnswer call...</msg>
<status status="PASS" endtime="20151014 10:24:36.974" starttime="20151014 10:24:36.971"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC NoAnswer">
<doc>Runs an NoAnswer MOC session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc-noanswer</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20151014 10:24:37.064" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-subscribers.csv</msg>
<status status="PASS" endtime="20151014 10:24:37.063" starttime="20151014 10:24:37.058"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20151014 10:24:37.074" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-fleXml.csv</msg>
<status status="PASS" endtime="20151014 10:24:37.072" starttime="20151014 10:24:37.068"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20151014 10:24:37.086" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-workspace.ini</msg>
<status status="PASS" endtime="20151014 10:24:37.085" starttime="20151014 10:24:37.079"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20151014 10:24:37.095" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc-noanswer.cgs</msg>
<status status="PASS" endtime="20151014 10:24:37.094" starttime="20151014 10:24:37.089"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:37.102" starttime="20151014 10:24:37.098"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20151014 10:24:37.113" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151014 10:24:37.115" starttime="20151014 10:24:37.104"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:37.121" starttime="20151014 10:24:37.118"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20151014 10:24:37.131" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151014 10:24:37.132" starttime="20151014 10:24:37.124"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20151014 10:24:37.143" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151014 10:24:37.144" starttime="20151014 10:24:37.135"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:37.150" starttime="20151014 10:24:37.147"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20151014 10:24:37.159" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151014 10:24:37.161" starttime="20151014 10:24:37.152"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20151014 10:24:37.173" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151014 10:24:37.174" starttime="20151014 10:24:37.163"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:37.180" starttime="20151014 10:24:37.177"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20151014 10:24:37.205" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc-noanswer.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20151014 10:24:41.842" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151014 10:24:41.837" starttime="20151014 10:24:37.182"></status>
</kw>
<msg timestamp="20151014 10:24:41.851" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151014 10:24:41.848" starttime="20151014 10:24:37.018"></status>
</kw>
<msg timestamp="20151014 10:24:41.857" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151014 10:24:41.854" starttime="20151014 10:24:36.978"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151014 10:24:41.866" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20151014 10:24:41.868" starttime="20151014 10:24:41.862"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20151014 10:24:41.878" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151014 10:24:41.880" starttime="20151014 10:24:41.872"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:41.887" starttime="20151014 10:24:41.884"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151014 10:24:41.954" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151014 10:24:41.956" starttime="20151014 10:24:41.947"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:41.958" starttime="20151014 10:24:41.942"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151014 10:24:41.970" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151014 10:24:41.972" starttime="20151014 10:24:41.965"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:41.974" starttime="20151014 10:24:41.960"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151014 10:24:41.987" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151014 10:24:41.989" starttime="20151014 10:24:41.981"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:41.991" starttime="20151014 10:24:41.977"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:41.993" starttime="20151014 10:24:41.923"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.001" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151014 10:24:42.008" starttime="20151014 10:24:41.995"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.050" starttime="20151014 10:24:42.010"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.054" starttime="20151014 10:24:42.052"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.063" starttime="20151014 10:24:42.061"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.066" starttime="20151014 10:24:42.065"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.069" starttime="20151014 10:24:42.068"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.072" starttime="20151014 10:24:42.070"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151014 10:24:42.078" level="INFO">Running with the following project properties set: [u'crceHost=10.105.170.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=732123710001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=573190001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101002', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.170.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=573190001000']</msg>
<msg timestamp="20151014 10:24:42.498" level="INFO">10:24:42,488 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
10:24:42,489 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
10:24:42,490 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=7446043
10:24:42,492 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=732123710001000
10:24:42,493 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
10:24:42,494 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101002
10:24:42,494 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID
10:24:42,495 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20151014 10:24:42.500" starttime="20151014 10:24:42.076"></status>
</kw>
<msg timestamp="20151014 10:24:42.501" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:42.502" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151014 10:24:42.501" starttime="20151014 10:24:42.074"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151014 10:24:42.517" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20151014 10:24:42.516" starttime="20151014 10:24:42.513"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.520" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151014 10:24:42.520" starttime="20151014 10:24:42.518"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.524" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151014 10:24:42.523" starttime="20151014 10:24:42.521"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.530" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151014 10:24:42.535" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151014 10:24:42.536" starttime="20151014 10:24:42.527"></status>
</kw>
<msg timestamp="20151014 10:24:42.537" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:42.538" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,488 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151014 10:24:42.537" starttime="20151014 10:24:42.525"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.547" starttime="20151014 10:24:42.545"></status>
</kw>
<msg timestamp="20151014 10:24:42.549" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,488 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151014 10:24:42.548" starttime="20151014 10:24:42.539"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.557" starttime="20151014 10:24:42.555"></status>
</kw>
<msg timestamp="20151014 10:24:42.558" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,488 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151014 10:24:42.558" starttime="20151014 10:24:42.550"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.568" starttime="20151014 10:24:42.565"></status>
</kw>
<msg timestamp="20151014 10:24:42.569" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151014 10:24:42.569" starttime="20151014 10:24:42.560"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.580" starttime="20151014 10:24:42.578"></status>
</kw>
<msg timestamp="20151014 10:24:42.582" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151014 10:24:42.581" starttime="20151014 10:24:42.570"></status>
</kw>
<msg timestamp="20151014 10:24:42.584" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151014 10:24:42.583" starttime="20151014 10:24:42.505"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151014 10:24:42.598" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20151014 10:24:42.597" starttime="20151014 10:24:42.595"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.602" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151014 10:24:42.601" starttime="20151014 10:24:42.599"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.605" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151014 10:24:42.605" starttime="20151014 10:24:42.603"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.611" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151014 10:24:42.616" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151014 10:24:42.617" starttime="20151014 10:24:42.609"></status>
</kw>
<msg timestamp="20151014 10:24:42.619" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:42.619" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,489 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151014 10:24:42.618" starttime="20151014 10:24:42.607"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.628" starttime="20151014 10:24:42.626"></status>
</kw>
<msg timestamp="20151014 10:24:42.630" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,489 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151014 10:24:42.629" starttime="20151014 10:24:42.621"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.638" starttime="20151014 10:24:42.636"></status>
</kw>
<msg timestamp="20151014 10:24:42.639" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,489 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151014 10:24:42.639" starttime="20151014 10:24:42.631"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.648" starttime="20151014 10:24:42.646"></status>
</kw>
<msg timestamp="20151014 10:24:42.650" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151014 10:24:42.649" starttime="20151014 10:24:42.641"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.661" starttime="20151014 10:24:42.659"></status>
</kw>
<msg timestamp="20151014 10:24:42.663" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151014 10:24:42.662" starttime="20151014 10:24:42.651"></status>
</kw>
<msg timestamp="20151014 10:24:42.665" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20151014 10:24:42.664" starttime="20151014 10:24:42.586"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151014 10:24:42.680" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20151014 10:24:42.680" starttime="20151014 10:24:42.677"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.684" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151014 10:24:42.683" starttime="20151014 10:24:42.681"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.688" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151014 10:24:42.687" starttime="20151014 10:24:42.685"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.694" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151014 10:24:42.698" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151014 10:24:42.699" starttime="20151014 10:24:42.691"></status>
</kw>
<msg timestamp="20151014 10:24:42.700" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:42.701" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,492 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=732123710001000</msg>
<status status="PASS" endtime="20151014 10:24:42.700" starttime="20151014 10:24:42.689"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.710" starttime="20151014 10:24:42.708"></status>
</kw>
<msg timestamp="20151014 10:24:42.711" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,492 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=732123710001000</msg>
<status status="PASS" endtime="20151014 10:24:42.711" starttime="20151014 10:24:42.702"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.720" starttime="20151014 10:24:42.718"></status>
</kw>
<msg timestamp="20151014 10:24:42.721" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,492 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=732123710001000</msg>
<status status="PASS" endtime="20151014 10:24:42.720" starttime="20151014 10:24:42.713"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.730" starttime="20151014 10:24:42.728"></status>
</kw>
<msg timestamp="20151014 10:24:42.732" level="INFO">${resultCode} = 732123710001000</msg>
<status status="PASS" endtime="20151014 10:24:42.731" starttime="20151014 10:24:42.722"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.743" starttime="20151014 10:24:42.741"></status>
</kw>
<msg timestamp="20151014 10:24:42.745" level="INFO">${resultCode} = 732123710001000</msg>
<status status="PASS" endtime="20151014 10:24:42.744" starttime="20151014 10:24:42.733"></status>
</kw>
<msg timestamp="20151014 10:24:42.747" level="INFO">${imsi} = 732123710001000</msg>
<status status="PASS" endtime="20151014 10:24:42.746" starttime="20151014 10:24:42.667"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151014 10:24:42.762" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20151014 10:24:42.761" starttime="20151014 10:24:42.758"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.765" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151014 10:24:42.765" starttime="20151014 10:24:42.763"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.769" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151014 10:24:42.768" starttime="20151014 10:24:42.766"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.775" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151014 10:24:42.779" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151014 10:24:42.780" starttime="20151014 10:24:42.772"></status>
</kw>
<msg timestamp="20151014 10:24:42.782" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:42.782" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,490 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=7446043</msg>
<status status="PASS" endtime="20151014 10:24:42.781" starttime="20151014 10:24:42.770"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.791" starttime="20151014 10:24:42.789"></status>
</kw>
<msg timestamp="20151014 10:24:42.792" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,490 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=7446043</msg>
<status status="PASS" endtime="20151014 10:24:42.792" starttime="20151014 10:24:42.783"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.800" starttime="20151014 10:24:42.798"></status>
</kw>
<msg timestamp="20151014 10:24:42.802" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,490 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=7446043</msg>
<status status="PASS" endtime="20151014 10:24:42.801" starttime="20151014 10:24:42.793"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.810" starttime="20151014 10:24:42.808"></status>
</kw>
<msg timestamp="20151014 10:24:42.812" level="INFO">${resultCode} = 7446043</msg>
<status status="PASS" endtime="20151014 10:24:42.811" starttime="20151014 10:24:42.803"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.822" starttime="20151014 10:24:42.821"></status>
</kw>
<msg timestamp="20151014 10:24:42.824" level="INFO">${resultCode} = 7446043</msg>
<status status="PASS" endtime="20151014 10:24:42.823" starttime="20151014 10:24:42.813"></status>
</kw>
<msg timestamp="20151014 10:24:42.826" level="INFO">${id} = 7446043</msg>
<status status="PASS" endtime="20151014 10:24:42.825" starttime="20151014 10:24:42.750"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151014 10:24:42.839" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20151014 10:24:42.839" starttime="20151014 10:24:42.836"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.843" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151014 10:24:42.842" starttime="20151014 10:24:42.840"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.846" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151014 10:24:42.846" starttime="20151014 10:24:42.844"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.852" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151014 10:24:42.856" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151014 10:24:42.857" starttime="20151014 10:24:42.849"></status>
</kw>
<msg timestamp="20151014 10:24:42.859" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:42.859" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,493 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151014 10:24:42.858" starttime="20151014 10:24:42.847"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.867" starttime="20151014 10:24:42.865"></status>
</kw>
<msg timestamp="20151014 10:24:42.869" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,493 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151014 10:24:42.868" starttime="20151014 10:24:42.860"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.877" starttime="20151014 10:24:42.875"></status>
</kw>
<msg timestamp="20151014 10:24:42.878" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,493 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151014 10:24:42.878" starttime="20151014 10:24:42.870"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.888" starttime="20151014 10:24:42.885"></status>
</kw>
<msg timestamp="20151014 10:24:42.890" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151014 10:24:42.889" starttime="20151014 10:24:42.880"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.900" starttime="20151014 10:24:42.899"></status>
</kw>
<msg timestamp="20151014 10:24:42.902" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151014 10:24:42.901" starttime="20151014 10:24:42.891"></status>
</kw>
<msg timestamp="20151014 10:24:42.904" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20151014 10:24:42.903" starttime="20151014 10:24:42.828"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151014 10:24:42.916" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20151014 10:24:42.916" starttime="20151014 10:24:42.913"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.920" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151014 10:24:42.919" starttime="20151014 10:24:42.917"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.923" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151014 10:24:42.923" starttime="20151014 10:24:42.921"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.929" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151014 10:24:42.933" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151014 10:24:42.934" starttime="20151014 10:24:42.926"></status>
</kw>
<msg timestamp="20151014 10:24:42.935" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:42.936" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,494 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101002</msg>
<status status="PASS" endtime="20151014 10:24:42.935" starttime="20151014 10:24:42.924"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.944" starttime="20151014 10:24:42.942"></status>
</kw>
<msg timestamp="20151014 10:24:42.945" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,494 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101002</msg>
<status status="PASS" endtime="20151014 10:24:42.945" starttime="20151014 10:24:42.937"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.953" starttime="20151014 10:24:42.951"></status>
</kw>
<msg timestamp="20151014 10:24:42.954" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,494 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101002</msg>
<status status="PASS" endtime="20151014 10:24:42.954" starttime="20151014 10:24:42.946"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.962" starttime="20151014 10:24:42.960"></status>
</kw>
<msg timestamp="20151014 10:24:42.964" level="INFO">${resultCode} = 101002</msg>
<status status="PASS" endtime="20151014 10:24:42.963" starttime="20151014 10:24:42.955"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:42.974" starttime="20151014 10:24:42.972"></status>
</kw>
<msg timestamp="20151014 10:24:42.976" level="INFO">${resultCode} = 101002</msg>
<status status="PASS" endtime="20151014 10:24:42.975" starttime="20151014 10:24:42.965"></status>
</kw>
<msg timestamp="20151014 10:24:42.978" level="INFO">${tariffId} = 101002</msg>
<status status="PASS" endtime="20151014 10:24:42.977" starttime="20151014 10:24:42.906"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151014 10:24:42.989" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20151014 10:24:42.989" starttime="20151014 10:24:42.987"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.993" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151014 10:24:42.992" starttime="20151014 10:24:42.990"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:42.996" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151014 10:24:42.995" starttime="20151014 10:24:42.994"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151014 10:24:43.002" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151014 10:24:43.019" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151014 10:24:43.021" starttime="20151014 10:24:42.999"></status>
</kw>
<msg timestamp="20151014 10:24:43.026" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:43.027" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,494 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20151014 10:24:43.024" starttime="20151014 10:24:42.997"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:43.044" starttime="20151014 10:24:43.040"></status>
</kw>
<msg timestamp="20151014 10:24:43.049" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,494 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20151014 10:24:43.046" starttime="20151014 10:24:43.030"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:43.067" starttime="20151014 10:24:43.062"></status>
</kw>
<msg timestamp="20151014 10:24:43.070" level="INFO">${return_log_entry} = 2015-10-14 10:24:42,494 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20151014 10:24:43.068" starttime="20151014 10:24:43.051"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:43.086" starttime="20151014 10:24:43.082"></status>
</kw>
<msg timestamp="20151014 10:24:43.089" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20151014 10:24:43.088" starttime="20151014 10:24:43.072"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:43.111" starttime="20151014 10:24:43.107"></status>
</kw>
<msg timestamp="20151014 10:24:43.114" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20151014 10:24:43.113" starttime="20151014 10:24:43.092"></status>
</kw>
<msg timestamp="20151014 10:24:43.119" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20151014 10:24:43.117" starttime="20151014 10:24:42.980"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:43.140" starttime="20151014 10:24:43.137"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:43.145" starttime="20151014 10:24:43.142"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:43.150" starttime="20151014 10:24:43.147"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151014 10:24:43.176" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151014 10:24:43.178" starttime="20151014 10:24:43.165"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:43.179" starttime="20151014 10:24:43.162"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:43.181" starttime="20151014 10:24:43.152"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:43.182" starttime="20151014 10:24:43.122"></status>
</kw>
<msg timestamp="20151014 10:24:43.191" level="INFO">${rc} = OK</msg>
<msg timestamp="20151014 10:24:43.192" level="INFO">${provId} = 1</msg>
<msg timestamp="20151014 10:24:43.193" level="INFO">${imsi} = 732123710001000</msg>
<msg timestamp="20151014 10:24:43.194" level="INFO">${id} = 7446043</msg>
<msg timestamp="20151014 10:24:43.195" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20151014 10:24:43.196" level="INFO">${tariffId} = 101002</msg>
<msg timestamp="20151014 10:24:43.197" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20151014 10:24:43.188" starttime="20151014 10:24:41.895"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151014 10:24:43.244" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151014 10:24:43.245" starttime="20151014 10:24:43.239"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:43.247" starttime="20151014 10:24:43.235"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151014 10:24:43.253" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151014 10:24:43.254" starttime="20151014 10:24:43.251"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:43.255" starttime="20151014 10:24:43.249"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151014 10:24:43.260" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151014 10:24:43.260" starttime="20151014 10:24:43.258"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:43.261" starttime="20151014 10:24:43.256"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:43.262" starttime="20151014 10:24:43.223"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151014 10:24:43.266" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151014 10:24:43.266" starttime="20151014 10:24:43.263"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:43.269" starttime="20151014 10:24:43.267"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:43.272" starttime="20151014 10:24:43.270"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:43.276" starttime="20151014 10:24:43.273"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:43.278" starttime="20151014 10:24:43.277"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:43.280" starttime="20151014 10:24:43.279"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:43.283" starttime="20151014 10:24:43.281"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151014 10:24:43.287" level="INFO">Running with the following project properties set: [u'crceHost=10.105.170.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=732123710001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=573190001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101002', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.170.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=573190001000', u'crceHost=10.105.170.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=7446043']</msg>
<msg timestamp="20151014 10:24:43.944" level="INFO">10:24:43,937 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
10:24:43,939 INFO  [log] LowLevelOps.getMainAccount.output.accountId=7446045
10:24:43,940 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000
10:24:43,941 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
10:24:43,942 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20151014 10:24:43.947" starttime="20151014 10:24:43.286"></status>
</kw>
<msg timestamp="20151014 10:24:43.950" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:43.952" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151014 10:24:43.948" starttime="20151014 10:24:43.284"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151014 10:24:43.980" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20151014 10:24:43.979" starttime="20151014 10:24:43.973"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:43.987" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151014 10:24:43.986" starttime="20151014 10:24:43.982"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:43.994" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151014 10:24:43.993" starttime="20151014 10:24:43.989"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151014 10:24:44.003" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151014 10:24:44.019" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151014 10:24:44.021" starttime="20151014 10:24:44.000"></status>
</kw>
<msg timestamp="20151014 10:24:44.025" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:44.026" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,937 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151014 10:24:44.023" starttime="20151014 10:24:43.997"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.043" starttime="20151014 10:24:44.039"></status>
</kw>
<msg timestamp="20151014 10:24:44.046" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,937 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151014 10:24:44.045" starttime="20151014 10:24:44.028"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.062" starttime="20151014 10:24:44.058"></status>
</kw>
<msg timestamp="20151014 10:24:44.065" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,937 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151014 10:24:44.064" starttime="20151014 10:24:44.048"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.083" starttime="20151014 10:24:44.078"></status>
</kw>
<msg timestamp="20151014 10:24:44.086" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151014 10:24:44.085" starttime="20151014 10:24:44.068"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.108" starttime="20151014 10:24:44.104"></status>
</kw>
<msg timestamp="20151014 10:24:44.111" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151014 10:24:44.109" starttime="20151014 10:24:44.088"></status>
</kw>
<msg timestamp="20151014 10:24:44.115" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151014 10:24:44.113" starttime="20151014 10:24:43.957"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151014 10:24:44.140" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20151014 10:24:44.139" starttime="20151014 10:24:44.134"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:44.147" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151014 10:24:44.145" starttime="20151014 10:24:44.142"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:44.153" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151014 10:24:44.152" starttime="20151014 10:24:44.149"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151014 10:24:44.164" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151014 10:24:44.172" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151014 10:24:44.173" starttime="20151014 10:24:44.159"></status>
</kw>
<msg timestamp="20151014 10:24:44.176" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:44.177" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,939 INFO  [log] LowLevelOps.getMainAccount.output.accountId=7446045</msg>
<status status="PASS" endtime="20151014 10:24:44.175" starttime="20151014 10:24:44.155"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.192" starttime="20151014 10:24:44.189"></status>
</kw>
<msg timestamp="20151014 10:24:44.195" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,939 INFO  [log] LowLevelOps.getMainAccount.output.accountId=7446045</msg>
<status status="PASS" endtime="20151014 10:24:44.194" starttime="20151014 10:24:44.180"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.210" starttime="20151014 10:24:44.207"></status>
</kw>
<msg timestamp="20151014 10:24:44.213" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,939 INFO  [log] LowLevelOps.getMainAccount.output.accountId=7446045</msg>
<status status="PASS" endtime="20151014 10:24:44.212" starttime="20151014 10:24:44.197"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.229" starttime="20151014 10:24:44.225"></status>
</kw>
<msg timestamp="20151014 10:24:44.232" level="INFO">${resultCode} = 7446045</msg>
<status status="PASS" endtime="20151014 10:24:44.231" starttime="20151014 10:24:44.215"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.251" starttime="20151014 10:24:44.249"></status>
</kw>
<msg timestamp="20151014 10:24:44.253" level="INFO">${resultCode} = 7446045</msg>
<status status="PASS" endtime="20151014 10:24:44.252" starttime="20151014 10:24:44.234"></status>
</kw>
<msg timestamp="20151014 10:24:44.254" level="INFO">${accountId} = 7446045</msg>
<status status="PASS" endtime="20151014 10:24:44.254" starttime="20151014 10:24:44.119"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151014 10:24:44.266" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20151014 10:24:44.265" starttime="20151014 10:24:44.263"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:44.269" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151014 10:24:44.269" starttime="20151014 10:24:44.267"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:44.272" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151014 10:24:44.272" starttime="20151014 10:24:44.270"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151014 10:24:44.277" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151014 10:24:44.281" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151014 10:24:44.282" starttime="20151014 10:24:44.275"></status>
</kw>
<msg timestamp="20151014 10:24:44.283" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:44.284" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,940 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000</msg>
<status status="PASS" endtime="20151014 10:24:44.283" starttime="20151014 10:24:44.273"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.292" starttime="20151014 10:24:44.290"></status>
</kw>
<msg timestamp="20151014 10:24:44.293" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,940 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000</msg>
<status status="PASS" endtime="20151014 10:24:44.292" starttime="20151014 10:24:44.285"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.301" starttime="20151014 10:24:44.299"></status>
</kw>
<msg timestamp="20151014 10:24:44.302" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,940 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000</msg>
<status status="PASS" endtime="20151014 10:24:44.302" starttime="20151014 10:24:44.294"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.310" starttime="20151014 10:24:44.308"></status>
</kw>
<msg timestamp="20151014 10:24:44.312" level="INFO">${resultCode} = 10000000</msg>
<status status="PASS" endtime="20151014 10:24:44.311" starttime="20151014 10:24:44.303"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.322" starttime="20151014 10:24:44.320"></status>
</kw>
<msg timestamp="20151014 10:24:44.323" level="INFO">${resultCode} = 10000000</msg>
<status status="PASS" endtime="20151014 10:24:44.323" starttime="20151014 10:24:44.313"></status>
</kw>
<msg timestamp="20151014 10:24:44.329" level="INFO">${balance} = 10000000</msg>
<status status="PASS" endtime="20151014 10:24:44.328" starttime="20151014 10:24:44.256"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151014 10:24:44.341" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20151014 10:24:44.341" starttime="20151014 10:24:44.338"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:44.345" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151014 10:24:44.344" starttime="20151014 10:24:44.342"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:44.348" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151014 10:24:44.347" starttime="20151014 10:24:44.346"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151014 10:24:44.353" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151014 10:24:44.357" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151014 10:24:44.358" starttime="20151014 10:24:44.351"></status>
</kw>
<msg timestamp="20151014 10:24:44.359" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:44.359" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,941 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151014 10:24:44.358" starttime="20151014 10:24:44.349"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.367" starttime="20151014 10:24:44.365"></status>
</kw>
<msg timestamp="20151014 10:24:44.368" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,941 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151014 10:24:44.368" starttime="20151014 10:24:44.360"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.376" starttime="20151014 10:24:44.374"></status>
</kw>
<msg timestamp="20151014 10:24:44.377" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,941 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151014 10:24:44.377" starttime="20151014 10:24:44.369"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.385" starttime="20151014 10:24:44.383"></status>
</kw>
<msg timestamp="20151014 10:24:44.387" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151014 10:24:44.386" starttime="20151014 10:24:44.378"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.396" starttime="20151014 10:24:44.395"></status>
</kw>
<msg timestamp="20151014 10:24:44.398" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151014 10:24:44.397" starttime="20151014 10:24:44.388"></status>
</kw>
<msg timestamp="20151014 10:24:44.399" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20151014 10:24:44.399" starttime="20151014 10:24:44.331"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151014 10:24:44.411" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20151014 10:24:44.410" starttime="20151014 10:24:44.408"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:44.414" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151014 10:24:44.413" starttime="20151014 10:24:44.412"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151014 10:24:44.417" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151014 10:24:44.416" starttime="20151014 10:24:44.415"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151014 10:24:44.422" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151014 10:24:44.426" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151014 10:24:44.427" starttime="20151014 10:24:44.420"></status>
</kw>
<msg timestamp="20151014 10:24:44.428" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151014 10:24:44.428" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,942 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20151014 10:24:44.427" starttime="20151014 10:24:44.418"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.436" starttime="20151014 10:24:44.435"></status>
</kw>
<msg timestamp="20151014 10:24:44.438" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,942 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20151014 10:24:44.437" starttime="20151014 10:24:44.429"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.445" starttime="20151014 10:24:44.443"></status>
</kw>
<msg timestamp="20151014 10:24:44.446" level="INFO">${return_log_entry} = 2015-10-14 10:24:43,942 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20151014 10:24:44.446" starttime="20151014 10:24:44.439"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.455" starttime="20151014 10:24:44.452"></status>
</kw>
<msg timestamp="20151014 10:24:44.456" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151014 10:24:44.455" starttime="20151014 10:24:44.448"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.466" starttime="20151014 10:24:44.464"></status>
</kw>
<msg timestamp="20151014 10:24:44.467" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151014 10:24:44.466" starttime="20151014 10:24:44.457"></status>
</kw>
<msg timestamp="20151014 10:24:44.469" level="INFO">${currencyId} = 1</msg>
<status status="PASS" endtime="20151014 10:24:44.468" starttime="20151014 10:24:44.401"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.478" starttime="20151014 10:24:44.477"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.481" starttime="20151014 10:24:44.479"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.483" starttime="20151014 10:24:44.482"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151014 10:24:44.496" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151014 10:24:44.496" starttime="20151014 10:24:44.491"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:44.497" starttime="20151014 10:24:44.489"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:44.498" starttime="20151014 10:24:44.484"></status>
</kw>
<status status="PASS" endtime="20151014 10:24:44.499" starttime="20151014 10:24:44.470"></status>
</kw>
<msg timestamp="20151014 10:24:44.502" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20151014 10:24:44.503" level="INFO">${accId} = 7446045</msg>
<msg timestamp="20151014 10:24:44.503" level="INFO">${bal} = 10000000</msg>
<msg timestamp="20151014 10:24:44.504" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20151014 10:24:44.505" level="INFO">${curr} = 1</msg>
<status status="PASS" endtime="20151014 10:24:44.501" starttime="20151014 10:24:43.203"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${target_bal}=</arg>
<arg>Evaluate</arg>
<arg>${INITIAL_BALANCE}-${TESTSUBCRIBERS DEFAULT SLICE COSTS}</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.507" starttime="20151014 10:24:44.506"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Should Be Equal As Numbers</arg>
<arg>${target_bal}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<status status="PASS" endtime="20151014 10:24:44.510" starttime="20151014 10:24:44.508"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check: ${bal}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151014 10:24:44.513" level="INFO">Account balance check: 10000000</msg>
<status status="PASS" endtime="20151014 10:24:44.514" starttime="20151014 10:24:44.511"></status>
</kw>
<doc>Test will make a MOC call in NoAnswer case

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>TNZ_supported</tag>
</tags>
<status status="PASS" critical="yes" endtime="20151014 10:24:44.515" starttime="20151014 10:24:28.862"></status>
</test>
<doc>Testing the prepaid MOC call - NoAnswer

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20151014 10:24:44.521" starttime="20151014 10:24:10.413"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" info="" doc="" combined="" fail="0" links="">matko.sanseovic</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">MOC_only</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">TNZ_supported</stat>
</tag>
<suite>
<stat pass="1" id="s1" fail="0" name="MOC PREPAID ONNET-NoAnswer-robot-suite">MOC PREPAID ONNET-NoAnswer-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
