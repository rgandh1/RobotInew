<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20151105 15:44:54.753">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/MOC_PREPAID_ONNET-LongDuration196s-robot-suite.txt" id="s1" name="MOC PREPAID ONNET-LongDuration196s-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20151105 15:44:57.302" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20151105 15:44:57.306" level="INFO">${date} = Thu Nov  5 15:44:57 CET 2015</msg>
<status status="PASS" endtime="20151105 15:44:57.305" starttime="20151105 15:44:57.289"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151105 15:44:57.311" level="INFO">Date and time: Thu Nov  5 15:44:57 CET 2015</msg>
<status status="PASS" endtime="20151105 15:44:57.312" starttime="20151105 15:44:57.308"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151105 15:44:57.316" level="INFO">Target IN machine: 10.105.125.135</msg>
<status status="PASS" endtime="20151105 15:44:57.318" starttime="20151105 15:44:57.314"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:57.401" starttime="20151105 15:44:57.399"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:57.619" starttime="20151105 15:44:57.415"></status>
</kw>
<msg timestamp="20151105 15:44:57.622" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20151105 15:44:57.621" starttime="20151105 15:44:57.403"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151105 15:44:58.059" level="INFO">Logging into '10.105.125.135:22' as 'qa_automation'.</msg>
<msg timestamp="20151105 15:44:58.498" level="INFO">Read output: Last login: Thu Nov  5 14:09:08 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb25 ~]$</msg>
<status status="PASS" endtime="20151105 15:44:58.500" starttime="20151105 15:44:57.631"></status>
</kw>
<status status="PASS" endtime="20151105 15:44:58.503" starttime="20151105 15:44:57.624"></status>
</kw>
<msg timestamp="20151105 15:44:58.507" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20151105 15:44:58.506" starttime="20151105 15:44:57.380"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151105 15:44:58.517" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151105 15:44:58.517" starttime="20151105 15:44:58.510"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151105 15:44:58.523" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20151105 15:44:58.818" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151105 15:44:58.822" level="INFO">${output} = I-New MVNA MTel - Core - Service 1.0.0 2015.10.12-15:37:03 is running PID: 12616 </msg>
<status status="PASS" endtime="20151105 15:44:58.821" starttime="20151105 15:44:58.520"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:58.844" starttime="20151105 15:44:58.836"></status>
</kw>
<msg timestamp="20151105 15:44:58.848" level="INFO">${status} = PASS</msg>
<msg timestamp="20151105 15:44:58.851" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151105 15:44:58.847" starttime="20151105 15:44:58.828"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:58.872" starttime="20151105 15:44:58.868"></status>
</kw>
<msg timestamp="20151105 15:44:58.876" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151105 15:44:58.875" starttime="20151105 15:44:58.855"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20151105 15:44:58.886" level="INFO">${version_r} =  1.0.0 2015.10.12-15:37:03 is running PID: 12616 </msg>
<status status="PASS" endtime="20151105 15:44:58.885" starttime="20151105 15:44:58.879"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151105 15:44:58.895" level="INFO">${version} =  1.0.0 2015.10.12-15:37:03 </msg>
<status status="PASS" endtime="20151105 15:44:58.894" starttime="20151105 15:44:58.889"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:58.903" starttime="20151105 15:44:58.900"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:58.934" starttime="20151105 15:44:58.928"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151105 15:44:58.947" starttime="20151105 15:44:58.937"></status>
</kw>
<status status="PASS" endtime="20151105 15:44:58.950" starttime="20151105 15:44:58.908"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:58.958" starttime="20151105 15:44:58.956"></status>
</kw>
<msg timestamp="20151105 15:44:58.960" level="INFO">${ver} =  1.0.0 2015.10.12-15:37:03 </msg>
<status status="PASS" endtime="20151105 15:44:58.959" starttime="20151105 15:44:58.951"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:58.963" starttime="20151105 15:44:58.961"></status>
</kw>
<msg timestamp="20151105 15:44:58.966" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20151105 15:44:58.967" level="INFO">${in_version} =  1.0.0 2015.10.12-15:37:03 </msg>
<status status="PASS" endtime="20151105 15:44:58.965" starttime="20151105 15:44:57.342"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:59.033" starttime="20151105 15:44:59.031"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:59.089" starttime="20151105 15:44:59.040"></status>
</kw>
<msg timestamp="20151105 15:44:59.091" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20151105 15:44:59.090" starttime="20151105 15:44:59.035"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151105 15:44:59.102" level="INFO">Logging into '10.105.125.171:22' as 'qa_automation'.</msg>
<msg timestamp="20151105 15:44:59.510" level="INFO">Read output: Last login: Thu Nov  5 14:09:09 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb25 ~]$</msg>
<status status="PASS" endtime="20151105 15:44:59.512" starttime="20151105 15:44:59.100"></status>
</kw>
<status status="PASS" endtime="20151105 15:44:59.514" starttime="20151105 15:44:59.093"></status>
</kw>
<msg timestamp="20151105 15:44:59.519" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20151105 15:44:59.518" starttime="20151105 15:44:59.019"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151105 15:44:59.533" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151105 15:44:59.532" starttime="20151105 15:44:59.523"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151105 15:44:59.540" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20151105 15:44:59.804" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151105 15:44:59.806" level="INFO">${output} = I-New UMS MVNO - XDR 6.2.0 is running PID: 8872 </msg>
<status status="PASS" endtime="20151105 15:44:59.805" starttime="20151105 15:44:59.536"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:59.813" starttime="20151105 15:44:59.810"></status>
</kw>
<msg timestamp="20151105 15:44:59.815" level="INFO">${status} = PASS</msg>
<msg timestamp="20151105 15:44:59.815" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151105 15:44:59.814" starttime="20151105 15:44:59.807"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:59.823" starttime="20151105 15:44:59.822"></status>
</kw>
<msg timestamp="20151105 15:44:59.825" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151105 15:44:59.825" starttime="20151105 15:44:59.816"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20151105 15:44:59.829" level="INFO">${version_r} = I-New UMS MVNO - XDR 6.2.0 is running PID: 8872 </msg>
<status status="PASS" endtime="20151105 15:44:59.829" starttime="20151105 15:44:59.827"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151105 15:44:59.834" level="INFO">${version} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151105 15:44:59.833" starttime="20151105 15:44:59.831"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:59.836" starttime="20151105 15:44:59.835"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:59.849" starttime="20151105 15:44:59.847"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151105 15:44:59.854" starttime="20151105 15:44:59.850"></status>
</kw>
<status status="PASS" endtime="20151105 15:44:59.855" starttime="20151105 15:44:59.838"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:59.864" starttime="20151105 15:44:59.862"></status>
</kw>
<msg timestamp="20151105 15:44:59.865" level="INFO">${ver} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151105 15:44:59.865" starttime="20151105 15:44:59.856"></status>
</kw>
<msg timestamp="20151105 15:44:59.868" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20151105 15:44:59.869" level="INFO">${xdr_version} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151105 15:44:59.867" starttime="20151105 15:44:58.986"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:59.923" starttime="20151105 15:44:59.921"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151105 15:44:59.961" starttime="20151105 15:44:59.930"></status>
</kw>
<msg timestamp="20151105 15:44:59.963" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20151105 15:44:59.962" starttime="20151105 15:44:59.924"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151105 15:44:59.972" level="INFO">Logging into '10.105.125.159:22' as 'qa_automation'.</msg>
<msg timestamp="20151105 15:45:00.160" level="INFO">Read output: Last login: Thu Nov  5 14:09:11 2015 from 10.105.80.196
[1m[qa_automation@ocs01.tb25 ~]$</msg>
<status status="PASS" endtime="20151105 15:45:00.163" starttime="20151105 15:44:59.970"></status>
</kw>
<status status="PASS" endtime="20151105 15:45:00.166" starttime="20151105 15:44:59.964"></status>
</kw>
<msg timestamp="20151105 15:45:00.174" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20151105 15:45:00.171" starttime="20151105 15:44:59.910"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151105 15:45:00.187" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151105 15:45:00.186" starttime="20151105 15:45:00.177"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151105 15:45:00.195" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20151105 15:45:00.324" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151105 15:45:00.328" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.2.0.29859
Negret Rating &amp; Charging Engine 6.2.0.29859 is running (PID:19742, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20151105 15:45:00.326" starttime="20151105 15:45:00.190"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.342" starttime="20151105 15:45:00.336"></status>
</kw>
<msg timestamp="20151105 15:45:00.346" level="INFO">${status} = PASS</msg>
<msg timestamp="20151105 15:45:00.347" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151105 15:45:00.344" starttime="20151105 15:45:00.331"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.365" starttime="20151105 15:45:00.361"></status>
</kw>
<msg timestamp="20151105 15:45:00.368" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151105 15:45:00.367" starttime="20151105 15:45:00.350"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20151105 15:45:00.376" level="INFO">${version_r} =  6.2.0.29859 is running (PID:19742, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20151105 15:45:00.375" starttime="20151105 15:45:00.371"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151105 15:45:00.385" level="INFO">${version} =  6.2.0.29859 </msg>
<status status="PASS" endtime="20151105 15:45:00.384" starttime="20151105 15:45:00.379"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.391" starttime="20151105 15:45:00.388"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.425" starttime="20151105 15:45:00.420"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.435" starttime="20151105 15:45:00.428"></status>
</kw>
<status status="PASS" endtime="20151105 15:45:00.438" starttime="20151105 15:45:00.401"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.455" starttime="20151105 15:45:00.450"></status>
</kw>
<msg timestamp="20151105 15:45:00.458" level="INFO">${ver} =  6.2.0.29859 </msg>
<status status="PASS" endtime="20151105 15:45:00.457" starttime="20151105 15:45:00.440"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.465" starttime="20151105 15:45:00.461"></status>
</kw>
<msg timestamp="20151105 15:45:00.471" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20151105 15:45:00.472" level="INFO">${crce_version} =  6.2.0.29859 </msg>
<status status="PASS" endtime="20151105 15:45:00.468" starttime="20151105 15:44:59.885"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151105 15:45:00.480" level="INFO">IN state= OK version= 1.0.0 2015.10.12-15:37:03 </msg>
<status status="PASS" endtime="20151105 15:45:00.482" starttime="20151105 15:45:00.475"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151105 15:45:00.491" level="INFO">XDR state= OK version=I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151105 15:45:00.492" starttime="20151105 15:45:00.485"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151105 15:45:00.500" level="INFO">CRCE state= OK version= 6.2.0.29859 </msg>
<status status="PASS" endtime="20151105 15:45:00.502" starttime="20151105 15:45:00.495"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20151105 15:45:00.510" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151105 15:45:00.512" starttime="20151105 15:45:00.505"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20151105 15:45:00.519" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151105 15:45:00.520" starttime="20151105 15:45:00.514"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20151105 15:45:00.528" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151105 15:45:00.529" starttime="20151105 15:45:00.523"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.544" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes</msg>
<status status="PASS" endtime="20151105 15:45:00.542" starttime="20151105 15:45:00.532"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.552" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes</msg>
<status status="PASS" endtime="20151105 15:45:00.554" starttime="20151105 15:45:00.547"></status>
</kw>
<status status="PASS" endtime="20151105 15:45:00.556" starttime="20151105 15:44:57.277"></status>
</kw>
<test id="s1-t1" name="Run MOC 196s Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.592" starttime="20151105 15:45:00.590"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1000000</arg>
</arguments>
<msg timestamp="20151105 15:45:00.596" level="INFO">${INITIAL_BALANCE} = 1000000</msg>
<status status="PASS" endtime="20151105 15:45:00.595" starttime="20151105 15:45:00.594"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.614" level="INFO">msg=crce_host=10.105.125.159</msg>
<status status="PASS" endtime="20151105 15:45:00.615" starttime="20151105 15:45:00.612"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.618" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20151105 15:45:00.619" starttime="20151105 15:45:00.616"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.622" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20151105 15:45:00.623" starttime="20151105 15:45:00.620"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.625" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20151105 15:45:00.626" starttime="20151105 15:45:00.624"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.629" level="INFO">msg=imsiRangeStart=232201667725900</msg>
<status status="PASS" endtime="20151105 15:45:00.630" starttime="20151105 15:45:00.627"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.633" level="INFO">msg=msisdnRangeStart=43667725900</msg>
<status status="PASS" endtime="20151105 15:45:00.634" starttime="20151105 15:45:00.631"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.636" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20151105 15:45:00.637" starttime="20151105 15:45:00.635"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.640" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20151105 15:45:00.641" starttime="20151105 15:45:00.638"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.644" level="INFO">msg=tariffId=101001</msg>
<status status="PASS" endtime="20151105 15:45:00.644" starttime="20151105 15:45:00.642"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.647" level="INFO">msg=balance=1000000</msg>
<status status="PASS" endtime="20151105 15:45:00.648" starttime="20151105 15:45:00.645"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.663" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151105 15:45:00.664" starttime="20151105 15:45:00.660"></status>
</kw>
<status status="PASS" endtime="20151105 15:45:00.665" starttime="20151105 15:45:00.658"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.671" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151105 15:45:00.671" starttime="20151105 15:45:00.668"></status>
</kw>
<status status="PASS" endtime="20151105 15:45:00.672" starttime="20151105 15:45:00.666"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.678" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151105 15:45:00.679" starttime="20151105 15:45:00.675"></status>
</kw>
<status status="PASS" endtime="20151105 15:45:00.679" starttime="20151105 15:45:00.673"></status>
</kw>
<status status="PASS" endtime="20151105 15:45:00.680" starttime="20151105 15:45:00.650"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151105 15:45:00.685" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151105 15:45:00.686" starttime="20151105 15:45:00.681"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.689" starttime="20151105 15:45:00.687"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.692" starttime="20151105 15:45:00.690"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.695" starttime="20151105 15:45:00.693"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.698" starttime="20151105 15:45:00.696"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.701" starttime="20151105 15:45:00.699"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.704" starttime="20151105 15:45:00.702"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.707" starttime="20151105 15:45:00.705"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.710" starttime="20151105 15:45:00.708"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.714" starttime="20151105 15:45:00.712"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.717" starttime="20151105 15:45:00.715"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.720" starttime="20151105 15:45:00.718"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:00.723" starttime="20151105 15:45:00.721"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151105 15:45:00.727" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725900', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725900', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=1000000']</msg>
<msg timestamp="20151105 15:45:05.805" level="INFO">15:45:00,897 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/ext] for external libraries
15:45:00,898 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
15:45:02,837 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/crce-subscriberadmin/robot_crce_bridge-soapui-project.xml]
15:45:02,853 INFO  [SoapUITestCaseRunner] Setting project property [crceHost] to [10.105.125.159]
15:45:02,853 INFO  [SoapUITestCaseRunner] Setting project property [crcePort] to [8080]
15:45:02,853 INFO  [SoapUITestCaseRunner] Setting project property [crceWebservicesBasePath] to [/inew-mvno-crce-webservices/]
15:45:02,854 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.amount] to [2]
15:45:02,854 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.imsiRangeStart] to [232201667725900]
15:45:02,854 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.msisdnRangeStart] to [43667725900]
15:45:02,854 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.type] to [PREPAID]
15:45:02,854 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.languageid] to [1]
15:45:02,854 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.tariffId] to [101001]
15:45:02,854 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.balance] to [1000000]
15:45:02,855 INFO  [SoapUITestCaseRunner] Running SoapUI tests in project [Robotframework_CRCE-Bridge]
15:45:02,855 INFO  [SoapUITestCaseRunner] Running TestCase [createTestSubscribers]
15:45:02,864 INFO  [SoapUITestCaseRunner] Running SoapUI testcase [createTestSubscribers]
15:45:02,870 INFO  [SoapUITestCaseRunner] running step [init_repeat_counter]
15:45:03,299 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
15:45:03,359 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
15:45:03,705 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:45:03,706 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:45:03,747 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:45:03,754 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:45:03,934 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:45:03,935 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:45:03,940 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:45:03,940 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
15:45:04,006 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
15:45:04,271 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
15:45:04,297 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
15:45:04,299 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:45:04,301 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:45:04,301 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:45:04,395 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:45:04,396 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:45:04,400 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:45:04,400 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:45:04,400 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:45:04,400 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
15:45:04,442 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
15:45:04,445 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
15:45:04,491 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
15:45:04,496 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:45:04,498 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:45:04,498 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:45:04,518 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:45:04,518 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:45:04,524 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:45:04,524 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:45:04,525 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:45:04,525 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
15:45:04,592 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
15:45:04,604 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
15:45:04,648 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
15:45:04,651 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:45:04,653 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:45:04,653 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:45:04,729 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:45:04,730 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:45:04,736 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:45:04,737 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:45:04,737 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:45:04,737 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
15:45:04,803 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
15:45:04,809 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
15:45:04,840 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
15:45:04,843 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:45:04,845 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:45:04,845 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
15:45:04,874 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:45:04,874 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:45:04,887 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:45:04,887 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:45:04,887 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:45:04,888 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
15:45:04,949 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
15:45:04,970 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
15:45:05,014 INFO  [SoapUITestCaseRunner] running step [setBalance]
15:45:05,017 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:45:05,019 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:45:05,020 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
15:45:05,080 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:45:05,081 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:45:05,093 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:45:05,093 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:45:05,093 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:45:05,093 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
15:45:05,156 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
15:45:05,166 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
15:45:05,204 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
15:45:05,232 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
15:45:05,234 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
15:45:05,235 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:45:05,237 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:45:05,237 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:45:05,262 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:45:05,263 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:45:05,279 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:45:05,279 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:45:05,279 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:45:05,279 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
15:45:05,280 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
15:45:05,305 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
15:45:05,306 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
15:45:05,309 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:45:05,311 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:45:05,311 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:45:05,398 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:45:05,399 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:45:05,405 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:45:05,405 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:45:05,405 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:45:05,405 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
15:45:05,406 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
15:45:05,415 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
15:45:05,417 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
15:45:05,420 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:45:05,422 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:45:05,422 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:45:05,447 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:45:05,447 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:45:05,453 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:45:05,453 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:45:05,453 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:45:05,454 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
15:45:05,454 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
15:45:05,464 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
15:45:05,465 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
15:45:05,467 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:45:05,469 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:45:05,469 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:45:05,556 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:45:05,556 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:45:05,562 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:45:05,562 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:45:05,562 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:45:05,563 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
15:45:05,563 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
15:45:05,568 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
15:45:05,569 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
15:45:05,571 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:45:05,573 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:45:05,573 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
15:45:05,605 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:45:05,606 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:45:05,617 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:45:05,617 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:45:05,618 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:45:05,618 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
15:45:05,618 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
15:45:05,638 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
15:45:05,639 INFO  [SoapUITestCaseRunner] running step [setBalance]
15:45:05,641 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:45:05,643 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:45:05,643 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
15:45:05,704 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:45:05,704 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:45:05,715 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:45:05,715 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:45:05,716 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:45:05,716 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
15:45:05,716 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
15:45:05,725 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
15:45:05,726 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
15:45:05,727 INFO  [SoapUITestCaseRunner] running step [finish_successful]
15:45:05,794 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK
15:45:05,795 INFO  [SoapUITestCaseRunner] Finished running SoapUI testcase [createTestSubscribers], time taken: 2869ms, status: FINISHED
15:45:05,796 INFO  [SoapUITestCaseRunner] TestCase [createTestSubscribers] finished with status [FINISHED] in 2869ms</msg>
<status status="PASS" endtime="20151105 15:45:05.816" starttime="20151105 15:45:00.726"></status>
</kw>
<msg timestamp="20151105 15:45:05.825" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:45:05.826" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151105 15:45:05.820" starttime="20151105 15:45:00.724"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151105 15:45:05.866" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20151105 15:45:05.865" starttime="20151105 15:45:05.858"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:45:05.876" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151105 15:45:05.875" starttime="20151105 15:45:05.870"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:45:05.885" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151105 15:45:05.884" starttime="20151105 15:45:05.879"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151105 15:45:05.901" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151105 15:45:05.915" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20151105 15:45:05.917" starttime="20151105 15:45:05.894"></status>
</kw>
<msg timestamp="20151105 15:45:05.921" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:45:05.922" level="INFO">${return_log_entry} = 2015-11-05 15:45:05,794 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151105 15:45:05.919" starttime="20151105 15:45:05.889"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:05.945" starttime="20151105 15:45:05.940"></status>
</kw>
<msg timestamp="20151105 15:45:05.949" level="INFO">${return_log_entry} = 2015-11-05 15:45:05,794 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151105 15:45:05.947" starttime="20151105 15:45:05.926"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:05.959" starttime="20151105 15:45:05.957"></status>
</kw>
<msg timestamp="20151105 15:45:05.961" level="INFO">${return_log_entry} = 2015-11-05 15:45:05,794 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151105 15:45:05.960" starttime="20151105 15:45:05.950"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:05.970" starttime="20151105 15:45:05.968"></status>
</kw>
<msg timestamp="20151105 15:45:05.972" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151105 15:45:05.971" starttime="20151105 15:45:05.962"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:05.984" starttime="20151105 15:45:05.982"></status>
</kw>
<msg timestamp="20151105 15:45:05.985" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151105 15:45:05.984" starttime="20151105 15:45:05.973"></status>
</kw>
<msg timestamp="20151105 15:45:05.987" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151105 15:45:05.987" starttime="20151105 15:45:05.832"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:06.002" starttime="20151105 15:45:05.999"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:06.005" starttime="20151105 15:45:06.003"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:06.045" starttime="20151105 15:45:06.042"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151105 15:45:06.062" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151105 15:45:06.063" starttime="20151105 15:45:06.054"></status>
</kw>
<status status="PASS" endtime="20151105 15:45:06.064" starttime="20151105 15:45:06.052"></status>
</kw>
<status status="PASS" endtime="20151105 15:45:06.064" starttime="20151105 15:45:06.046"></status>
</kw>
<status status="PASS" endtime="20151105 15:45:06.065" starttime="20151105 15:45:05.989"></status>
</kw>
<msg timestamp="20151105 15:45:06.069" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20151105 15:45:06.068" starttime="20151105 15:45:00.599"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20151105 15:45:06.073" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151105 15:45:06.073" starttime="20151105 15:45:06.070"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151105 15:45:06.077" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20151105 15:45:06.077" starttime="20151105 15:45:06.075"></status>
</kw>
<kw type="kw" name="${calling_int} = BuiltIn.Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<msg timestamp="20151105 15:45:06.081" level="INFO">Argument types are:
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20151105 15:45:06.083" level="INFO">${calling_int} = 43667725900</msg>
<status status="PASS" endtime="20151105 15:45:06.082" starttime="20151105 15:45:06.079"></status>
</kw>
<kw type="kw" name="${called_party} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${calling_int}+1</arg>
</arguments>
<msg timestamp="20151105 15:45:06.089" level="INFO">${called_party} = 43667725901</msg>
<status status="PASS" endtime="20151105 15:45:06.088" starttime="20151105 15:45:06.084"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC 1s *******</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:06.092" starttime="20151105 15:45:06.090"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the MOC call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151105 15:45:06.095" level="INFO">Running the MOC call...</msg>
<status status="PASS" endtime="20151105 15:45:06.096" starttime="20151105 15:45:06.093"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC 196s">
<doc>Runs a standard MOC 196s session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${called_party}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc196s</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20151105 15:45:06.139" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-subscribers.csv</msg>
<status status="PASS" endtime="20151105 15:45:06.138" starttime="20151105 15:45:06.136"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20151105 15:45:06.143" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv</msg>
<status status="PASS" endtime="20151105 15:45:06.142" starttime="20151105 15:45:06.140"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20151105 15:45:06.147" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini</msg>
<status status="PASS" endtime="20151105 15:45:06.146" starttime="20151105 15:45:06.144"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20151105 15:45:06.152" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc196s.cgs</msg>
<status status="PASS" endtime="20151105 15:45:06.151" starttime="20151105 15:45:06.149"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:06.155" starttime="20151105 15:45:06.153"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20151105 15:45:06.160" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151105 15:45:06.161" starttime="20151105 15:45:06.156"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:06.164" starttime="20151105 15:45:06.162"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20151105 15:45:06.168" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151105 15:45:06.169" starttime="20151105 15:45:06.165"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20151105 15:45:06.175" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151105 15:45:06.175" starttime="20151105 15:45:06.171"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:06.178" starttime="20151105 15:45:06.176"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20151105 15:45:06.182" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151105 15:45:06.190" starttime="20151105 15:45:06.179"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20151105 15:45:06.195" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151105 15:45:06.196" starttime="20151105 15:45:06.191"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20151105 15:45:06.199" starttime="20151105 15:45:06.197"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20151105 15:45:06.211" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc196s.cgs /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20151105 15:48:26.408" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151105 15:48:26.400" starttime="20151105 15:45:06.200"></status>
</kw>
<msg timestamp="20151105 15:48:26.418" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151105 15:48:26.416" starttime="20151105 15:45:06.119"></status>
</kw>
<msg timestamp="20151105 15:48:26.423" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151105 15:48:26.421" starttime="20151105 15:45:06.099"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151105 15:48:26.430" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20151105 15:48:26.432" starttime="20151105 15:48:26.426"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20151105 15:48:26.440" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151105 15:48:26.442" starttime="20151105 15:48:26.435"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:26.448" starttime="20151105 15:48:26.445"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151105 15:48:26.508" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151105 15:48:26.511" starttime="20151105 15:48:26.499"></status>
</kw>
<status status="PASS" endtime="20151105 15:48:26.513" starttime="20151105 15:48:26.495"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151105 15:48:26.525" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151105 15:48:26.526" starttime="20151105 15:48:26.519"></status>
</kw>
<status status="PASS" endtime="20151105 15:48:26.528" starttime="20151105 15:48:26.515"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151105 15:48:26.541" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151105 15:48:26.542" starttime="20151105 15:48:26.536"></status>
</kw>
<status status="PASS" endtime="20151105 15:48:26.544" starttime="20151105 15:48:26.532"></status>
</kw>
<status status="PASS" endtime="20151105 15:48:26.546" starttime="20151105 15:48:26.480"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151105 15:48:26.555" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151105 15:48:26.556" starttime="20151105 15:48:26.549"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:26.562" starttime="20151105 15:48:26.558"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:26.570" starttime="20151105 15:48:26.565"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:26.577" starttime="20151105 15:48:26.572"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:26.583" starttime="20151105 15:48:26.579"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:26.588" starttime="20151105 15:48:26.585"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:26.594" starttime="20151105 15:48:26.590"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151105 15:48:26.604" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725900', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725900', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=1000000', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725900']</msg>
<msg timestamp="20151105 15:48:26.979" level="INFO">15:48:26,975 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
15:48:26,975 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
15:48:26,976 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=141422
15:48:26,976 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725900
15:48:26,977 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
15:48:26,977 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001
15:48:26,977 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID
15:48:26,978 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20151105 15:48:26.980" starttime="20151105 15:48:26.600"></status>
</kw>
<msg timestamp="20151105 15:48:26.982" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:48:26.982" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151105 15:48:26.981" starttime="20151105 15:48:26.597"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151105 15:48:26.996" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20151105 15:48:26.996" starttime="20151105 15:48:26.993"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.000" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151105 15:48:26.999" starttime="20151105 15:48:26.997"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.004" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151105 15:48:27.003" starttime="20151105 15:48:27.001"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.010" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151105 15:48:27.015" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151105 15:48:27.016" starttime="20151105 15:48:27.007"></status>
</kw>
<msg timestamp="20151105 15:48:27.018" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:48:27.018" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,975 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151105 15:48:27.017" starttime="20151105 15:48:27.005"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.028" starttime="20151105 15:48:27.026"></status>
</kw>
<msg timestamp="20151105 15:48:27.030" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,975 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151105 15:48:27.029" starttime="20151105 15:48:27.020"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.039" starttime="20151105 15:48:27.037"></status>
</kw>
<msg timestamp="20151105 15:48:27.040" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,975 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151105 15:48:27.040" starttime="20151105 15:48:27.031"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.049" starttime="20151105 15:48:27.047"></status>
</kw>
<msg timestamp="20151105 15:48:27.051" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151105 15:48:27.050" starttime="20151105 15:48:27.041"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.063" starttime="20151105 15:48:27.061"></status>
</kw>
<msg timestamp="20151105 15:48:27.064" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151105 15:48:27.064" starttime="20151105 15:48:27.052"></status>
</kw>
<msg timestamp="20151105 15:48:27.067" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151105 15:48:27.066" starttime="20151105 15:48:26.985"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151105 15:48:27.080" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20151105 15:48:27.080" starttime="20151105 15:48:27.077"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.083" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151105 15:48:27.083" starttime="20151105 15:48:27.081"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.087" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151105 15:48:27.086" starttime="20151105 15:48:27.085"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.092" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151105 15:48:27.097" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151105 15:48:27.098" starttime="20151105 15:48:27.090"></status>
</kw>
<msg timestamp="20151105 15:48:27.099" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:48:27.100" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,975 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151105 15:48:27.099" starttime="20151105 15:48:27.088"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.108" starttime="20151105 15:48:27.106"></status>
</kw>
<msg timestamp="20151105 15:48:27.110" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,975 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151105 15:48:27.109" starttime="20151105 15:48:27.101"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.117" starttime="20151105 15:48:27.115"></status>
</kw>
<msg timestamp="20151105 15:48:27.119" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,975 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151105 15:48:27.118" starttime="20151105 15:48:27.111"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.127" starttime="20151105 15:48:27.125"></status>
</kw>
<msg timestamp="20151105 15:48:27.128" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151105 15:48:27.128" starttime="20151105 15:48:27.120"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.139" starttime="20151105 15:48:27.137"></status>
</kw>
<msg timestamp="20151105 15:48:27.140" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151105 15:48:27.139" starttime="20151105 15:48:27.130"></status>
</kw>
<msg timestamp="20151105 15:48:27.142" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20151105 15:48:27.141" starttime="20151105 15:48:27.069"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151105 15:48:27.154" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20151105 15:48:27.154" starttime="20151105 15:48:27.151"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.157" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151105 15:48:27.157" starttime="20151105 15:48:27.155"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.161" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151105 15:48:27.160" starttime="20151105 15:48:27.159"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.166" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151105 15:48:27.170" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151105 15:48:27.171" starttime="20151105 15:48:27.164"></status>
</kw>
<msg timestamp="20151105 15:48:27.173" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:48:27.173" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,976 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725900</msg>
<status status="PASS" endtime="20151105 15:48:27.172" starttime="20151105 15:48:27.162"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.181" starttime="20151105 15:48:27.179"></status>
</kw>
<msg timestamp="20151105 15:48:27.182" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,976 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725900</msg>
<status status="PASS" endtime="20151105 15:48:27.182" starttime="20151105 15:48:27.174"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.190" starttime="20151105 15:48:27.189"></status>
</kw>
<msg timestamp="20151105 15:48:27.192" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,976 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725900</msg>
<status status="PASS" endtime="20151105 15:48:27.191" starttime="20151105 15:48:27.184"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.200" starttime="20151105 15:48:27.198"></status>
</kw>
<msg timestamp="20151105 15:48:27.202" level="INFO">${resultCode} = 232201667725900</msg>
<status status="PASS" endtime="20151105 15:48:27.201" starttime="20151105 15:48:27.193"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.212" starttime="20151105 15:48:27.210"></status>
</kw>
<msg timestamp="20151105 15:48:27.213" level="INFO">${resultCode} = 232201667725900</msg>
<status status="PASS" endtime="20151105 15:48:27.213" starttime="20151105 15:48:27.203"></status>
</kw>
<msg timestamp="20151105 15:48:27.215" level="INFO">${imsi} = 232201667725900</msg>
<status status="PASS" endtime="20151105 15:48:27.214" starttime="20151105 15:48:27.144"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151105 15:48:27.228" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20151105 15:48:27.227" starttime="20151105 15:48:27.225"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.231" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151105 15:48:27.231" starttime="20151105 15:48:27.229"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.235" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151105 15:48:27.234" starttime="20151105 15:48:27.232"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.240" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151105 15:48:27.245" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151105 15:48:27.245" starttime="20151105 15:48:27.238"></status>
</kw>
<msg timestamp="20151105 15:48:27.247" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:48:27.247" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,976 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=141422</msg>
<status status="PASS" endtime="20151105 15:48:27.246" starttime="20151105 15:48:27.236"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.255" starttime="20151105 15:48:27.253"></status>
</kw>
<msg timestamp="20151105 15:48:27.256" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,976 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=141422</msg>
<status status="PASS" endtime="20151105 15:48:27.256" starttime="20151105 15:48:27.248"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.264" starttime="20151105 15:48:27.262"></status>
</kw>
<msg timestamp="20151105 15:48:27.265" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,976 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=141422</msg>
<status status="PASS" endtime="20151105 15:48:27.265" starttime="20151105 15:48:27.257"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.273" starttime="20151105 15:48:27.271"></status>
</kw>
<msg timestamp="20151105 15:48:27.275" level="INFO">${resultCode} = 141422</msg>
<status status="PASS" endtime="20151105 15:48:27.274" starttime="20151105 15:48:27.266"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.285" starttime="20151105 15:48:27.284"></status>
</kw>
<msg timestamp="20151105 15:48:27.287" level="INFO">${resultCode} = 141422</msg>
<status status="PASS" endtime="20151105 15:48:27.286" starttime="20151105 15:48:27.276"></status>
</kw>
<msg timestamp="20151105 15:48:27.289" level="INFO">${id} = 141422</msg>
<status status="PASS" endtime="20151105 15:48:27.288" starttime="20151105 15:48:27.217"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151105 15:48:27.301" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20151105 15:48:27.300" starttime="20151105 15:48:27.298"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.304" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151105 15:48:27.303" starttime="20151105 15:48:27.302"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.307" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151105 15:48:27.307" starttime="20151105 15:48:27.305"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.312" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151105 15:48:27.317" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151105 15:48:27.317" starttime="20151105 15:48:27.310"></status>
</kw>
<msg timestamp="20151105 15:48:27.319" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:48:27.319" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,977 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151105 15:48:27.318" starttime="20151105 15:48:27.308"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.328" starttime="20151105 15:48:27.325"></status>
</kw>
<msg timestamp="20151105 15:48:27.330" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,977 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151105 15:48:27.329" starttime="20151105 15:48:27.320"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.338" starttime="20151105 15:48:27.336"></status>
</kw>
<msg timestamp="20151105 15:48:27.339" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,977 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151105 15:48:27.339" starttime="20151105 15:48:27.331"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.347" starttime="20151105 15:48:27.345"></status>
</kw>
<msg timestamp="20151105 15:48:27.349" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151105 15:48:27.348" starttime="20151105 15:48:27.340"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.359" starttime="20151105 15:48:27.357"></status>
</kw>
<msg timestamp="20151105 15:48:27.360" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151105 15:48:27.360" starttime="20151105 15:48:27.350"></status>
</kw>
<msg timestamp="20151105 15:48:27.362" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20151105 15:48:27.362" starttime="20151105 15:48:27.290"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151105 15:48:27.374" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20151105 15:48:27.374" starttime="20151105 15:48:27.371"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.378" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151105 15:48:27.377" starttime="20151105 15:48:27.375"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.381" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151105 15:48:27.380" starttime="20151105 15:48:27.379"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.387" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151105 15:48:27.391" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151105 15:48:27.392" starttime="20151105 15:48:27.384"></status>
</kw>
<msg timestamp="20151105 15:48:27.394" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:48:27.394" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,977 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20151105 15:48:27.393" starttime="20151105 15:48:27.382"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.402" starttime="20151105 15:48:27.400"></status>
</kw>
<msg timestamp="20151105 15:48:27.404" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,977 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20151105 15:48:27.403" starttime="20151105 15:48:27.395"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.411" starttime="20151105 15:48:27.409"></status>
</kw>
<msg timestamp="20151105 15:48:27.412" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,977 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20151105 15:48:27.412" starttime="20151105 15:48:27.405"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.421" starttime="20151105 15:48:27.419"></status>
</kw>
<msg timestamp="20151105 15:48:27.422" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20151105 15:48:27.422" starttime="20151105 15:48:27.414"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.432" starttime="20151105 15:48:27.430"></status>
</kw>
<msg timestamp="20151105 15:48:27.433" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20151105 15:48:27.433" starttime="20151105 15:48:27.423"></status>
</kw>
<msg timestamp="20151105 15:48:27.435" level="INFO">${tariffId} = 101001</msg>
<status status="PASS" endtime="20151105 15:48:27.435" starttime="20151105 15:48:27.364"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151105 15:48:27.447" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20151105 15:48:27.446" starttime="20151105 15:48:27.444"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.450" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151105 15:48:27.449" starttime="20151105 15:48:27.448"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.453" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151105 15:48:27.453" starttime="20151105 15:48:27.451"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.458" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151105 15:48:27.462" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151105 15:48:27.463" starttime="20151105 15:48:27.456"></status>
</kw>
<msg timestamp="20151105 15:48:27.464" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:48:27.464" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,977 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20151105 15:48:27.463" starttime="20151105 15:48:27.454"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.472" starttime="20151105 15:48:27.470"></status>
</kw>
<msg timestamp="20151105 15:48:27.473" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,977 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20151105 15:48:27.472" starttime="20151105 15:48:27.465"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.481" starttime="20151105 15:48:27.479"></status>
</kw>
<msg timestamp="20151105 15:48:27.482" level="INFO">${return_log_entry} = 2015-11-05 15:48:26,977 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20151105 15:48:27.481" starttime="20151105 15:48:27.474"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.490" starttime="20151105 15:48:27.488"></status>
</kw>
<msg timestamp="20151105 15:48:27.492" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20151105 15:48:27.491" starttime="20151105 15:48:27.483"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.505" starttime="20151105 15:48:27.501"></status>
</kw>
<msg timestamp="20151105 15:48:27.507" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20151105 15:48:27.506" starttime="20151105 15:48:27.493"></status>
</kw>
<msg timestamp="20151105 15:48:27.509" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20151105 15:48:27.508" starttime="20151105 15:48:27.437"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.519" starttime="20151105 15:48:27.517"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.521" starttime="20151105 15:48:27.520"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.524" starttime="20151105 15:48:27.523"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151105 15:48:27.537" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151105 15:48:27.538" starttime="20151105 15:48:27.532"></status>
</kw>
<status status="PASS" endtime="20151105 15:48:27.539" starttime="20151105 15:48:27.530"></status>
</kw>
<status status="PASS" endtime="20151105 15:48:27.539" starttime="20151105 15:48:27.525"></status>
</kw>
<status status="PASS" endtime="20151105 15:48:27.540" starttime="20151105 15:48:27.511"></status>
</kw>
<msg timestamp="20151105 15:48:27.544" level="INFO">${rc} = OK</msg>
<msg timestamp="20151105 15:48:27.545" level="INFO">${provId} = 1</msg>
<msg timestamp="20151105 15:48:27.545" level="INFO">${imsi} = 232201667725900</msg>
<msg timestamp="20151105 15:48:27.545" level="INFO">${id} = 141422</msg>
<msg timestamp="20151105 15:48:27.546" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20151105 15:48:27.547" level="INFO">${tariffId} = 101001</msg>
<msg timestamp="20151105 15:48:27.547" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20151105 15:48:27.543" starttime="20151105 15:48:26.456"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.569" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151105 15:48:27.570" starttime="20151105 15:48:27.567"></status>
</kw>
<status status="PASS" endtime="20151105 15:48:27.571" starttime="20151105 15:48:27.565"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.576" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151105 15:48:27.576" starttime="20151105 15:48:27.573"></status>
</kw>
<status status="PASS" endtime="20151105 15:48:27.577" starttime="20151105 15:48:27.572"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.582" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151105 15:48:27.582" starttime="20151105 15:48:27.580"></status>
</kw>
<status status="PASS" endtime="20151105 15:48:27.583" starttime="20151105 15:48:27.578"></status>
</kw>
<status status="PASS" endtime="20151105 15:48:27.584" starttime="20151105 15:48:27.560"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.587" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151105 15:48:27.588" starttime="20151105 15:48:27.585"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.590" starttime="20151105 15:48:27.589"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.593" starttime="20151105 15:48:27.591"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.596" starttime="20151105 15:48:27.594"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.599" starttime="20151105 15:48:27.597"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.601" starttime="20151105 15:48:27.599"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.603" starttime="20151105 15:48:27.602"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151105 15:48:27.607" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725900', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725900', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=1000000', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725900', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=141422']</msg>
<msg timestamp="20151105 15:48:27.809" level="INFO">15:48:27,806 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
15:48:27,807 INFO  [log] LowLevelOps.getMainAccount.output.accountId=141423
15:48:27,807 INFO  [log] LowLevelOps.getMainAccount.output.balance=640000
15:48:27,808 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
15:48:27,808 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151105 15:48:27.810" starttime="20151105 15:48:27.606"></status>
</kw>
<msg timestamp="20151105 15:48:27.812" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:48:27.812" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151105 15:48:27.811" starttime="20151105 15:48:27.604"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151105 15:48:27.823" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20151105 15:48:27.823" starttime="20151105 15:48:27.820"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.827" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151105 15:48:27.826" starttime="20151105 15:48:27.824"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.830" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151105 15:48:27.830" starttime="20151105 15:48:27.828"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.865" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151105 15:48:27.870" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151105 15:48:27.870" starttime="20151105 15:48:27.834"></status>
</kw>
<msg timestamp="20151105 15:48:27.872" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:48:27.872" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,806 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151105 15:48:27.871" starttime="20151105 15:48:27.831"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.880" starttime="20151105 15:48:27.878"></status>
</kw>
<msg timestamp="20151105 15:48:27.881" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,806 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151105 15:48:27.881" starttime="20151105 15:48:27.873"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.889" starttime="20151105 15:48:27.887"></status>
</kw>
<msg timestamp="20151105 15:48:27.891" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,806 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151105 15:48:27.890" starttime="20151105 15:48:27.883"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.900" starttime="20151105 15:48:27.897"></status>
</kw>
<msg timestamp="20151105 15:48:27.901" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151105 15:48:27.900" starttime="20151105 15:48:27.892"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.912" starttime="20151105 15:48:27.910"></status>
</kw>
<msg timestamp="20151105 15:48:27.913" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151105 15:48:27.913" starttime="20151105 15:48:27.902"></status>
</kw>
<msg timestamp="20151105 15:48:27.915" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151105 15:48:27.915" starttime="20151105 15:48:27.814"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151105 15:48:27.928" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20151105 15:48:27.928" starttime="20151105 15:48:27.925"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.932" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151105 15:48:27.932" starttime="20151105 15:48:27.930"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.936" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151105 15:48:27.935" starttime="20151105 15:48:27.933"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151105 15:48:27.942" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151105 15:48:27.947" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151105 15:48:27.948" starttime="20151105 15:48:27.940"></status>
</kw>
<msg timestamp="20151105 15:48:27.950" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:48:27.951" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,807 INFO  [log] LowLevelOps.getMainAccount.output.accountId=141423</msg>
<status status="PASS" endtime="20151105 15:48:27.949" starttime="20151105 15:48:27.937"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.961" starttime="20151105 15:48:27.958"></status>
</kw>
<msg timestamp="20151105 15:48:27.963" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,807 INFO  [log] LowLevelOps.getMainAccount.output.accountId=141423</msg>
<status status="PASS" endtime="20151105 15:48:27.962" starttime="20151105 15:48:27.952"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.973" starttime="20151105 15:48:27.970"></status>
</kw>
<msg timestamp="20151105 15:48:27.974" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,807 INFO  [log] LowLevelOps.getMainAccount.output.accountId=141423</msg>
<status status="PASS" endtime="20151105 15:48:27.974" starttime="20151105 15:48:27.964"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:27.985" starttime="20151105 15:48:27.982"></status>
</kw>
<msg timestamp="20151105 15:48:27.987" level="INFO">${resultCode} = 141423</msg>
<status status="PASS" endtime="20151105 15:48:27.986" starttime="20151105 15:48:27.976"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.000" starttime="20151105 15:48:27.998"></status>
</kw>
<msg timestamp="20151105 15:48:28.004" level="INFO">${resultCode} = 141423</msg>
<status status="PASS" endtime="20151105 15:48:28.003" starttime="20151105 15:48:27.988"></status>
</kw>
<msg timestamp="20151105 15:48:28.007" level="INFO">${accountId} = 141423</msg>
<status status="PASS" endtime="20151105 15:48:28.005" starttime="20151105 15:48:27.918"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151105 15:48:28.021" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20151105 15:48:28.021" starttime="20151105 15:48:28.018"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:28.028" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151105 15:48:28.027" starttime="20151105 15:48:28.023"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:28.032" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151105 15:48:28.031" starttime="20151105 15:48:28.029"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151105 15:48:28.039" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151105 15:48:28.044" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151105 15:48:28.045" starttime="20151105 15:48:28.036"></status>
</kw>
<msg timestamp="20151105 15:48:28.047" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:48:28.047" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,807 INFO  [log] LowLevelOps.getMainAccount.output.balance=640000</msg>
<status status="PASS" endtime="20151105 15:48:28.046" starttime="20151105 15:48:28.034"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.057" starttime="20151105 15:48:28.055"></status>
</kw>
<msg timestamp="20151105 15:48:28.059" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,807 INFO  [log] LowLevelOps.getMainAccount.output.balance=640000</msg>
<status status="PASS" endtime="20151105 15:48:28.058" starttime="20151105 15:48:28.049"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.069" starttime="20151105 15:48:28.067"></status>
</kw>
<msg timestamp="20151105 15:48:28.071" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,807 INFO  [log] LowLevelOps.getMainAccount.output.balance=640000</msg>
<status status="PASS" endtime="20151105 15:48:28.070" starttime="20151105 15:48:28.060"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.081" starttime="20151105 15:48:28.078"></status>
</kw>
<msg timestamp="20151105 15:48:28.082" level="INFO">${resultCode} = 640000</msg>
<status status="PASS" endtime="20151105 15:48:28.081" starttime="20151105 15:48:28.072"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.092" starttime="20151105 15:48:28.090"></status>
</kw>
<msg timestamp="20151105 15:48:28.093" level="INFO">${resultCode} = 640000</msg>
<status status="PASS" endtime="20151105 15:48:28.093" starttime="20151105 15:48:28.083"></status>
</kw>
<msg timestamp="20151105 15:48:28.095" level="INFO">${balance} = 640000</msg>
<status status="PASS" endtime="20151105 15:48:28.094" starttime="20151105 15:48:28.009"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151105 15:48:28.106" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20151105 15:48:28.105" starttime="20151105 15:48:28.103"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:28.109" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151105 15:48:28.109" starttime="20151105 15:48:28.107"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:28.112" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151105 15:48:28.112" starttime="20151105 15:48:28.110"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151105 15:48:28.118" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151105 15:48:28.121" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151105 15:48:28.122" starttime="20151105 15:48:28.115"></status>
</kw>
<msg timestamp="20151105 15:48:28.123" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:48:28.124" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,808 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151105 15:48:28.123" starttime="20151105 15:48:28.114"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.131" starttime="20151105 15:48:28.130"></status>
</kw>
<msg timestamp="20151105 15:48:28.133" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,808 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151105 15:48:28.132" starttime="20151105 15:48:28.125"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.140" starttime="20151105 15:48:28.139"></status>
</kw>
<msg timestamp="20151105 15:48:28.142" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,808 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151105 15:48:28.141" starttime="20151105 15:48:28.134"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.150" starttime="20151105 15:48:28.148"></status>
</kw>
<msg timestamp="20151105 15:48:28.151" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151105 15:48:28.151" starttime="20151105 15:48:28.143"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.161" starttime="20151105 15:48:28.159"></status>
</kw>
<msg timestamp="20151105 15:48:28.162" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151105 15:48:28.162" starttime="20151105 15:48:28.152"></status>
</kw>
<msg timestamp="20151105 15:48:28.164" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20151105 15:48:28.164" starttime="20151105 15:48:28.097"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151105 15:48:28.175" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20151105 15:48:28.175" starttime="20151105 15:48:28.173"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:28.179" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151105 15:48:28.178" starttime="20151105 15:48:28.176"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151105 15:48:28.182" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151105 15:48:28.181" starttime="20151105 15:48:28.180"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151105 15:48:28.187" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151105 15:48:28.191" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151105 15:48:28.191" starttime="20151105 15:48:28.185"></status>
</kw>
<msg timestamp="20151105 15:48:28.193" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151105 15:48:28.193" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,808 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151105 15:48:28.192" starttime="20151105 15:48:28.183"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.201" starttime="20151105 15:48:28.199"></status>
</kw>
<msg timestamp="20151105 15:48:28.202" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,808 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151105 15:48:28.202" starttime="20151105 15:48:28.194"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.209" starttime="20151105 15:48:28.208"></status>
</kw>
<msg timestamp="20151105 15:48:28.211" level="INFO">${return_log_entry} = 2015-11-05 15:48:27,808 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151105 15:48:28.210" starttime="20151105 15:48:28.203"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.218" starttime="20151105 15:48:28.216"></status>
</kw>
<msg timestamp="20151105 15:48:28.219" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151105 15:48:28.219" starttime="20151105 15:48:28.212"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.229" starttime="20151105 15:48:28.227"></status>
</kw>
<msg timestamp="20151105 15:48:28.230" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151105 15:48:28.230" starttime="20151105 15:48:28.220"></status>
</kw>
<msg timestamp="20151105 15:48:28.232" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20151105 15:48:28.231" starttime="20151105 15:48:28.166"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.241" starttime="20151105 15:48:28.240"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.244" starttime="20151105 15:48:28.242"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151105 15:48:28.246" starttime="20151105 15:48:28.245"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151105 15:48:28.258" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151105 15:48:28.259" starttime="20151105 15:48:28.253"></status>
</kw>
<status status="PASS" endtime="20151105 15:48:28.259" starttime="20151105 15:48:28.251"></status>
</kw>
<status status="PASS" endtime="20151105 15:48:28.260" starttime="20151105 15:48:28.247"></status>
</kw>
<status status="PASS" endtime="20151105 15:48:28.261" starttime="20151105 15:48:28.234"></status>
</kw>
<msg timestamp="20151105 15:48:28.264" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20151105 15:48:28.265" level="INFO">${accId} = 141423</msg>
<msg timestamp="20151105 15:48:28.265" level="INFO">${bal} = 640000</msg>
<msg timestamp="20151105 15:48:28.266" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20151105 15:48:28.266" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20151105 15:48:28.263" starttime="20151105 15:48:27.550"></status>
</kw>
<kw type="kw" name="${target_bal} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${INITIAL_BALANCE}-3*${TESTSUBCRIBERS DEFAULT SLICE COSTS}</arg>
</arguments>
<msg timestamp="20151105 15:48:28.273" level="INFO">${target_bal} = 730000</msg>
<status status="PASS" endtime="20151105 15:48:28.272" starttime="20151105 15:48:28.267"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='VIRGIN_COLUMBIA'</arg>
<arg>Should Be Equal As Numbers</arg>
<arg>${bal}</arg>
<arg>99920080</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Numbers</arg>
<arg>${target_bal}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${target_bal}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<msg timestamp="20151105 15:48:28.281" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20151105 15:48:28.310" level="FAIL">Expected balance and retrieved balance mismatch!: 730000.0 != 640000.0</msg>
<status status="FAIL" endtime="20151105 15:48:28.311" starttime="20151105 15:48:28.279"></status>
</kw>
<status status="FAIL" endtime="20151105 15:48:28.312" starttime="20151105 15:48:28.274"></status>
</kw>
<doc>Test will make a MOC call, duration 196s.

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>mTel_PPLIGHT_TB25_supported</tag>
</tags>
<status status="FAIL" critical="yes" endtime="20151105 15:48:28.314" starttime="20151105 15:45:00.578">Expected balance and retrieved balance mismatch!: 730000.0 != 640000.0</status>
</test>
<doc>Testing the prepaid MOC call, duration is 196s - longer than one slice (more than 60s)

============================================================</doc>
<metadata>
</metadata>
<status status="FAIL" endtime="20151105 15:48:28.319" starttime="20151105 15:44:54.761"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="0" info="" doc="" combined="" fail="1" links="">matko.sanseovic</stat>
<stat pass="0" info="" doc="" combined="" fail="1" links="">MOC_only</stat>
<stat pass="0" info="" doc="" combined="" fail="1" links="">mTel_PPLIGHT_TB25_supported</stat>
</tag>
<suite>
<stat pass="0" id="s1" fail="1" name="MOC PREPAID ONNET-LongDuration196s-robot-suite">MOC PREPAID ONNET-LongDuration196s-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
