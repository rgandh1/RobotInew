<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20150619 01:43:48.818">
<suite source="/opt/robot/robotworkspace/robot_testsuites" id="s1" name="Robot Testsuites">
<suite source="/opt/robot/robotworkspace/robot_testsuites/xdr" id="s1-s1" name="Xdr">
<suite source="/opt/robot/robotworkspace/robot_testsuites/xdr/XDR-ticket-verification" id="s1-s1-s1" name="XDR-ticket-verification">
<suite source="/opt/robot/robotworkspace/robot_testsuites/xdr/XDR-ticket-verification/XDR_Test-robot-suite.txt" id="s1-s1-s1-s1" name="XDR Test-robot-suite">
<kw type="setup" name="Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${time} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20150619 01:43:50.261" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20150619 01:43:50.268" level="INFO">${time} = Fri Jun 19 01:43:50 CEST 2015</msg>
<status status="PASS" endtime="20150619 01:43:50.267" starttime="20150619 01:43:50.242"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${time}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150619 01:43:50.274" level="INFO">Date and time: Fri Jun 19 01:43:50 CEST 2015</msg>
<status status="PASS" endtime="20150619 01:43:50.277" starttime="20150619 01:43:50.270"></status>
</kw>
<kw type="kw" name="Log The XDR Version">
<doc>Called at suite setup procedure to check if XDR is running and to see which version is there.</doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${XDR HOST}</arg>
</arguments>
<status status="PASS" endtime="20150619 01:43:50.498" starttime="20150619 01:43:50.296"></status>
</kw>
<kw type="kw" name="${output_login} = SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
</arguments>
<msg timestamp="20150619 01:43:50.511" level="INFO">Logging into '10.105.113.171:22' as 'qa_automation'.</msg>
<msg timestamp="20150619 01:43:52.394" level="INFO">Read output: Last login: Thu Jun 18 23:43:43 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb13 ~]$[m</msg>
<msg timestamp="20150619 01:43:52.402" level="INFO">${output_login} = Last login: Thu Jun 18 23:43:43 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb13 ~]$[m </msg>
<status status="PASS" endtime="20150619 01:43:52.397" starttime="20150619 01:43:50.504"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output_login}</arg>
</arguments>
<msg timestamp="20150619 01:43:52.412" level="INFO">Last login: Thu Jun 18 23:43:43 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb13 ~]$[m </msg>
<status status="PASS" endtime="20150619 01:43:52.414" starttime="20150619 01:43:52.407"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service inew-mvno-xdr status</arg>
</arguments>
<msg timestamp="20150619 01:43:52.420" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20150619 01:43:55.334" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150619 01:43:55.340" level="INFO">${output} = I-New UMS MVNO - XDR - Server 5.3.0.22932 is running PID: 5666 </msg>
<status status="PASS" endtime="20150619 01:43:55.337" starttime="20150619 01:43:52.418"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR Version and pid: ${output}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150619 01:43:55.350" level="INFO">XDR Version and pid: I-New UMS MVNO - XDR - Server 5.3.0.22932 is running PID: 5666 </msg>
<status status="PASS" endtime="20150619 01:43:55.353" starttime="20150619 01:43:55.344"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>I-New UMS MVNO - XDR</arg>
</arguments>
<status status="PASS" endtime="20150619 01:43:55.363" starttime="20150619 01:43:55.357"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>SSHLibrary.Close Connection</arg>
</arguments>
<status status="PASS" endtime="20150619 01:43:55.372" starttime="20150619 01:43:55.367"></status>
</kw>
<status status="PASS" endtime="20150619 01:43:55.375" starttime="20150619 01:43:50.283"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SUT:${SUT_RESOURCE}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150619 01:43:55.386" level="INFO">SUT:/opt/robot/robotworkspace/suts/TNZ-resource.txt</msg>
<status status="PASS" endtime="20150619 01:43:55.389" starttime="20150619 01:43:55.380"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR IP address:${XDR HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150619 01:43:55.399" level="INFO">XDR IP address:10.105.113.171</msg>
<status status="PASS" endtime="20150619 01:43:55.401" starttime="20150619 01:43:55.393"></status>
</kw>
<kw type="kw" name="Check AMQ Availability">
<doc>Called at suite setup procedure to check if AMQ is UP</doc>
<arguments>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${AMQ-XDR HOST}</arg>
</arguments>
<status status="PASS" endtime="20150619 01:43:55.487" starttime="20150619 01:43:55.427"></status>
</kw>
<kw type="kw" name="${output_login} = SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
</arguments>
<msg timestamp="20150619 01:43:55.498" level="INFO">Logging into '10.105.113.124:22' as 'qa_automation'.</msg>
<msg timestamp="20150619 01:43:56.776" level="INFO">Read output: Last login: Thu Jun 18 23:42:59 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@amq02.tb13 ~]$[m</msg>
<msg timestamp="20150619 01:43:56.780" level="INFO">${output_login} = Last login: Thu Jun 18 23:42:59 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@amq02.tb13 ~]$[m </msg>
<status status="PASS" endtime="20150619 01:43:56.778" starttime="20150619 01:43:55.491"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>netstat -an | grep ${AMQ-SIG PORT}</arg>
</arguments>
<msg timestamp="20150619 01:43:56.787" level="INFO">Executing command 'netstat -an | grep 61616'.</msg>
<msg timestamp="20150619 01:43:56.885" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150619 01:43:56.887" level="INFO">${output} = tcp        0      0 :::61616                    :::*                        LISTEN      
tcp        0      0 ::ffff:10.105.113.124:61616 ::ffff:10.105.80.196:48661  ESTABLISHED 
tcp        0      0 ::...</msg>
<status status="PASS" endtime="20150619 01:43:56.887" starttime="20150619 01:43:56.783"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>LISTEN</arg>
</arguments>
<status status="PASS" endtime="20150619 01:43:56.892" starttime="20150619 01:43:56.889"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo /etc/init.d/${AMQ-XDR SERVICE SCRIPT NAME} query -QQueue=${AMQ-XDR CRCE CDR QUEUE} | grep ConsumerCount</arg>
</arguments>
<msg timestamp="20150619 01:43:56.898" level="INFO">Executing command 'sudo /etc/init.d/amq-xdr-tb13 query -QQueue=inew-cs.crce.cdr | grep ConsumerCount'.</msg>
<msg timestamp="20150619 01:43:58.192" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150619 01:43:58.198" level="INFO">${output} = ConsumerCount = 10</msg>
<status status="PASS" endtime="20150619 01:43:58.195" starttime="20150619 01:43:56.894"></status>
</kw>
<kw type="kw" name="${count} = String.Get Substring">
<doc>Returns a substring from `start` index to `end` index.</doc>
<arguments>
<arg>${output}</arg>
<arg>16</arg>
</arguments>
<msg timestamp="20150619 01:43:58.208" level="INFO">${count} = 10</msg>
<status status="PASS" endtime="20150619 01:43:58.207" starttime="20150619 01:43:58.202"></status>
</kw>
<kw type="kw" name="BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>0 &lt; ${count}</arg>
</arguments>
<status status="PASS" endtime="20150619 01:43:58.236" starttime="20150619 01:43:58.212"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20150619 01:43:58.242" starttime="20150619 01:43:58.239"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20150619 01:43:58.251" starttime="20150619 01:43:58.246"></status>
</kw>
<status status="PASS" endtime="20150619 01:43:58.256" starttime="20150619 01:43:55.405"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>AMQ and consumers are UP</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150619 01:43:58.265" level="INFO">AMQ and consumers are UP</msg>
<status status="PASS" endtime="20150619 01:43:58.267" starttime="20150619 01:43:58.260"></status>
</kw>
<kw type="kw" name="org.robot.database.keywords.DatabaseLibrary.Connect To Database">
<doc></doc>
<arguments>
<arg>org.postgresql.Driver</arg>
<arg>jdbc:postgresql://${XDR DB HOST}:${XDR DB PORT}/${XDR DB NAME}</arg>
<arg>${XDR DB USER}</arg>
<arg>${XDR DB PWD}</arg>
</arguments>
<status status="PASS" endtime="20150619 01:43:58.343" starttime="20150619 01:43:58.269"></status>
</kw>
<kw type="kw" name="OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>rm -f ssh_tail_log-xdr.log</arg>
</arguments>
<msg timestamp="20150619 01:43:58.350" level="INFO">Running command 'rm -f ssh_tail_log-xdr.log 2&gt;&amp;1'</msg>
<status status="PASS" endtime="20150619 01:43:58.356" starttime="20150619 01:43:58.345"></status>
</kw>
<kw type="kw" name="CleanDBTable">
<doc>Runs the sql query - deletes only selected rows of the ${table}</doc>
<arguments>
<arg>crce_cdr_2015w08</arg>
<arg>sessionid</arg>
</arguments>
<kw type="kw" name="org.robot.database.keywords.DatabaseLibrary.Execute Sql">
<doc></doc>
<arguments>
<arg>delete from ${table} where ${search_key} like '${UNIQUE_SEARCH_STRING}';</arg>
</arguments>
<status status="PASS" endtime="20150619 01:43:58.448" starttime="20150619 01:43:58.410"></status>
</kw>
<status status="PASS" endtime="20150619 01:43:58.451" starttime="20150619 01:43:58.392"></status>
</kw>
<kw type="kw" name="CleanDBTable">
<doc>Runs the sql query - deletes only selected rows of the ${table}</doc>
<arguments>
<arg>crce_cdr</arg>
<arg>sessionid</arg>
</arguments>
<kw type="kw" name="org.robot.database.keywords.DatabaseLibrary.Execute Sql">
<doc></doc>
<arguments>
<arg>delete from ${table} where ${search_key} like '${UNIQUE_SEARCH_STRING}';</arg>
</arguments>
<status status="PASS" endtime="20150619 01:43:58.558" starttime="20150619 01:43:58.499"></status>
</kw>
<status status="PASS" endtime="20150619 01:43:58.561" starttime="20150619 01:43:58.481"></status>
</kw>
<kw type="kw" name="${JNDI_PROVIDER_URL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>tcp://${AMQ-XDR HOST}:${AMQ-SIG PORT}?jms.useAsyncSend=false</arg>
</arguments>
<msg timestamp="20150619 01:43:58.572" level="INFO">${JNDI_PROVIDER_URL} = tcp://10.105.113.124:61616?jms.useAsyncSend=false</msg>
<status status="PASS" endtime="20150619 01:43:58.571" starttime="20150619 01:43:58.564"></status>
</kw>
<kw type="kw" name="JMSLibrary.Init Provider">
<doc></doc>
<arguments>
<arg>${INITIAL_CONTEXT_FACTORY}</arg>
<arg>${JNDI_PROVIDER_URL}</arg>
<arg>connect=true</arg>
<arg>start=true</arg>
</arguments>
<status status="PASS" endtime="20150619 01:43:58.991" starttime="20150619 01:43:58.575"></status>
</kw>
<status status="PASS" endtime="20150619 01:43:58.993" starttime="20150619 01:43:50.234"></status>
</kw>
<test id="s1-s1-s1-s1-t1" name="Test MOC ticket processing">
<kw type="kw" name="Send Ticket And Analyse">
<doc>General test case skeleton to be executed. Contains all steps for single test case</doc>
<arguments>
<arg>MOC</arg>
<arg>crce_cdr_2015w08</arg>
<arg>sessionid</arg>
<arg>OK</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login And Start File Monitor">
<doc>Combines 'SSH Login' and 'SSH Start File Monitor' for compacter coding style</doc>
<arguments>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR_LOG_FILE_PATH}</arg>
<arg>host=${XDR HOST}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
<arg>${rsa_key_file}</arg>
<arg>ssh_connection=${ssh_connection}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20150619 01:43:59.100" starttime="20150619 01:43:59.096"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20150619 01:43:59.227" starttime="20150619 01:43:59.116"></status>
</kw>
<msg timestamp="20150619 01:43:59.229" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20150619 01:43:59.229" starttime="20150619 01:43:59.103"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20150619 01:43:59.241" level="INFO">Logging into '10.105.113.171:22' as 'qa_automation'.</msg>
<msg timestamp="20150619 01:44:00.194" level="INFO">Read output: Last login: Thu Jun 18 23:43:55 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb13 ~]$</msg>
<status status="PASS" endtime="20150619 01:44:00.196" starttime="20150619 01:43:59.238"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:00.198" starttime="20150619 01:43:59.231"></status>
</kw>
<msg timestamp="20150619 01:44:00.201" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20150619 01:44:00.200" starttime="20150619 01:43:59.071"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Start File Monitor">
<doc>Executes a 'tail -f' for the passed file on the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
<arg>${monitored_file_path}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150619 01:44:00.214" starttime="20150619 01:44:00.212"></status>
</kw>
<kw type="kw" name="SSHLibrary.Start Command">
<doc>Starts execution of the `command` on the remote machine and returns immediately.</doc>
<arguments>
<arg>tail -f ${monitored_file_path} &gt; tmpfilemonitor${ssh_connection}.log</arg>
</arguments>
<msg timestamp="20150619 01:44:00.217" level="INFO">Starting command 'tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor3.log'.</msg>
<status status="PASS" endtime="20150619 01:44:00.221" starttime="20150619 01:44:00.215"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:00.222" starttime="20150619 01:44:00.204"></status>
</kw>
<msg timestamp="20150619 01:44:00.224" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20150619 01:44:00.223" starttime="20150619 01:43:59.039"></status>
</kw>
<kw type="kw" name="CleanDBTable">
<doc>Runs the sql query - deletes only selected rows of the ${table}</doc>
<arguments>
<arg>${affectedDbTable}</arg>
<arg>${affectedDbTableKeyColumnName}</arg>
</arguments>
<kw type="kw" name="org.robot.database.keywords.DatabaseLibrary.Execute Sql">
<doc></doc>
<arguments>
<arg>delete from ${table} where ${search_key} like '${UNIQUE_SEARCH_STRING}';</arg>
</arguments>
<status status="PASS" endtime="20150619 01:44:00.248" starttime="20150619 01:44:00.243"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:00.249" starttime="20150619 01:44:00.235"></status>
</kw>
<kw type="kw" name="Send Ticket To Queue">
<doc>Keyword using JMSLibrary to send text from ticket file to JMS queue</doc>
<arguments>
<arg>${ticketSignature}</arg>
</arguments>
<kw type="kw" name="${TICKET} = OperatingSystem.Get File">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/robot_testsuites/xdr/XDR-ticket-verification/tickets/${ticket_type}.txt</arg>
</arguments>
<msg timestamp="20150619 01:44:00.260" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/xdr/XDR-ticket-verification/tickets/MOC.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/xdr/XDR-ticket-verification/tickets/MOC.txt&lt;/a&gt;'</msg>
<msg timestamp="20150619 01:44:00.262" level="INFO">${TICKET} = 5.3|101|true|1|CRCE|CDR|crce01.tb13|2015-02-23T11:06:11.236+0000|2015-02-22T09:15:50.025+0000|123456XdrComponentTest|1|1|27800|642041999740|PREPAID|ACTIVE||0|NONE|OK||1.2|Charge|BasicSession|1|5309920...</msg>
<status status="PASS" endtime="20150619 01:44:00.261" starttime="20150619 01:44:00.258"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TICKET}</arg>
</arguments>
<msg timestamp="20150619 01:44:00.265" level="INFO">5.3|101|true|1|CRCE|CDR|crce01.tb13|2015-02-23T11:06:11.236+0000|2015-02-22T09:15:50.025+0000|123456XdrComponentTest|1|1|27800|642041999740|PREPAID|ACTIVE||0|NONE|OK||1.2|Charge|BasicSession|1|530992041999740|642041999740|true|642041999415|(network) XdrComponentTest|Local (on-net)|Originating||||Voice|false||(network) XdrComponentTest|2015-02-22T09:15:45.930+0000|0|120000|120000|0|0|1|false|101026|15734486|101026|2|2|Minutes|15|PREPAID|OK||
</msg>
<status status="PASS" endtime="20150619 01:44:00.267" starttime="20150619 01:44:00.263"></status>
</kw>
<kw type="kw" name="JMSLibrary.Create Text Message">
<doc></doc>
<arguments>
<arg>${TICKET}</arg>
</arguments>
<status status="PASS" endtime="20150619 01:44:00.287" starttime="20150619 01:44:00.270"></status>
</kw>
<kw type="kw" name="JMSLibrary.Send To Queue">
<doc></doc>
<arguments>
<arg>${AMQ-XDR CRCE CDR QUEUE}</arg>
</arguments>
<status status="PASS" endtime="20150619 01:44:00.299" starttime="20150619 01:44:00.288"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:00.300" starttime="20150619 01:44:00.251"></status>
</kw>
<kw type="kw" name="${tailed_text} = ssh-support-resource.SSH Close File Monitor And Logout">
<doc>Combines 'SSH Close File Monitor' and 'SSH Logout' for compacter coding style</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="${tailed_text} = ssh-support-resource.SSH Close File Monitor">
<doc>Closes a file monitor created via 'SSH Start File Monitor' and returns all grabbed text</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150619 01:44:00.325" starttime="20150619 01:44:00.323"></status>
</kw>
<kw type="kw" name="${CTRL_C} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>chr(int(3))</arg>
</arguments>
<msg timestamp="20150619 01:44:00.332" level="INFO">${CTRL_C} = </msg>
<status status="PASS" endtime="20150619 01:44:00.331" starttime="20150619 01:44:00.326"></status>
</kw>
<kw type="kw" name="SSHLibrary.Write">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${CTRL_C}</arg>
</arguments>
<msg timestamp="20150619 01:44:00.337" level="INFO">[m ^C</msg>
<status status="PASS" endtime="20150619 01:44:00.338" starttime="20150619 01:44:00.333"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Kill User Processes">
<doc>This is a helper to cleanup zombie processes left by the SSH lib's 'Start Command'</doc>
<arguments>
<arg>${ssh_connection}</arg>
<arg>tail</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150619 01:44:00.353" starttime="20150619 01:44:00.350"></status>
</kw>
<kw type="kw" name="${user} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>id -un</arg>
</arguments>
<msg timestamp="20150619 01:44:00.356" level="INFO">Executing command 'id -un'.</msg>
<msg timestamp="20150619 01:44:00.669" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150619 01:44:00.674" level="INFO">${user} = qa_automation</msg>
<status status="PASS" endtime="20150619 01:44:00.672" starttime="20150619 01:44:00.354"></status>
</kw>
<kw type="kw" name="${processes_string} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ps U ${user} --no-heading | grep ${command_name}</arg>
</arguments>
<msg timestamp="20150619 01:44:00.682" level="INFO">Executing command 'ps U qa_automation --no-heading | grep tail'.</msg>
<msg timestamp="20150619 01:44:01.544" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150619 01:44:01.549" level="INFO">${processes_string} =   310 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log
  311 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log
  336 ?        Ss     0:00 bash -c ps U qa_aut...</msg>
<status status="PASS" endtime="20150619 01:44:01.547" starttime="20150619 01:44:00.677"></status>
</kw>
<kw type="kw" name="@{processes_list} = String.Split String">
<doc>Splits the `string` using `separator` as a delimiter string.</doc>
<arguments>
<arg>${processes_string}</arg>
<arg>${\n}</arg>
</arguments>
<msg timestamp="20150619 01:44:01.579" level="INFO">@{processes_list} = [   310 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log |   311 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log |   336 ?        Ss     0:00 bash -c ps U ...</msg>
<status status="PASS" endtime="20150619 01:44:01.558" starttime="20150619 01:44:01.552"></status>
</kw>
<kw type="for" name="${process} IN [ @{processes_list} ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" name="${process} =   310 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:01.594" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:01.593" starttime="20150619 01:44:01.586"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:01.603" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:01.850" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:01.851" starttime="20150619 01:44:01.597"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:01.852" starttime="20150619 01:44:01.584"></status>
</kw>
<kw type="foritem" name="${process} =   311 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:01.856" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:01.856" starttime="20150619 01:44:01.853"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:01.859" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:02.151" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:02.154" starttime="20150619 01:44:01.857"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:02.157" starttime="20150619 01:44:01.852"></status>
</kw>
<kw type="foritem" name="${process} =   336 ?        Ss     0:00 bash -c ps U qa_automation --no-heading | grep tail">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:02.168" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:02.166" starttime="20150619 01:44:02.161"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:02.175" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:02.447" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:02.450" starttime="20150619 01:44:02.170"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:02.451" starttime="20150619 01:44:02.159"></status>
</kw>
<kw type="foritem" name="${process} =   338 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:02.461" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:02.460" starttime="20150619 01:44:02.455"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:02.468" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:02.742" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:02.743" starttime="20150619 01:44:02.464"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:02.744" starttime="20150619 01:44:02.452"></status>
</kw>
<kw type="foritem" name="${process} =   421 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor15.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:02.748" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:02.747" starttime="20150619 01:44:02.745"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:02.751" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:03.022" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:03.025" starttime="20150619 01:44:02.749"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:03.028" starttime="20150619 01:44:02.744"></status>
</kw>
<kw type="foritem" name="${process} =   436 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor16.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:03.038" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:03.037" starttime="20150619 01:44:03.032"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:03.045" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:03.300" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:03.301" starttime="20150619 01:44:03.041"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:03.302" starttime="20150619 01:44:03.030"></status>
</kw>
<kw type="foritem" name="${process} =   439 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor4.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:03.307" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:03.306" starttime="20150619 01:44:03.304"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:03.310" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:03.588" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:03.591" starttime="20150619 01:44:03.308"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:03.593" starttime="20150619 01:44:03.302"></status>
</kw>
<kw type="foritem" name="${process} =   440 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor18.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:03.603" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:03.601" starttime="20150619 01:44:03.596"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:03.610" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:03.856" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:03.858" starttime="20150619 01:44:03.605"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:03.858" starttime="20150619 01:44:03.594"></status>
</kw>
<kw type="foritem" name="${process} =   451 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:03.863" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:03.862" starttime="20150619 01:44:03.860"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:03.867" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:04.123" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:04.126" starttime="20150619 01:44:03.864"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:04.129" starttime="20150619 01:44:03.859"></status>
</kw>
<kw type="foritem" name="${process} =   456 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:04.140" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:04.139" starttime="20150619 01:44:04.134"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:04.147" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:04.399" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:04.401" starttime="20150619 01:44:04.143"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:04.402" starttime="20150619 01:44:04.131"></status>
</kw>
<kw type="foritem" name="${process} =   464 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor7.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:04.408" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:04.408" starttime="20150619 01:44:04.404"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:04.412" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:04.774" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:04.775" starttime="20150619 01:44:04.410"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:04.776" starttime="20150619 01:44:04.402"></status>
</kw>
<kw type="foritem" name="${process} =   471 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:04.781" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:04.781" starttime="20150619 01:44:04.778"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:04.785" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:05.077" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:05.080" starttime="20150619 01:44:04.783"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:05.083" starttime="20150619 01:44:04.776"></status>
</kw>
<kw type="foritem" name="${process} =   524 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:05.097" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:05.096" starttime="20150619 01:44:05.089"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:05.106" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:05.383" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:05.386" starttime="20150619 01:44:05.102"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:05.387" starttime="20150619 01:44:05.086"></status>
</kw>
<kw type="foritem" name="${process} =   528 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor6.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:05.397" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:05.396" starttime="20150619 01:44:05.391"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:05.404" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:05.713" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:05.714" starttime="20150619 01:44:05.400"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:05.715" starttime="20150619 01:44:05.388"></status>
</kw>
<kw type="foritem" name="${process} =   565 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor9.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:05.720" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:05.719" starttime="20150619 01:44:05.716"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:05.727" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:06.047" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:06.049" starttime="20150619 01:44:05.721"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:06.050" starttime="20150619 01:44:05.715"></status>
</kw>
<kw type="foritem" name="${process} =   577 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor7.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:06.055" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:06.055" starttime="20150619 01:44:06.052"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:06.058" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:06.336" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:06.338" starttime="20150619 01:44:06.056"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:06.339" starttime="20150619 01:44:06.051"></status>
</kw>
<kw type="foritem" name="${process} =   580 ?        S      0:01 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:06.346" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:06.345" starttime="20150619 01:44:06.342"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:06.351" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:06.663" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:06.665" starttime="20150619 01:44:06.348"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:06.667" starttime="20150619 01:44:06.340"></status>
</kw>
<kw type="foritem" name="${process} =   592 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:06.677" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:06.675" starttime="20150619 01:44:06.670"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:06.683" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:07.006" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:07.008" starttime="20150619 01:44:06.679"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:07.011" starttime="20150619 01:44:06.668"></status>
</kw>
<kw type="foritem" name="${process} =   593 ?        S      0:01 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:07.026" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:07.025" starttime="20150619 01:44:07.018"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:07.034" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:07.341" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:07.343" starttime="20150619 01:44:07.029"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:07.343" starttime="20150619 01:44:07.013"></status>
</kw>
<kw type="foritem" name="${process} =   601 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:07.349" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:07.348" starttime="20150619 01:44:07.345"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:07.352" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:07.622" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:07.624" starttime="20150619 01:44:07.350"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:07.626" starttime="20150619 01:44:07.344"></status>
</kw>
<kw type="foritem" name="${process} =   654 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor5.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:07.634" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:07.633" starttime="20150619 01:44:07.629"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:07.639" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:07.897" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:07.898" starttime="20150619 01:44:07.636"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:07.899" starttime="20150619 01:44:07.627"></status>
</kw>
<kw type="foritem" name="${process} =   668 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor4.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:07.903" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:07.902" starttime="20150619 01:44:07.900"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:07.906" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:08.177" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:08.178" starttime="20150619 01:44:07.904"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:08.179" starttime="20150619 01:44:07.899"></status>
</kw>
<kw type="foritem" name="${process} =   669 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:08.184" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:08.184" starttime="20150619 01:44:08.181"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:08.188" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:08.487" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:08.488" starttime="20150619 01:44:08.186"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:08.489" starttime="20150619 01:44:08.180"></status>
</kw>
<kw type="foritem" name="${process} =   705 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor17.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:08.494" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:08.493" starttime="20150619 01:44:08.491"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:08.496" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:08.772" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:08.774" starttime="20150619 01:44:08.495"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:08.776" starttime="20150619 01:44:08.489"></status>
</kw>
<kw type="foritem" name="${process} =   717 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:08.785" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:08.784" starttime="20150619 01:44:08.779"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:08.792" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:09.059" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:09.060" starttime="20150619 01:44:08.787"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:09.061" starttime="20150619 01:44:08.777"></status>
</kw>
<kw type="foritem" name="${process} =   720 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:09.066" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:09.065" starttime="20150619 01:44:09.063"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:09.069" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:09.361" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:09.362" starttime="20150619 01:44:09.067"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:09.363" starttime="20150619 01:44:09.062"></status>
</kw>
<kw type="foritem" name="${process} =   730 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor4.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:09.368" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:09.367" starttime="20150619 01:44:09.365"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:09.371" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:09.652" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:09.653" starttime="20150619 01:44:09.369"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:09.654" starttime="20150619 01:44:09.364"></status>
</kw>
<kw type="foritem" name="${process} =   744 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor14.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:09.658" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:09.658" starttime="20150619 01:44:09.655"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:09.661" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:09.948" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:09.951" starttime="20150619 01:44:09.659"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:09.952" starttime="20150619 01:44:09.654"></status>
</kw>
<kw type="foritem" name="${process} =   746 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:09.961" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:09.960" starttime="20150619 01:44:09.955"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:09.967" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:10.238" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:10.239" starttime="20150619 01:44:09.964"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:10.240" starttime="20150619 01:44:09.953"></status>
</kw>
<kw type="foritem" name="${process} =   754 ?        S      0:00 grep tail">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:10.245" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:10.245" starttime="20150619 01:44:10.242"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:10.248" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:10.535" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:10.538" starttime="20150619 01:44:10.246"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:10.539" starttime="20150619 01:44:10.241"></status>
</kw>
<kw type="foritem" name="${process} =   759 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:10.549" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:10.548" starttime="20150619 01:44:10.543"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:10.556" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:10.830" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:10.831" starttime="20150619 01:44:10.551"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:10.832" starttime="20150619 01:44:10.540"></status>
</kw>
<kw type="foritem" name="${process} =   764 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor7.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:10.836" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:10.836" starttime="20150619 01:44:10.834"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:10.839" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:11.127" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:11.129" starttime="20150619 01:44:10.837"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:11.132" starttime="20150619 01:44:10.833"></status>
</kw>
<kw type="foritem" name="${process} =   779 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:11.142" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:11.141" starttime="20150619 01:44:11.136"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:11.150" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:11.403" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:11.405" starttime="20150619 01:44:11.147"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:11.405" starttime="20150619 01:44:11.134"></status>
</kw>
<kw type="foritem" name="${process} =   784 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor11.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:11.411" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:11.410" starttime="20150619 01:44:11.407"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:11.417" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:11.725" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:11.727" starttime="20150619 01:44:11.413"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:11.728" starttime="20150619 01:44:11.406"></status>
</kw>
<kw type="foritem" name="${process} =   791 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:11.741" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:11.740" starttime="20150619 01:44:11.730"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:11.748" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:12.016" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:12.019" starttime="20150619 01:44:11.744"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:12.022" starttime="20150619 01:44:11.728"></status>
</kw>
<kw type="foritem" name="${process} =   799 ?        S      0:01 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:12.033" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:12.032" starttime="20150619 01:44:12.026"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:12.040" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:12.296" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:12.297" starttime="20150619 01:44:12.036"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:12.298" starttime="20150619 01:44:12.024"></status>
</kw>
<kw type="foritem" name="${process} =   810 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:12.302" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:12.302" starttime="20150619 01:44:12.299"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:12.307" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:12.593" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:12.595" starttime="20150619 01:44:12.304"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:12.597" starttime="20150619 01:44:12.298"></status>
</kw>
<kw type="foritem" name="${process} =   825 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor9.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:12.606" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:12.605" starttime="20150619 01:44:12.600"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:12.612" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:12.940" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:12.943" starttime="20150619 01:44:12.609"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:12.944" starttime="20150619 01:44:12.598"></status>
</kw>
<kw type="foritem" name="${process} =   843 ?        S      0:02 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:12.953" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:12.952" starttime="20150619 01:44:12.947"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:12.959" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:13.211" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:13.213" starttime="20150619 01:44:12.956"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:13.216" starttime="20150619 01:44:12.945"></status>
</kw>
<kw type="foritem" name="${process} =   897 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor17.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:13.225" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:13.224" starttime="20150619 01:44:13.222"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:13.228" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:13.520" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:13.521" starttime="20150619 01:44:13.226"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:13.522" starttime="20150619 01:44:13.221"></status>
</kw>
<kw type="foritem" name="${process} =   912 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:13.526" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:13.526" starttime="20150619 01:44:13.523"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:13.529" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:13.813" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:13.814" starttime="20150619 01:44:13.527"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:13.815" starttime="20150619 01:44:13.522"></status>
</kw>
<kw type="foritem" name="${process} =   930 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor13.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:13.819" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:13.818" starttime="20150619 01:44:13.816"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:13.821" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:14.120" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:14.122" starttime="20150619 01:44:13.820"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:14.123" starttime="20150619 01:44:13.815"></status>
</kw>
<kw type="foritem" name="${process} =   947 ?        S      0:01 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:14.127" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:14.127" starttime="20150619 01:44:14.125"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:14.130" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:14.388" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:14.389" starttime="20150619 01:44:14.128"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:14.389" starttime="20150619 01:44:14.124"></status>
</kw>
<kw type="foritem" name="${process} =   957 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor11.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:14.394" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:14.393" starttime="20150619 01:44:14.391"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:14.397" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:14.669" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:14.670" starttime="20150619 01:44:14.395"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:14.671" starttime="20150619 01:44:14.390"></status>
</kw>
<kw type="foritem" name="${process} =  1030 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor12.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:14.675" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:14.675" starttime="20150619 01:44:14.672"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:14.678" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:14.948" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:14.949" starttime="20150619 01:44:14.676"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:14.950" starttime="20150619 01:44:14.671"></status>
</kw>
<kw type="foritem" name="${process} =  1045 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:14.954" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:14.954" starttime="20150619 01:44:14.951"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:14.957" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:15.209" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:15.210" starttime="20150619 01:44:14.955"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:15.211" starttime="20150619 01:44:14.950"></status>
</kw>
<kw type="foritem" name="${process} =  1154 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor14.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:15.221" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:15.220" starttime="20150619 01:44:15.213"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:15.228" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:15.522" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:15.524" starttime="20150619 01:44:15.224"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:15.525" starttime="20150619 01:44:15.212"></status>
</kw>
<kw type="foritem" name="${process} =  1155 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:15.534" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:15.533" starttime="20150619 01:44:15.528"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:15.540" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:15.786" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:15.788" starttime="20150619 01:44:15.537"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:15.789" starttime="20150619 01:44:15.526"></status>
</kw>
<kw type="foritem" name="${process} =  1163 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor10.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:15.798" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:15.797" starttime="20150619 01:44:15.792"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:15.804" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:16.068" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:16.069" starttime="20150619 01:44:15.801"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:16.070" starttime="20150619 01:44:15.790"></status>
</kw>
<kw type="foritem" name="${process} =  1170 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:16.075" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:16.074" starttime="20150619 01:44:16.072"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:16.078" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:16.436" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:16.438" starttime="20150619 01:44:16.076"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:16.439" starttime="20150619 01:44:16.071"></status>
</kw>
<kw type="foritem" name="${process} =  1172 ?        S      0:00 tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<msg timestamp="20150619 01:44:16.448" level="INFO">${pid} = </msg>
<status status="PASS" endtime="20150619 01:44:16.447" starttime="20150619 01:44:16.442"></status>
</kw>
<kw type="kw" name="SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>kill -9 ${pid}</arg>
</arguments>
<msg timestamp="20150619 01:44:16.455" level="INFO">Executing command 'kill -9 '.</msg>
<msg timestamp="20150619 01:44:16.729" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20150619 01:44:16.732" starttime="20150619 01:44:16.451"></status>
</kw>
<status status="PASS" endtime="20150619 01:44:16.733" starttime="20150619 01:44:16.440"></status>
</kw>
<kw type="foritem" name="${process} =  1174 ?        Ss     0:00 bash -c tail -f /var/log/inew/xdr/5.3.0/inew-mvno-xdr.log &gt; tmpfilemonitor3.log">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${pid} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${process}</arg>
<arg>${SPACE}</arg>
</arguments>
<m