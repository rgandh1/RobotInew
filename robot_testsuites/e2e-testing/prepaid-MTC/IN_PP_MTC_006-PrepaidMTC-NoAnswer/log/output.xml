<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.7.6 (Jython 2.5.3 on java1.7.0_45)" generated="20140623 15:01:42.992">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/IN_PP_MTC_006-PrepaidMTC-NoAnswer-robot-suite.txt" id="s1" name="IN PP MTC 006-PrepaidMTC-NoAnswer-robot-suite">
<kw type="setup" timeout="" name="suite-global-keyword-resource.Setup Suite">
<doc>This is the suite setup procedure that is called from "Suite Setup" keyword</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${CRM_PORTAL_LOGIN_URL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>http://${CRM HOST}:${CRM PORTAL PORT}/${CRM PORTAL LOGIN PATH}</arg>
</arguments>
<msg timestamp="20140623 15:01:49.169" level="INFO">${CRM_PORTAL_LOGIN_URL} = http://10.105.140.127:1084/evoweb/web/crm/257_EN</msg>
<status status="PASS" endtime="20140623 15:01:49.167" starttime="20140623 15:01:49.159"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
</arguments>
<msg timestamp="20140623 15:01:49.176" level="INFO">${CRM_PORTAL_LOGIN_URL} = http://10.105.140.127:1084/evoweb/web/crm/257_EN</msg>
<status status="PASS" endtime="20140623 15:01:49.178" starttime="20140623 15:01:49.172"></status>
</kw>
<kw type="kw" timeout="" name="${CRM_PORTAL_SUBSCRIBER_INPUT_URL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>http://${CRM HOST}:${CRM PORTAL PORT}/${CRM PORTAL DASHBOARD PATH}</arg>
</arguments>
<msg timestamp="20140623 15:01:49.188" level="INFO">${CRM_PORTAL_SUBSCRIBER_INPUT_URL} = http://10.105.140.127:1084/evoweb/web/crm/393_EN.htm</msg>
<status status="PASS" endtime="20140623 15:01:49.187" starttime="20140623 15:01:49.180"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CRM_PORTAL_SUBSCRIBER_INPUT_URL}</arg>
</arguments>
<msg timestamp="20140623 15:01:49.195" level="INFO">${CRM_PORTAL_SUBSCRIBER_INPUT_URL} = http://10.105.140.127:1084/evoweb/web/crm/393_EN.htm</msg>
<status status="PASS" endtime="20140623 15:01:49.197" starttime="20140623 15:01:49.191"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Verify that CRM is up and running ******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:49.202" starttime="20140623 15:01:49.199"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Init Browser ******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:49.208" starttime="20140623 15:01:49.205"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Open Browser</arg>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>firefox</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:49.214" starttime="20140623 15:01:49.210"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>CRM Portal Screenshot</arg>
<arg>AfterBrowserInit</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:49.220" starttime="20140623 15:01:49.217"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Reset Phones ******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:49.226" starttime="20140623 15:01:49.223"></status>
</kw>
<kw type="kw" timeout="" name="suite-global-keyword-resource.Reset All Phones">
<doc>This helper for the TCs and Suite Setup script ensures that</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:01:49.293" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972240</msg>
<status status="PASS" endtime="20140623 15:01:49.294" starttime="20140623 15:01:49.286"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:01:49.337" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:01:49.339" starttime="20140623 15:01:49.331"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:49.341" starttime="20140623 15:01:49.326"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:01:49.355" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:01:49.357" starttime="20140623 15:01:49.349"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:49.358" starttime="20140623 15:01:49.344"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:01:49.372" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:01:49.374" starttime="20140623 15:01:49.366"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:49.377" starttime="20140623 15:01:49.361"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:49.378" starttime="20140623 15:01:49.301"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:01:50.253" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:01:50.254" starttime="20140623 15:01:49.381"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:50.264" starttime="20140623 15:01:50.260"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:50.269" starttime="20140623 15:01:50.266"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:50.273" starttime="20140623 15:01:50.271"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:50.277" starttime="20140623 15:01:50.275"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:50.283" starttime="20140623 15:01:50.279"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:01:50.290" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140623 15:01:58.199" level="INFO">15:01:50,730 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/./ext] for external libraries
15:01:50,731 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
15:01:53,104 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/android-remoting/robot_ars_bridge-soapui-project.xml]
15:01:54,757 INFO  [SoapUITestCaseRunner] Setting project property [arsHost] to [10.189.11.226]
15:01:54,757 INFO  [SoapUITestCaseRunner] Setting project property [arsPort] to [8080]
15:01:54,758 INFO  [SoapUITestCaseRunner] Setting project property [LowLevelOps.Voice.release.input.deviceImsi] to [232033013972240]
15:01:54,780 INFO  [SoapUITestCaseRunner] Running soapUI tests in project [Robotframework_ARS-Bridge]
15:01:54,780 INFO  [SoapUITestCaseRunner] Running TestCase [Voice.release]
15:01:54,797 INFO  [SoapUITestCaseRunner] Running soapUI testcase [Voice.release]
15:01:54,815 INFO  [SoapUITestCaseRunner] running step [00_ARS_availability_test]
15:01:55,562 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:01:55,563 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /androidremoting/system HTTP/1.1
15:01:55,583 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:01:55,599 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:01:55,902 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:01:55,902 INFO  [SoapUITestCaseRunner] running step [cancel_on_failed_step_0]
15:01:57,049 INFO  [SoapUITestCaseRunner] running step [01_release]
15:01:57,053 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:01:57,055 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:01:57,056 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /androidremoting/voice HTTP/1.1
15:01:57,060 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:01:57,060 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:01:57,072 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:01:57,072 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:01:57,072 INFO  [SoapUITestCaseRunner] Assertion [resultCode = OK] has status FAILED
15:01:57,072 ERROR [SoapUITestCaseRunner] ASSERTION FAILED -&gt; Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response
15:01:57,073 ERROR [SoapUITestCaseRunner] 01_release failed, exporting to [/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt]
15:01:57,079 INFO  [SoapUITestCaseRunner] running step [goto_finish_on_successfull_step_1]
15:01:57,186 INFO  [SoapUITestCaseRunner] running step [transfer_failedReason]
15:01:57,917 INFO  [SoapUITestCaseRunner] running step [cancel]
15:01:58,187 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION
15:01:58,189 ERROR [SoapUITestCaseRunner] cancel failed, exporting to [/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt]
15:01:58,190 INFO  [SoapUITestCaseRunner] Finished running soapUI testcase [Voice.release], time taken: 3347ms, status: FAILED
15:01:58,191 INFO  [SoapUITestCaseRunner] TestCase [Voice.release] finished with status [FAILED] in 3347ms</msg>
<msg timestamp="20140623 15:01:58.221" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 22
Size: 528
Timestamp: Mon Jun 23 15:01:57 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972240&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140623 15:01:58.224" starttime="20140623 15:01:50.288"></status>
</kw>
<msg timestamp="20140623 15:01:58.228" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140623 15:01:58.229" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 22
Size: 528
Timestamp: Mon Jun 23 15:01:57 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140623 15:01:58.226" starttime="20140623 15:01:50.285"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:01:58.258" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:01:58.257" starttime="20140623 15:01:58.254"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:01:58.264" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:01:58.263" starttime="20140623 15:01:58.260"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:01:58.270" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:01:58.269" starttime="20140623 15:01:58.266"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:01:58.280" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:01:58.288" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:01:58.289" starttime="20140623 15:01:58.276"></status>
</kw>
<msg timestamp="20140623 15:01:58.291" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:01:58.291" level="INFO">${return_log_entry} = 2014-06-23 15:01:58,187 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:01:58.290" starttime="20140623 15:01:58.272"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:58.321" starttime="20140623 15:01:58.318"></status>
</kw>
<msg timestamp="20140623 15:01:58.323" level="INFO">${return_log_entry} = 2014-06-23 15:01:58,187 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:01:58.323" starttime="20140623 15:01:58.294"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:58.340" starttime="20140623 15:01:58.337"></status>
</kw>
<msg timestamp="20140623 15:01:58.342" level="INFO">${return_log_entry} = 2014-06-23 15:01:58,187 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:01:58.341" starttime="20140623 15:01:58.325"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:58.360" starttime="20140623 15:01:58.355"></status>
</kw>
<msg timestamp="20140623 15:01:58.362" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:01:58.361" starttime="20140623 15:01:58.344"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:58.391" starttime="20140623 15:01:58.382"></status>
</kw>
<msg timestamp="20140623 15:01:58.393" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:01:58.392" starttime="20140623 15:01:58.364"></status>
</kw>
<msg timestamp="20140623 15:01:58.395" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:01:58.395" starttime="20140623 15:01:58.232"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:58.416" starttime="20140623 15:01:58.414"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:58.421" starttime="20140623 15:01:58.418"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:58.425" starttime="20140623 15:01:58.422"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:01:58.450" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:01:58.452" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:01:58.453" starttime="20140623 15:01:58.440"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:58.454" starttime="20140623 15:01:58.437"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:58.455" starttime="20140623 15:01:58.427"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:58.456" starttime="20140623 15:01:58.398"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:58.457" starttime="20140623 15:01:49.256"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:01:58.484" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140623 15:01:58.484" starttime="20140623 15:01:58.479"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:01:58.510" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:01:58.512" starttime="20140623 15:01:58.506"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:58.513" starttime="20140623 15:01:58.503"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:01:58.522" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:01:58.523" starttime="20140623 15:01:58.518"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:58.524" starttime="20140623 15:01:58.515"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:01:58.533" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:01:58.534" starttime="20140623 15:01:58.529"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:58.535" starttime="20140623 15:01:58.526"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:58.536" starttime="20140623 15:01:58.488"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:01:58.543" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:01:58.543" starttime="20140623 15:01:58.538"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:58.549" starttime="20140623 15:01:58.545"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:58.554" starttime="20140623 15:01:58.551"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:58.558" starttime="20140623 15:01:58.556"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:58.562" starttime="20140623 15:01:58.560"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:58.568" starttime="20140623 15:01:58.564"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:01:58.575" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140623 15:01:59.101" level="INFO">15:01:59,092 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140623 15:01:59.115" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 18
Size: 528
Timestamp: Mon Jun 23 15:01:58 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972239&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140623 15:01:59.118" starttime="20140623 15:01:58.573"></status>
</kw>
<msg timestamp="20140623 15:01:59.121" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140623 15:01:59.123" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 18
Size: 528
Timestamp: Mon Jun 23 15:01:58 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140623 15:01:59.120" starttime="20140623 15:01:58.570"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:01:59.144" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:01:59.143" starttime="20140623 15:01:59.140"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:01:59.149" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:01:59.149" starttime="20140623 15:01:59.146"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:01:59.155" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:01:59.154" starttime="20140623 15:01:59.151"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:01:59.165" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:01:59.166" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:01:59.167" starttime="20140623 15:01:59.160"></status>
</kw>
<msg timestamp="20140623 15:01:59.169" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:01:59.170" level="INFO">${return_log_entry} = 2014-06-23 15:01:59,092 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:01:59.168" starttime="20140623 15:01:59.157"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:59.185" starttime="20140623 15:01:59.181"></status>
</kw>
<msg timestamp="20140623 15:01:59.186" level="INFO">${return_log_entry} = 2014-06-23 15:01:59,092 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:01:59.186" starttime="20140623 15:01:59.171"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:59.202" starttime="20140623 15:01:59.199"></status>
</kw>
<msg timestamp="20140623 15:01:59.204" level="INFO">${return_log_entry} = 2014-06-23 15:01:59,092 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:01:59.203" starttime="20140623 15:01:59.188"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:59.221" starttime="20140623 15:01:59.216"></status>
</kw>
<msg timestamp="20140623 15:01:59.222" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:01:59.222" starttime="20140623 15:01:59.206"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:59.244" starttime="20140623 15:01:59.241"></status>
</kw>
<msg timestamp="20140623 15:01:59.246" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:01:59.245" starttime="20140623 15:01:59.224"></status>
</kw>
<msg timestamp="20140623 15:01:59.248" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:01:59.248" starttime="20140623 15:01:59.126"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:59.267" starttime="20140623 15:01:59.265"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:59.271" starttime="20140623 15:01:59.269"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:59.275" starttime="20140623 15:01:59.273"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:01:59.295" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:01:59.298" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:01:59.299" starttime="20140623 15:01:59.290"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:59.300" starttime="20140623 15:01:59.287"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:59.301" starttime="20140623 15:01:59.277"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:59.302" starttime="20140623 15:01:59.251"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:59.303" starttime="20140623 15:01:58.461"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:01:59.328" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140623 15:01:59.329" starttime="20140623 15:01:59.324"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:01:59.353" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:01:59.354" starttime="20140623 15:01:59.349"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:59.355" starttime="20140623 15:01:59.346"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:01:59.365" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:01:59.366" starttime="20140623 15:01:59.360"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:59.367" starttime="20140623 15:01:59.357"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:01:59.376" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:01:59.377" starttime="20140623 15:01:59.372"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:59.378" starttime="20140623 15:01:59.369"></status>
</kw>
<status status="PASS" endtime="20140623 15:01:59.379" starttime="20140623 15:01:59.333"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:01:59.385" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:01:59.386" starttime="20140623 15:01:59.380"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:59.391" starttime="20140623 15:01:59.388"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:59.396" starttime="20140623 15:01:59.393"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:59.400" starttime="20140623 15:01:59.398"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:59.404" starttime="20140623 15:01:59.402"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:01:59.409" starttime="20140623 15:01:59.406"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:01:59.505" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140623 15:02:00.179" level="INFO">15:02:00,168 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140623 15:02:00.202" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 16
Size: 528
Timestamp: Mon Jun 23 15:01:59 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140623 15:02:00.206" starttime="20140623 15:01:59.414"></status>
</kw>
<msg timestamp="20140623 15:02:00.213" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140623 15:02:00.214" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 16
Size: 528
Timestamp: Mon Jun 23 15:01:59 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140623 15:02:00.210" starttime="20140623 15:01:59.411"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:00.245" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:00.244" starttime="20140623 15:02:00.238"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:00.252" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:00.251" starttime="20140623 15:02:00.247"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:00.260" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:00.259" starttime="20140623 15:02:00.255"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:00.274" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:00.276" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:00.277" starttime="20140623 15:02:00.268"></status>
</kw>
<msg timestamp="20140623 15:02:00.280" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:00.281" level="INFO">${return_log_entry} = 2014-06-23 15:02:00,168 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:02:00.279" starttime="20140623 15:02:00.263"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:00.303" starttime="20140623 15:02:00.300"></status>
</kw>
<msg timestamp="20140623 15:02:00.305" level="INFO">${return_log_entry} = 2014-06-23 15:02:00,168 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:02:00.304" starttime="20140623 15:02:00.284"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:00.320" starttime="20140623 15:02:00.317"></status>
</kw>
<msg timestamp="20140623 15:02:00.322" level="INFO">${return_log_entry} = 2014-06-23 15:02:00,168 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:02:00.321" starttime="20140623 15:02:00.307"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:00.338" starttime="20140623 15:02:00.334"></status>
</kw>
<msg timestamp="20140623 15:02:00.340" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:02:00.339" starttime="20140623 15:02:00.324"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:00.361" starttime="20140623 15:02:00.358"></status>
</kw>
<msg timestamp="20140623 15:02:00.363" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:02:00.362" starttime="20140623 15:02:00.341"></status>
</kw>
<msg timestamp="20140623 15:02:00.365" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:02:00.365" starttime="20140623 15:02:00.218"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:00.384" starttime="20140623 15:02:00.381"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:00.388" starttime="20140623 15:02:00.385"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:00.392" starttime="20140623 15:02:00.390"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:00.411" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:00.413" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:00.414" starttime="20140623 15:02:00.406"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:00.415" starttime="20140623 15:02:00.403"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:00.416" starttime="20140623 15:02:00.394"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:00.416" starttime="20140623 15:02:00.367"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:00.418" starttime="20140623 15:01:59.307"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:02:00.442" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140623 15:02:00.443" starttime="20140623 15:02:00.438"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:00.467" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:00.468" starttime="20140623 15:02:00.463"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:00.469" starttime="20140623 15:02:00.460"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:00.478" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:00.479" starttime="20140623 15:02:00.474"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:00.480" starttime="20140623 15:02:00.471"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:00.488" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:00.490" starttime="20140623 15:02:00.485"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:00.491" starttime="20140623 15:02:00.482"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:00.491" starttime="20140623 15:02:00.447"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:00.498" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:00.499" starttime="20140623 15:02:00.493"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:00.504" starttime="20140623 15:02:00.500"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:00.509" starttime="20140623 15:02:00.506"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:00.513" starttime="20140623 15:02:00.511"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:00.517" starttime="20140623 15:02:00.515"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:00.522" starttime="20140623 15:02:00.519"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:00.529" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140623 15:02:00.942" level="INFO">15:02:00,935 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140623 15:02:00.961" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 15
Size: 528
Timestamp: Mon Jun 23 15:02:00 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140623 15:02:00.966" starttime="20140623 15:02:00.527"></status>
</kw>
<msg timestamp="20140623 15:02:00.968" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140623 15:02:00.969" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 15
Size: 528
Timestamp: Mon Jun 23 15:02:00 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140623 15:02:00.967" starttime="20140623 15:02:00.524"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:01.000" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:00.999" starttime="20140623 15:02:00.994"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:01.008" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:01.007" starttime="20140623 15:02:01.003"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:01.016" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:01.015" starttime="20140623 15:02:01.010"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:01.029" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:01.031" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:01.032" starttime="20140623 15:02:01.023"></status>
</kw>
<msg timestamp="20140623 15:02:01.035" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:01.036" level="INFO">${return_log_entry} = 2014-06-23 15:02:00,935 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:02:01.034" starttime="20140623 15:02:01.018"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:01.056" starttime="20140623 15:02:01.052"></status>
</kw>
<msg timestamp="20140623 15:02:01.059" level="INFO">${return_log_entry} = 2014-06-23 15:02:00,935 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:02:01.058" starttime="20140623 15:02:01.038"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:01.080" starttime="20140623 15:02:01.076"></status>
</kw>
<msg timestamp="20140623 15:02:01.083" level="INFO">${return_log_entry} = 2014-06-23 15:02:00,935 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:02:01.082" starttime="20140623 15:02:01.062"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:01.106" starttime="20140623 15:02:01.100"></status>
</kw>
<msg timestamp="20140623 15:02:01.108" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:02:01.107" starttime="20140623 15:02:01.085"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:01.138" starttime="20140623 15:02:01.133"></status>
</kw>
<msg timestamp="20140623 15:02:01.140" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:02:01.139" starttime="20140623 15:02:01.111"></status>
</kw>
<msg timestamp="20140623 15:02:01.145" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:02:01.143" starttime="20140623 15:02:00.973"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:01.297" starttime="20140623 15:02:01.293"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:01.302" starttime="20140623 15:02:01.299"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:01.308" starttime="20140623 15:02:01.304"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:01.339" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:01.341" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:01.343" starttime="20140623 15:02:01.330"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:01.344" starttime="20140623 15:02:01.326"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:01.346" starttime="20140623 15:02:01.310"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:01.347" starttime="20140623 15:02:01.148"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:01.349" starttime="20140623 15:02:00.422"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:02:01.386" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972240</msg>
<status status="PASS" endtime="20140623 15:02:01.387" starttime="20140623 15:02:01.380"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:01.423" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:01.425" starttime="20140623 15:02:01.417"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:01.426" starttime="20140623 15:02:01.412"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:01.439" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:01.441" starttime="20140623 15:02:01.433"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:01.442" starttime="20140623 15:02:01.429"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:01.455" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:01.457" starttime="20140623 15:02:01.449"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:01.458" starttime="20140623 15:02:01.445"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:01.460" starttime="20140623 15:02:01.393"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:01.471" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:01.472" starttime="20140623 15:02:01.462"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:01.479" starttime="20140623 15:02:01.474"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:01.487" starttime="20140623 15:02:01.482"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:01.494" starttime="20140623 15:02:01.490"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:01.500" starttime="20140623 15:02:01.497"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:01.508" starttime="20140623 15:02:01.503"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:01.518" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140623 15:02:02.075" level="INFO">15:02:02,027 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
15:02:02,028 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:02.077" starttime="20140623 15:02:01.515"></status>
</kw>
<msg timestamp="20140623 15:02:02.080" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:02.081" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:02.079" starttime="20140623 15:02:01.511"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:02.102" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:02.101" starttime="20140623 15:02:02.097"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:02.107" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:02.106" starttime="20140623 15:02:02.103"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:02.112" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:02.111" starttime="20140623 15:02:02.108"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:02.121" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:02.129" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:02.130" starttime="20140623 15:02:02.117"></status>
</kw>
<msg timestamp="20140623 15:02:02.132" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:02.132" level="INFO">${return_log_entry} = 2014-06-23 15:02:02,028 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:02.131" starttime="20140623 15:02:02.114"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.147" starttime="20140623 15:02:02.144"></status>
</kw>
<msg timestamp="20140623 15:02:02.149" level="INFO">${return_log_entry} = 2014-06-23 15:02:02,028 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:02.148" starttime="20140623 15:02:02.134"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.164" starttime="20140623 15:02:02.161"></status>
</kw>
<msg timestamp="20140623 15:02:02.166" level="INFO">${return_log_entry} = 2014-06-23 15:02:02,028 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:02.165" starttime="20140623 15:02:02.151"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.182" starttime="20140623 15:02:02.178"></status>
</kw>
<msg timestamp="20140623 15:02:02.184" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:02.183" starttime="20140623 15:02:02.167"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.205" starttime="20140623 15:02:02.201"></status>
</kw>
<msg timestamp="20140623 15:02:02.206" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:02.206" starttime="20140623 15:02:02.185"></status>
</kw>
<msg timestamp="20140623 15:02:02.208" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:02.208" starttime="20140623 15:02:02.083"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:02.229" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140623 15:02:02.229" starttime="20140623 15:02:02.225"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:02.235" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:02.234" starttime="20140623 15:02:02.231"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:02.240" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:02.239" starttime="20140623 15:02:02.236"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:02.249" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:02.256" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:02.257" starttime="20140623 15:02:02.244"></status>
</kw>
<msg timestamp="20140623 15:02:02.259" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:02.260" level="INFO">${return_log_entry} = 2014-06-23 15:02:02,027 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:02:02.258" starttime="20140623 15:02:02.241"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.274" starttime="20140623 15:02:02.271"></status>
</kw>
<msg timestamp="20140623 15:02:02.275" level="INFO">${return_log_entry} = 2014-06-23 15:02:02,027 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:02:02.275" starttime="20140623 15:02:02.261"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.290" starttime="20140623 15:02:02.287"></status>
</kw>
<msg timestamp="20140623 15:02:02.291" level="INFO">${return_log_entry} = 2014-06-23 15:02:02,027 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:02:02.291" starttime="20140623 15:02:02.277"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.307" starttime="20140623 15:02:02.303"></status>
</kw>
<msg timestamp="20140623 15:02:02.309" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:02.308" starttime="20140623 15:02:02.293"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.329" starttime="20140623 15:02:02.326"></status>
</kw>
<msg timestamp="20140623 15:02:02.330" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:02.330" starttime="20140623 15:02:02.310"></status>
</kw>
<msg timestamp="20140623 15:02:02.333" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:02.332" starttime="20140623 15:02:02.211"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.351" starttime="20140623 15:02:02.348"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.354" starttime="20140623 15:02:02.352"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.358" starttime="20140623 15:02:02.356"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:02.381" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:02.383" starttime="20140623 15:02:02.372"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:02.384" starttime="20140623 15:02:02.369"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:02.385" starttime="20140623 15:02:02.360"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:02.385" starttime="20140623 15:02:02.335"></status>
</kw>
<msg timestamp="20140623 15:02:02.389" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:02.389" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:02.387" starttime="20140623 15:02:01.356"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140623 15:02:02.394" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:02:02.395" starttime="20140623 15:02:02.391"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 1</arg>
</arguments>
<msg timestamp="20140623 15:02:02.400" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:02:02.401" starttime="20140623 15:02:02.397"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:02:02.423" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140623 15:02:02.424" starttime="20140623 15:02:02.419"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:02.446" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:02.447" starttime="20140623 15:02:02.442"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:02.448" starttime="20140623 15:02:02.439"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:02.456" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:02.457" starttime="20140623 15:02:02.452"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:02.458" starttime="20140623 15:02:02.449"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:02.466" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:02.467" starttime="20140623 15:02:02.462"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:02.468" starttime="20140623 15:02:02.460"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:02.469" starttime="20140623 15:02:02.427"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:02.475" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:02.476" starttime="20140623 15:02:02.470"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.481" starttime="20140623 15:02:02.477"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.486" starttime="20140623 15:02:02.483"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.490" starttime="20140623 15:02:02.487"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.493" starttime="20140623 15:02:02.491"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:02.498" starttime="20140623 15:02:02.495"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:02.504" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140623 15:02:02.996" level="INFO">15:02:02,947 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
15:02:02,948 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:02.997" starttime="20140623 15:02:02.502"></status>
</kw>
<msg timestamp="20140623 15:02:02.999" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:03.000" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:02.998" starttime="20140623 15:02:02.500"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:03.029" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:03.028" starttime="20140623 15:02:03.023"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:03.037" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:03.036" starttime="20140623 15:02:03.032"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:03.045" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:03.044" starttime="20140623 15:02:03.040"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:03.059" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:03.061" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:03.062" starttime="20140623 15:02:03.053"></status>
</kw>
<msg timestamp="20140623 15:02:03.064" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:03.065" level="INFO">${return_log_entry} = 2014-06-23 15:02:02,948 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:03.063" starttime="20140623 15:02:03.048"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.080" starttime="20140623 15:02:03.077"></status>
</kw>
<msg timestamp="20140623 15:02:03.082" level="INFO">${return_log_entry} = 2014-06-23 15:02:02,948 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:03.081" starttime="20140623 15:02:03.066"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.096" starttime="20140623 15:02:03.093"></status>
</kw>
<msg timestamp="20140623 15:02:03.097" level="INFO">${return_log_entry} = 2014-06-23 15:02:02,948 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:03.097" starttime="20140623 15:02:03.083"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.113" starttime="20140623 15:02:03.109"></status>
</kw>
<msg timestamp="20140623 15:02:03.115" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:03.114" starttime="20140623 15:02:03.099"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.135" starttime="20140623 15:02:03.132"></status>
</kw>
<msg timestamp="20140623 15:02:03.137" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:03.136" starttime="20140623 15:02:03.116"></status>
</kw>
<msg timestamp="20140623 15:02:03.139" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:03.138" starttime="20140623 15:02:03.005"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:03.159" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140623 15:02:03.159" starttime="20140623 15:02:03.154"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:03.164" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:03.164" starttime="20140623 15:02:03.161"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:03.169" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:03.168" starttime="20140623 15:02:03.166"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:03.178" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:03.180" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:03.181" starttime="20140623 15:02:03.174"></status>
</kw>
<msg timestamp="20140623 15:02:03.182" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:03.183" level="INFO">${return_log_entry} = 2014-06-23 15:02:02,947 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:02:03.181" starttime="20140623 15:02:03.171"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.196" starttime="20140623 15:02:03.193"></status>
</kw>
<msg timestamp="20140623 15:02:03.198" level="INFO">${return_log_entry} = 2014-06-23 15:02:02,947 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:02:03.197" starttime="20140623 15:02:03.184"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.214" starttime="20140623 15:02:03.210"></status>
</kw>
<msg timestamp="20140623 15:02:03.216" level="INFO">${return_log_entry} = 2014-06-23 15:02:02,947 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:02:03.215" starttime="20140623 15:02:03.199"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.239" starttime="20140623 15:02:03.233"></status>
</kw>
<msg timestamp="20140623 15:02:03.241" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:03.240" starttime="20140623 15:02:03.219"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.264" starttime="20140623 15:02:03.261"></status>
</kw>
<msg timestamp="20140623 15:02:03.265" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:03.265" starttime="20140623 15:02:03.243"></status>
</kw>
<msg timestamp="20140623 15:02:03.267" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:03.267" starttime="20140623 15:02:03.141"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.284" starttime="20140623 15:02:03.281"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.288" starttime="20140623 15:02:03.285"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.291" starttime="20140623 15:02:03.289"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:03.308" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:03.309" starttime="20140623 15:02:03.304"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:03.310" starttime="20140623 15:02:03.301"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:03.311" starttime="20140623 15:02:03.292"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:03.312" starttime="20140623 15:02:03.269"></status>
</kw>
<msg timestamp="20140623 15:02:03.315" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:03.316" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:03.314" starttime="20140623 15:02:02.404"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140623 15:02:03.321" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:02:03.322" starttime="20140623 15:02:03.317"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 2</arg>
</arguments>
<msg timestamp="20140623 15:02:03.326" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:02:03.327" starttime="20140623 15:02:03.323"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:02:03.349" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140623 15:02:03.350" starttime="20140623 15:02:03.344"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:03.376" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:03.378" starttime="20140623 15:02:03.370"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:03.380" starttime="20140623 15:02:03.367"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:03.392" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:03.394" starttime="20140623 15:02:03.387"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:03.396" starttime="20140623 15:02:03.382"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:03.409" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:03.410" starttime="20140623 15:02:03.403"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:03.412" starttime="20140623 15:02:03.398"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:03.413" starttime="20140623 15:02:03.356"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:03.423" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:03.423" starttime="20140623 15:02:03.415"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.431" starttime="20140623 15:02:03.426"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.438" starttime="20140623 15:02:03.433"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.443" starttime="20140623 15:02:03.440"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.448" starttime="20140623 15:02:03.445"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:03.455" starttime="20140623 15:02:03.450"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:03.465" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140623 15:02:03.998" level="INFO">15:02:03,945 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
15:02:03,946 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:04.000" starttime="20140623 15:02:03.462"></status>
</kw>
<msg timestamp="20140623 15:02:04.006" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:04.008" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:04.004" starttime="20140623 15:02:03.458"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:04.035" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:04.034" starttime="20140623 15:02:04.029"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:04.043" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:04.042" starttime="20140623 15:02:04.038"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:04.051" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:04.050" starttime="20140623 15:02:04.045"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:04.064" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:04.066" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:04.068" starttime="20140623 15:02:04.058"></status>
</kw>
<msg timestamp="20140623 15:02:04.070" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:04.071" level="INFO">${return_log_entry} = 2014-06-23 15:02:03,946 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:04.069" starttime="20140623 15:02:04.053"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.091" starttime="20140623 15:02:04.087"></status>
</kw>
<msg timestamp="20140623 15:02:04.094" level="INFO">${return_log_entry} = 2014-06-23 15:02:03,946 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:04.093" starttime="20140623 15:02:04.074"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.115" starttime="20140623 15:02:04.110"></status>
</kw>
<msg timestamp="20140623 15:02:04.117" level="INFO">${return_log_entry} = 2014-06-23 15:02:03,946 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:04.116" starttime="20140623 15:02:04.096"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.140" starttime="20140623 15:02:04.134"></status>
</kw>
<msg timestamp="20140623 15:02:04.142" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:04.141" starttime="20140623 15:02:04.120"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.171" starttime="20140623 15:02:04.167"></status>
</kw>
<msg timestamp="20140623 15:02:04.173" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:04.172" starttime="20140623 15:02:04.145"></status>
</kw>
<msg timestamp="20140623 15:02:04.176" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:04.175" starttime="20140623 15:02:04.011"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:04.204" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140623 15:02:04.203" starttime="20140623 15:02:04.198"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:04.212" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:04.211" starttime="20140623 15:02:04.207"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:04.219" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:04.218" starttime="20140623 15:02:04.214"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:04.231" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:04.233" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:04.235" starttime="20140623 15:02:04.225"></status>
</kw>
<msg timestamp="20140623 15:02:04.237" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:04.238" level="INFO">${return_log_entry} = 2014-06-23 15:02:03,945 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:02:04.236" starttime="20140623 15:02:04.221"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.368" starttime="20140623 15:02:04.361"></status>
</kw>
<msg timestamp="20140623 15:02:04.370" level="INFO">${return_log_entry} = 2014-06-23 15:02:03,945 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:02:04.369" starttime="20140623 15:02:04.343"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.391" starttime="20140623 15:02:04.387"></status>
</kw>
<msg timestamp="20140623 15:02:04.393" level="INFO">${return_log_entry} = 2014-06-23 15:02:03,945 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:02:04.392" starttime="20140623 15:02:04.373"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.416" starttime="20140623 15:02:04.411"></status>
</kw>
<msg timestamp="20140623 15:02:04.418" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:04.417" starttime="20140623 15:02:04.396"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.446" starttime="20140623 15:02:04.442"></status>
</kw>
<msg timestamp="20140623 15:02:04.448" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:04.447" starttime="20140623 15:02:04.420"></status>
</kw>
<msg timestamp="20140623 15:02:04.451" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:04.450" starttime="20140623 15:02:04.180"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.477" starttime="20140623 15:02:04.473"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.483" starttime="20140623 15:02:04.479"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.488" starttime="20140623 15:02:04.485"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:04.514" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:04.516" starttime="20140623 15:02:04.508"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:04.518" starttime="20140623 15:02:04.504"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:04.519" starttime="20140623 15:02:04.491"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:04.520" starttime="20140623 15:02:04.455"></status>
</kw>
<msg timestamp="20140623 15:02:04.525" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:04.526" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:04.523" starttime="20140623 15:02:03.331"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140623 15:02:04.533" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:02:04.535" starttime="20140623 15:02:04.529"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 12</arg>
</arguments>
<msg timestamp="20140623 15:02:04.542" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:02:04.543" starttime="20140623 15:02:04.537"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:02:04.576" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140623 15:02:04.577" starttime="20140623 15:02:04.570"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:04.609" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:04.611" starttime="20140623 15:02:04.603"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:04.612" starttime="20140623 15:02:04.599"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:04.624" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:04.625" starttime="20140623 15:02:04.618"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:04.627" starttime="20140623 15:02:04.614"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:04.639" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:04.640" starttime="20140623 15:02:04.633"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:04.642" starttime="20140623 15:02:04.629"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:04.643" starttime="20140623 15:02:04.583"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:04.652" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:04.653" starttime="20140623 15:02:04.645"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.659" starttime="20140623 15:02:04.655"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.666" starttime="20140623 15:02:04.661"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.671" starttime="20140623 15:02:04.668"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.677" starttime="20140623 15:02:04.674"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:04.690" starttime="20140623 15:02:04.679"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:04.700" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140623 15:02:05.288" level="INFO">15:02:05,248 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
15:02:05,249 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:05.290" starttime="20140623 15:02:04.697"></status>
</kw>
<msg timestamp="20140623 15:02:05.296" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:05.297" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:05.294" starttime="20140623 15:02:04.693"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:05.321" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:05.321" starttime="20140623 15:02:05.317"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:05.326" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:05.325" starttime="20140623 15:02:05.323"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:05.330" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:05.330" starttime="20140623 15:02:05.327"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:05.338" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:05.340" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:05.341" starttime="20140623 15:02:05.335"></status>
</kw>
<msg timestamp="20140623 15:02:05.342" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:05.343" level="INFO">${return_log_entry} = 2014-06-23 15:02:05,249 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:05.341" starttime="20140623 15:02:05.332"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.356" starttime="20140623 15:02:05.353"></status>
</kw>
<msg timestamp="20140623 15:02:05.358" level="INFO">${return_log_entry} = 2014-06-23 15:02:05,249 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:05.357" starttime="20140623 15:02:05.344"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.374" starttime="20140623 15:02:05.371"></status>
</kw>
<msg timestamp="20140623 15:02:05.376" level="INFO">${return_log_entry} = 2014-06-23 15:02:05,249 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:05.375" starttime="20140623 15:02:05.360"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.390" starttime="20140623 15:02:05.386"></status>
</kw>
<msg timestamp="20140623 15:02:05.391" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:05.391" starttime="20140623 15:02:05.377"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.410" starttime="20140623 15:02:05.408"></status>
</kw>
<msg timestamp="20140623 15:02:05.412" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:05.411" starttime="20140623 15:02:05.393"></status>
</kw>
<msg timestamp="20140623 15:02:05.414" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:05.413" starttime="20140623 15:02:05.301"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:05.431" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140623 15:02:05.431" starttime="20140623 15:02:05.428"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:05.436" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:05.435" starttime="20140623 15:02:05.433"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:05.440" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:05.440" starttime="20140623 15:02:05.437"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:05.448" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:05.450" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:05.450" starttime="20140623 15:02:05.444"></status>
</kw>
<msg timestamp="20140623 15:02:05.452" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:05.452" level="INFO">${return_log_entry} = 2014-06-23 15:02:05,248 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:02:05.451" starttime="20140623 15:02:05.442"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.465" starttime="20140623 15:02:05.462"></status>
</kw>
<msg timestamp="20140623 15:02:05.466" level="INFO">${return_log_entry} = 2014-06-23 15:02:05,248 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:02:05.466" starttime="20140623 15:02:05.454"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.479" starttime="20140623 15:02:05.477"></status>
</kw>
<msg timestamp="20140623 15:02:05.481" level="INFO">${return_log_entry} = 2014-06-23 15:02:05,248 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:02:05.480" starttime="20140623 15:02:05.468"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.495" starttime="20140623 15:02:05.492"></status>
</kw>
<msg timestamp="20140623 15:02:05.497" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:05.496" starttime="20140623 15:02:05.482"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.516" starttime="20140623 15:02:05.513"></status>
</kw>
<msg timestamp="20140623 15:02:05.517" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:05.516" starttime="20140623 15:02:05.498"></status>
</kw>
<msg timestamp="20140623 15:02:05.519" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:05.518" starttime="20140623 15:02:05.416"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.540" starttime="20140623 15:02:05.536"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.546" starttime="20140623 15:02:05.542"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.550" starttime="20140623 15:02:05.547"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:05.576" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:05.578" starttime="20140623 15:02:05.570"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:05.579" starttime="20140623 15:02:05.566"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:05.580" starttime="20140623 15:02:05.552"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:05.581" starttime="20140623 15:02:05.521"></status>
</kw>
<msg timestamp="20140623 15:02:05.586" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:05.587" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:02:05.584" starttime="20140623 15:02:04.549"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140623 15:02:05.594" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:02:05.595" starttime="20140623 15:02:05.589"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 13</arg>
</arguments>
<msg timestamp="20140623 15:02:05.602" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:02:05.603" starttime="20140623 15:02:05.597"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140623 15:02:05.635" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140623 15:02:05.634" starttime="20140623 15:02:05.630"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:05.690" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:05.692" starttime="20140623 15:02:05.685"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:05.693" starttime="20140623 15:02:05.681"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:05.704" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:05.706" starttime="20140623 15:02:05.699"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:05.708" starttime="20140623 15:02:05.695"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:05.719" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:05.721" starttime="20140623 15:02:05.714"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:05.722" starttime="20140623 15:02:05.710"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:05.723" starttime="20140623 15:02:05.664"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:05.732" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:05.733" starttime="20140623 15:02:05.725"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.740" starttime="20140623 15:02:05.735"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.746" starttime="20140623 15:02:05.742"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.749" starttime="20140623 15:02:05.747"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.752" starttime="20140623 15:02:05.750"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.757" starttime="20140623 15:02:05.754"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.761" starttime="20140623 15:02:05.758"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:05.858" starttime="20140623 15:02:05.763"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:05.868" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140623 15:02:12.842" level="INFO">15:02:12,834 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
15:02:12,835 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:12.843" starttime="20140623 15:02:05.865"></status>
</kw>
<msg timestamp="20140623 15:02:12.847" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:12.847" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:12.845" starttime="20140623 15:02:05.861"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:12.868" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:12.867" starttime="20140623 15:02:12.863"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:12.872" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:12.872" starttime="20140623 15:02:12.869"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:12.877" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:12.876" starttime="20140623 15:02:12.874"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:12.885" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:12.890" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:12.891" starttime="20140623 15:02:12.881"></status>
</kw>
<msg timestamp="20140623 15:02:12.892" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:12.893" level="INFO">${return_log_entry} = 2014-06-23 15:02:12,835 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:12.892" starttime="20140623 15:02:12.878"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:12.907" starttime="20140623 15:02:12.904"></status>
</kw>
<msg timestamp="20140623 15:02:12.909" level="INFO">${return_log_entry} = 2014-06-23 15:02:12,835 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:12.908" starttime="20140623 15:02:12.894"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:12.922" starttime="20140623 15:02:12.919"></status>
</kw>
<msg timestamp="20140623 15:02:12.924" level="INFO">${return_log_entry} = 2014-06-23 15:02:12,835 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:12.923" starttime="20140623 15:02:12.910"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:12.938" starttime="20140623 15:02:12.934"></status>
</kw>
<msg timestamp="20140623 15:02:12.939" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:12.938" starttime="20140623 15:02:12.925"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:12.958" starttime="20140623 15:02:12.955"></status>
</kw>
<msg timestamp="20140623 15:02:12.959" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:12.959" starttime="20140623 15:02:12.940"></status>
</kw>
<msg timestamp="20140623 15:02:12.961" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:12.961" starttime="20140623 15:02:12.851"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:12.979" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140623 15:02:12.978" starttime="20140623 15:02:12.975"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:12.984" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:12.983" starttime="20140623 15:02:12.980"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:12.988" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:12.987" starttime="20140623 15:02:12.985"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:12.996" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:13.001" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:13.002" starttime="20140623 15:02:12.992"></status>
</kw>
<msg timestamp="20140623 15:02:13.005" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:13.006" level="INFO">${return_log_entry} = 2014-06-23 15:02:12,834 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:13.004" starttime="20140623 15:02:12.989"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.019" starttime="20140623 15:02:13.016"></status>
</kw>
<msg timestamp="20140623 15:02:13.020" level="INFO">${return_log_entry} = 2014-06-23 15:02:12,834 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:13.020" starttime="20140623 15:02:13.007"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.034" starttime="20140623 15:02:13.031"></status>
</kw>
<msg timestamp="20140623 15:02:13.035" level="INFO">${return_log_entry} = 2014-06-23 15:02:12,834 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:13.035" starttime="20140623 15:02:13.022"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.050" starttime="20140623 15:02:13.046"></status>
</kw>
<msg timestamp="20140623 15:02:13.052" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:13.051" starttime="20140623 15:02:13.037"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.072" starttime="20140623 15:02:13.069"></status>
</kw>
<msg timestamp="20140623 15:02:13.073" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:13.073" starttime="20140623 15:02:13.053"></status>
</kw>
<msg timestamp="20140623 15:02:13.076" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:13.075" starttime="20140623 15:02:12.963"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.091" starttime="20140623 15:02:13.089"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.094" starttime="20140623 15:02:13.092"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.097" starttime="20140623 15:02:13.095"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:13.117" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:13.118" starttime="20140623 15:02:13.110"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:13.118" starttime="20140623 15:02:13.107"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:13.119" starttime="20140623 15:02:13.099"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:13.120" starttime="20140623 15:02:13.078"></status>
</kw>
<msg timestamp="20140623 15:02:13.123" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:13.123" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:13.121" starttime="20140623 15:02:05.639"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.147" starttime="20140623 15:02:13.144"></status>
</kw>
<msg timestamp="20140623 15:02:13.148" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:13.148" starttime="20140623 15:02:13.125"></status>
</kw>
<msg timestamp="20140623 15:02:13.151" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:13.149" starttime="20140623 15:02:05.607"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140623 15:02:13.155" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:02:13.156" starttime="20140623 15:02:13.152"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140623 15:02:13.177" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140623 15:02:13.176" starttime="20140623 15:02:13.173"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:13.213" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:13.214" starttime="20140623 15:02:13.209"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:13.215" starttime="20140623 15:02:13.207"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:13.222" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:13.223" starttime="20140623 15:02:13.218"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:13.224" starttime="20140623 15:02:13.216"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:13.231" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:13.232" starttime="20140623 15:02:13.227"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:13.233" starttime="20140623 15:02:13.225"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:13.234" starttime="20140623 15:02:13.196"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:13.239" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:13.240" starttime="20140623 15:02:13.235"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.244" starttime="20140623 15:02:13.241"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.249" starttime="20140623 15:02:13.246"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.252" starttime="20140623 15:02:13.251"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.255" starttime="20140623 15:02:13.254"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.260" starttime="20140623 15:02:13.257"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.265" starttime="20140623 15:02:13.261"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:13.269" starttime="20140623 15:02:13.266"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:13.275" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140623 15:02:20.038" level="INFO">15:02:20,028 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
15:02:20,030 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:20.039" starttime="20140623 15:02:13.273"></status>
</kw>
<msg timestamp="20140623 15:02:20.043" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:20.044" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:20.041" starttime="20140623 15:02:13.271"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:20.062" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:20.062" starttime="20140623 15:02:20.058"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:20.066" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:20.066" starttime="20140623 15:02:20.063"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:20.070" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:20.070" starttime="20140623 15:02:20.067"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:20.079" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:20.081" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:20.082" starttime="20140623 15:02:20.074"></status>
</kw>
<msg timestamp="20140623 15:02:20.085" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:20.086" level="INFO">${return_log_entry} = 2014-06-23 15:02:20,030 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:20.084" starttime="20140623 15:02:20.072"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.103" starttime="20140623 15:02:20.100"></status>
</kw>
<msg timestamp="20140623 15:02:20.105" level="INFO">${return_log_entry} = 2014-06-23 15:02:20,030 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:20.104" starttime="20140623 15:02:20.088"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.117" starttime="20140623 15:02:20.114"></status>
</kw>
<msg timestamp="20140623 15:02:20.118" level="INFO">${return_log_entry} = 2014-06-23 15:02:20,030 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:20.118" starttime="20140623 15:02:20.106"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.131" starttime="20140623 15:02:20.128"></status>
</kw>
<msg timestamp="20140623 15:02:20.133" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:20.132" starttime="20140623 15:02:20.120"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.150" starttime="20140623 15:02:20.148"></status>
</kw>
<msg timestamp="20140623 15:02:20.151" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:20.151" starttime="20140623 15:02:20.134"></status>
</kw>
<msg timestamp="20140623 15:02:20.153" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:20.153" starttime="20140623 15:02:20.047"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:20.170" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140623 15:02:20.169" starttime="20140623 15:02:20.166"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:20.174" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:20.173" starttime="20140623 15:02:20.171"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:20.178" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:20.178" starttime="20140623 15:02:20.175"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:20.188" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:20.189" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:20.190" starttime="20140623 15:02:20.184"></status>
</kw>
<msg timestamp="20140623 15:02:20.191" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:20.192" level="INFO">${return_log_entry} = 2014-06-23 15:02:20,028 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:20.191" starttime="20140623 15:02:20.181"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.204" starttime="20140623 15:02:20.201"></status>
</kw>
<msg timestamp="20140623 15:02:20.205" level="INFO">${return_log_entry} = 2014-06-23 15:02:20,028 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:20.204" starttime="20140623 15:02:20.193"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.217" starttime="20140623 15:02:20.215"></status>
</kw>
<msg timestamp="20140623 15:02:20.219" level="INFO">${return_log_entry} = 2014-06-23 15:02:20,028 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:20.218" starttime="20140623 15:02:20.206"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.235" starttime="20140623 15:02:20.230"></status>
</kw>
<msg timestamp="20140623 15:02:20.238" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:20.237" starttime="20140623 15:02:20.220"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.265" starttime="20140623 15:02:20.261"></status>
</kw>
<msg timestamp="20140623 15:02:20.267" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:20.266" starttime="20140623 15:02:20.240"></status>
</kw>
<msg timestamp="20140623 15:02:20.270" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:20.269" starttime="20140623 15:02:20.155"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.288" starttime="20140623 15:02:20.286"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.291" starttime="20140623 15:02:20.289"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.294" starttime="20140623 15:02:20.292"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:20.309" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:20.310" starttime="20140623 15:02:20.306"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:20.311" starttime="20140623 15:02:20.303"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:20.312" starttime="20140623 15:02:20.295"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:20.312" starttime="20140623 15:02:20.272"></status>
</kw>
<msg timestamp="20140623 15:02:20.315" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:20.316" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:20.314" starttime="20140623 15:02:13.180"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.330" starttime="20140623 15:02:20.327"></status>
</kw>
<msg timestamp="20140623 15:02:20.331" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:20.330" starttime="20140623 15:02:20.317"></status>
</kw>
<msg timestamp="20140623 15:02:20.333" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:20.332" starttime="20140623 15:02:13.158"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140623 15:02:20.338" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:02:20.338" starttime="20140623 15:02:20.335"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140623 15:02:20.358" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140623 15:02:20.357" starttime="20140623 15:02:20.355"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:20.393" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:20.394" starttime="20140623 15:02:20.389"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:20.395" starttime="20140623 15:02:20.387"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:20.401" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:20.402" starttime="20140623 15:02:20.398"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:20.403" starttime="20140623 15:02:20.396"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:20.410" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:20.411" starttime="20140623 15:02:20.406"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:20.411" starttime="20140623 15:02:20.404"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:20.412" starttime="20140623 15:02:20.377"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:20.417" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:20.418" starttime="20140623 15:02:20.413"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.422" starttime="20140623 15:02:20.419"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.426" starttime="20140623 15:02:20.423"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.429" starttime="20140623 15:02:20.427"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.432" starttime="20140623 15:02:20.430"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.437" starttime="20140623 15:02:20.434"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.441" starttime="20140623 15:02:20.438"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:20.445" starttime="20140623 15:02:20.442"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:20.451" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140623 15:02:27.085" level="INFO">15:02:27,080 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
15:02:27,082 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:27.086" starttime="20140623 15:02:20.449"></status>
</kw>
<msg timestamp="20140623 15:02:27.089" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:27.090" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:27.088" starttime="20140623 15:02:20.447"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:27.106" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:27.106" starttime="20140623 15:02:27.103"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:27.111" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:27.110" starttime="20140623 15:02:27.108"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:27.115" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:27.114" starttime="20140623 15:02:27.112"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:27.122" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:27.123" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:27.124" starttime="20140623 15:02:27.119"></status>
</kw>
<msg timestamp="20140623 15:02:27.125" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:27.126" level="INFO">${return_log_entry} = 2014-06-23 15:02:27,082 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:27.125" starttime="20140623 15:02:27.116"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.138" starttime="20140623 15:02:27.135"></status>
</kw>
<msg timestamp="20140623 15:02:27.139" level="INFO">${return_log_entry} = 2014-06-23 15:02:27,082 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:27.138" starttime="20140623 15:02:27.127"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.151" starttime="20140623 15:02:27.148"></status>
</kw>
<msg timestamp="20140623 15:02:27.152" level="INFO">${return_log_entry} = 2014-06-23 15:02:27,082 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:27.152" starttime="20140623 15:02:27.140"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.165" starttime="20140623 15:02:27.162"></status>
</kw>
<msg timestamp="20140623 15:02:27.166" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:27.166" starttime="20140623 15:02:27.154"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.184" starttime="20140623 15:02:27.181"></status>
</kw>
<msg timestamp="20140623 15:02:27.185" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:27.184" starttime="20140623 15:02:27.168"></status>
</kw>
<msg timestamp="20140623 15:02:27.187" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:27.186" starttime="20140623 15:02:27.092"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:27.203" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140623 15:02:27.203" starttime="20140623 15:02:27.200"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:27.207" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:27.207" starttime="20140623 15:02:27.204"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:27.211" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:27.211" starttime="20140623 15:02:27.208"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:27.218" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:27.299" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:27.300" starttime="20140623 15:02:27.215"></status>
</kw>
<msg timestamp="20140623 15:02:27.302" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:27.302" level="INFO">${return_log_entry} = 2014-06-23 15:02:27,080 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:27.301" starttime="20140623 15:02:27.213"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.315" starttime="20140623 15:02:27.312"></status>
</kw>
<msg timestamp="20140623 15:02:27.317" level="INFO">${return_log_entry} = 2014-06-23 15:02:27,080 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:27.316" starttime="20140623 15:02:27.304"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.329" starttime="20140623 15:02:27.326"></status>
</kw>
<msg timestamp="20140623 15:02:27.330" level="INFO">${return_log_entry} = 2014-06-23 15:02:27,080 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:27.330" starttime="20140623 15:02:27.318"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.343" starttime="20140623 15:02:27.340"></status>
</kw>
<msg timestamp="20140623 15:02:27.344" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:27.344" starttime="20140623 15:02:27.331"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.362" starttime="20140623 15:02:27.359"></status>
</kw>
<msg timestamp="20140623 15:02:27.363" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:27.363" starttime="20140623 15:02:27.345"></status>
</kw>
<msg timestamp="20140623 15:02:27.365" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:27.365" starttime="20140623 15:02:27.189"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.380" starttime="20140623 15:02:27.378"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.383" starttime="20140623 15:02:27.381"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.386" starttime="20140623 15:02:27.384"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:27.402" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:27.403" starttime="20140623 15:02:27.398"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:27.403" starttime="20140623 15:02:27.395"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:27.404" starttime="20140623 15:02:27.387"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:27.405" starttime="20140623 15:02:27.367"></status>
</kw>
<msg timestamp="20140623 15:02:27.407" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:27.408" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:27.406" starttime="20140623 15:02:20.360"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.421" starttime="20140623 15:02:27.418"></status>
</kw>
<msg timestamp="20140623 15:02:27.422" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:27.422" starttime="20140623 15:02:27.409"></status>
</kw>
<msg timestamp="20140623 15:02:27.425" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:27.423" starttime="20140623 15:02:20.341"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140623 15:02:27.429" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:02:27.429" starttime="20140623 15:02:27.426"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140623 15:02:27.448" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140623 15:02:27.447" starttime="20140623 15:02:27.445"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:27.481" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:27.482" starttime="20140623 15:02:27.478"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:27.483" starttime="20140623 15:02:27.475"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:27.489" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:27.490" starttime="20140623 15:02:27.486"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:27.491" starttime="20140623 15:02:27.484"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:27.498" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:27.499" starttime="20140623 15:02:27.495"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:27.499" starttime="20140623 15:02:27.492"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:27.500" starttime="20140623 15:02:27.465"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:27.505" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:27.505" starttime="20140623 15:02:27.501"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.509" starttime="20140623 15:02:27.506"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.513" starttime="20140623 15:02:27.510"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.516" starttime="20140623 15:02:27.514"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.519" starttime="20140623 15:02:27.517"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.523" starttime="20140623 15:02:27.520"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.527" starttime="20140623 15:02:27.524"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:27.531" starttime="20140623 15:02:27.528"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:27.536" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140623 15:02:34.048" level="INFO">15:02:34,039 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
15:02:34,042 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:34.049" starttime="20140623 15:02:27.534"></status>
</kw>
<msg timestamp="20140623 15:02:34.052" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:34.052" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:34.051" starttime="20140623 15:02:27.532"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:34.071" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:34.070" starttime="20140623 15:02:34.065"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.075" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:34.074" starttime="20140623 15:02:34.072"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.078" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:34.078" starttime="20140623 15:02:34.076"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.085" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:34.086" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:34.087" starttime="20140623 15:02:34.082"></status>
</kw>
<msg timestamp="20140623 15:02:34.088" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:34.088" level="INFO">${return_log_entry} = 2014-06-23 15:02:34,042 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:34.087" starttime="20140623 15:02:34.080"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.099" starttime="20140623 15:02:34.097"></status>
</kw>
<msg timestamp="20140623 15:02:34.100" level="INFO">${return_log_entry} = 2014-06-23 15:02:34,042 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:34.100" starttime="20140623 15:02:34.090"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.111" starttime="20140623 15:02:34.109"></status>
</kw>
<msg timestamp="20140623 15:02:34.112" level="INFO">${return_log_entry} = 2014-06-23 15:02:34,042 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:34.112" starttime="20140623 15:02:34.101"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.124" starttime="20140623 15:02:34.121"></status>
</kw>
<msg timestamp="20140623 15:02:34.125" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:34.124" starttime="20140623 15:02:34.113"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.141" starttime="20140623 15:02:34.138"></status>
</kw>
<msg timestamp="20140623 15:02:34.142" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:34.141" starttime="20140623 15:02:34.126"></status>
</kw>
<msg timestamp="20140623 15:02:34.143" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:34.143" starttime="20140623 15:02:34.054"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:34.159" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140623 15:02:34.159" starttime="20140623 15:02:34.156"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.163" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:34.163" starttime="20140623 15:02:34.160"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.167" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:34.166" starttime="20140623 15:02:34.164"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.173" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:34.174" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:34.175" starttime="20140623 15:02:34.170"></status>
</kw>
<msg timestamp="20140623 15:02:34.176" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:34.176" level="INFO">${return_log_entry} = 2014-06-23 15:02:34,039 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:34.175" starttime="20140623 15:02:34.168"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.187" starttime="20140623 15:02:34.185"></status>
</kw>
<msg timestamp="20140623 15:02:34.188" level="INFO">${return_log_entry} = 2014-06-23 15:02:34,039 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:34.188" starttime="20140623 15:02:34.178"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.200" starttime="20140623 15:02:34.197"></status>
</kw>
<msg timestamp="20140623 15:02:34.201" level="INFO">${return_log_entry} = 2014-06-23 15:02:34,039 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:34.200" starttime="20140623 15:02:34.190"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.213" starttime="20140623 15:02:34.210"></status>
</kw>
<msg timestamp="20140623 15:02:34.214" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:34.213" starttime="20140623 15:02:34.202"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.230" starttime="20140623 15:02:34.227"></status>
</kw>
<msg timestamp="20140623 15:02:34.231" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:34.231" starttime="20140623 15:02:34.215"></status>
</kw>
<msg timestamp="20140623 15:02:34.233" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:34.232" starttime="20140623 15:02:34.145"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.247" starttime="20140623 15:02:34.245"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.249" starttime="20140623 15:02:34.248"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.252" starttime="20140623 15:02:34.250"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:34.266" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:34.267" starttime="20140623 15:02:34.262"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:34.267" starttime="20140623 15:02:34.260"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:34.268" starttime="20140623 15:02:34.253"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:34.269" starttime="20140623 15:02:34.234"></status>
</kw>
<msg timestamp="20140623 15:02:34.271" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:34.272" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:02:34.270" starttime="20140623 15:02:27.450"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.284" starttime="20140623 15:02:34.282"></status>
</kw>
<msg timestamp="20140623 15:02:34.285" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:34.285" starttime="20140623 15:02:34.273"></status>
</kw>
<msg timestamp="20140623 15:02:34.287" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:34.286" starttime="20140623 15:02:27.432"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140623 15:02:34.291" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:02:34.292" starttime="20140623 15:02:34.289"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:34.292" starttime="20140623 15:01:49.229"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Setup phone 1 subscriber accounts (only MainAccount shall have a credit) ******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.295" starttime="20140623 15:02:34.294"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'!='true'</arg>
<arg>CRCE Clear All Balances By Imsi</arg>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.303" starttime="20140623 15:02:34.296"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'!='true'</arg>
<arg>CRCE Set Main Balance By Imsi</arg>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>10000000</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.311" starttime="20140623 15:02:34.305"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Prepare 2 Testsubscribers for FAKING ******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.314" starttime="20140623 15:02:34.312"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'=='true'</arg>
<arg>Prepare Fake Subscribers</arg>
</arguments>
<kw type="kw" timeout="" name="suite-global-keyword-resource.Prepare Fake Subscribers">
<doc>cretes 2 test subscribers for faking calls (in development mode)</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create 2 test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.410" starttime="20140623 15:02:34.408"></status>
</kw>
<kw type="kw" timeout="" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<msg timestamp="20140623 15:02:34.413" level="INFO">${INITIAL_BALANCE} = 10000000</msg>
<status status="PASS" endtime="20140623 15:02:34.412" starttime="20140623 15:02:34.411"></status>
</kw>
<kw type="kw" timeout="" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.435" level="INFO">msg=crce_host=10.105.140.125</msg>
<status status="PASS" endtime="20140623 15:02:34.435" starttime="20140623 15:02:34.432"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.438" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20140623 15:02:34.439" starttime="20140623 15:02:34.436"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.442" level="INFO">msg=crce_webservicesBasePath=/</msg>
<status status="PASS" endtime="20140623 15:02:34.443" starttime="20140623 15:02:34.440"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.446" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20140623 15:02:34.446" starttime="20140623 15:02:34.444"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.450" level="INFO">msg=imsiRangeStart=530052041010000</msg>
<status status="PASS" endtime="20140623 15:02:34.450" starttime="20140623 15:02:34.447"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.453" level="INFO">msg=msisdnRangeStart=642041010000</msg>
<status status="PASS" endtime="20140623 15:02:34.454" starttime="20140623 15:02:34.451"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.457" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:34.457" starttime="20140623 15:02:34.455"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.461" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20140623 15:02:34.461" starttime="20140623 15:02:34.458"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.464" level="INFO">msg=tariffId=101003</msg>
<status status="PASS" endtime="20140623 15:02:34.465" starttime="20140623 15:02:34.462"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.468" level="INFO">msg=balance=10000000</msg>
<status status="PASS" endtime="20140623 15:02:34.468" starttime="20140623 15:02:34.466"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.486" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:34.487" starttime="20140623 15:02:34.483"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:34.488" starttime="20140623 15:02:34.481"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.494" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:34.495" starttime="20140623 15:02:34.491"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:34.495" starttime="20140623 15:02:34.489"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.501" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:34.502" starttime="20140623 15:02:34.499"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:34.503" starttime="20140623 15:02:34.497"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:34.503" starttime="20140623 15:02:34.472"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:34.508" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:34.508" starttime="20140623 15:02:34.504"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.512" starttime="20140623 15:02:34.509"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.516" starttime="20140623 15:02:34.513"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.520" starttime="20140623 15:02:34.517"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.522" starttime="20140623 15:02:34.521"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.525" starttime="20140623 15:02:34.523"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.529" starttime="20140623 15:02:34.526"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.533" starttime="20140623 15:02:34.530"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.536" starttime="20140623 15:02:34.534"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.540" starttime="20140623 15:02:34.538"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.544" starttime="20140623 15:02:34.541"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.548" starttime="20140623 15:02:34.545"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:34.552" starttime="20140623 15:02:34.549"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:34.557" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000']</msg>
<msg timestamp="20140623 15:02:36.938" level="INFO">15:02:36,930 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:36.939" starttime="20140623 15:02:34.555"></status>
</kw>
<msg timestamp="20140623 15:02:36.942" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:36.942" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:36.941" starttime="20140623 15:02:34.553"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:36.960" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:36.960" starttime="20140623 15:02:36.957"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:36.964" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:36.963" starttime="20140623 15:02:36.961"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:36.967" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:36.967" starttime="20140623 15:02:36.965"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:36.973" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:36.979" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:36.980" starttime="20140623 15:02:36.971"></status>
</kw>
<msg timestamp="20140623 15:02:36.981" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:36.982" level="INFO">${return_log_entry} = 2014-06-23 15:02:36,930 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:36.981" starttime="20140623 15:02:36.969"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:36.993" starttime="20140623 15:02:36.991"></status>
</kw>
<msg timestamp="20140623 15:02:36.995" level="INFO">${return_log_entry} = 2014-06-23 15:02:36,930 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:36.994" starttime="20140623 15:02:36.983"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.006" starttime="20140623 15:02:37.004"></status>
</kw>
<msg timestamp="20140623 15:02:37.009" level="INFO">${return_log_entry} = 2014-06-23 15:02:36,930 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:37.007" starttime="20140623 15:02:36.996"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.020" starttime="20140623 15:02:37.017"></status>
</kw>
<msg timestamp="20140623 15:02:37.021" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:37.021" starttime="20140623 15:02:37.010"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.037" starttime="20140623 15:02:37.035"></status>
</kw>
<msg timestamp="20140623 15:02:37.038" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:37.038" starttime="20140623 15:02:37.022"></status>
</kw>
<msg timestamp="20140623 15:02:37.041" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:37.039" starttime="20140623 15:02:36.945"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.054" starttime="20140623 15:02:37.053"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.057" starttime="20140623 15:02:37.055"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.059" starttime="20140623 15:02:37.058"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:37.077" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:37.078" starttime="20140623 15:02:37.069"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:37.079" starttime="20140623 15:02:37.067"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:37.080" starttime="20140623 15:02:37.060"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:37.080" starttime="20140623 15:02:37.042"></status>
</kw>
<msg timestamp="20140623 15:02:37.082" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20140623 15:02:37.081" starttime="20140623 15:02:34.417"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20140623 15:02:37.085" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:02:37.086" starttime="20140623 15:02:37.083"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_ATTACHED_ONNET_PHONE_1_IMSI} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.090" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_IMSI} = 530052041010000</msg>
<status status="PASS" endtime="20140623 15:02:37.089" starttime="20140623 15:02:37.087"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.094" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN} = 642041010000</msg>
<status status="PASS" endtime="20140623 15:02:37.093" starttime="20140623 15:02:37.091"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_DESTINATION_IMSI} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}+1</arg>
</arguments>
<msg timestamp="20140623 15:02:37.114" level="INFO">${FAKE_DESTINATION_IMSI} = 530052041010001</msg>
<status status="PASS" endtime="20140623 15:02:37.113" starttime="20140623 15:02:37.095"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_DESTINATION_MSISDN} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}+1</arg>
</arguments>
<msg timestamp="20140623 15:02:37.122" level="INFO">${FAKE_DESTINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140623 15:02:37.121" starttime="20140623 15:02:37.115"></status>
</kw>
<kw type="kw" timeout="" name="${FAKE_ORIGINATION_MSISDN} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FAKE_DESTINATION_MSISDN}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.126" level="INFO">${FAKE_ORIGINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140623 15:02:37.125" starttime="20140623 15:02:37.123"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Setup their acounts (only MainAccount shall have a credit) *******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.128" starttime="20140623 15:02:37.127"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances By Imsi">
<doc>Same as "CRCE Clear All Balances" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId *****</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.145" starttime="20140623 15:02:37.144"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.177" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:37.178" starttime="20140623 15:02:37.175"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:37.179" starttime="20140623 15:02:37.172"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.185" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:37.186" starttime="20140623 15:02:37.182"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:37.187" starttime="20140623 15:02:37.180"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.192" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:37.193" starttime="20140623 15:02:37.190"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:37.194" starttime="20140623 15:02:37.188"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:37.194" starttime="20140623 15:02:37.163"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.199" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:37.199" starttime="20140623 15:02:37.195"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.203" starttime="20140623 15:02:37.200"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.207" starttime="20140623 15:02:37.205"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.212" starttime="20140623 15:02:37.208"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.215" starttime="20140623 15:02:37.213"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.218" starttime="20140623 15:02:37.216"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.222" starttime="20140623 15:02:37.219"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:37.226" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000']</msg>
<msg timestamp="20140623 15:02:37.682" level="INFO">15:02:37,638 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
15:02:37,644 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
15:02:37,649 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15310
15:02:37,655 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000
15:02:37,660 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
15:02:37,665 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
15:02:37,671 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
15:02:37,676 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140623 15:02:37.684" starttime="20140623 15:02:37.225"></status>
</kw>
<msg timestamp="20140623 15:02:37.686" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:37.687" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:37.685" starttime="20140623 15:02:37.223"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:37.715" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:37.714" starttime="20140623 15:02:37.708"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.720" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:37.719" starttime="20140623 15:02:37.716"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.725" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:37.725" starttime="20140623 15:02:37.722"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.732" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:37.740" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:37.741" starttime="20140623 15:02:37.729"></status>
</kw>
<msg timestamp="20140623 15:02:37.742" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:37.742" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,638 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:37.741" starttime="20140623 15:02:37.727"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.753" starttime="20140623 15:02:37.751"></status>
</kw>
<msg timestamp="20140623 15:02:37.754" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,638 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:37.754" starttime="20140623 15:02:37.744"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.765" starttime="20140623 15:02:37.763"></status>
</kw>
<msg timestamp="20140623 15:02:37.767" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,638 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:37.766" starttime="20140623 15:02:37.756"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.778" starttime="20140623 15:02:37.775"></status>
</kw>
<msg timestamp="20140623 15:02:37.779" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:37.779" starttime="20140623 15:02:37.768"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.795" starttime="20140623 15:02:37.793"></status>
</kw>
<msg timestamp="20140623 15:02:37.797" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:37.796" starttime="20140623 15:02:37.780"></status>
</kw>
<msg timestamp="20140623 15:02:37.798" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:37.798" starttime="20140623 15:02:37.690"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:37.815" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140623 15:02:37.814" starttime="20140623 15:02:37.811"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.819" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:37.818" starttime="20140623 15:02:37.816"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.822" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:37.822" starttime="20140623 15:02:37.820"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.828" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:37.835" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:37.836" starttime="20140623 15:02:37.825"></status>
</kw>
<msg timestamp="20140623 15:02:37.837" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:37.838" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,644 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140623 15:02:37.837" starttime="20140623 15:02:37.823"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.849" starttime="20140623 15:02:37.846"></status>
</kw>
<msg timestamp="20140623 15:02:37.850" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,644 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140623 15:02:37.849" starttime="20140623 15:02:37.839"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.861" starttime="20140623 15:02:37.859"></status>
</kw>
<msg timestamp="20140623 15:02:37.862" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,644 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140623 15:02:37.862" starttime="20140623 15:02:37.851"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.874" starttime="20140623 15:02:37.871"></status>
</kw>
<msg timestamp="20140623 15:02:37.875" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140623 15:02:37.875" starttime="20140623 15:02:37.864"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.892" starttime="20140623 15:02:37.889"></status>
</kw>
<msg timestamp="20140623 15:02:37.893" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140623 15:02:37.892" starttime="20140623 15:02:37.877"></status>
</kw>
<msg timestamp="20140623 15:02:37.894" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140623 15:02:37.894" starttime="20140623 15:02:37.800"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:37.911" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140623 15:02:37.910" starttime="20140623 15:02:37.907"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.914" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:37.914" starttime="20140623 15:02:37.912"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.918" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:37.918" starttime="20140623 15:02:37.916"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:37.924" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:37.931" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:37.932" starttime="20140623 15:02:37.922"></status>
</kw>
<msg timestamp="20140623 15:02:37.933" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:37.933" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,655 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140623 15:02:37.932" starttime="20140623 15:02:37.920"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:37.944" starttime="20140623 15:02:37.942"></status>
</kw>
<msg timestamp="20140623 15:02:37.946" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,655 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140623 15:02:37.945" starttime="20140623 15:02:37.935"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.055" starttime="20140623 15:02:38.051"></status>
</kw>
<msg timestamp="20140623 15:02:38.057" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,655 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140623 15:02:38.056" starttime="20140623 15:02:37.947"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.069" starttime="20140623 15:02:38.066"></status>
</kw>
<msg timestamp="20140623 15:02:38.070" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140623 15:02:38.069" starttime="20140623 15:02:38.058"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.086" starttime="20140623 15:02:38.083"></status>
</kw>
<msg timestamp="20140623 15:02:38.087" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140623 15:02:38.087" starttime="20140623 15:02:38.071"></status>
</kw>
<msg timestamp="20140623 15:02:38.089" level="INFO">${msisdn} = 642041010000</msg>
<status status="PASS" endtime="20140623 15:02:38.088" starttime="20140623 15:02:37.896"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:38.106" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140623 15:02:38.106" starttime="20140623 15:02:38.103"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.110" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:38.109" starttime="20140623 15:02:38.107"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.113" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:38.113" starttime="20140623 15:02:38.111"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.119" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:38.126" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:38.126" starttime="20140623 15:02:38.117"></status>
</kw>
<msg timestamp="20140623 15:02:38.128" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:38.128" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,649 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15310</msg>
<status status="PASS" endtime="20140623 15:02:38.127" starttime="20140623 15:02:38.115"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.139" starttime="20140623 15:02:38.136"></status>
</kw>
<msg timestamp="20140623 15:02:38.140" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,649 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15310</msg>
<status status="PASS" endtime="20140623 15:02:38.139" starttime="20140623 15:02:38.129"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.151" starttime="20140623 15:02:38.148"></status>
</kw>
<msg timestamp="20140623 15:02:38.152" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,649 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15310</msg>
<status status="PASS" endtime="20140623 15:02:38.151" starttime="20140623 15:02:38.141"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.164" starttime="20140623 15:02:38.161"></status>
</kw>
<msg timestamp="20140623 15:02:38.165" level="INFO">${resultCode} = 15310</msg>
<status status="PASS" endtime="20140623 15:02:38.164" starttime="20140623 15:02:38.153"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.182" starttime="20140623 15:02:38.179"></status>
</kw>
<msg timestamp="20140623 15:02:38.183" level="INFO">${resultCode} = 15310</msg>
<status status="PASS" endtime="20140623 15:02:38.183" starttime="20140623 15:02:38.166"></status>
</kw>
<msg timestamp="20140623 15:02:38.185" level="INFO">${id} = 15310</msg>
<status status="PASS" endtime="20140623 15:02:38.184" starttime="20140623 15:02:38.092"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:38.199" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140623 15:02:38.199" starttime="20140623 15:02:38.196"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.203" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:38.202" starttime="20140623 15:02:38.200"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.206" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:38.206" starttime="20140623 15:02:38.204"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.212" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:38.219" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:38.219" starttime="20140623 15:02:38.210"></status>
</kw>
<msg timestamp="20140623 15:02:38.221" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:38.221" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,660 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:38.220" starttime="20140623 15:02:38.207"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.231" starttime="20140623 15:02:38.229"></status>
</kw>
<msg timestamp="20140623 15:02:38.232" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,660 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:38.232" starttime="20140623 15:02:38.222"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.243" starttime="20140623 15:02:38.241"></status>
</kw>
<msg timestamp="20140623 15:02:38.245" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,660 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:38.244" starttime="20140623 15:02:38.234"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.256" starttime="20140623 15:02:38.254"></status>
</kw>
<msg timestamp="20140623 15:02:38.258" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:38.257" starttime="20140623 15:02:38.246"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.273" starttime="20140623 15:02:38.271"></status>
</kw>
<msg timestamp="20140623 15:02:38.274" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:38.273" starttime="20140623 15:02:38.259"></status>
</kw>
<msg timestamp="20140623 15:02:38.275" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:38.275" starttime="20140623 15:02:38.187"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:38.289" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140623 15:02:38.289" starttime="20140623 15:02:38.286"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.293" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:38.292" starttime="20140623 15:02:38.290"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.296" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:38.296" starttime="20140623 15:02:38.294"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.302" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:38.309" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:38.309" starttime="20140623 15:02:38.300"></status>
</kw>
<msg timestamp="20140623 15:02:38.311" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:38.311" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,665 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140623 15:02:38.310" starttime="20140623 15:02:38.298"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.321" starttime="20140623 15:02:38.319"></status>
</kw>
<msg timestamp="20140623 15:02:38.322" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,665 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140623 15:02:38.322" starttime="20140623 15:02:38.312"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.333" starttime="20140623 15:02:38.331"></status>
</kw>
<msg timestamp="20140623 15:02:38.334" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,665 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140623 15:02:38.334" starttime="20140623 15:02:38.323"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.346" starttime="20140623 15:02:38.343"></status>
</kw>
<msg timestamp="20140623 15:02:38.347" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140623 15:02:38.346" starttime="20140623 15:02:38.335"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.362" starttime="20140623 15:02:38.360"></status>
</kw>
<msg timestamp="20140623 15:02:38.363" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140623 15:02:38.363" starttime="20140623 15:02:38.348"></status>
</kw>
<msg timestamp="20140623 15:02:38.365" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140623 15:02:38.364" starttime="20140623 15:02:38.277"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:38.379" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140623 15:02:38.378" starttime="20140623 15:02:38.376"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.382" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:38.382" starttime="20140623 15:02:38.380"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.386" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:38.385" starttime="20140623 15:02:38.383"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.392" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:38.398" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:38.399" starttime="20140623 15:02:38.389"></status>
</kw>
<msg timestamp="20140623 15:02:38.400" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:38.400" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,671 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:38.399" starttime="20140623 15:02:38.387"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.411" starttime="20140623 15:02:38.408"></status>
</kw>
<msg timestamp="20140623 15:02:38.412" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,671 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:38.411" starttime="20140623 15:02:38.401"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.422" starttime="20140623 15:02:38.420"></status>
</kw>
<msg timestamp="20140623 15:02:38.424" level="INFO">${return_log_entry} = 2014-06-23 15:02:37,671 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:38.423" starttime="20140623 15:02:38.413"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.435" starttime="20140623 15:02:38.432"></status>
</kw>
<msg timestamp="20140623 15:02:38.436" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:38.436" starttime="20140623 15:02:38.425"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.451" starttime="20140623 15:02:38.449"></status>
</kw>
<msg timestamp="20140623 15:02:38.453" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:38.452" starttime="20140623 15:02:38.437"></status>
</kw>
<msg timestamp="20140623 15:02:38.454" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:38.454" starttime="20140623 15:02:38.367"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.465" starttime="20140623 15:02:38.464"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.468" starttime="20140623 15:02:38.466"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.470" starttime="20140623 15:02:38.469"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:38.489" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:38.490" starttime="20140623 15:02:38.480"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:38.490" starttime="20140623 15:02:38.478"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:38.491" starttime="20140623 15:02:38.471"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:38.491" starttime="20140623 15:02:38.456"></status>
</kw>
<msg timestamp="20140623 15:02:38.498" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:38.499" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140623 15:02:38.499" level="INFO">${msisdnDummy} = 642041010000</msg>
<msg timestamp="20140623 15:02:38.500" level="INFO">${subscriberId} = 15310</msg>
<msg timestamp="20140623 15:02:38.500" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140623 15:02:38.501" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140623 15:02:38.501" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:38.497" starttime="20140623 15:02:37.149"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.508" starttime="20140623 15:02:38.502"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Clear All Balances" *****</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.511" starttime="20140623 15:02:38.509"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances">
<doc>Sets passed subscribers balance of all accounts to zero</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve all accountIds ***</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.524" starttime="20140623 15:02:38.522"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, @{accountIds} = subscriber-admin-support-resource.CRCE Get Accounts">
<doc>This is a delegator to the CRCE webservice operation getAccounts and returnes the list of the subscriber's acountIds</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.551" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:38.551" starttime="20140623 15:02:38.548"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:38.552" starttime="20140623 15:02:38.546"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.558" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:38.559" starttime="20140623 15:02:38.555"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:38.559" starttime="20140623 15:02:38.553"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.565" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:38.566" starttime="20140623 15:02:38.563"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:38.567" starttime="20140623 15:02:38.560"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:38.568" starttime="20140623 15:02:38.538"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:38.572" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:38.572" starttime="20140623 15:02:38.569"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.576" starttime="20140623 15:02:38.573"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.580" starttime="20140623 15:02:38.577"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.584" starttime="20140623 15:02:38.581"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.586" starttime="20140623 15:02:38.585"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getAccounts</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.589" starttime="20140623 15:02:38.587"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getAccounts.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:38.593" starttime="20140623 15:02:38.590"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:38.598" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310']</msg>
<msg timestamp="20140623 15:02:39.370" level="INFO">15:02:39,359 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK
15:02:39,363 INFO  [log] LowLevelOps.getAccounts.output.accountIds=15311;15314;15313;15312</msg>
<status status="PASS" endtime="20140623 15:02:39.372" starttime="20140623 15:02:38.596"></status>
</kw>
<msg timestamp="20140623 15:02:39.375" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:39.375" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:39.373" starttime="20140623 15:02:38.594"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:39.390" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:39.389" starttime="20140623 15:02:39.386"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:39.393" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:39.393" starttime="20140623 15:02:39.391"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:39.397" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:39.397" starttime="20140623 15:02:39.394"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:39.403" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:39.408" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:39.409" starttime="20140623 15:02:39.400"></status>
</kw>
<msg timestamp="20140623 15:02:39.410" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:39.411" level="INFO">${return_log_entry} = 2014-06-23 15:02:39,359 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:39.410" starttime="20140623 15:02:39.398"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.421" starttime="20140623 15:02:39.419"></status>
</kw>
<msg timestamp="20140623 15:02:39.423" level="INFO">${return_log_entry} = 2014-06-23 15:02:39,359 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:39.422" starttime="20140623 15:02:39.412"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.433" starttime="20140623 15:02:39.431"></status>
</kw>
<msg timestamp="20140623 15:02:39.434" level="INFO">${return_log_entry} = 2014-06-23 15:02:39,359 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:39.434" starttime="20140623 15:02:39.424"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.445" starttime="20140623 15:02:39.443"></status>
</kw>
<msg timestamp="20140623 15:02:39.446" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:39.446" starttime="20140623 15:02:39.435"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.462" starttime="20140623 15:02:39.459"></status>
</kw>
<msg timestamp="20140623 15:02:39.463" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:39.462" starttime="20140623 15:02:39.447"></status>
</kw>
<msg timestamp="20140623 15:02:39.464" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:39.464" starttime="20140623 15:02:39.378"></status>
</kw>
<kw type="kw" timeout="" name="${csvAccountIds} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.accountIds</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:39.477" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.accountIds=</msg>
<status status="PASS" endtime="20140623 15:02:39.477" starttime="20140623 15:02:39.474"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:39.481" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:39.480" starttime="20140623 15:02:39.478"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:39.484" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:39.484" starttime="20140623 15:02:39.482"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:39.490" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:39.495" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:39.496" starttime="20140623 15:02:39.487"></status>
</kw>
<msg timestamp="20140623 15:02:39.497" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:39.497" level="INFO">${return_log_entry} = 2014-06-23 15:02:39,363 INFO  [log] LowLevelOps.getAccounts.output.accountIds=15311;15314;15313;15312</msg>
<status status="PASS" endtime="20140623 15:02:39.496" starttime="20140623 15:02:39.485"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.508" starttime="20140623 15:02:39.506"></status>
</kw>
<msg timestamp="20140623 15:02:39.509" level="INFO">${return_log_entry} = 2014-06-23 15:02:39,363 INFO  [log] LowLevelOps.getAccounts.output.accountIds=15311;15314;15313;15312</msg>
<status status="PASS" endtime="20140623 15:02:39.508" starttime="20140623 15:02:39.499"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.519" starttime="20140623 15:02:39.517"></status>
</kw>
<msg timestamp="20140623 15:02:39.521" level="INFO">${return_log_entry} = 2014-06-23 15:02:39,363 INFO  [log] LowLevelOps.getAccounts.output.accountIds=15311;15314;15313;15312</msg>
<status status="PASS" endtime="20140623 15:02:39.520" starttime="20140623 15:02:39.510"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.532" starttime="20140623 15:02:39.529"></status>
</kw>
<msg timestamp="20140623 15:02:39.533" level="INFO">${resultCode} = 15311;15314;15313;15312</msg>
<status status="PASS" endtime="20140623 15:02:39.532" starttime="20140623 15:02:39.522"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.548" starttime="20140623 15:02:39.546"></status>
</kw>
<msg timestamp="20140623 15:02:39.549" level="INFO">${resultCode} = 15311;15314;15313;15312</msg>
<status status="PASS" endtime="20140623 15:02:39.549" starttime="20140623 15:02:39.534"></status>
</kw>
<msg timestamp="20140623 15:02:39.551" level="INFO">${csvAccountIds} = 15311;15314;15313;15312</msg>
<status status="PASS" endtime="20140623 15:02:39.550" starttime="20140623 15:02:39.466"></status>
</kw>
<kw type="kw" timeout="" name="@{accountIds} = String.Split String">
<doc>Splits the `string` using `separator` as a delimiter string.</doc>
<arguments>
<arg>${csvAccountIds}</arg>
<arg>;</arg>
</arguments>
<msg timestamp="20140623 15:02:39.555" level="INFO">@{accountIds} = [ 15311 | 15314 | 15313 | 15312 ]</msg>
<status status="PASS" endtime="20140623 15:02:39.554" starttime="20140623 15:02:39.552"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetAccounts</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.566" starttime="20140623 15:02:39.564"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.568" starttime="20140623 15:02:39.567"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.570" starttime="20140623 15:02:39.569"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:39.587" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetAccounts*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetAccounts*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:39.588" starttime="20140623 15:02:39.580"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:39.589" starttime="20140623 15:02:39.578"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:39.589" starttime="20140623 15:02:39.571"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:39.590" starttime="20140623 15:02:39.556"></status>
</kw>
<msg timestamp="20140623 15:02:39.593" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:39.594" level="INFO">@{accountIds} = [ 15311 | 15314 | 15313 | 15312 ]</msg>
<status status="PASS" endtime="20140623 15:02:39.592" starttime="20140623 15:02:38.526"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying accounts of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.601" starttime="20140623 15:02:39.595"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Clear each account balance ***</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.603" starttime="20140623 15:02:39.602"></status>
</kw>
<kw type="for" timeout="" name="${accountId} IN [ @{accountIds} ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" timeout="" name="${accountId} = 15311">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140623 15:02:39.621" level="INFO">CRCE Set Balance( subscriberId=15310, accountId=15311, balance=0)</msg>
<status status="PASS" endtime="20140623 15:02:39.622" starttime="20140623 15:02:39.618"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:39.637" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:39.638" starttime="20140623 15:02:39.634"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:39.638" starttime="20140623 15:02:39.632"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:39.644" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:39.645" starttime="20140623 15:02:39.641"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:39.646" starttime="20140623 15:02:39.640"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:39.651" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:39.652" starttime="20140623 15:02:39.648"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:39.653" starttime="20140623 15:02:39.647"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:39.653" starttime="20140623 15:02:39.625"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:39.659" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:39.659" starttime="20140623 15:02:39.654"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.663" starttime="20140623 15:02:39.660"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.667" starttime="20140623 15:02:39.664"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.671" starttime="20140623 15:02:39.668"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.674" starttime="20140623 15:02:39.672"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.677" starttime="20140623 15:02:39.675"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.681" starttime="20140623 15:02:39.678"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.685" starttime="20140623 15:02:39.682"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:39.689" starttime="20140623 15:02:39.686"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:39.693" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140623 15:02:39.977" level="INFO">15:02:39,972 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:39.978" starttime="20140623 15:02:39.692"></status>
</kw>
<msg timestamp="20140623 15:02:39.979" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:39.980" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:39.979" starttime="20140623 15:02:39.690"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:39.993" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:39.992" starttime="20140623 15:02:39.989"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:39.996" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:39.996" starttime="20140623 15:02:39.994"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:40.000" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:39.999" starttime="20140623 15:02:39.997"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:40.006" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:40.013" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:40.014" starttime="20140623 15:02:40.003"></status>
</kw>
<msg timestamp="20140623 15:02:40.015" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:40.015" level="INFO">${return_log_entry} = 2014-06-23 15:02:39,972 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:40.014" starttime="20140623 15:02:40.001"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.026" starttime="20140623 15:02:40.023"></status>
</kw>
<msg timestamp="20140623 15:02:40.027" level="INFO">${return_log_entry} = 2014-06-23 15:02:39,972 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:40.027" starttime="20140623 15:02:40.016"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.038" starttime="20140623 15:02:40.036"></status>
</kw>
<msg timestamp="20140623 15:02:40.040" level="INFO">${return_log_entry} = 2014-06-23 15:02:39,972 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:40.039" starttime="20140623 15:02:40.029"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.051" starttime="20140623 15:02:40.048"></status>
</kw>
<msg timestamp="20140623 15:02:40.053" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:40.052" starttime="20140623 15:02:40.041"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.069" starttime="20140623 15:02:40.067"></status>
</kw>
<msg timestamp="20140623 15:02:40.070" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:40.069" starttime="20140623 15:02:40.054"></status>
</kw>
<msg timestamp="20140623 15:02:40.072" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:40.071" starttime="20140623 15:02:39.981"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.083" starttime="20140623 15:02:40.082"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.086" starttime="20140623 15:02:40.084"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.088" starttime="20140623 15:02:40.087"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:40.106" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:40.107" starttime="20140623 15:02:40.099"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.108" starttime="20140623 15:02:40.097"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.108" starttime="20140623 15:02:40.089"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.109" starttime="20140623 15:02:40.074"></status>
</kw>
<msg timestamp="20140623 15:02:40.111" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:40.110" starttime="20140623 15:02:39.608"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.118" starttime="20140623 15:02:40.112"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.119" starttime="20140623 15:02:39.605"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 15314">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140623 15:02:40.136" level="INFO">CRCE Set Balance( subscriberId=15310, accountId=15314, balance=0)</msg>
<status status="PASS" endtime="20140623 15:02:40.137" starttime="20140623 15:02:40.133"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:40.226" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:40.227" starttime="20140623 15:02:40.223"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.228" starttime="20140623 15:02:40.221"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:40.233" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:40.234" starttime="20140623 15:02:40.231"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.235" starttime="20140623 15:02:40.229"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:40.241" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:40.242" starttime="20140623 15:02:40.238"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.243" starttime="20140623 15:02:40.236"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.243" starttime="20140623 15:02:40.140"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:40.248" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:40.248" starttime="20140623 15:02:40.244"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.252" starttime="20140623 15:02:40.249"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.256" starttime="20140623 15:02:40.253"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.260" starttime="20140623 15:02:40.257"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.263" starttime="20140623 15:02:40.261"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.265" starttime="20140623 15:02:40.264"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.269" starttime="20140623 15:02:40.266"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.273" starttime="20140623 15:02:40.270"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.277" starttime="20140623 15:02:40.274"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:40.281" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140623 15:02:40.621" level="INFO">15:02:40,613 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:40.623" starttime="20140623 15:02:40.280"></status>
</kw>
<msg timestamp="20140623 15:02:40.625" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:40.625" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:40.624" starttime="20140623 15:02:40.278"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:40.640" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:40.640" starttime="20140623 15:02:40.637"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:40.644" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:40.643" starttime="20140623 15:02:40.641"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:40.647" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:40.647" starttime="20140623 15:02:40.645"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:40.653" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:40.654" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:40.655" starttime="20140623 15:02:40.650"></status>
</kw>
<msg timestamp="20140623 15:02:40.656" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:40.656" level="INFO">${return_log_entry} = 2014-06-23 15:02:40,613 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:40.655" starttime="20140623 15:02:40.648"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.667" starttime="20140623 15:02:40.665"></status>
</kw>
<msg timestamp="20140623 15:02:40.668" level="INFO">${return_log_entry} = 2014-06-23 15:02:40,613 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:40.668" starttime="20140623 15:02:40.657"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.679" starttime="20140623 15:02:40.677"></status>
</kw>
<msg timestamp="20140623 15:02:40.680" level="INFO">${return_log_entry} = 2014-06-23 15:02:40,613 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:40.679" starttime="20140623 15:02:40.669"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.691" starttime="20140623 15:02:40.688"></status>
</kw>
<msg timestamp="20140623 15:02:40.692" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:40.692" starttime="20140623 15:02:40.681"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.708" starttime="20140623 15:02:40.706"></status>
</kw>
<msg timestamp="20140623 15:02:40.709" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:40.708" starttime="20140623 15:02:40.693"></status>
</kw>
<msg timestamp="20140623 15:02:40.710" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:40.710" starttime="20140623 15:02:40.627"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.721" starttime="20140623 15:02:40.720"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.724" starttime="20140623 15:02:40.722"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.726" starttime="20140623 15:02:40.724"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:40.748" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:40.749" starttime="20140623 15:02:40.742"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.750" starttime="20140623 15:02:40.739"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.751" starttime="20140623 15:02:40.728"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.752" starttime="20140623 15:02:40.712"></status>
</kw>
<msg timestamp="20140623 15:02:40.754" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:40.754" starttime="20140623 15:02:40.123"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.765" starttime="20140623 15:02:40.756"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.766" starttime="20140623 15:02:40.120"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 15313">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140623 15:02:40.792" level="INFO">CRCE Set Balance( subscriberId=15310, accountId=15313, balance=0)</msg>
<status status="PASS" endtime="20140623 15:02:40.793" starttime="20140623 15:02:40.787"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:40.816" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:40.817" starttime="20140623 15:02:40.812"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.818" starttime="20140623 15:02:40.809"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:40.826" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:40.827" starttime="20140623 15:02:40.822"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.828" starttime="20140623 15:02:40.820"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:40.836" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:40.837" starttime="20140623 15:02:40.832"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.838" starttime="20140623 15:02:40.830"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:40.839" starttime="20140623 15:02:40.798"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:40.846" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:40.846" starttime="20140623 15:02:40.840"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.852" starttime="20140623 15:02:40.848"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.858" starttime="20140623 15:02:40.854"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.865" starttime="20140623 15:02:40.860"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.869" starttime="20140623 15:02:40.867"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.873" starttime="20140623 15:02:40.871"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.879" starttime="20140623 15:02:40.875"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.885" starttime="20140623 15:02:40.881"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:40.891" starttime="20140623 15:02:40.887"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:40.898" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140623 15:02:41.229" level="INFO">15:02:41,223 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:41.230" starttime="20140623 15:02:40.896"></status>
</kw>
<msg timestamp="20140623 15:02:41.233" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:41.233" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:41.231" starttime="20140623 15:02:40.893"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:41.247" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:41.247" starttime="20140623 15:02:41.243"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:41.251" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:41.250" starttime="20140623 15:02:41.248"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:41.254" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:41.254" starttime="20140623 15:02:41.252"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:41.260" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:41.261" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:41.262" starttime="20140623 15:02:41.257"></status>
</kw>
<msg timestamp="20140623 15:02:41.263" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:41.263" level="INFO">${return_log_entry} = 2014-06-23 15:02:41,223 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:41.262" starttime="20140623 15:02:41.255"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.273" starttime="20140623 15:02:41.271"></status>
</kw>
<msg timestamp="20140623 15:02:41.274" level="INFO">${return_log_entry} = 2014-06-23 15:02:41,223 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:41.274" starttime="20140623 15:02:41.264"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.285" starttime="20140623 15:02:41.283"></status>
</kw>
<msg timestamp="20140623 15:02:41.286" level="INFO">${return_log_entry} = 2014-06-23 15:02:41,223 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:41.286" starttime="20140623 15:02:41.276"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.297" starttime="20140623 15:02:41.295"></status>
</kw>
<msg timestamp="20140623 15:02:41.298" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:41.298" starttime="20140623 15:02:41.287"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.314" starttime="20140623 15:02:41.311"></status>
</kw>
<msg timestamp="20140623 15:02:41.315" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:41.314" starttime="20140623 15:02:41.299"></status>
</kw>
<msg timestamp="20140623 15:02:41.316" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:41.316" starttime="20140623 15:02:41.235"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.327" starttime="20140623 15:02:41.326"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.329" starttime="20140623 15:02:41.328"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.332" starttime="20140623 15:02:41.330"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:41.345" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:41.346" starttime="20140623 15:02:41.342"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.347" starttime="20140623 15:02:41.340"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.348" starttime="20140623 15:02:41.333"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.348" starttime="20140623 15:02:41.318"></status>
</kw>
<msg timestamp="20140623 15:02:41.350" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:41.349" starttime="20140623 15:02:40.771"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.357" starttime="20140623 15:02:41.351"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.358" starttime="20140623 15:02:40.766"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 15312">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140623 15:02:41.375" level="INFO">CRCE Set Balance( subscriberId=15310, accountId=15312, balance=0)</msg>
<status status="PASS" endtime="20140623 15:02:41.376" starttime="20140623 15:02:41.372"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:41.391" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:41.392" starttime="20140623 15:02:41.388"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.393" starttime="20140623 15:02:41.386"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:41.453" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:41.454" starttime="20140623 15:02:41.447"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.455" starttime="20140623 15:02:41.394"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:41.460" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:41.461" starttime="20140623 15:02:41.458"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.462" starttime="20140623 15:02:41.456"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.462" starttime="20140623 15:02:41.379"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:41.467" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:41.467" starttime="20140623 15:02:41.463"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.471" starttime="20140623 15:02:41.468"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.475" starttime="20140623 15:02:41.472"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.479" starttime="20140623 15:02:41.476"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.481" starttime="20140623 15:02:41.480"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.484" starttime="20140623 15:02:41.482"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.487" starttime="20140623 15:02:41.485"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.492" starttime="20140623 15:02:41.489"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.496" starttime="20140623 15:02:41.493"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:41.501" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140623 15:02:41.792" level="INFO">15:02:41,783 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:41.793" starttime="20140623 15:02:41.499"></status>
</kw>
<msg timestamp="20140623 15:02:41.794" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:41.794" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:41.793" starttime="20140623 15:02:41.497"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:41.810" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:41.809" starttime="20140623 15:02:41.806"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:41.813" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:41.813" starttime="20140623 15:02:41.811"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:41.817" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:41.816" starttime="20140623 15:02:41.815"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:41.823" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:41.824" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:41.825" starttime="20140623 15:02:41.820"></status>
</kw>
<msg timestamp="20140623 15:02:41.826" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:41.826" level="INFO">${return_log_entry} = 2014-06-23 15:02:41,783 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:41.825" starttime="20140623 15:02:41.818"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.838" starttime="20140623 15:02:41.835"></status>
</kw>
<msg timestamp="20140623 15:02:41.839" level="INFO">${return_log_entry} = 2014-06-23 15:02:41,783 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:41.838" starttime="20140623 15:02:41.827"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.850" starttime="20140623 15:02:41.848"></status>
</kw>
<msg timestamp="20140623 15:02:41.851" level="INFO">${return_log_entry} = 2014-06-23 15:02:41,783 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:41.851" starttime="20140623 15:02:41.840"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.863" starttime="20140623 15:02:41.860"></status>
</kw>
<msg timestamp="20140623 15:02:41.864" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:41.864" starttime="20140623 15:02:41.852"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.881" starttime="20140623 15:02:41.878"></status>
</kw>
<msg timestamp="20140623 15:02:41.882" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:41.881" starttime="20140623 15:02:41.865"></status>
</kw>
<msg timestamp="20140623 15:02:41.884" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:41.883" starttime="20140623 15:02:41.798"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.895" starttime="20140623 15:02:41.893"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.897" starttime="20140623 15:02:41.896"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.899" starttime="20140623 15:02:41.898"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:41.913" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:41.914" starttime="20140623 15:02:41.910"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.915" starttime="20140623 15:02:41.908"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.915" starttime="20140623 15:02:41.900"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.916" starttime="20140623 15:02:41.885"></status>
</kw>
<msg timestamp="20140623 15:02:41.917" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:41.916" starttime="20140623 15:02:41.362"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.924" starttime="20140623 15:02:41.918"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.925" starttime="20140623 15:02:41.359"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.925" starttime="20140623 15:02:39.604"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.926" starttime="20140623 15:02:38.513"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.927" starttime="20140623 15:02:37.130"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances By Imsi">
<doc>Same as "CRCE Clear All Balances" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_DESTINATION_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId *****</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.941" starttime="20140623 15:02:41.939"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:41.968" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:41.968" starttime="20140623 15:02:41.965"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.969" starttime="20140623 15:02:41.963"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:41.975" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:41.975" starttime="20140623 15:02:41.972"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.976" starttime="20140623 15:02:41.970"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:41.982" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:41.983" starttime="20140623 15:02:41.979"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.983" starttime="20140623 15:02:41.977"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:41.984" starttime="20140623 15:02:41.956"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:41.988" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:41.989" starttime="20140623 15:02:41.985"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.992" starttime="20140623 15:02:41.990"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:41.996" starttime="20140623 15:02:41.994"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.000" starttime="20140623 15:02:41.997"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.004" starttime="20140623 15:02:42.002"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.006" starttime="20140623 15:02:42.005"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.010" starttime="20140623 15:02:42.007"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:42.015" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001']</msg>
<msg timestamp="20140623 15:02:42.323" level="INFO">15:02:42,289 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
15:02:42,293 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
15:02:42,297 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15315
15:02:42,301 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001
15:02:42,305 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
15:02:42,309 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
15:02:42,313 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
15:02:42,316 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140623 15:02:42.324" starttime="20140623 15:02:42.013"></status>
</kw>
<msg timestamp="20140623 15:02:42.325" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:42.325" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:42.324" starttime="20140623 15:02:42.011"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:42.338" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:42.337" starttime="20140623 15:02:42.335"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.341" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:42.341" starttime="20140623 15:02:42.339"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.344" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:42.344" starttime="20140623 15:02:42.342"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.350" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:42.351" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:42.352" starttime="20140623 15:02:42.347"></status>
</kw>
<msg timestamp="20140623 15:02:42.353" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:42.353" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,289 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:42.352" starttime="20140623 15:02:42.346"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.363" starttime="20140623 15:02:42.361"></status>
</kw>
<msg timestamp="20140623 15:02:42.365" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,289 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:42.364" starttime="20140623 15:02:42.354"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.375" starttime="20140623 15:02:42.373"></status>
</kw>
<msg timestamp="20140623 15:02:42.376" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,289 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:42.376" starttime="20140623 15:02:42.366"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.387" starttime="20140623 15:02:42.385"></status>
</kw>
<msg timestamp="20140623 15:02:42.388" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:42.388" starttime="20140623 15:02:42.377"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.404" starttime="20140623 15:02:42.402"></status>
</kw>
<msg timestamp="20140623 15:02:42.405" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:42.404" starttime="20140623 15:02:42.389"></status>
</kw>
<msg timestamp="20140623 15:02:42.406" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:42.406" starttime="20140623 15:02:42.327"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:42.418" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140623 15:02:42.418" starttime="20140623 15:02:42.416"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.422" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:42.421" starttime="20140623 15:02:42.419"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.425" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:42.424" starttime="20140623 15:02:42.423"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.431" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:42.432" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:42.432" starttime="20140623 15:02:42.428"></status>
</kw>
<msg timestamp="20140623 15:02:42.433" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:42.434" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,293 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140623 15:02:42.433" starttime="20140623 15:02:42.426"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.444" starttime="20140623 15:02:42.441"></status>
</kw>
<msg timestamp="20140623 15:02:42.445" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,293 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140623 15:02:42.444" starttime="20140623 15:02:42.435"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.455" starttime="20140623 15:02:42.453"></status>
</kw>
<msg timestamp="20140623 15:02:42.457" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,293 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140623 15:02:42.456" starttime="20140623 15:02:42.446"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.467" starttime="20140623 15:02:42.465"></status>
</kw>
<msg timestamp="20140623 15:02:42.468" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140623 15:02:42.468" starttime="20140623 15:02:42.458"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.533" starttime="20140623 15:02:42.530"></status>
</kw>
<msg timestamp="20140623 15:02:42.534" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140623 15:02:42.534" starttime="20140623 15:02:42.469"></status>
</kw>
<msg timestamp="20140623 15:02:42.535" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140623 15:02:42.535" starttime="20140623 15:02:42.408"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:42.548" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140623 15:02:42.548" starttime="20140623 15:02:42.545"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.552" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:42.551" starttime="20140623 15:02:42.549"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.555" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:42.554" starttime="20140623 15:02:42.552"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.560" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:42.561" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:42.562" starttime="20140623 15:02:42.558"></status>
</kw>
<msg timestamp="20140623 15:02:42.563" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:42.563" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,301 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140623 15:02:42.562" starttime="20140623 15:02:42.556"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.573" starttime="20140623 15:02:42.571"></status>
</kw>
<msg timestamp="20140623 15:02:42.574" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,301 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140623 15:02:42.574" starttime="20140623 15:02:42.565"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.584" starttime="20140623 15:02:42.582"></status>
</kw>
<msg timestamp="20140623 15:02:42.586" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,301 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140623 15:02:42.585" starttime="20140623 15:02:42.575"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.596" starttime="20140623 15:02:42.594"></status>
</kw>
<msg timestamp="20140623 15:02:42.597" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140623 15:02:42.597" starttime="20140623 15:02:42.587"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.612" starttime="20140623 15:02:42.610"></status>
</kw>
<msg timestamp="20140623 15:02:42.613" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140623 15:02:42.613" starttime="20140623 15:02:42.598"></status>
</kw>
<msg timestamp="20140623 15:02:42.614" level="INFO">${msisdn} = 642041010001</msg>
<status status="PASS" endtime="20140623 15:02:42.614" starttime="20140623 15:02:42.538"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:42.627" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140623 15:02:42.626" starttime="20140623 15:02:42.624"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.630" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:42.629" starttime="20140623 15:02:42.628"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.633" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:42.633" starttime="20140623 15:02:42.631"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.638" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:42.640" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:42.640" starttime="20140623 15:02:42.636"></status>
</kw>
<msg timestamp="20140623 15:02:42.641" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:42.642" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,297 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15315</msg>
<status status="PASS" endtime="20140623 15:02:42.641" starttime="20140623 15:02:42.634"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.651" starttime="20140623 15:02:42.649"></status>
</kw>
<msg timestamp="20140623 15:02:42.652" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,297 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15315</msg>
<status status="PASS" endtime="20140623 15:02:42.652" starttime="20140623 15:02:42.643"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.662" starttime="20140623 15:02:42.660"></status>
</kw>
<msg timestamp="20140623 15:02:42.663" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,297 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15315</msg>
<status status="PASS" endtime="20140623 15:02:42.663" starttime="20140623 15:02:42.653"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.674" starttime="20140623 15:02:42.672"></status>
</kw>
<msg timestamp="20140623 15:02:42.675" level="INFO">${resultCode} = 15315</msg>
<status status="PASS" endtime="20140623 15:02:42.675" starttime="20140623 15:02:42.664"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.690" starttime="20140623 15:02:42.688"></status>
</kw>
<msg timestamp="20140623 15:02:42.691" level="INFO">${resultCode} = 15315</msg>
<status status="PASS" endtime="20140623 15:02:42.691" starttime="20140623 15:02:42.676"></status>
</kw>
<msg timestamp="20140623 15:02:42.692" level="INFO">${id} = 15315</msg>
<status status="PASS" endtime="20140623 15:02:42.692" starttime="20140623 15:02:42.616"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:42.705" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140623 15:02:42.705" starttime="20140623 15:02:42.702"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.708" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:42.708" starttime="20140623 15:02:42.706"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.712" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:42.711" starttime="20140623 15:02:42.709"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.717" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:42.718" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:42.719" starttime="20140623 15:02:42.715"></status>
</kw>
<msg timestamp="20140623 15:02:42.720" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:42.720" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,305 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:42.719" starttime="20140623 15:02:42.713"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.731" starttime="20140623 15:02:42.729"></status>
</kw>
<msg timestamp="20140623 15:02:42.732" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,305 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:42.731" starttime="20140623 15:02:42.721"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.742" starttime="20140623 15:02:42.740"></status>
</kw>
<msg timestamp="20140623 15:02:42.744" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,305 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:42.743" starttime="20140623 15:02:42.733"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.755" starttime="20140623 15:02:42.752"></status>
</kw>
<msg timestamp="20140623 15:02:42.756" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:42.756" starttime="20140623 15:02:42.745"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.771" starttime="20140623 15:02:42.769"></status>
</kw>
<msg timestamp="20140623 15:02:42.772" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:42.772" starttime="20140623 15:02:42.757"></status>
</kw>
<msg timestamp="20140623 15:02:42.774" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:42.773" starttime="20140623 15:02:42.694"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:42.786" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140623 15:02:42.786" starttime="20140623 15:02:42.783"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.790" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:42.789" starttime="20140623 15:02:42.787"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.793" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:42.793" starttime="20140623 15:02:42.791"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.799" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:42.800" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:42.801" starttime="20140623 15:02:42.796"></status>
</kw>
<msg timestamp="20140623 15:02:42.802" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:42.802" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,309 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140623 15:02:42.801" starttime="20140623 15:02:42.794"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.812" starttime="20140623 15:02:42.810"></status>
</kw>
<msg timestamp="20140623 15:02:42.814" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,309 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140623 15:02:42.813" starttime="20140623 15:02:42.803"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.825" starttime="20140623 15:02:42.823"></status>
</kw>
<msg timestamp="20140623 15:02:42.826" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,309 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140623 15:02:42.826" starttime="20140623 15:02:42.815"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.837" starttime="20140623 15:02:42.835"></status>
</kw>
<msg timestamp="20140623 15:02:42.838" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140623 15:02:42.838" starttime="20140623 15:02:42.827"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.854" starttime="20140623 15:02:42.852"></status>
</kw>
<msg timestamp="20140623 15:02:42.855" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140623 15:02:42.854" starttime="20140623 15:02:42.839"></status>
</kw>
<msg timestamp="20140623 15:02:42.856" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140623 15:02:42.856" starttime="20140623 15:02:42.775"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:42.869" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140623 15:02:42.869" starttime="20140623 15:02:42.866"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.873" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:42.872" starttime="20140623 15:02:42.870"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.876" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:42.875" starttime="20140623 15:02:42.874"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:42.881" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:42.883" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:42.883" starttime="20140623 15:02:42.879"></status>
</kw>
<msg timestamp="20140623 15:02:42.884" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:42.885" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,313 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:42.884" starttime="20140623 15:02:42.877"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.895" starttime="20140623 15:02:42.893"></status>
</kw>
<msg timestamp="20140623 15:02:42.896" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,313 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:42.895" starttime="20140623 15:02:42.886"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.906" starttime="20140623 15:02:42.904"></status>
</kw>
<msg timestamp="20140623 15:02:42.907" level="INFO">${return_log_entry} = 2014-06-23 15:02:42,313 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:42.907" starttime="20140623 15:02:42.897"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.918" starttime="20140623 15:02:42.916"></status>
</kw>
<msg timestamp="20140623 15:02:42.920" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:42.919" starttime="20140623 15:02:42.909"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.935" starttime="20140623 15:02:42.933"></status>
</kw>
<msg timestamp="20140623 15:02:42.936" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:42.936" starttime="20140623 15:02:42.921"></status>
</kw>
<msg timestamp="20140623 15:02:42.938" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:42.937" starttime="20140623 15:02:42.858"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.948" starttime="20140623 15:02:42.947"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.950" starttime="20140623 15:02:42.949"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.953" starttime="20140623 15:02:42.952"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:42.966" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:42.967" starttime="20140623 15:02:42.963"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:42.968" starttime="20140623 15:02:42.961"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:42.968" starttime="20140623 15:02:42.954"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:42.969" starttime="20140623 15:02:42.939"></status>
</kw>
<msg timestamp="20140623 15:02:42.973" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:42.973" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140623 15:02:42.974" level="INFO">${msisdnDummy} = 642041010001</msg>
<msg timestamp="20140623 15:02:42.974" level="INFO">${subscriberId} = 15315</msg>
<msg timestamp="20140623 15:02:42.974" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140623 15:02:42.975" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140623 15:02:42.975" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:42.971" starttime="20140623 15:02:41.944"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.982" starttime="20140623 15:02:42.976"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Clear All Balances" *****</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.984" starttime="20140623 15:02:42.983"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Clear All Balances">
<doc>Sets passed subscribers balance of all accounts to zero</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve all accountIds ***</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:42.997" starttime="20140623 15:02:42.995"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, @{accountIds} = subscriber-admin-support-resource.CRCE Get Accounts">
<doc>This is a delegator to the CRCE webservice operation getAccounts and returnes the list of the subscriber's acountIds</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:43.023" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:43.023" starttime="20140623 15:02:43.020"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:43.024" starttime="20140623 15:02:43.018"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:43.029" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:43.030" starttime="20140623 15:02:43.027"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:43.031" starttime="20140623 15:02:43.025"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:43.036" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:43.037" starttime="20140623 15:02:43.034"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:43.038" starttime="20140623 15:02:43.032"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:43.038" starttime="20140623 15:02:43.011"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:43.042" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:43.043" starttime="20140623 15:02:43.039"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.046" starttime="20140623 15:02:43.044"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.050" starttime="20140623 15:02:43.047"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.054" starttime="20140623 15:02:43.051"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.056" starttime="20140623 15:02:43.055"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getAccounts</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.058" starttime="20140623 15:02:43.057"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getAccounts.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.062" starttime="20140623 15:02:43.059"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:43.066" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315']</msg>
<msg timestamp="20140623 15:02:43.641" level="INFO">15:02:43,627 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK
15:02:43,632 INFO  [log] LowLevelOps.getAccounts.output.accountIds=15316;15319;15318;15317</msg>
<status status="PASS" endtime="20140623 15:02:43.642" starttime="20140623 15:02:43.065"></status>
</kw>
<msg timestamp="20140623 15:02:43.643" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:43.644" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:43.643" starttime="20140623 15:02:43.063"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:43.657" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:43.657" starttime="20140623 15:02:43.654"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:43.661" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:43.660" starttime="20140623 15:02:43.658"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:43.664" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:43.663" starttime="20140623 15:02:43.662"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:43.670" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:43.671" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:43.671" starttime="20140623 15:02:43.667"></status>
</kw>
<msg timestamp="20140623 15:02:43.673" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:43.673" level="INFO">${return_log_entry} = 2014-06-23 15:02:43,627 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:43.672" starttime="20140623 15:02:43.665"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.684" starttime="20140623 15:02:43.682"></status>
</kw>
<msg timestamp="20140623 15:02:43.685" level="INFO">${return_log_entry} = 2014-06-23 15:02:43,627 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:43.685" starttime="20140623 15:02:43.674"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.695" starttime="20140623 15:02:43.693"></status>
</kw>
<msg timestamp="20140623 15:02:43.697" level="INFO">${return_log_entry} = 2014-06-23 15:02:43,627 INFO  [log] LowLevelOps.getAccounts.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:43.696" starttime="20140623 15:02:43.686"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.708" starttime="20140623 15:02:43.705"></status>
</kw>
<msg timestamp="20140623 15:02:43.709" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:43.708" starttime="20140623 15:02:43.698"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.724" starttime="20140623 15:02:43.722"></status>
</kw>
<msg timestamp="20140623 15:02:43.725" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:43.725" starttime="20140623 15:02:43.710"></status>
</kw>
<msg timestamp="20140623 15:02:43.726" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:43.726" starttime="20140623 15:02:43.646"></status>
</kw>
<kw type="kw" timeout="" name="${csvAccountIds} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getAccounts.output.accountIds</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:43.739" level="INFO">${return_marker} = LowLevelOps.getAccounts.output.accountIds=</msg>
<status status="PASS" endtime="20140623 15:02:43.739" starttime="20140623 15:02:43.736"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:43.742" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:43.742" starttime="20140623 15:02:43.740"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:43.746" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:43.745" starttime="20140623 15:02:43.743"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:43.751" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:43.752" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:43.753" starttime="20140623 15:02:43.748"></status>
</kw>
<msg timestamp="20140623 15:02:43.754" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:43.754" level="INFO">${return_log_entry} = 2014-06-23 15:02:43,632 INFO  [log] LowLevelOps.getAccounts.output.accountIds=15316;15319;15318;15317</msg>
<status status="PASS" endtime="20140623 15:02:43.753" starttime="20140623 15:02:43.747"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.764" starttime="20140623 15:02:43.762"></status>
</kw>
<msg timestamp="20140623 15:02:43.765" level="INFO">${return_log_entry} = 2014-06-23 15:02:43,632 INFO  [log] LowLevelOps.getAccounts.output.accountIds=15316;15319;15318;15317</msg>
<status status="PASS" endtime="20140623 15:02:43.765" starttime="20140623 15:02:43.755"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.776" starttime="20140623 15:02:43.774"></status>
</kw>
<msg timestamp="20140623 15:02:43.777" level="INFO">${return_log_entry} = 2014-06-23 15:02:43,632 INFO  [log] LowLevelOps.getAccounts.output.accountIds=15316;15319;15318;15317</msg>
<status status="PASS" endtime="20140623 15:02:43.776" starttime="20140623 15:02:43.766"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.788" starttime="20140623 15:02:43.785"></status>
</kw>
<msg timestamp="20140623 15:02:43.789" level="INFO">${resultCode} = 15316;15319;15318;15317</msg>
<status status="PASS" endtime="20140623 15:02:43.789" starttime="20140623 15:02:43.778"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.805" starttime="20140623 15:02:43.802"></status>
</kw>
<msg timestamp="20140623 15:02:43.806" level="INFO">${resultCode} = 15316;15319;15318;15317</msg>
<status status="PASS" endtime="20140623 15:02:43.805" starttime="20140623 15:02:43.790"></status>
</kw>
<msg timestamp="20140623 15:02:43.807" level="INFO">${csvAccountIds} = 15316;15319;15318;15317</msg>
<status status="PASS" endtime="20140623 15:02:43.807" starttime="20140623 15:02:43.728"></status>
</kw>
<kw type="kw" timeout="" name="@{accountIds} = String.Split String">
<doc>Splits the `string` using `separator` as a delimiter string.</doc>
<arguments>
<arg>${csvAccountIds}</arg>
<arg>;</arg>
</arguments>
<msg timestamp="20140623 15:02:43.811" level="INFO">@{accountIds} = [ 15316 | 15319 | 15318 | 15317 ]</msg>
<status status="PASS" endtime="20140623 15:02:43.810" starttime="20140623 15:02:43.808"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetAccounts</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.821" starttime="20140623 15:02:43.820"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.824" starttime="20140623 15:02:43.822"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.826" starttime="20140623 15:02:43.824"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:43.839" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetAccounts*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetAccounts*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:43.840" starttime="20140623 15:02:43.836"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:43.840" starttime="20140623 15:02:43.834"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:43.841" starttime="20140623 15:02:43.827"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:43.841" starttime="20140623 15:02:43.812"></status>
</kw>
<msg timestamp="20140623 15:02:43.844" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:43.845" level="INFO">@{accountIds} = [ 15316 | 15319 | 15318 | 15317 ]</msg>
<status status="PASS" endtime="20140623 15:02:43.843" starttime="20140623 15:02:42.999"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying accounts of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.852" starttime="20140623 15:02:43.846"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Clear each account balance ***</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.854" starttime="20140623 15:02:43.853"></status>
</kw>
<kw type="for" timeout="" name="${accountId} IN [ @{accountIds} ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" timeout="" name="${accountId} = 15316">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140623 15:02:43.871" level="INFO">CRCE Set Balance( subscriberId=15315, accountId=15316, balance=0)</msg>
<status status="PASS" endtime="20140623 15:02:43.872" starttime="20140623 15:02:43.868"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:43.887" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:43.887" starttime="20140623 15:02:43.884"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:43.888" starttime="20140623 15:02:43.882"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:43.894" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:43.894" starttime="20140623 15:02:43.891"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:43.895" starttime="20140623 15:02:43.889"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:43.901" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:43.901" starttime="20140623 15:02:43.898"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:43.902" starttime="20140623 15:02:43.896"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:43.902" starttime="20140623 15:02:43.875"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:43.907" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:43.907" starttime="20140623 15:02:43.903"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.911" starttime="20140623 15:02:43.908"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.915" starttime="20140623 15:02:43.912"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.919" starttime="20140623 15:02:43.916"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.921" starttime="20140623 15:02:43.920"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.923" starttime="20140623 15:02:43.922"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.927" starttime="20140623 15:02:43.924"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.931" starttime="20140623 15:02:43.928"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:43.935" starttime="20140623 15:02:43.932"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:43.939" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140623 15:02:44.381" level="INFO">15:02:44,371 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:44.382" starttime="20140623 15:02:43.938"></status>
</kw>
<msg timestamp="20140623 15:02:44.387" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:44.387" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:44.385" starttime="20140623 15:02:43.936"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:44.406" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:44.405" starttime="20140623 15:02:44.402"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:44.411" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:44.411" starttime="20140623 15:02:44.408"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:44.416" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:44.415" starttime="20140623 15:02:44.413"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:44.425" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:44.427" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:44.428" starttime="20140623 15:02:44.421"></status>
</kw>
<msg timestamp="20140623 15:02:44.429" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:44.430" level="INFO">${return_log_entry} = 2014-06-23 15:02:44,371 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:44.428" starttime="20140623 15:02:44.418"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.446" starttime="20140623 15:02:44.443"></status>
</kw>
<msg timestamp="20140623 15:02:44.448" level="INFO">${return_log_entry} = 2014-06-23 15:02:44,371 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:44.447" starttime="20140623 15:02:44.432"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.465" starttime="20140623 15:02:44.461"></status>
</kw>
<msg timestamp="20140623 15:02:44.467" level="INFO">${return_log_entry} = 2014-06-23 15:02:44,371 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:44.466" starttime="20140623 15:02:44.450"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.486" starttime="20140623 15:02:44.481"></status>
</kw>
<msg timestamp="20140623 15:02:44.488" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:44.487" starttime="20140623 15:02:44.469"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.511" starttime="20140623 15:02:44.508"></status>
</kw>
<msg timestamp="20140623 15:02:44.513" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:44.512" starttime="20140623 15:02:44.489"></status>
</kw>
<msg timestamp="20140623 15:02:44.515" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:44.514" starttime="20140623 15:02:44.390"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.529" starttime="20140623 15:02:44.528"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.532" starttime="20140623 15:02:44.530"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.535" starttime="20140623 15:02:44.533"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:44.553" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:44.554" starttime="20140623 15:02:44.548"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:44.555" starttime="20140623 15:02:44.546"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:44.556" starttime="20140623 15:02:44.536"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:44.556" starttime="20140623 15:02:44.517"></status>
</kw>
<msg timestamp="20140623 15:02:44.560" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:44.558" starttime="20140623 15:02:43.858"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.569" starttime="20140623 15:02:44.561"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:44.569" starttime="20140623 15:02:43.855"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 15319">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140623 15:02:44.593" level="INFO">CRCE Set Balance( subscriberId=15315, accountId=15319, balance=0)</msg>
<status status="PASS" endtime="20140623 15:02:44.593" starttime="20140623 15:02:44.588"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:44.614" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:44.615" starttime="20140623 15:02:44.610"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:44.616" starttime="20140623 15:02:44.608"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:44.623" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:44.624" starttime="20140623 15:02:44.620"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:44.625" starttime="20140623 15:02:44.617"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:44.633" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:44.634" starttime="20140623 15:02:44.629"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:44.635" starttime="20140623 15:02:44.627"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:44.635" starttime="20140623 15:02:44.598"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:44.641" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:44.642" starttime="20140623 15:02:44.636"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.647" starttime="20140623 15:02:44.643"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.652" starttime="20140623 15:02:44.648"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.657" starttime="20140623 15:02:44.653"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.660" starttime="20140623 15:02:44.658"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.663" starttime="20140623 15:02:44.662"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.669" starttime="20140623 15:02:44.665"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.674" starttime="20140623 15:02:44.670"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:44.680" starttime="20140623 15:02:44.676"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:44.688" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140623 15:02:45.090" level="INFO">15:02:45,079 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:45.092" starttime="20140623 15:02:44.685"></status>
</kw>
<msg timestamp="20140623 15:02:45.094" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:45.095" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:45.093" starttime="20140623 15:02:44.682"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:45.114" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:45.113" starttime="20140623 15:02:45.109"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:45.120" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:45.119" starttime="20140623 15:02:45.115"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:45.124" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:45.123" starttime="20140623 15:02:45.121"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:45.131" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:45.132" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:45.133" starttime="20140623 15:02:45.128"></status>
</kw>
<msg timestamp="20140623 15:02:45.134" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:45.134" level="INFO">${return_log_entry} = 2014-06-23 15:02:45,079 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:45.133" starttime="20140623 15:02:45.126"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.144" starttime="20140623 15:02:45.142"></status>
</kw>
<msg timestamp="20140623 15:02:45.145" level="INFO">${return_log_entry} = 2014-06-23 15:02:45,079 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:45.145" starttime="20140623 15:02:45.135"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.155" starttime="20140623 15:02:45.153"></status>
</kw>
<msg timestamp="20140623 15:02:45.156" level="INFO">${return_log_entry} = 2014-06-23 15:02:45,079 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:45.156" starttime="20140623 15:02:45.146"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.166" starttime="20140623 15:02:45.164"></status>
</kw>
<msg timestamp="20140623 15:02:45.167" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:45.167" starttime="20140623 15:02:45.157"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.182" starttime="20140623 15:02:45.180"></status>
</kw>
<msg timestamp="20140623 15:02:45.183" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:45.182" starttime="20140623 15:02:45.168"></status>
</kw>
<msg timestamp="20140623 15:02:45.184" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:45.183" starttime="20140623 15:02:45.097"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.194" starttime="20140623 15:02:45.192"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.196" starttime="20140623 15:02:45.195"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.198" starttime="20140623 15:02:45.197"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:45.211" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:45.211" starttime="20140623 15:02:45.208"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.212" starttime="20140623 15:02:45.206"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.212" starttime="20140623 15:02:45.199"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.213" starttime="20140623 15:02:45.185"></status>
</kw>
<msg timestamp="20140623 15:02:45.215" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:45.214" starttime="20140623 15:02:44.575"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.221" starttime="20140623 15:02:45.216"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.222" starttime="20140623 15:02:44.571"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 15318">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140623 15:02:45.237" level="INFO">CRCE Set Balance( subscriberId=15315, accountId=15318, balance=0)</msg>
<status status="PASS" endtime="20140623 15:02:45.238" starttime="20140623 15:02:45.234"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:45.251" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:45.252" starttime="20140623 15:02:45.249"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.253" starttime="20140623 15:02:45.247"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:45.258" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:45.258" starttime="20140623 15:02:45.255"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.259" starttime="20140623 15:02:45.254"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:45.264" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:45.265" starttime="20140623 15:02:45.262"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.265" starttime="20140623 15:02:45.260"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.266" starttime="20140623 15:02:45.240"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:45.270" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:45.270" starttime="20140623 15:02:45.267"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.274" starttime="20140623 15:02:45.271"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.277" starttime="20140623 15:02:45.275"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.281" starttime="20140623 15:02:45.278"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.283" starttime="20140623 15:02:45.282"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.285" starttime="20140623 15:02:45.284"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.288" starttime="20140623 15:02:45.286"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.292" starttime="20140623 15:02:45.289"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.295" starttime="20140623 15:02:45.293"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:45.299" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140623 15:02:45.595" level="INFO">15:02:45,588 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:45.595" starttime="20140623 15:02:45.298"></status>
</kw>
<msg timestamp="20140623 15:02:45.596" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:45.597" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:45.596" starttime="20140623 15:02:45.297"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:45.608" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:45.608" starttime="20140623 15:02:45.606"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:45.612" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:45.611" starttime="20140623 15:02:45.610"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:45.615" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:45.614" starttime="20140623 15:02:45.613"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:45.620" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:45.621" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:45.621" starttime="20140623 15:02:45.617"></status>
</kw>
<msg timestamp="20140623 15:02:45.638" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:45.639" level="INFO">${return_log_entry} = 2014-06-23 15:02:45,588 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:45.637" starttime="20140623 15:02:45.616"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.648" starttime="20140623 15:02:45.646"></status>
</kw>
<msg timestamp="20140623 15:02:45.649" level="INFO">${return_log_entry} = 2014-06-23 15:02:45,588 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:45.649" starttime="20140623 15:02:45.640"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.659" starttime="20140623 15:02:45.657"></status>
</kw>
<msg timestamp="20140623 15:02:45.660" level="INFO">${return_log_entry} = 2014-06-23 15:02:45,588 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:45.659" starttime="20140623 15:02:45.650"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.670" starttime="20140623 15:02:45.668"></status>
</kw>
<msg timestamp="20140623 15:02:45.671" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:45.671" starttime="20140623 15:02:45.661"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.685" starttime="20140623 15:02:45.683"></status>
</kw>
<msg timestamp="20140623 15:02:45.686" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:45.686" starttime="20140623 15:02:45.672"></status>
</kw>
<msg timestamp="20140623 15:02:45.688" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:45.687" starttime="20140623 15:02:45.598"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.698" starttime="20140623 15:02:45.696"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.700" starttime="20140623 15:02:45.698"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.702" starttime="20140623 15:02:45.701"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:45.714" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:45.715" starttime="20140623 15:02:45.711"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.716" starttime="20140623 15:02:45.709"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.716" starttime="20140623 15:02:45.703"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.716" starttime="20140623 15:02:45.689"></status>
</kw>
<msg timestamp="20140623 15:02:45.718" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:45.717" starttime="20140623 15:02:45.225"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.724" starttime="20140623 15:02:45.719"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.725" starttime="20140623 15:02:45.223"></status>
</kw>
<kw type="foritem" timeout="" name="${accountId} = 15317">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>0</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140623 15:02:45.743" level="INFO">CRCE Set Balance( subscriberId=15315, accountId=15317, balance=0)</msg>
<status status="PASS" endtime="20140623 15:02:45.743" starttime="20140623 15:02:45.738"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:45.760" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:45.761" starttime="20140623 15:02:45.758"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.762" starttime="20140623 15:02:45.756"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:45.767" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:45.768" starttime="20140623 15:02:45.764"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.768" starttime="20140623 15:02:45.763"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:45.774" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:45.774" starttime="20140623 15:02:45.771"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.775" starttime="20140623 15:02:45.769"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:45.775" starttime="20140623 15:02:45.748"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:45.779" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:45.780" starttime="20140623 15:02:45.776"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.783" starttime="20140623 15:02:45.781"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.787" starttime="20140623 15:02:45.784"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.790" starttime="20140623 15:02:45.788"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.793" starttime="20140623 15:02:45.791"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.795" starttime="20140623 15:02:45.793"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.798" starttime="20140623 15:02:45.796"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.802" starttime="20140623 15:02:45.799"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:45.806" starttime="20140623 15:02:45.803"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:45.809" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0']</msg>
<msg timestamp="20140623 15:02:46.143" level="INFO">15:02:46,132 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:46.144" starttime="20140623 15:02:45.808"></status>
</kw>
<msg timestamp="20140623 15:02:46.147" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:46.147" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:46.146" starttime="20140623 15:02:45.807"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:46.160" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:46.160" starttime="20140623 15:02:46.157"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.163" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:46.163" starttime="20140623 15:02:46.161"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.166" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:46.166" starttime="20140623 15:02:46.164"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.172" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:46.173" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:46.173" starttime="20140623 15:02:46.169"></status>
</kw>
<msg timestamp="20140623 15:02:46.174" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:46.175" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,132 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:46.174" starttime="20140623 15:02:46.167"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.185" starttime="20140623 15:02:46.183"></status>
</kw>
<msg timestamp="20140623 15:02:46.186" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,132 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:46.185" starttime="20140623 15:02:46.176"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.196" starttime="20140623 15:02:46.194"></status>
</kw>
<msg timestamp="20140623 15:02:46.197" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,132 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:46.196" starttime="20140623 15:02:46.187"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.207" starttime="20140623 15:02:46.204"></status>
</kw>
<msg timestamp="20140623 15:02:46.208" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:46.207" starttime="20140623 15:02:46.198"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.222" starttime="20140623 15:02:46.220"></status>
</kw>
<msg timestamp="20140623 15:02:46.223" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:46.223" starttime="20140623 15:02:46.209"></status>
</kw>
<msg timestamp="20140623 15:02:46.225" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:46.224" starttime="20140623 15:02:46.150"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.235" starttime="20140623 15:02:46.233"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.237" starttime="20140623 15:02:46.235"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.239" starttime="20140623 15:02:46.237"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:46.251" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:46.252" starttime="20140623 15:02:46.248"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:46.252" starttime="20140623 15:02:46.246"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:46.253" starttime="20140623 15:02:46.240"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:46.253" starttime="20140623 15:02:46.226"></status>
</kw>
<msg timestamp="20140623 15:02:46.255" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:46.254" starttime="20140623 15:02:45.727"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Clearing balance of accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode=${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.261" starttime="20140623 15:02:46.256"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:46.262" starttime="20140623 15:02:45.725"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:46.263" starttime="20140623 15:02:43.854"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:46.264" starttime="20140623 15:02:42.986"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:46.265" starttime="20140623 15:02:41.930"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance By Imsi">
<doc>Same as "CRCE Set Main Balance" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>10000000</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId for the passed imsi ***</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.277" starttime="20140623 15:02:46.276"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.301" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:46.302" starttime="20140623 15:02:46.299"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:46.303" starttime="20140623 15:02:46.297"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.308" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:46.308" starttime="20140623 15:02:46.305"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:46.309" starttime="20140623 15:02:46.304"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.314" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:46.315" starttime="20140623 15:02:46.311"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:46.315" starttime="20140623 15:02:46.310"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:46.316" starttime="20140623 15:02:46.291"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.319" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:46.320" starttime="20140623 15:02:46.316"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.323" starttime="20140623 15:02:46.320"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.326" starttime="20140623 15:02:46.324"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.330" starttime="20140623 15:02:46.327"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.332" starttime="20140623 15:02:46.331"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.334" starttime="20140623 15:02:46.333"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.338" starttime="20140623 15:02:46.335"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:46.341" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000']</msg>
<msg timestamp="20140623 15:02:46.653" level="INFO">15:02:46,613 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
15:02:46,618 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
15:02:46,623 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15310
15:02:46,628 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000
15:02:46,633 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
15:02:46,638 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
15:02:46,642 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
15:02:46,647 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140623 15:02:46.654" starttime="20140623 15:02:46.340"></status>
</kw>
<msg timestamp="20140623 15:02:46.656" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:46.656" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:46.655" starttime="20140623 15:02:46.339"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:46.667" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:46.667" starttime="20140623 15:02:46.665"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.671" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:46.670" starttime="20140623 15:02:46.668"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.673" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:46.673" starttime="20140623 15:02:46.671"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.678" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:46.680" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:46.680" starttime="20140623 15:02:46.676"></status>
</kw>
<msg timestamp="20140623 15:02:46.681" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:46.682" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,613 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:46.681" starttime="20140623 15:02:46.674"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.691" starttime="20140623 15:02:46.689"></status>
</kw>
<msg timestamp="20140623 15:02:46.692" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,613 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:46.692" starttime="20140623 15:02:46.683"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.702" starttime="20140623 15:02:46.700"></status>
</kw>
<msg timestamp="20140623 15:02:46.703" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,613 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:46.702" starttime="20140623 15:02:46.693"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.713" starttime="20140623 15:02:46.710"></status>
</kw>
<msg timestamp="20140623 15:02:46.714" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:46.713" starttime="20140623 15:02:46.704"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.728" starttime="20140623 15:02:46.726"></status>
</kw>
<msg timestamp="20140623 15:02:46.729" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:46.728" starttime="20140623 15:02:46.715"></status>
</kw>
<msg timestamp="20140623 15:02:46.730" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:46.729" starttime="20140623 15:02:46.658"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:46.741" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140623 15:02:46.741" starttime="20140623 15:02:46.739"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.744" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:46.744" starttime="20140623 15:02:46.742"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.747" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:46.747" starttime="20140623 15:02:46.745"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.752" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:46.754" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:46.754" starttime="20140623 15:02:46.750"></status>
</kw>
<msg timestamp="20140623 15:02:46.755" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:46.755" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,618 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140623 15:02:46.755" starttime="20140623 15:02:46.748"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.765" starttime="20140623 15:02:46.763"></status>
</kw>
<msg timestamp="20140623 15:02:46.766" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,618 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140623 15:02:46.765" starttime="20140623 15:02:46.756"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.775" starttime="20140623 15:02:46.773"></status>
</kw>
<msg timestamp="20140623 15:02:46.776" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,618 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140623 15:02:46.776" starttime="20140623 15:02:46.767"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.786" starttime="20140623 15:02:46.784"></status>
</kw>
<msg timestamp="20140623 15:02:46.787" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140623 15:02:46.787" starttime="20140623 15:02:46.777"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.801" starttime="20140623 15:02:46.799"></status>
</kw>
<msg timestamp="20140623 15:02:46.802" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140623 15:02:46.802" starttime="20140623 15:02:46.788"></status>
</kw>
<msg timestamp="20140623 15:02:46.803" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140623 15:02:46.803" starttime="20140623 15:02:46.732"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:46.815" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140623 15:02:46.814" starttime="20140623 15:02:46.812"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.818" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:46.817" starttime="20140623 15:02:46.816"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.821" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:46.820" starttime="20140623 15:02:46.819"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.826" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:46.827" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:46.828" starttime="20140623 15:02:46.824"></status>
</kw>
<msg timestamp="20140623 15:02:46.829" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:46.829" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,628 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140623 15:02:46.828" starttime="20140623 15:02:46.822"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.838" starttime="20140623 15:02:46.836"></status>
</kw>
<msg timestamp="20140623 15:02:46.839" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,628 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140623 15:02:46.839" starttime="20140623 15:02:46.830"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.890" starttime="20140623 15:02:46.887"></status>
</kw>
<msg timestamp="20140623 15:02:46.891" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,628 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010000</msg>
<status status="PASS" endtime="20140623 15:02:46.891" starttime="20140623 15:02:46.840"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.902" starttime="20140623 15:02:46.900"></status>
</kw>
<msg timestamp="20140623 15:02:46.903" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140623 15:02:46.903" starttime="20140623 15:02:46.892"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.917" starttime="20140623 15:02:46.915"></status>
</kw>
<msg timestamp="20140623 15:02:46.918" level="INFO">${resultCode} = 642041010000</msg>
<status status="PASS" endtime="20140623 15:02:46.918" starttime="20140623 15:02:46.904"></status>
</kw>
<msg timestamp="20140623 15:02:46.919" level="INFO">${msisdn} = 642041010000</msg>
<status status="PASS" endtime="20140623 15:02:46.919" starttime="20140623 15:02:46.805"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:46.932" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140623 15:02:46.931" starttime="20140623 15:02:46.929"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.935" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:46.934" starttime="20140623 15:02:46.933"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.938" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:46.937" starttime="20140623 15:02:46.936"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:46.943" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:46.944" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:46.944" starttime="20140623 15:02:46.940"></status>
</kw>
<msg timestamp="20140623 15:02:46.945" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:46.946" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,623 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15310</msg>
<status status="PASS" endtime="20140623 15:02:46.945" starttime="20140623 15:02:46.939"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.955" starttime="20140623 15:02:46.953"></status>
</kw>
<msg timestamp="20140623 15:02:46.956" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,623 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15310</msg>
<status status="PASS" endtime="20140623 15:02:46.955" starttime="20140623 15:02:46.947"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.965" starttime="20140623 15:02:46.964"></status>
</kw>
<msg timestamp="20140623 15:02:46.967" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,623 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15310</msg>
<status status="PASS" endtime="20140623 15:02:46.966" starttime="20140623 15:02:46.957"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.976" starttime="20140623 15:02:46.974"></status>
</kw>
<msg timestamp="20140623 15:02:46.977" level="INFO">${resultCode} = 15310</msg>
<status status="PASS" endtime="20140623 15:02:46.977" starttime="20140623 15:02:46.967"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:46.992" starttime="20140623 15:02:46.990"></status>
</kw>
<msg timestamp="20140623 15:02:46.993" level="INFO">${resultCode} = 15310</msg>
<status status="PASS" endtime="20140623 15:02:46.992" starttime="20140623 15:02:46.978"></status>
</kw>
<msg timestamp="20140623 15:02:46.994" level="INFO">${id} = 15310</msg>
<status status="PASS" endtime="20140623 15:02:46.993" starttime="20140623 15:02:46.922"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:47.006" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140623 15:02:47.006" starttime="20140623 15:02:47.003"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.009" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:47.009" starttime="20140623 15:02:47.007"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.012" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:47.012" starttime="20140623 15:02:47.010"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.017" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:47.019" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:47.019" starttime="20140623 15:02:47.015"></status>
</kw>
<msg timestamp="20140623 15:02:47.020" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:47.021" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,633 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:47.020" starttime="20140623 15:02:47.013"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.030" starttime="20140623 15:02:47.028"></status>
</kw>
<msg timestamp="20140623 15:02:47.031" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,633 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:47.030" starttime="20140623 15:02:47.022"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.040" starttime="20140623 15:02:47.038"></status>
</kw>
<msg timestamp="20140623 15:02:47.042" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,633 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:47.041" starttime="20140623 15:02:47.032"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.052" starttime="20140623 15:02:47.049"></status>
</kw>
<msg timestamp="20140623 15:02:47.053" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:47.052" starttime="20140623 15:02:47.042"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.066" starttime="20140623 15:02:47.064"></status>
</kw>
<msg timestamp="20140623 15:02:47.067" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:47.067" starttime="20140623 15:02:47.053"></status>
</kw>
<msg timestamp="20140623 15:02:47.069" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:47.068" starttime="20140623 15:02:46.996"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:47.081" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140623 15:02:47.081" starttime="20140623 15:02:47.078"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.084" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:47.084" starttime="20140623 15:02:47.082"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.087" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:47.087" starttime="20140623 15:02:47.085"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.092" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:47.094" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:47.094" starttime="20140623 15:02:47.090"></status>
</kw>
<msg timestamp="20140623 15:02:47.095" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:47.095" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,638 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140623 15:02:47.095" starttime="20140623 15:02:47.088"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.105" starttime="20140623 15:02:47.103"></status>
</kw>
<msg timestamp="20140623 15:02:47.106" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,638 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140623 15:02:47.105" starttime="20140623 15:02:47.096"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.115" starttime="20140623 15:02:47.113"></status>
</kw>
<msg timestamp="20140623 15:02:47.116" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,638 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140623 15:02:47.116" starttime="20140623 15:02:47.107"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.126" starttime="20140623 15:02:47.124"></status>
</kw>
<msg timestamp="20140623 15:02:47.127" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140623 15:02:47.127" starttime="20140623 15:02:47.117"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.141" starttime="20140623 15:02:47.139"></status>
</kw>
<msg timestamp="20140623 15:02:47.142" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140623 15:02:47.141" starttime="20140623 15:02:47.128"></status>
</kw>
<msg timestamp="20140623 15:02:47.143" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140623 15:02:47.143" starttime="20140623 15:02:47.071"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:47.155" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140623 15:02:47.154" starttime="20140623 15:02:47.152"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.158" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:47.157" starttime="20140623 15:02:47.156"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.161" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:47.160" starttime="20140623 15:02:47.159"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.166" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:47.167" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:47.167" starttime="20140623 15:02:47.163"></status>
</kw>
<msg timestamp="20140623 15:02:47.169" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:47.169" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,642 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:47.168" starttime="20140623 15:02:47.162"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.179" starttime="20140623 15:02:47.177"></status>
</kw>
<msg timestamp="20140623 15:02:47.180" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,642 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:47.179" starttime="20140623 15:02:47.170"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.189" starttime="20140623 15:02:47.187"></status>
</kw>
<msg timestamp="20140623 15:02:47.190" level="INFO">${return_log_entry} = 2014-06-23 15:02:46,642 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:47.190" starttime="20140623 15:02:47.181"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.201" starttime="20140623 15:02:47.198"></status>
</kw>
<msg timestamp="20140623 15:02:47.202" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:47.201" starttime="20140623 15:02:47.191"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.216" starttime="20140623 15:02:47.214"></status>
</kw>
<msg timestamp="20140623 15:02:47.217" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:47.217" starttime="20140623 15:02:47.203"></status>
</kw>
<msg timestamp="20140623 15:02:47.218" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:47.218" starttime="20140623 15:02:47.145"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.228" starttime="20140623 15:02:47.227"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.230" starttime="20140623 15:02:47.229"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.232" starttime="20140623 15:02:47.231"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:47.244" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:47.245" starttime="20140623 15:02:47.241"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:47.246" starttime="20140623 15:02:47.240"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:47.246" starttime="20140623 15:02:47.233"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:47.247" starttime="20140623 15:02:47.220"></status>
</kw>
<msg timestamp="20140623 15:02:47.250" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:47.251" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140623 15:02:47.251" level="INFO">${msisdnDummy} = 642041010000</msg>
<msg timestamp="20140623 15:02:47.251" level="INFO">${subscriberId} = 15310</msg>
<msg timestamp="20140623 15:02:47.252" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140623 15:02:47.252" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140623 15:02:47.252" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:47.249" starttime="20140623 15:02:46.281"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.259" starttime="20140623 15:02:47.253"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Set Main Balance" ***</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.261" starttime="20140623 15:02:47.260"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance">
<doc>Sets the passed subscriber's main account balance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve accountId of main account ***</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.273" starttime="20140623 15:02:47.272"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${accountId}, ${balanceDummy}, ${categoryDummy}, ${currencyIdDummy} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.297" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:47.298" starttime="20140623 15:02:47.295"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:47.299" starttime="20140623 15:02:47.293"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.304" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:47.305" starttime="20140623 15:02:47.301"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:47.305" starttime="20140623 15:02:47.300"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.310" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:47.311" starttime="20140623 15:02:47.308"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:47.312" starttime="20140623 15:02:47.306"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:47.312" starttime="20140623 15:02:47.286"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.316" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:47.316" starttime="20140623 15:02:47.313"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.320" starttime="20140623 15:02:47.317"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.323" starttime="20140623 15:02:47.321"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.327" starttime="20140623 15:02:47.324"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.329" starttime="20140623 15:02:47.328"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.331" starttime="20140623 15:02:47.330"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.335" starttime="20140623 15:02:47.332"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:47.339" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310']</msg>
<msg timestamp="20140623 15:02:47.645" level="INFO">15:02:47,613 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
15:02:47,619 INFO  [log] LowLevelOps.getMainAccount.output.accountId=15311
15:02:47,625 INFO  [log] LowLevelOps.getMainAccount.output.balance=0
15:02:47,630 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
15:02:47,636 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140623 15:02:47.646" starttime="20140623 15:02:47.338"></status>
</kw>
<msg timestamp="20140623 15:02:47.650" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:47.650" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:47.647" starttime="20140623 15:02:47.336"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:47.662" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:47.661" starttime="20140623 15:02:47.659"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.665" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:47.664" starttime="20140623 15:02:47.663"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.668" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:47.667" starttime="20140623 15:02:47.666"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.673" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:47.678" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:47.679" starttime="20140623 15:02:47.671"></status>
</kw>
<msg timestamp="20140623 15:02:47.680" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:47.680" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,613 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:47.679" starttime="20140623 15:02:47.669"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.690" starttime="20140623 15:02:47.688"></status>
</kw>
<msg timestamp="20140623 15:02:47.691" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,613 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:47.691" starttime="20140623 15:02:47.681"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.701" starttime="20140623 15:02:47.699"></status>
</kw>
<msg timestamp="20140623 15:02:47.702" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,613 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:47.702" starttime="20140623 15:02:47.692"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.751" starttime="20140623 15:02:47.747"></status>
</kw>
<msg timestamp="20140623 15:02:47.752" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:47.752" starttime="20140623 15:02:47.703"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.767" starttime="20140623 15:02:47.765"></status>
</kw>
<msg timestamp="20140623 15:02:47.768" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:47.768" starttime="20140623 15:02:47.753"></status>
</kw>
<msg timestamp="20140623 15:02:47.769" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:47.769" starttime="20140623 15:02:47.652"></status>
</kw>
<kw type="kw" timeout="" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:47.782" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20140623 15:02:47.782" starttime="20140623 15:02:47.779"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.785" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:47.785" starttime="20140623 15:02:47.783"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.788" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:47.788" starttime="20140623 15:02:47.786"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.794" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:47.799" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:47.800" starttime="20140623 15:02:47.791"></status>
</kw>
<msg timestamp="20140623 15:02:47.801" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:47.801" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,619 INFO  [log] LowLevelOps.getMainAccount.output.accountId=15311</msg>
<status status="PASS" endtime="20140623 15:02:47.800" starttime="20140623 15:02:47.789"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.811" starttime="20140623 15:02:47.809"></status>
</kw>
<msg timestamp="20140623 15:02:47.812" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,619 INFO  [log] LowLevelOps.getMainAccount.output.accountId=15311</msg>
<status status="PASS" endtime="20140623 15:02:47.812" starttime="20140623 15:02:47.802"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.823" starttime="20140623 15:02:47.820"></status>
</kw>
<msg timestamp="20140623 15:02:47.824" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,619 INFO  [log] LowLevelOps.getMainAccount.output.accountId=15311</msg>
<status status="PASS" endtime="20140623 15:02:47.824" starttime="20140623 15:02:47.813"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.835" starttime="20140623 15:02:47.832"></status>
</kw>
<msg timestamp="20140623 15:02:47.836" level="INFO">${resultCode} = 15311</msg>
<status status="PASS" endtime="20140623 15:02:47.835" starttime="20140623 15:02:47.825"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.850" starttime="20140623 15:02:47.848"></status>
</kw>
<msg timestamp="20140623 15:02:47.851" level="INFO">${resultCode} = 15311</msg>
<status status="PASS" endtime="20140623 15:02:47.851" starttime="20140623 15:02:47.837"></status>
</kw>
<msg timestamp="20140623 15:02:47.852" level="INFO">${accountId} = 15311</msg>
<status status="PASS" endtime="20140623 15:02:47.852" starttime="20140623 15:02:47.772"></status>
</kw>
<kw type="kw" timeout="" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:47.864" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20140623 15:02:47.864" starttime="20140623 15:02:47.861"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.867" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:47.867" starttime="20140623 15:02:47.865"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.870" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:47.870" starttime="20140623 15:02:47.868"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.876" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:47.881" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:47.882" starttime="20140623 15:02:47.874"></status>
</kw>
<msg timestamp="20140623 15:02:47.883" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:47.884" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,625 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140623 15:02:47.883" starttime="20140623 15:02:47.871"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.893" starttime="20140623 15:02:47.891"></status>
</kw>
<msg timestamp="20140623 15:02:47.894" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,625 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140623 15:02:47.893" starttime="20140623 15:02:47.885"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.903" starttime="20140623 15:02:47.901"></status>
</kw>
<msg timestamp="20140623 15:02:47.904" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,625 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140623 15:02:47.904" starttime="20140623 15:02:47.895"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.914" starttime="20140623 15:02:47.911"></status>
</kw>
<msg timestamp="20140623 15:02:47.915" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140623 15:02:47.914" starttime="20140623 15:02:47.905"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.929" starttime="20140623 15:02:47.927"></status>
</kw>
<msg timestamp="20140623 15:02:47.930" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140623 15:02:47.929" starttime="20140623 15:02:47.916"></status>
</kw>
<msg timestamp="20140623 15:02:47.931" level="INFO">${balance} = 0</msg>
<status status="PASS" endtime="20140623 15:02:47.930" starttime="20140623 15:02:47.854"></status>
</kw>
<kw type="kw" timeout="" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:47.943" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20140623 15:02:47.942" starttime="20140623 15:02:47.940"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.946" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:47.945" starttime="20140623 15:02:47.944"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.949" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:47.948" starttime="20140623 15:02:47.947"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:47.954" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:47.960" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:47.960" starttime="20140623 15:02:47.951"></status>
</kw>
<msg timestamp="20140623 15:02:47.961" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:47.962" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,630 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140623 15:02:47.961" starttime="20140623 15:02:47.950"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.971" starttime="20140623 15:02:47.969"></status>
</kw>
<msg timestamp="20140623 15:02:47.972" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,630 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140623 15:02:47.971" starttime="20140623 15:02:47.963"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.981" starttime="20140623 15:02:47.979"></status>
</kw>
<msg timestamp="20140623 15:02:47.982" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,630 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140623 15:02:47.981" starttime="20140623 15:02:47.972"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:47.992" starttime="20140623 15:02:47.989"></status>
</kw>
<msg timestamp="20140623 15:02:47.993" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140623 15:02:47.992" starttime="20140623 15:02:47.983"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.007" starttime="20140623 15:02:48.005"></status>
</kw>
<msg timestamp="20140623 15:02:48.009" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140623 15:02:48.008" starttime="20140623 15:02:47.994"></status>
</kw>
<msg timestamp="20140623 15:02:48.011" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20140623 15:02:48.010" starttime="20140623 15:02:47.933"></status>
</kw>
<kw type="kw" timeout="" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:48.023" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20140623 15:02:48.022" starttime="20140623 15:02:48.020"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:48.026" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:48.026" starttime="20140623 15:02:48.024"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:48.029" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:48.029" starttime="20140623 15:02:48.027"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:48.034" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:48.040" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:48.040" starttime="20140623 15:02:48.032"></status>
</kw>
<msg timestamp="20140623 15:02:48.041" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:48.042" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,636 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140623 15:02:48.041" starttime="20140623 15:02:48.030"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.051" starttime="20140623 15:02:48.049"></status>
</kw>
<msg timestamp="20140623 15:02:48.052" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,636 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140623 15:02:48.052" starttime="20140623 15:02:48.043"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.062" starttime="20140623 15:02:48.060"></status>
</kw>
<msg timestamp="20140623 15:02:48.063" level="INFO">${return_log_entry} = 2014-06-23 15:02:47,636 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140623 15:02:48.062" starttime="20140623 15:02:48.053"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.073" starttime="20140623 15:02:48.070"></status>
</kw>
<msg timestamp="20140623 15:02:48.074" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140623 15:02:48.073" starttime="20140623 15:02:48.064"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.088" starttime="20140623 15:02:48.086"></status>
</kw>
<msg timestamp="20140623 15:02:48.089" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140623 15:02:48.088" starttime="20140623 15:02:48.074"></status>
</kw>
<msg timestamp="20140623 15:02:48.090" level="INFO">${currencyId} = 1</msg>
<status status="PASS" endtime="20140623 15:02:48.090" starttime="20140623 15:02:48.013"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.100" starttime="20140623 15:02:48.099"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.102" starttime="20140623 15:02:48.101"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.104" starttime="20140623 15:02:48.103"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:48.120" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:48.121" starttime="20140623 15:02:48.113"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.122" starttime="20140623 15:02:48.112"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.122" starttime="20140623 15:02:48.105"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.123" starttime="20140623 15:02:48.091"></status>
</kw>
<msg timestamp="20140623 15:02:48.126" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:48.126" level="INFO">${accountId} = 15311</msg>
<msg timestamp="20140623 15:02:48.127" level="INFO">${balanceDummy} = 0</msg>
<msg timestamp="20140623 15:02:48.127" level="INFO">${categoryDummy} = MAIN</msg>
<msg timestamp="20140623 15:02:48.127" level="INFO">${currencyIdDummy} = 1</msg>
<status status="PASS" endtime="20140623 15:02:48.125" starttime="20140623 15:02:47.276"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying main account of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.134" starttime="20140623 15:02:48.128"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Set new balance ***</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.136" starttime="20140623 15:02:48.135"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140623 15:02:48.150" level="INFO">CRCE Set Balance( subscriberId=15310, accountId=15311, balance=10000000)</msg>
<status status="PASS" endtime="20140623 15:02:48.151" starttime="20140623 15:02:48.148"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:48.165" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:48.165" starttime="20140623 15:02:48.162"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.166" starttime="20140623 15:02:48.160"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:48.171" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:48.172" starttime="20140623 15:02:48.168"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.172" starttime="20140623 15:02:48.167"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:48.177" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:48.178" starttime="20140623 15:02:48.175"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.179" starttime="20140623 15:02:48.173"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.179" starttime="20140623 15:02:48.153"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:48.183" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:48.183" starttime="20140623 15:02:48.180"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.187" starttime="20140623 15:02:48.184"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.190" starttime="20140623 15:02:48.188"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.194" starttime="20140623 15:02:48.191"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.196" starttime="20140623 15:02:48.195"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.198" starttime="20140623 15:02:48.197"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.201" starttime="20140623 15:02:48.199"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.205" starttime="20140623 15:02:48.203"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.209" starttime="20140623 15:02:48.206"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:48.213" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000']</msg>
<msg timestamp="20140623 15:02:48.502" level="INFO">15:02:48,492 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:48.503" starttime="20140623 15:02:48.212"></status>
</kw>
<msg timestamp="20140623 15:02:48.504" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:48.504" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:48.504" starttime="20140623 15:02:48.210"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:48.516" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:48.516" starttime="20140623 15:02:48.513"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:48.520" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:48.519" starttime="20140623 15:02:48.517"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:48.522" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:48.522" starttime="20140623 15:02:48.520"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:48.528" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:48.529" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:48.529" starttime="20140623 15:02:48.525"></status>
</kw>
<msg timestamp="20140623 15:02:48.530" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:48.531" level="INFO">${return_log_entry} = 2014-06-23 15:02:48,492 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:48.530" starttime="20140623 15:02:48.523"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.540" starttime="20140623 15:02:48.538"></status>
</kw>
<msg timestamp="20140623 15:02:48.541" level="INFO">${return_log_entry} = 2014-06-23 15:02:48,492 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:48.541" starttime="20140623 15:02:48.532"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.551" starttime="20140623 15:02:48.549"></status>
</kw>
<msg timestamp="20140623 15:02:48.552" level="INFO">${return_log_entry} = 2014-06-23 15:02:48,492 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:48.551" starttime="20140623 15:02:48.542"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.562" starttime="20140623 15:02:48.560"></status>
</kw>
<msg timestamp="20140623 15:02:48.563" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:48.563" starttime="20140623 15:02:48.553"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.577" starttime="20140623 15:02:48.575"></status>
</kw>
<msg timestamp="20140623 15:02:48.578" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:48.578" starttime="20140623 15:02:48.564"></status>
</kw>
<msg timestamp="20140623 15:02:48.580" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:48.579" starttime="20140623 15:02:48.506"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.631" starttime="20140623 15:02:48.630"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.633" starttime="20140623 15:02:48.632"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.635" starttime="20140623 15:02:48.634"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:48.649" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:48.650" starttime="20140623 15:02:48.645"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.650" starttime="20140623 15:02:48.644"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.651" starttime="20140623 15:02:48.636"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.651" starttime="20140623 15:02:48.581"></status>
</kw>
<msg timestamp="20140623 15:02:48.652" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:48.652" starttime="20140623 15:02:48.138"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Setting balance of main accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.659" starttime="20140623 15:02:48.653"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.660" starttime="20140623 15:02:47.263"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.661" starttime="20140623 15:02:46.268"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance By Imsi">
<doc>Same as "CRCE Set Main Balance" except that the subscriber is referenced by IMSI</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${FAKE_DESTINATION_IMSI}</arg>
<arg>10000000</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve subscriberId for the passed imsi ***</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.673" starttime="20140623 15:02:48.672"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${providerIdDummy}, ${msisdnDummy}, ${subscriberId}, ${stateDummy}, ${tariffIdDummy}, ${typeDummy} = subscriber-admin-support-resource.CRCE Get Subscriber Profile By Imsi">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfileByImsi and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:48.697" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:48.697" starttime="20140623 15:02:48.694"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.698" starttime="20140623 15:02:48.693"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:48.703" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:48.704" starttime="20140623 15:02:48.700"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.704" starttime="20140623 15:02:48.699"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:48.709" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:48.710" starttime="20140623 15:02:48.707"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.711" starttime="20140623 15:02:48.705"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:48.711" starttime="20140623 15:02:48.686"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:48.715" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:48.715" starttime="20140623 15:02:48.712"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.718" starttime="20140623 15:02:48.716"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.722" starttime="20140623 15:02:48.719"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.725" starttime="20140623 15:02:48.723"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.727" starttime="20140623 15:02:48.726"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfileByImsi</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.729" starttime="20140623 15:02:48.728"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.input.imsi=${imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:48.733" starttime="20140623 15:02:48.730"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:48.737" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001']</msg>
<msg timestamp="20140623 15:02:49.053" level="INFO">15:02:49,006 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK
15:02:49,012 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1
15:02:49,017 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15315
15:02:49,022 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001
15:02:49,028 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE
15:02:49,033 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003
15:02:49,038 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID
15:02:49,044 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.languageId=1</msg>
<status status="PASS" endtime="20140623 15:02:49.054" starttime="20140623 15:02:48.735"></status>
</kw>
<msg timestamp="20140623 15:02:49.057" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:49.057" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:49.056" starttime="20140623 15:02:48.734"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:49.069" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:49.068" starttime="20140623 15:02:49.066"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.072" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:49.072" starttime="20140623 15:02:49.070"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.075" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:49.075" starttime="20140623 15:02:49.073"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.080" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:49.081" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:49.082" starttime="20140623 15:02:49.078"></status>
</kw>
<msg timestamp="20140623 15:02:49.083" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:49.083" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,006 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:49.082" starttime="20140623 15:02:49.076"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.093" starttime="20140623 15:02:49.091"></status>
</kw>
<msg timestamp="20140623 15:02:49.094" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,006 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:49.093" starttime="20140623 15:02:49.084"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.103" starttime="20140623 15:02:49.101"></status>
</kw>
<msg timestamp="20140623 15:02:49.104" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,006 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:49.104" starttime="20140623 15:02:49.095"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.114" starttime="20140623 15:02:49.112"></status>
</kw>
<msg timestamp="20140623 15:02:49.115" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:49.115" starttime="20140623 15:02:49.105"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.129" starttime="20140623 15:02:49.127"></status>
</kw>
<msg timestamp="20140623 15:02:49.130" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:49.129" starttime="20140623 15:02:49.116"></status>
</kw>
<msg timestamp="20140623 15:02:49.131" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:49.131" starttime="20140623 15:02:49.059"></status>
</kw>
<kw type="kw" timeout="" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:49.143" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.providerId=</msg>
<status status="PASS" endtime="20140623 15:02:49.142" starttime="20140623 15:02:49.140"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.146" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:49.145" starttime="20140623 15:02:49.144"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.149" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:49.148" starttime="20140623 15:02:49.147"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.154" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:49.155" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:49.155" starttime="20140623 15:02:49.151"></status>
</kw>
<msg timestamp="20140623 15:02:49.156" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:49.157" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,012 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140623 15:02:49.156" starttime="20140623 15:02:49.150"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.166" starttime="20140623 15:02:49.164"></status>
</kw>
<msg timestamp="20140623 15:02:49.167" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,012 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140623 15:02:49.167" starttime="20140623 15:02:49.158"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.177" starttime="20140623 15:02:49.175"></status>
</kw>
<msg timestamp="20140623 15:02:49.178" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,012 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.providerId=1</msg>
<status status="PASS" endtime="20140623 15:02:49.177" starttime="20140623 15:02:49.168"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.188" starttime="20140623 15:02:49.186"></status>
</kw>
<msg timestamp="20140623 15:02:49.189" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140623 15:02:49.189" starttime="20140623 15:02:49.179"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.204" starttime="20140623 15:02:49.202"></status>
</kw>
<msg timestamp="20140623 15:02:49.205" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140623 15:02:49.204" starttime="20140623 15:02:49.190"></status>
</kw>
<msg timestamp="20140623 15:02:49.206" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20140623 15:02:49.205" starttime="20140623 15:02:49.133"></status>
</kw>
<kw type="kw" timeout="" name="${msisdn} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.msisdn</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:49.218" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.msisdn=</msg>
<status status="PASS" endtime="20140623 15:02:49.217" starttime="20140623 15:02:49.215"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.220" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:49.220" starttime="20140623 15:02:49.218"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.223" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:49.223" starttime="20140623 15:02:49.221"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.228" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:49.230" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:49.230" starttime="20140623 15:02:49.226"></status>
</kw>
<msg timestamp="20140623 15:02:49.231" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:49.231" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,022 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140623 15:02:49.231" starttime="20140623 15:02:49.224"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.241" starttime="20140623 15:02:49.239"></status>
</kw>
<msg timestamp="20140623 15:02:49.242" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,022 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140623 15:02:49.242" starttime="20140623 15:02:49.232"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.252" starttime="20140623 15:02:49.250"></status>
</kw>
<msg timestamp="20140623 15:02:49.253" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,022 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.msisdn=642041010001</msg>
<status status="PASS" endtime="20140623 15:02:49.252" starttime="20140623 15:02:49.243"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.263" starttime="20140623 15:02:49.260"></status>
</kw>
<msg timestamp="20140623 15:02:49.264" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140623 15:02:49.264" starttime="20140623 15:02:49.254"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.278" starttime="20140623 15:02:49.276"></status>
</kw>
<msg timestamp="20140623 15:02:49.279" level="INFO">${resultCode} = 642041010001</msg>
<status status="PASS" endtime="20140623 15:02:49.278" starttime="20140623 15:02:49.265"></status>
</kw>
<msg timestamp="20140623 15:02:49.280" level="INFO">${msisdn} = 642041010001</msg>
<status status="PASS" endtime="20140623 15:02:49.279" starttime="20140623 15:02:49.207"></status>
</kw>
<kw type="kw" timeout="" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:49.291" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.id=</msg>
<status status="PASS" endtime="20140623 15:02:49.291" starttime="20140623 15:02:49.289"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.294" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:49.294" starttime="20140623 15:02:49.292"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.297" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:49.297" starttime="20140623 15:02:49.295"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.302" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:49.303" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:49.304" starttime="20140623 15:02:49.299"></status>
</kw>
<msg timestamp="20140623 15:02:49.305" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:49.305" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,017 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15315</msg>
<status status="PASS" endtime="20140623 15:02:49.304" starttime="20140623 15:02:49.298"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.314" starttime="20140623 15:02:49.312"></status>
</kw>
<msg timestamp="20140623 15:02:49.315" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,017 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15315</msg>
<status status="PASS" endtime="20140623 15:02:49.314" starttime="20140623 15:02:49.306"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.324" starttime="20140623 15:02:49.322"></status>
</kw>
<msg timestamp="20140623 15:02:49.325" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,017 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.id=15315</msg>
<status status="PASS" endtime="20140623 15:02:49.324" starttime="20140623 15:02:49.316"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.334" starttime="20140623 15:02:49.332"></status>
</kw>
<msg timestamp="20140623 15:02:49.335" level="INFO">${resultCode} = 15315</msg>
<status status="PASS" endtime="20140623 15:02:49.335" starttime="20140623 15:02:49.326"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.349" starttime="20140623 15:02:49.347"></status>
</kw>
<msg timestamp="20140623 15:02:49.350" level="INFO">${resultCode} = 15315</msg>
<status status="PASS" endtime="20140623 15:02:49.349" starttime="20140623 15:02:49.336"></status>
</kw>
<msg timestamp="20140623 15:02:49.351" level="INFO">${id} = 15315</msg>
<status status="PASS" endtime="20140623 15:02:49.350" starttime="20140623 15:02:49.281"></status>
</kw>
<kw type="kw" timeout="" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:49.362" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.state=</msg>
<status status="PASS" endtime="20140623 15:02:49.362" starttime="20140623 15:02:49.360"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.365" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:49.365" starttime="20140623 15:02:49.363"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.368" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:49.368" starttime="20140623 15:02:49.366"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.373" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:49.374" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:49.375" starttime="20140623 15:02:49.371"></status>
</kw>
<msg timestamp="20140623 15:02:49.376" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:49.376" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,028 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:49.375" starttime="20140623 15:02:49.369"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.385" starttime="20140623 15:02:49.383"></status>
</kw>
<msg timestamp="20140623 15:02:49.386" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,028 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:49.385" starttime="20140623 15:02:49.377"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.395" starttime="20140623 15:02:49.393"></status>
</kw>
<msg timestamp="20140623 15:02:49.396" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,028 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.state=ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:49.395" starttime="20140623 15:02:49.387"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.405" starttime="20140623 15:02:49.403"></status>
</kw>
<msg timestamp="20140623 15:02:49.406" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:49.406" starttime="20140623 15:02:49.397"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.420" starttime="20140623 15:02:49.418"></status>
</kw>
<msg timestamp="20140623 15:02:49.421" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:49.420" starttime="20140623 15:02:49.407"></status>
</kw>
<msg timestamp="20140623 15:02:49.422" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20140623 15:02:49.422" starttime="20140623 15:02:49.353"></status>
</kw>
<kw type="kw" timeout="" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:49.433" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.tariffId=</msg>
<status status="PASS" endtime="20140623 15:02:49.433" starttime="20140623 15:02:49.431"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.436" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:49.436" starttime="20140623 15:02:49.434"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.439" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:49.439" starttime="20140623 15:02:49.437"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.482" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:49.484" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:49.485" starttime="20140623 15:02:49.442"></status>
</kw>
<msg timestamp="20140623 15:02:49.486" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:49.486" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,033 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140623 15:02:49.486" starttime="20140623 15:02:49.440"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.497" starttime="20140623 15:02:49.495"></status>
</kw>
<msg timestamp="20140623 15:02:49.498" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,033 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140623 15:02:49.498" starttime="20140623 15:02:49.487"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.507" starttime="20140623 15:02:49.505"></status>
</kw>
<msg timestamp="20140623 15:02:49.508" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,033 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.tariffId=101003</msg>
<status status="PASS" endtime="20140623 15:02:49.508" starttime="20140623 15:02:49.499"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.518" starttime="20140623 15:02:49.516"></status>
</kw>
<msg timestamp="20140623 15:02:49.519" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140623 15:02:49.518" starttime="20140623 15:02:49.509"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.533" starttime="20140623 15:02:49.531"></status>
</kw>
<msg timestamp="20140623 15:02:49.534" level="INFO">${resultCode} = 101003</msg>
<status status="PASS" endtime="20140623 15:02:49.533" starttime="20140623 15:02:49.520"></status>
</kw>
<msg timestamp="20140623 15:02:49.535" level="INFO">${tariffId} = 101003</msg>
<status status="PASS" endtime="20140623 15:02:49.535" starttime="20140623 15:02:49.424"></status>
</kw>
<kw type="kw" timeout="" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfileByImsi.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:49.547" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfileByImsi.output.type=</msg>
<status status="PASS" endtime="20140623 15:02:49.546" starttime="20140623 15:02:49.544"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.550" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:49.549" starttime="20140623 15:02:49.548"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.553" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:49.552" starttime="20140623 15:02:49.551"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.557" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:49.559" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:49.559" starttime="20140623 15:02:49.555"></status>
</kw>
<msg timestamp="20140623 15:02:49.560" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:49.561" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,038 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:49.560" starttime="20140623 15:02:49.553"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.570" starttime="20140623 15:02:49.568"></status>
</kw>
<msg timestamp="20140623 15:02:49.571" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,038 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:49.570" starttime="20140623 15:02:49.562"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.580" starttime="20140623 15:02:49.578"></status>
</kw>
<msg timestamp="20140623 15:02:49.581" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,038 INFO  [log] LowLevelOps.getSubscriberProfileByImsi.output.type=PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:49.580" starttime="20140623 15:02:49.572"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.591" starttime="20140623 15:02:49.588"></status>
</kw>
<msg timestamp="20140623 15:02:49.592" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:49.591" starttime="20140623 15:02:49.582"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.606" starttime="20140623 15:02:49.604"></status>
</kw>
<msg timestamp="20140623 15:02:49.607" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:49.606" starttime="20140623 15:02:49.593"></status>
</kw>
<msg timestamp="20140623 15:02:49.608" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:49.608" starttime="20140623 15:02:49.537"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfileByImsi</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.618" starttime="20140623 15:02:49.617"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.620" starttime="20140623 15:02:49.619"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.622" starttime="20140623 15:02:49.621"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:49.634" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetSubscriberProfileByImsi*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetSubscriberProfileByImsi*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:49.635" starttime="20140623 15:02:49.631"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:49.636" starttime="20140623 15:02:49.630"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:49.636" starttime="20140623 15:02:49.623"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:49.637" starttime="20140623 15:02:49.609"></status>
</kw>
<msg timestamp="20140623 15:02:49.640" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:49.641" level="INFO">${providerIdDummy} = 1</msg>
<msg timestamp="20140623 15:02:49.641" level="INFO">${msisdnDummy} = 642041010001</msg>
<msg timestamp="20140623 15:02:49.641" level="INFO">${subscriberId} = 15315</msg>
<msg timestamp="20140623 15:02:49.641" level="INFO">${stateDummy} = ACTIVE</msg>
<msg timestamp="20140623 15:02:49.642" level="INFO">${tariffIdDummy} = 101003</msg>
<msg timestamp="20140623 15:02:49.642" level="INFO">${typeDummy} = PREPAID</msg>
<status status="PASS" endtime="20140623 15:02:49.639" starttime="20140623 15:02:48.676"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying subscriberId for imsi=${imsi} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.648" starttime="20140623 15:02:49.643"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Delegate to</arg>
<arg>"CRCE Set Main Balance" ***</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.650" starttime="20140623 15:02:49.649"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Set Main Balance">
<doc>Sets the passed subscriber's main account balance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Retrieve accountId of main account ***</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.662" starttime="20140623 15:02:49.661"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${accountId}, ${balanceDummy}, ${categoryDummy}, ${currencyIdDummy} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
</arguments>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.685" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:49.686" starttime="20140623 15:02:49.683"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:49.686" starttime="20140623 15:02:49.681"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.691" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:49.692" starttime="20140623 15:02:49.689"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:49.693" starttime="20140623 15:02:49.687"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.698" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:49.698" starttime="20140623 15:02:49.695"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:49.699" starttime="20140623 15:02:49.693"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:49.699" starttime="20140623 15:02:49.674"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:49.703" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:49.703" starttime="20140623 15:02:49.700"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.707" starttime="20140623 15:02:49.704"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.710" starttime="20140623 15:02:49.708"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.714" starttime="20140623 15:02:49.711"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.716" starttime="20140623 15:02:49.714"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.718" starttime="20140623 15:02:49.717"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:49.721" starttime="20140623 15:02:49.719"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:49.725" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15315']</msg>
<msg timestamp="20140623 15:02:50.033" level="INFO">15:02:49,997 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
15:02:50,004 INFO  [log] LowLevelOps.getMainAccount.output.accountId=15316
15:02:50,010 INFO  [log] LowLevelOps.getMainAccount.output.balance=0
15:02:50,017 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
15:02:50,023 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140623 15:02:50.034" starttime="20140623 15:02:49.724"></status>
</kw>
<msg timestamp="20140623 15:02:50.037" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:50.037" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:50.035" starttime="20140623 15:02:49.722"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:50.048" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:50.048" starttime="20140623 15:02:50.046"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.051" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:50.051" starttime="20140623 15:02:50.049"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.054" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:50.054" starttime="20140623 15:02:50.052"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.059" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:50.060" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:50.060" starttime="20140623 15:02:50.057"></status>
</kw>
<msg timestamp="20140623 15:02:50.061" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:50.062" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,997 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:50.061" starttime="20140623 15:02:50.055"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.071" starttime="20140623 15:02:50.069"></status>
</kw>
<msg timestamp="20140623 15:02:50.072" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,997 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:50.071" starttime="20140623 15:02:50.063"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.081" starttime="20140623 15:02:50.079"></status>
</kw>
<msg timestamp="20140623 15:02:50.082" level="INFO">${return_log_entry} = 2014-06-23 15:02:49,997 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:50.081" starttime="20140623 15:02:50.073"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.091" starttime="20140623 15:02:50.089"></status>
</kw>
<msg timestamp="20140623 15:02:50.092" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:50.092" starttime="20140623 15:02:50.083"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.106" starttime="20140623 15:02:50.104"></status>
</kw>
<msg timestamp="20140623 15:02:50.107" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:50.106" starttime="20140623 15:02:50.093"></status>
</kw>
<msg timestamp="20140623 15:02:50.108" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:50.107" starttime="20140623 15:02:50.039"></status>
</kw>
<kw type="kw" timeout="" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:50.119" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20140623 15:02:50.119" starttime="20140623 15:02:50.117"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.122" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:50.122" starttime="20140623 15:02:50.120"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.125" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:50.125" starttime="20140623 15:02:50.123"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.130" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:50.131" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:50.131" starttime="20140623 15:02:50.128"></status>
</kw>
<msg timestamp="20140623 15:02:50.132" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:50.133" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,004 INFO  [log] LowLevelOps.getMainAccount.output.accountId=15316</msg>
<status status="PASS" endtime="20140623 15:02:50.132" starttime="20140623 15:02:50.126"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.141" starttime="20140623 15:02:50.140"></status>
</kw>
<msg timestamp="20140623 15:02:50.142" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,004 INFO  [log] LowLevelOps.getMainAccount.output.accountId=15316</msg>
<status status="PASS" endtime="20140623 15:02:50.142" starttime="20140623 15:02:50.134"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.152" starttime="20140623 15:02:50.150"></status>
</kw>
<msg timestamp="20140623 15:02:50.153" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,004 INFO  [log] LowLevelOps.getMainAccount.output.accountId=15316</msg>
<status status="PASS" endtime="20140623 15:02:50.152" starttime="20140623 15:02:50.143"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.162" starttime="20140623 15:02:50.160"></status>
</kw>
<msg timestamp="20140623 15:02:50.163" level="INFO">${resultCode} = 15316</msg>
<status status="PASS" endtime="20140623 15:02:50.163" starttime="20140623 15:02:50.154"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.176" starttime="20140623 15:02:50.175"></status>
</kw>
<msg timestamp="20140623 15:02:50.177" level="INFO">${resultCode} = 15316</msg>
<status status="PASS" endtime="20140623 15:02:50.177" starttime="20140623 15:02:50.164"></status>
</kw>
<msg timestamp="20140623 15:02:50.179" level="INFO">${accountId} = 15316</msg>
<status status="PASS" endtime="20140623 15:02:50.178" starttime="20140623 15:02:50.109"></status>
</kw>
<kw type="kw" timeout="" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:50.190" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20140623 15:02:50.190" starttime="20140623 15:02:50.188"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.193" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:50.193" starttime="20140623 15:02:50.191"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.196" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:50.196" starttime="20140623 15:02:50.194"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.201" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:50.202" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:50.203" starttime="20140623 15:02:50.199"></status>
</kw>
<msg timestamp="20140623 15:02:50.204" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:50.204" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,010 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140623 15:02:50.203" starttime="20140623 15:02:50.197"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.213" starttime="20140623 15:02:50.211"></status>
</kw>
<msg timestamp="20140623 15:02:50.214" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,010 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140623 15:02:50.214" starttime="20140623 15:02:50.205"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.223" starttime="20140623 15:02:50.221"></status>
</kw>
<msg timestamp="20140623 15:02:50.224" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,010 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20140623 15:02:50.224" starttime="20140623 15:02:50.215"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.233" starttime="20140623 15:02:50.231"></status>
</kw>
<msg timestamp="20140623 15:02:50.234" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140623 15:02:50.234" starttime="20140623 15:02:50.225"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.248" starttime="20140623 15:02:50.246"></status>
</kw>
<msg timestamp="20140623 15:02:50.249" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20140623 15:02:50.249" starttime="20140623 15:02:50.235"></status>
</kw>
<msg timestamp="20140623 15:02:50.250" level="INFO">${balance} = 0</msg>
<status status="PASS" endtime="20140623 15:02:50.250" starttime="20140623 15:02:50.180"></status>
</kw>
<kw type="kw" timeout="" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:50.262" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20140623 15:02:50.261" starttime="20140623 15:02:50.259"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.265" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:50.264" starttime="20140623 15:02:50.263"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.267" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:50.267" starttime="20140623 15:02:50.265"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.272" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:50.273" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:50.274" starttime="20140623 15:02:50.270"></status>
</kw>
<msg timestamp="20140623 15:02:50.275" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:50.275" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,017 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140623 15:02:50.274" starttime="20140623 15:02:50.268"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.284" starttime="20140623 15:02:50.282"></status>
</kw>
<msg timestamp="20140623 15:02:50.285" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,017 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140623 15:02:50.284" starttime="20140623 15:02:50.276"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.334" starttime="20140623 15:02:50.292"></status>
</kw>
<msg timestamp="20140623 15:02:50.335" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,017 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20140623 15:02:50.334" starttime="20140623 15:02:50.286"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.345" starttime="20140623 15:02:50.343"></status>
</kw>
<msg timestamp="20140623 15:02:50.346" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140623 15:02:50.346" starttime="20140623 15:02:50.336"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.359" starttime="20140623 15:02:50.358"></status>
</kw>
<msg timestamp="20140623 15:02:50.360" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20140623 15:02:50.360" starttime="20140623 15:02:50.347"></status>
</kw>
<msg timestamp="20140623 15:02:50.362" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20140623 15:02:50.361" starttime="20140623 15:02:50.252"></status>
</kw>
<kw type="kw" timeout="" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:50.374" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20140623 15:02:50.374" starttime="20140623 15:02:50.371"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.377" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:50.377" starttime="20140623 15:02:50.375"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.380" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:50.380" starttime="20140623 15:02:50.378"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.385" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:50.386" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:50.386" starttime="20140623 15:02:50.383"></status>
</kw>
<msg timestamp="20140623 15:02:50.387" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:50.388" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,023 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140623 15:02:50.387" starttime="20140623 15:02:50.381"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.397" starttime="20140623 15:02:50.395"></status>
</kw>
<msg timestamp="20140623 15:02:50.398" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,023 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140623 15:02:50.397" starttime="20140623 15:02:50.389"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.407" starttime="20140623 15:02:50.405"></status>
</kw>
<msg timestamp="20140623 15:02:50.408" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,023 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20140623 15:02:50.407" starttime="20140623 15:02:50.398"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.417" starttime="20140623 15:02:50.415"></status>
</kw>
<msg timestamp="20140623 15:02:50.418" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140623 15:02:50.418" starttime="20140623 15:02:50.409"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.432" starttime="20140623 15:02:50.430"></status>
</kw>
<msg timestamp="20140623 15:02:50.433" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20140623 15:02:50.432" starttime="20140623 15:02:50.419"></status>
</kw>
<msg timestamp="20140623 15:02:50.434" level="INFO">${currencyId} = 1</msg>
<status status="PASS" endtime="20140623 15:02:50.434" starttime="20140623 15:02:50.364"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.444" starttime="20140623 15:02:50.442"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.446" starttime="20140623 15:02:50.445"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.448" starttime="20140623 15:02:50.446"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:50.460" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:50.460" starttime="20140623 15:02:50.457"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.461" starttime="20140623 15:02:50.455"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.461" starttime="20140623 15:02:50.448"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.462" starttime="20140623 15:02:50.435"></status>
</kw>
<msg timestamp="20140623 15:02:50.465" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:02:50.465" level="INFO">${accountId} = 15316</msg>
<msg timestamp="20140623 15:02:50.466" level="INFO">${balanceDummy} = 0</msg>
<msg timestamp="20140623 15:02:50.466" level="INFO">${categoryDummy} = MAIN</msg>
<msg timestamp="20140623 15:02:50.466" level="INFO">${currencyIdDummy} = 1</msg>
<status status="PASS" endtime="20140623 15:02:50.464" starttime="20140623 15:02:49.664"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Querying main account of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.472" starttime="20140623 15:02:50.467"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Set new balance ***</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.474" starttime="20140623 15:02:50.473"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Set Balance">
<doc>This is a delegator to the CRCE webservice operation setBalance</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${subscriberId}</arg>
<arg>${accountId}</arg>
<arg>${balance}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE Set Balance( subscriberId=${subscriberId}, accountId=${accountId}, balance=${balance})</arg>
</arguments>
<msg timestamp="20140623 15:02:50.488" level="INFO">CRCE Set Balance( subscriberId=15315, accountId=15316, balance=10000000)</msg>
<status status="PASS" endtime="20140623 15:02:50.489" starttime="20140623 15:02:50.486"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.502" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:50.503" starttime="20140623 15:02:50.500"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.504" starttime="20140623 15:02:50.498"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.509" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:50.509" starttime="20140623 15:02:50.506"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.510" starttime="20140623 15:02:50.505"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.515" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:02:50.515" starttime="20140623 15:02:50.512"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.516" starttime="20140623 15:02:50.511"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.516" starttime="20140623 15:02:50.492"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.520" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:02:50.520" starttime="20140623 15:02:50.517"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.524" starttime="20140623 15:02:50.521"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.527" starttime="20140623 15:02:50.525"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.531" starttime="20140623 15:02:50.528"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.533" starttime="20140623 15:02:50.532"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>setBalance</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.535" starttime="20140623 15:02:50.534"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.539" starttime="20140623 15:02:50.536"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.accountId=${accountId}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.542" starttime="20140623 15:02:50.540"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.setBalance.input.amount=${balance}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.545" starttime="20140623 15:02:50.543"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:02:50.549" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=10000000']</msg>
<msg timestamp="20140623 15:02:50.835" level="INFO">15:02:50,825 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:50.835" starttime="20140623 15:02:50.548"></status>
</kw>
<msg timestamp="20140623 15:02:50.836" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:50.837" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:02:50.836" starttime="20140623 15:02:50.546"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.setBalance.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:02:50.849" level="INFO">${return_marker} = LowLevelOps.setBalance.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:02:50.848" starttime="20140623 15:02:50.846"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.852" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:02:50.851" starttime="20140623 15:02:50.850"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.855" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:02:50.854" starttime="20140623 15:02:50.853"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.859" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:02:50.860" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:02:50.861" starttime="20140623 15:02:50.857"></status>
</kw>
<msg timestamp="20140623 15:02:50.862" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:02:50.862" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,825 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:50.861" starttime="20140623 15:02:50.856"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.871" starttime="20140623 15:02:50.869"></status>
</kw>
<msg timestamp="20140623 15:02:50.872" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,825 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:50.872" starttime="20140623 15:02:50.863"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.881" starttime="20140623 15:02:50.879"></status>
</kw>
<msg timestamp="20140623 15:02:50.882" level="INFO">${return_log_entry} = 2014-06-23 15:02:50,825 INFO  [log] LowLevelOps.setBalance.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:02:50.882" starttime="20140623 15:02:50.873"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.892" starttime="20140623 15:02:50.889"></status>
</kw>
<msg timestamp="20140623 15:02:50.892" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:50.892" starttime="20140623 15:02:50.883"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.906" starttime="20140623 15:02:50.904"></status>
</kw>
<msg timestamp="20140623 15:02:50.907" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:50.906" starttime="20140623 15:02:50.893"></status>
</kw>
<msg timestamp="20140623 15:02:50.908" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:50.908" starttime="20140623 15:02:50.838"></status>
</kw>
<kw type="kw" timeout="" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-SetBalance</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.918" starttime="20140623 15:02:50.916"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.919" starttime="20140623 15:02:50.918"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.921" starttime="20140623 15:02:50.920"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:02:50.933" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-SetBalance*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:02:50.934" starttime="20140623 15:02:50.930"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.934" starttime="20140623 15:02:50.928"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.935" starttime="20140623 15:02:50.922"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.935" starttime="20140623 15:02:50.909"></status>
</kw>
<msg timestamp="20140623 15:02:50.936" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:02:50.936" starttime="20140623 15:02:50.477"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'!='OK'</arg>
<arg>Fail</arg>
<arg>msg=Setting balance of main accountId=${accountId} of subscriberId=${subscriberId} failed with resultCode= ${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.942" starttime="20140623 15:02:50.937"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.943" starttime="20140623 15:02:49.652"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.944" starttime="20140623 15:02:48.663"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Expose corresponding suite global variables *******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:50.947" starttime="20140623 15:02:50.946"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.949" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_IMSI} = 530052041010000</msg>
<status status="PASS" endtime="20140623 15:02:50.950" starttime="20140623 15:02:50.948"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.952" level="INFO">${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN} = 642041010000</msg>
<status status="PASS" endtime="20140623 15:02:50.953" starttime="20140623 15:02:50.951"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_DESTINATION_IMSI}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.955" level="INFO">${FAKE_DESTINATION_IMSI} = 530052041010001</msg>
<status status="PASS" endtime="20140623 15:02:50.955" starttime="20140623 15:02:50.953"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_DESTINATION_MSISDN}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.957" level="INFO">${FAKE_DESTINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140623 15:02:50.958" starttime="20140623 15:02:50.956"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${FAKE_ORIGINATION_MSISDN}</arg>
</arguments>
<msg timestamp="20140623 15:02:50.960" level="INFO">${FAKE_ORIGINATION_MSISDN} = 642041010001</msg>
<status status="PASS" endtime="20140623 15:02:50.961" starttime="20140623 15:02:50.959"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.961" starttime="20140623 15:02:34.322"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.962" starttime="20140623 15:02:34.315"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:50.963" starttime="20140623 15:01:49.135"></status>
</kw>
<test id="s1-t1" timeout="" name="Run Prepaid MTC NoAnswer">
<kw type="setup" timeout="" name="InewSelenium2Library.Open Browser">
<doc></doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>firefox</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:55.400" starttime="20140623 15:02:50.983"></status>
</kw>
<kw type="kw" timeout="" name="Run Duration Monitored NoAnswer Call And Check Nonexistent Ticket">
<doc>Runs an unanswered call attempt between the passed devices and</doc>
<arguments>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
<arg>${ATTACHED_PHONE_1_MSISDN_FORMAT1}</arg>
<arg>${BCSM_NOANSWER_EVENT_TIMER_SECS}</arg>
</arguments>
<kw type="kw" timeout="" name="${phone1_imsi} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'=='true'</arg>
<arg>Set Variable</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${cd_device_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:55.432" starttime="20140623 15:02:55.430"></status>
</kw>
<msg timestamp="20140623 15:02:55.433" level="INFO">${phone1_imsi} = 530052041010000</msg>
<status status="PASS" endtime="20140623 15:02:55.432" starttime="20140623 15:02:55.421"></status>
</kw>
<kw type="kw" timeout="" name="${marker_ticket_timestamp}, ${type_dummy} = crm_support-resource.CRM Get Latest Ticket">
<doc>queries the passed subscriber's latest CRM ticket</doc>
<arguments>
<arg>${phone1_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Login">
<doc>Logs into the CRM portal via login page</doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>${CRM_PORTAL_USER}</arg>
<arg>${CRM_PORTAL_PSWD}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Ensure beeing in Login page ******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:55.453" starttime="20140623 15:02:55.452"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140623 15:02:55.542" level="INFO">${isLoginPage} = true</msg>
<status status="PASS" endtime="20140623 15:02:55.541" starttime="20140623 15:02:55.454"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>CRM Portal Logout</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:55.548" starttime="20140623 15:02:55.543"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140623 15:02:55.565" level="INFO">${isLoginPage} = true</msg>
<status status="PASS" endtime="20140623 15:02:55.565" starttime="20140623 15:02:55.549"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>Go To</arg>
<arg>${crm_portal_login_url}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:55.572" starttime="20140623 15:02:55.567"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
<arg>timeout=10s</arg>
<arg>error=Login Page not displayed</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:55.590" starttime="20140623 15:02:55.573"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** log in to CRM as Customer Care user ******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:55.593" starttime="20140623 15:02:55.591"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogin</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:55.600" starttime="20140623 15:02:55.594"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=username</arg>
<arg>${crm_portal_user}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:55.723" starttime="20140623 15:02:55.601"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=password</arg>
<arg>${crm_portal_pswd}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:55.819" starttime="20140623 15:02:55.725"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:57.427" starttime="20140623 15:02:55.820"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogin</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:57.437" starttime="20140623 15:02:57.431"></status>
</kw>
<status status="PASS" endtime="20140623 15:02:57.438" starttime="20140623 15:02:55.444"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** CRM: in dashboard enter IMSI and press Submit</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:57.441" starttime="20140623 15:02:57.440"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterInput</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:57.447" starttime="20140623 15:02:57.442"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=filter_imsi</arg>
<arg>${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:57.537" starttime="20140623 15:02:57.448"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** in History tab, get the interesting cells of the first data row</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:57.541" starttime="20140623 15:02:57.539"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterSubmit</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:57.548" starttime="20140623 15:02:57.543"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Submit']</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:59.335" starttime="20140623 15:02:57.549"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
<arg>timeout=10s</arg>
<arg>error=History Tab NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:59.465" starttime="20140623 15:02:59.339"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:59.664" starttime="20140623 15:02:59.467"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Select Frame">
<doc></doc>
<arguments>
<arg>contentiframe</arg>
</arguments>
<status status="PASS" endtime="20140623 15:02:59.730" starttime="20140623 15:02:59.666"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
<arg>timeout=10s</arg>
<arg>error=History Search button NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:00.408" starttime="20140623 15:02:59.732"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:00.534" starttime="20140623 15:03:00.411"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>timeout=10s</arg>
<arg>error=History Table not displayed</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:01.339" starttime="20140623 15:03:00.536"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_NEWEST_ROW} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140623 15:03:01.344" level="INFO">${HISTORY_NEWEST_ROW} = 2</msg>
<status status="PASS" endtime="20140623 15:03:01.343" starttime="20140623 15:03:01.342"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_DATETIME_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20140623 15:03:01.349" level="INFO">${HISTORY_DATETIME_COL} = 1</msg>
<status status="PASS" endtime="20140623 15:03:01.348" starttime="20140623 15:03:01.346"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CALLINGCALLED_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140623 15:03:01.354" level="INFO">${HISTORY_CALLINGCALLED_COL} = 2</msg>
<status status="PASS" endtime="20140623 15:03:01.353" starttime="20140623 15:03:01.351"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_TYPE_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20140623 15:03:01.358" level="INFO">${HISTORY_TYPE_COL} = 5</msg>
<status status="PASS" endtime="20140623 15:03:01.358" starttime="20140623 15:03:01.355"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CANNEL_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>9</arg>
</arguments>
<msg timestamp="20140623 15:03:01.362" level="INFO">${HISTORY_CANNEL_COL} = 9</msg>
<status status="PASS" endtime="20140623 15:03:01.362" starttime="20140623 15:03:01.360"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${datetime} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_DATETIME_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_DATETIME_COL}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:01.503" starttime="20140623 15:03:01.367"></status>
</kw>
<msg timestamp="20140623 15:03:01.505" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140623 15:03:01.506" level="INFO">${datetime} = 24/06/2014 - 02:59:50</msg>
<status status="PASS" endtime="20140623 15:03:01.504" starttime="20140623 15:03:01.363"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${callingcalled} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CALLINGCALLED_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CALLINGCALLED_COL}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:01.597" starttime="20140623 15:03:01.510"></status>
</kw>
<msg timestamp="20140623 15:03:01.599" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140623 15:03:01.599" level="INFO">${callingcalled} = </msg>
<status status="PASS" endtime="20140623 15:03:01.598" starttime="20140623 15:03:01.508"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${type} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_TYPE_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_TYPE_COL}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:01.734" starttime="20140623 15:03:01.603"></status>
</kw>
<msg timestamp="20140623 15:03:01.735" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140623 15:03:01.736" level="INFO">${type} = tariffPlanTopup</msg>
<status status="PASS" endtime="20140623 15:03:01.735" starttime="20140623 15:03:01.600"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${channel} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CANNEL_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CANNEL_COL}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:01.837" starttime="20140623 15:03:01.739"></status>
</kw>
<msg timestamp="20140623 15:03:01.839" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140623 15:03:01.840" level="INFO">${channel} = AUTOMATIC</msg>
<status status="PASS" endtime="20140623 15:03:01.839" starttime="20140623 15:03:01.737"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Unselect Frame">
<doc></doc>
<arguments>
</arguments>
<status status="PASS" endtime="20140623 15:03:01.856" starttime="20140623 15:03:01.842"></status>
</kw>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Logout">
<doc>Clicks the logout button of the current page if it is available</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogout</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:01.872" starttime="20140623 15:03:01.867"></status>
</kw>
<kw type="kw" timeout="" name="${pageContainsLogout} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<msg timestamp="20140623 15:03:01.888" level="INFO">${pageContainsLogout} = true</msg>
<status status="PASS" endtime="20140623 15:03:01.887" starttime="20140623 15:03:01.874"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pageContainsLogout}'=='true'</arg>
<arg>Click Element</arg>
<arg>id=logout</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:02.451" starttime="20140623 15:03:01.897"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:02.454" starttime="20140623 15:03:01.890"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogout</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:02.470" starttime="20140623 15:03:02.457"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:02.471" starttime="20140623 15:03:01.858"></status>
</kw>
<msg timestamp="20140623 15:03:02.475" level="INFO">${marker_ticket_timestamp} = 24/06/2014 - 02:59:50</msg>
<msg timestamp="20140623 15:03:02.475" level="INFO">${type_dummy} = [u'', u'tariffPlanTopup', u'AUTOMATIC']</msg>
<status status="PASS" endtime="20140623 15:03:02.473" starttime="20140623 15:02:55.436"></status>
</kw>
<kw type="kw" timeout="" name="${DIALING_DURATION_TOLERANCE_SECS} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<msg timestamp="20140623 15:03:02.478" level="INFO">${DIALING_DURATION_TOLERANCE_SECS} = 3</msg>
<status status="PASS" endtime="20140623 15:03:02.478" starttime="20140623 15:03:02.476"></status>
</kw>
<kw type="kw" timeout="" name="${max_limes} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${target_dialing_duration_secs}+${DIALING_DURATION_TOLERANCE_SECS}</arg>
</arguments>
<msg timestamp="20140623 15:03:02.485" level="INFO">${max_limes} = 5</msg>
<status status="PASS" endtime="20140623 15:03:02.485" starttime="20140623 15:03:02.479"></status>
</kw>
<kw type="kw" timeout="" name="${min_limes} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${target_dialing_duration_secs}-${DIALING_DURATION_TOLERANCE_SECS}</arg>
</arguments>
<msg timestamp="20140623 15:03:02.493" level="INFO">${min_limes} = -1</msg>
<status status="PASS" endtime="20140623 15:03:02.492" starttime="20140623 15:03:02.487"></status>
</kw>
<kw type="kw" timeout="" name="${max_limes_overflow} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${target_dialing_duration_secs}+2*${DIALING_DURATION_TOLERANCE_SECS}</arg>
</arguments>
<msg timestamp="20140623 15:03:02.501" level="INFO">${max_limes_overflow} = 8</msg>
<status status="PASS" endtime="20140623 15:03:02.500" starttime="20140623 15:03:02.494"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>For succeeding test run</arg>
<arg>${duration_secs}=</arg>
<arg>Run Unanswered Dialing And Return Duration</arg>
<arg>${cg_device_imsi}</arg>
<arg>${cd_device_msisdn}</arg>
<arg>${max_limes_overflow}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:02.504" starttime="20140623 15:03:02.502"></status>
</kw>
<kw type="kw" timeout="" name="${duration_secs} = Run Unanswered Dialing And Return Duration">
<doc>Dials the passed number and monitors the duration the phone stays in DIALING state before it switches back to IDLE</doc>
<arguments>
<arg>${cg_device_imsi}</arg>
<arg>${cd_device_msisdn}</arg>
<arg>${target_dialing_duration_secs}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>********************* Dial ***********************************</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:02.517" starttime="20140623 15:03:02.516"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Dial">
<doc>Dials a phone number on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${cg_device_imsi}</arg>
<arg>${cd_device_msisdn}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:02.547" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:02.548" starttime="20140623 15:03:02.544"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:02.548" starttime="20140623 15:03:02.542"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:02.554" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:02.555" starttime="20140623 15:03:02.551"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:02.556" starttime="20140623 15:03:02.549"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:02.562" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:02.562" starttime="20140623 15:03:02.559"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:02.563" starttime="20140623 15:03:02.557"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:02.564" starttime="20140623 15:03:02.533"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:02.568" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:02.569" starttime="20140623 15:03:02.565"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:02.572" starttime="20140623 15:03:02.570"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:02.576" starttime="20140623 15:03:02.574"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:02.578" starttime="20140623 15:03:02.577"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.dial</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:02.581" starttime="20140623 15:03:02.579"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.dial.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:02.584" starttime="20140623 15:03:02.582"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.dial.input.phoneNumber=${phone number}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:02.588" starttime="20140623 15:03:02.585"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:02.592" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.dial.input.deviceImsi=232033013972239', u'LowLevelOps.Voice.dial.input.phoneNumber=0676844901411']</msg>
<msg timestamp="20140623 15:03:03.561" level="INFO">15:03:03,525 INFO  [log] LowLevelOps.Voice.dial.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:03.561" starttime="20140623 15:03:02.591"></status>
</kw>
<msg timestamp="20140623 15:03:03.564" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:03.565" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:03:03.563" starttime="20140623 15:03:02.589"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.dial.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:03.577" level="INFO">${return_marker} = LowLevelOps.Voice.dial.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:03.577" starttime="20140623 15:03:03.575"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:03.581" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:03.580" starttime="20140623 15:03:03.579"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:03.584" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:03.583" starttime="20140623 15:03:03.582"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:03.589" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:03.594" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:03.595" starttime="20140623 15:03:03.587"></status>
</kw>
<msg timestamp="20140623 15:03:03.596" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:03.596" level="INFO">${return_log_entry} = 2014-06-23 15:03:03,525 INFO  [log] LowLevelOps.Voice.dial.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:03.596" starttime="20140623 15:03:03.585"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:03.606" starttime="20140623 15:03:03.604"></status>
</kw>
<msg timestamp="20140623 15:03:03.607" level="INFO">${return_log_entry} = 2014-06-23 15:03:03,525 INFO  [log] LowLevelOps.Voice.dial.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:03.606" starttime="20140623 15:03:03.597"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:03.616" starttime="20140623 15:03:03.614"></status>
</kw>
<msg timestamp="20140623 15:03:03.617" level="INFO">${return_log_entry} = 2014-06-23 15:03:03,525 INFO  [log] LowLevelOps.Voice.dial.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:03.617" starttime="20140623 15:03:03.608"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:03.627" starttime="20140623 15:03:03.625"></status>
</kw>
<msg timestamp="20140623 15:03:03.628" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:03.628" starttime="20140623 15:03:03.618"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:03.643" starttime="20140623 15:03:03.641"></status>
</kw>
<msg timestamp="20140623 15:03:03.644" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:03.643" starttime="20140623 15:03:03.629"></status>
</kw>
<msg timestamp="20140623 15:03:03.645" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:03.645" starttime="20140623 15:03:03.567"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicedial</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:03.656" starttime="20140623 15:03:03.655"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:03.658" starttime="20140623 15:03:03.657"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:03.660" starttime="20140623 15:03:03.659"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:03.677" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicedial*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicedial*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:03:03.678" starttime="20140623 15:03:03.670"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:03.679" starttime="20140623 15:03:03.668"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:03.679" starttime="20140623 15:03:03.661"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:03.680" starttime="20140623 15:03:03.646"></status>
</kw>
<msg timestamp="20140623 15:03:03.682" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:03.681" starttime="20140623 15:03:02.520"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20140623 15:03:03.685" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:03.685" starttime="20140623 15:03:03.683"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>********************* Wait until state changed OR max time elapsed ***********************************</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:03.687" starttime="20140623 15:03:03.686"></status>
</kw>
<kw type="kw" timeout="" name="${elapsed_secs} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<msg timestamp="20140623 15:03:03.690" level="INFO">${elapsed_secs} = 0</msg>
<status status="PASS" endtime="20140623 15:03:03.690" starttime="20140623 15:03:03.688"></status>
</kw>
<kw type="for" timeout="" name="${second} IN RANGE [ 0 | ${max_duration_secs} ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" timeout="" name="${second} = 0">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20140623 15:03:04.695" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20140623 15:03:04.696" starttime="20140623 15:03:03.693"></status>
</kw>
<kw type="kw" timeout="" name="${elapsed_secs} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${elapsed_secs}+1</arg>
</arguments>
<msg timestamp="20140623 15:03:04.704" level="INFO">${elapsed_secs} = 1</msg>
<status status="PASS" endtime="20140623 15:03:04.703" starttime="20140623 15:03:04.698"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${cg_device_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:03:04.717" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140623 15:03:04.718" starttime="20140623 15:03:04.715"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:04.732" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:04.732" starttime="20140623 15:03:04.729"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:04.733" starttime="20140623 15:03:04.727"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:04.738" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:04.739" starttime="20140623 15:03:04.736"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:04.739" starttime="20140623 15:03:04.734"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:04.745" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:04.746" starttime="20140623 15:03:04.742"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:04.747" starttime="20140623 15:03:04.740"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:04.747" starttime="20140623 15:03:04.721"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:04.751" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:04.751" starttime="20140623 15:03:04.748"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:04.754" starttime="20140623 15:03:04.752"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:04.758" starttime="20140623 15:03:04.755"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:04.760" starttime="20140623 15:03:04.759"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:04.762" starttime="20140623 15:03:04.761"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:04.766" starttime="20140623 15:03:04.763"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:04.791" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.dial.input.deviceImsi=232033013972239', u'LowLevelOps.Voice.dial.input.phoneNumber=0676844901411', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140623 15:03:05.155" level="INFO">15:03:05,106 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=DIALING
15:03:05,111 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:05.157" starttime="20140623 15:03:04.788"></status>
</kw>
<msg timestamp="20140623 15:03:05.161" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:05.161" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:03:05.159" starttime="20140623 15:03:04.767"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:05.181" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:05.181" starttime="20140623 15:03:05.177"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:05.186" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:05.186" starttime="20140623 15:03:05.183"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:05.191" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:05.190" starttime="20140623 15:03:05.188"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:05.199" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:05.200" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:05.201" starttime="20140623 15:03:05.195"></status>
</kw>
<msg timestamp="20140623 15:03:05.203" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:05.203" level="INFO">${return_log_entry} = 2014-06-23 15:03:05,111 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:05.202" starttime="20140623 15:03:05.192"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:05.217" starttime="20140623 15:03:05.214"></status>
</kw>
<msg timestamp="20140623 15:03:05.218" level="INFO">${return_log_entry} = 2014-06-23 15:03:05,111 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:05.218" starttime="20140623 15:03:05.205"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:05.228" starttime="20140623 15:03:05.225"></status>
</kw>
<msg timestamp="20140623 15:03:05.229" level="INFO">${return_log_entry} = 2014-06-23 15:03:05,111 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:05.228" starttime="20140623 15:03:05.219"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:05.239" starttime="20140623 15:03:05.236"></status>
</kw>
<msg timestamp="20140623 15:03:05.240" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:05.239" starttime="20140623 15:03:05.230"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:05.254" starttime="20140623 15:03:05.251"></status>
</kw>
<msg timestamp="20140623 15:03:05.255" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:05.254" starttime="20140623 15:03:05.241"></status>
</kw>
<msg timestamp="20140623 15:03:05.256" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:05.256" starttime="20140623 15:03:05.165"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:05.268" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140623 15:03:05.267" starttime="20140623 15:03:05.265"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:05.273" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:05.272" starttime="20140623 15:03:05.270"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:05.278" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:05.277" starttime="20140623 15:03:05.275"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:05.285" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:05.287" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:05.287" starttime="20140623 15:03:05.282"></status>
</kw>
<msg timestamp="20140623 15:03:05.288" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:05.288" level="INFO">${return_log_entry} = 2014-06-23 15:03:05,106 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=DIALING</msg>
<status status="PASS" endtime="20140623 15:03:05.288" starttime="20140623 15:03:05.279"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:05.298" starttime="20140623 15:03:05.296"></status>
</kw>
<msg timestamp="20140623 15:03:05.299" level="INFO">${return_log_entry} = 2014-06-23 15:03:05,106 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=DIALING</msg>
<status status="PASS" endtime="20140623 15:03:05.298" starttime="20140623 15:03:05.289"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:05.308" starttime="20140623 15:03:05.306"></status>
</kw>
<msg timestamp="20140623 15:03:05.309" level="INFO">${return_log_entry} = 2014-06-23 15:03:05,106 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=DIALING</msg>
<status status="PASS" endtime="20140623 15:03:05.309" starttime="20140623 15:03:05.300"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:05.319" starttime="20140623 15:03:05.317"></status>
</kw>
<msg timestamp="20140623 15:03:05.320" level="INFO">${resultCode} = DIALING</msg>
<status status="PASS" endtime="20140623 15:03:05.320" starttime="20140623 15:03:05.310"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:05.334" starttime="20140623 15:03:05.332"></status>
</kw>
<msg timestamp="20140623 15:03:05.335" level="INFO">${resultCode} = DIALING</msg>
<status status="PASS" endtime="20140623 15:03:05.334" starttime="20140623 15:03:05.321"></status>
</kw>
<msg timestamp="20140623 15:03:05.336" level="INFO">${voice_state} = DIALING</msg>
<status status="PASS" endtime="20140623 15:03:05.336" starttime="20140623 15:03:05.258"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:05.346" starttime="20140623 15:03:05.345"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:05.348" starttime="20140623 15:03:05.347"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:05.350" starttime="20140623 15:03:05.349"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:05.363" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:03:05.364" starttime="20140623 15:03:05.359"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:05.365" starttime="20140623 15:03:05.357"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:05.366" starttime="20140623 15:03:05.351"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:05.367" starttime="20140623 15:03:05.337"></status>
</kw>
<msg timestamp="20140623 15:03:05.369" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:03:05.370" level="INFO">${voice_state} = DIALING</msg>
<status status="PASS" endtime="20140623 15:03:05.368" starttime="20140623 15:03:04.707"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying caling device (IMSI=${cg_device_imsi}) state failed with resultCode=${resultCode}</arg>
</arguments>
<msg timestamp="20140623 15:03:05.374" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:05.375" starttime="20140623 15:03:05.371"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${voice_state}' == 'IDLE'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:05.381" starttime="20140623 15:03:05.376"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:05.382" starttime="20140623 15:03:03.692"></status>
</kw>
<kw type="foritem" timeout="" name="${second} = 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20140623 15:03:06.388" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20140623 15:03:06.389" starttime="20140623 15:03:05.385"></status>
</kw>
<kw type="kw" timeout="" name="${elapsed_secs} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${elapsed_secs}+1</arg>
</arguments>
<msg timestamp="20140623 15:03:06.396" level="INFO">${elapsed_secs} = 2</msg>
<status status="PASS" endtime="20140623 15:03:06.396" starttime="20140623 15:03:06.390"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${cg_device_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:03:06.410" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140623 15:03:06.411" starttime="20140623 15:03:06.408"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:06.424" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:06.425" starttime="20140623 15:03:06.422"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:06.426" starttime="20140623 15:03:06.420"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:06.431" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:06.432" starttime="20140623 15:03:06.428"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:06.432" starttime="20140623 15:03:06.427"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:06.437" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:06.438" starttime="20140623 15:03:06.435"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:06.439" starttime="20140623 15:03:06.433"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:06.439" starttime="20140623 15:03:06.413"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:06.443" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:06.443" starttime="20140623 15:03:06.440"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:06.447" starttime="20140623 15:03:06.444"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:06.450" starttime="20140623 15:03:06.448"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:06.453" starttime="20140623 15:03:06.451"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:06.455" starttime="20140623 15:03:06.453"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:06.458" starttime="20140623 15:03:06.456"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:06.462" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.dial.input.deviceImsi=232033013972239', u'LowLevelOps.Voice.dial.input.phoneNumber=0676844901411', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140623 15:03:06.830" level="INFO">15:03:06,787 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=DIALING
15:03:06,792 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:06.831" starttime="20140623 15:03:06.460"></status>
</kw>
<msg timestamp="20140623 15:03:06.832" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:06.832" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:03:06.832" starttime="20140623 15:03:06.459"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:06.844" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:06.843" starttime="20140623 15:03:06.841"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:06.847" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:06.847" starttime="20140623 15:03:06.845"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:06.850" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:06.849" starttime="20140623 15:03:06.848"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:06.855" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:06.856" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:06.857" starttime="20140623 15:03:06.853"></status>
</kw>
<msg timestamp="20140623 15:03:06.858" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:06.858" level="INFO">${return_log_entry} = 2014-06-23 15:03:06,792 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:06.857" starttime="20140623 15:03:06.851"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:06.867" starttime="20140623 15:03:06.865"></status>
</kw>
<msg timestamp="20140623 15:03:06.868" level="INFO">${return_log_entry} = 2014-06-23 15:03:06,792 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:06.867" starttime="20140623 15:03:06.859"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:06.877" starttime="20140623 15:03:06.875"></status>
</kw>
<msg timestamp="20140623 15:03:06.878" level="INFO">${return_log_entry} = 2014-06-23 15:03:06,792 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:06.878" starttime="20140623 15:03:06.869"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:06.888" starttime="20140623 15:03:06.886"></status>
</kw>
<msg timestamp="20140623 15:03:06.889" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:06.888" starttime="20140623 15:03:06.879"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:06.902" starttime="20140623 15:03:06.900"></status>
</kw>
<msg timestamp="20140623 15:03:06.903" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:06.903" starttime="20140623 15:03:06.890"></status>
</kw>
<msg timestamp="20140623 15:03:06.904" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:06.904" starttime="20140623 15:03:06.834"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:06.916" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140623 15:03:06.916" starttime="20140623 15:03:06.913"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:06.919" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:06.919" starttime="20140623 15:03:06.917"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:06.924" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:06.923" starttime="20140623 15:03:06.921"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:06.933" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:06.934" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:06.935" starttime="20140623 15:03:06.929"></status>
</kw>
<msg timestamp="20140623 15:03:06.937" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:06.938" level="INFO">${return_log_entry} = 2014-06-23 15:03:06,787 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=DIALING</msg>
<status status="PASS" endtime="20140623 15:03:06.936" starttime="20140623 15:03:06.926"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:06.984" starttime="20140623 15:03:06.979"></status>
</kw>
<msg timestamp="20140623 15:03:06.985" level="INFO">${return_log_entry} = 2014-06-23 15:03:06,787 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=DIALING</msg>
<status status="PASS" endtime="20140623 15:03:06.985" starttime="20140623 15:03:06.939"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:06.999" starttime="20140623 15:03:06.996"></status>
</kw>
<msg timestamp="20140623 15:03:07.002" level="INFO">${return_log_entry} = 2014-06-23 15:03:06,787 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=DIALING</msg>
<status status="PASS" endtime="20140623 15:03:07.000" starttime="20140623 15:03:06.987"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:07.017" starttime="20140623 15:03:07.013"></status>
</kw>
<msg timestamp="20140623 15:03:07.019" level="INFO">${resultCode} = DIALING</msg>
<status status="PASS" endtime="20140623 15:03:07.018" starttime="20140623 15:03:07.004"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:07.034" starttime="20140623 15:03:07.032"></status>
</kw>
<msg timestamp="20140623 15:03:07.035" level="INFO">${resultCode} = DIALING</msg>
<status status="PASS" endtime="20140623 15:03:07.035" starttime="20140623 15:03:07.020"></status>
</kw>
<msg timestamp="20140623 15:03:07.037" level="INFO">${voice_state} = DIALING</msg>
<status status="PASS" endtime="20140623 15:03:07.036" starttime="20140623 15:03:06.906"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:07.048" starttime="20140623 15:03:07.047"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:07.050" starttime="20140623 15:03:07.049"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:07.052" starttime="20140623 15:03:07.051"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:07.064" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:03:07.065" starttime="20140623 15:03:07.061"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:07.066" starttime="20140623 15:03:07.059"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:07.066" starttime="20140623 15:03:07.053"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:07.067" starttime="20140623 15:03:07.039"></status>
</kw>
<msg timestamp="20140623 15:03:07.069" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:03:07.069" level="INFO">${voice_state} = DIALING</msg>
<status status="PASS" endtime="20140623 15:03:07.068" starttime="20140623 15:03:06.399"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying caling device (IMSI=${cg_device_imsi}) state failed with resultCode=${resultCode}</arg>
</arguments>
<msg timestamp="20140623 15:03:07.073" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:07.074" starttime="20140623 15:03:07.070"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${voice_state}' == 'IDLE'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:07.079" starttime="20140623 15:03:07.074"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:07.080" starttime="20140623 15:03:05.384"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:07.081" starttime="20140623 15:03:03.690"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>********************* Release Call if it isn't yet ***********************************</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:07.084" starttime="20140623 15:03:07.082"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${voice_state}'!='IDLE'</arg>
<arg>ARS Release</arg>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${cg_device_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${cg_device_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:03:07.103" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140623 15:03:07.103" starttime="20140623 15:03:07.100"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:07.117" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:07.117" starttime="20140623 15:03:07.114"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:07.118" starttime="20140623 15:03:07.112"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:07.123" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:07.124" starttime="20140623 15:03:07.121"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:07.124" starttime="20140623 15:03:07.119"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:07.129" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:07.130" starttime="20140623 15:03:07.127"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:07.131" starttime="20140623 15:03:07.125"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:07.131" starttime="20140623 15:03:07.105"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:07.135" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:07.135" starttime="20140623 15:03:07.132"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:07.138" starttime="20140623 15:03:07.136"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:07.141" starttime="20140623 15:03:07.139"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:07.143" starttime="20140623 15:03:07.142"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:07.145" starttime="20140623 15:03:07.144"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:07.149" starttime="20140623 15:03:07.146"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:07.152" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.dial.input.deviceImsi=232033013972239', u'LowLevelOps.Voice.dial.input.phoneNumber=0676844901411', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140623 15:03:08.626" level="INFO">15:03:08,581 INFO  [log] LowLevelOps.Voice.release.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:08.628" starttime="20140623 15:03:07.151"></status>
</kw>
<msg timestamp="20140623 15:03:08.630" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:08.631" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:03:08.629" starttime="20140623 15:03:07.150"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:08.642" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:08.642" starttime="20140623 15:03:08.639"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:08.645" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:08.645" starttime="20140623 15:03:08.643"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:08.648" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:08.648" starttime="20140623 15:03:08.646"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:08.653" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:08.655" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:08.655" starttime="20140623 15:03:08.651"></status>
</kw>
<msg timestamp="20140623 15:03:08.656" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:08.656" level="INFO">${return_log_entry} = 2014-06-23 15:03:08,581 INFO  [log] LowLevelOps.Voice.release.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:08.656" starttime="20140623 15:03:08.649"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.665" starttime="20140623 15:03:08.664"></status>
</kw>
<msg timestamp="20140623 15:03:08.667" level="INFO">${return_log_entry} = 2014-06-23 15:03:08,581 INFO  [log] LowLevelOps.Voice.release.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:08.666" starttime="20140623 15:03:08.657"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.676" starttime="20140623 15:03:08.674"></status>
</kw>
<msg timestamp="20140623 15:03:08.677" level="INFO">${return_log_entry} = 2014-06-23 15:03:08,581 INFO  [log] LowLevelOps.Voice.release.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:08.676" starttime="20140623 15:03:08.667"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.687" starttime="20140623 15:03:08.684"></status>
</kw>
<msg timestamp="20140623 15:03:08.688" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:08.687" starttime="20140623 15:03:08.678"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.701" starttime="20140623 15:03:08.699"></status>
</kw>
<msg timestamp="20140623 15:03:08.702" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:08.702" starttime="20140623 15:03:08.688"></status>
</kw>
<msg timestamp="20140623 15:03:08.703" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:08.703" starttime="20140623 15:03:08.632"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.713" starttime="20140623 15:03:08.712"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.715" starttime="20140623 15:03:08.714"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.717" starttime="20140623 15:03:08.716"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:08.729" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:03:08.730" starttime="20140623 15:03:08.726"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:08.731" starttime="20140623 15:03:08.724"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:08.731" starttime="20140623 15:03:08.718"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:08.731" starttime="20140623 15:03:08.705"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:08.732" starttime="20140623 15:03:07.092"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:08.734" starttime="20140623 15:03:07.084"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${voice_state}'=='CONNECTED'</arg>
<arg>Fail</arg>
<arg>msg=Unexpected CCONNECTION established</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.740" starttime="20140623 15:03:08.735"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${voice_state}'=='RINGING'</arg>
<arg>Fail</arg>
<arg>msg=Unexpected switch to RINGING</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.746" starttime="20140623 15:03:08.741"></status>
</kw>
<msg timestamp="20140623 15:03:08.749" level="INFO">${duration_secs} = 2</msg>
<status status="PASS" endtime="20140623 15:03:08.747" starttime="20140623 15:03:02.506"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>${duration_secs} &lt; ${min_limes}</arg>
<arg>Fail</arg>
<arg>msg=Call duration of ${duration_secs}s &lt; configured target duration of ${target_dialing_duration_secs}s</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.755" starttime="20140623 15:03:08.749"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>${max_limes} &lt; ${duration_secs}</arg>
<arg>Fail</arg>
<arg>msg=Call duration of ${duration_secs}s exceeded the configured target duration of ${target_dialing_duration_secs}s</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.762" starttime="20140623 15:03:08.756"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${FAKE_CALLS}'=='true'</arg>
<arg>Fake Voice Call Impact On Testbed</arg>
</arguments>
<kw type="kw" timeout="" name="Fake Voice Call Impact On Testbed">
<doc>Runs a CG MTC NoAnswer session for the faked phone 1</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="${rc} = cg_support-resource.CG Run MTC NoAnswer">
<doc>Runs a noAnswer non-roaming MTC session</doc>
<arguments>
<arg>${FAKE_ORIGINATION_MSISDN}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${FAKE_ATTACHED_ONNET_PHONE_1_MSISDN}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MTC REQ QUEUE}</arg>
<arg>${AMQ-SIG MTC RES QUEUE}</arg>
</arguments>
<kw type="kw" timeout="" name="${rc} = cg_support-resource.CG Run Standard MTC CGS">
<doc>Runs a standard (non-roaming) MTC session (meaning a session that needs only mscAddress and mtcAPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>mtc-noanswer</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_imsi}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_mtc_req}</arg>
<arg>${queue_mtc_res}</arg>
</arguments>
<kw type="kw" timeout="" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20140623 15:03:08.805" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-subscribers.csv</msg>
<status status="PASS" endtime="20140623 15:03:08.804" starttime="20140623 15:03:08.802"></status>
</kw>
<kw type="kw" timeout="" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20140623 15:03:08.808" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-fleXml.csv</msg>
<status status="PASS" endtime="20140623 15:03:08.808" starttime="20140623 15:03:08.806"></status>
</kw>
<kw type="kw" timeout="" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20140623 15:03:08.812" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-workspace.ini</msg>
<status status="PASS" endtime="20140623 15:03:08.812" starttime="20140623 15:03:08.809"></status>
</kw>
<kw type="kw" timeout="" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20140623 15:03:08.816" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/mtc-noanswer.cgs</msg>
<status status="PASS" endtime="20140623 15:03:08.815" starttime="20140623 15:03:08.813"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.818" starttime="20140623 15:03:08.816"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cd_imsi};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20140623 15:03:08.822" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:08.823" starttime="20140623 15:03:08.818"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.825" starttime="20140623 15:03:08.824"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mtcAPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20140623 15:03:08.829" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:08.830" starttime="20140623 15:03:08.826"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20140623 15:03:08.835" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:08.836" starttime="20140623 15:03:08.831"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.838" starttime="20140623 15:03:08.836"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20140623 15:03:08.842" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:08.842" starttime="20140623 15:03:08.838"></status>
</kw>
<kw type="kw" timeout="" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MTC;${queue_mtc_req};${queue_mtc_res};6;1;1</arg>
</arguments>
<msg timestamp="20140623 15:03:08.848" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:08.849" starttime="20140623 15:03:08.843"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:08.850" starttime="20140623 15:03:08.849"></status>
</kw>
<kw type="kw" timeout="" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20140623 15:03:08.877" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-5.2.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/mtc-noanswer.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/mtc-noanswer-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20140623 15:03:13.660" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20140623 15:03:13.658" starttime="20140623 15:03:08.851"></status>
</kw>
<msg timestamp="20140623 15:03:13.662" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20140623 15:03:13.661" starttime="20140623 15:03:08.789"></status>
</kw>
<msg timestamp="20140623 15:03:13.664" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20140623 15:03:13.663" starttime="20140623 15:03:08.776"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=Faking CG session failed</arg>
</arguments>
<msg timestamp="20140623 15:03:13.668" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:13.669" starttime="20140623 15:03:13.665"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:13.669" starttime="20140623 15:03:08.768"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:13.671" starttime="20140623 15:03:08.763"></status>
</kw>
<kw type="kw" timeout="" name="crm_support-resource.CRM New Ticket Should Not Exist">
<doc>Is same as "CRM New Ticket Should Exist" except that it fails if the ticket DOES exist and NOo ticket type or channel can be specified</doc>
<arguments>
<arg>${phone1_imsi}</arg>
<arg>${marker_ticket_timestamp}</arg>
<arg>ticket_type=Voice</arg>
</arguments>
<kw type="kw" timeout="" name="${current_datetime}, ${current_type} = crm_support-resource.CRM Get Latest Ticket">
<doc>queries the passed subscriber's latest CRM ticket</doc>
<arguments>
<arg>${device_imsi}</arg>
</arguments>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Login">
<doc>Logs into the CRM portal via login page</doc>
<arguments>
<arg>${CRM_PORTAL_LOGIN_URL}</arg>
<arg>${CRM_PORTAL_USER}</arg>
<arg>${CRM_PORTAL_PSWD}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Ensure beeing in Login page ******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:13.707" starttime="20140623 15:03:13.705"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140623 15:03:13.736" level="INFO">${isLoginPage} = true</msg>
<status status="PASS" endtime="20140623 15:03:13.736" starttime="20140623 15:03:13.708"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>CRM Portal Logout</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:13.745" starttime="20140623 15:03:13.738"></status>
</kw>
<kw type="kw" timeout="" name="${isLoginPage} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<msg timestamp="20140623 15:03:13.765" level="INFO">${isLoginPage} = true</msg>
<status status="PASS" endtime="20140623 15:03:13.765" starttime="20140623 15:03:13.747"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${isLoginPage}'!='true'</arg>
<arg>Go To</arg>
<arg>${crm_portal_login_url}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:13.773" starttime="20140623 15:03:13.766"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
<arg>timeout=10s</arg>
<arg>error=Login Page not displayed</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:13.793" starttime="20140623 15:03:13.775"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** log in to CRM as Customer Care user ******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:13.796" starttime="20140623 15:03:13.795"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogin</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:13.802" starttime="20140623 15:03:13.797"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=username</arg>
<arg>${crm_portal_user}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:13.893" starttime="20140623 15:03:13.804"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=password</arg>
<arg>${crm_portal_pswd}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:13.984" starttime="20140623 15:03:13.894"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>name=login_submit</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:15.642" starttime="20140623 15:03:13.985"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogin</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:15.652" starttime="20140623 15:03:15.645"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:15.652" starttime="20140623 15:03:13.695"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** CRM: in dashboard enter IMSI and press Submit</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:15.655" starttime="20140623 15:03:15.654"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterInput</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:15.661" starttime="20140623 15:03:15.656"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Input Text">
<doc></doc>
<arguments>
<arg>id=filter_imsi</arg>
<arg>${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:15.771" starttime="20140623 15:03:15.662"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** in History tab, get the interesting cells of the first data row</arg>
<arg>******</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:15.774" starttime="20140623 15:03:15.772"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeSubscriberFilterSubmit</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:15.781" starttime="20140623 15:03:15.776"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Submit']</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:17.490" starttime="20140623 15:03:15.782"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
<arg>timeout=10s</arg>
<arg>error=History Tab NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:17.597" starttime="20140623 15:03:17.493"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>link=History</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:17.810" starttime="20140623 15:03:17.599"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Select Frame">
<doc></doc>
<arguments>
<arg>contentiframe</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:17.873" starttime="20140623 15:03:17.811"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
<arg>timeout=10s</arg>
<arg>error=History Search button NOT displayed</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:18.194" starttime="20140623 15:03:17.874"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>//input[@value='Search']</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:18.315" starttime="20140623 15:03:18.197"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Wait Until Page Contains Element">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>timeout=10s</arg>
<arg>error=History Table not displayed</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:19.033" starttime="20140623 15:03:18.317"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_NEWEST_ROW} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140623 15:03:19.040" level="INFO">${HISTORY_NEWEST_ROW} = 2</msg>
<status status="PASS" endtime="20140623 15:03:19.039" starttime="20140623 15:03:19.036"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_DATETIME_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20140623 15:03:19.043" level="INFO">${HISTORY_DATETIME_COL} = 1</msg>
<status status="PASS" endtime="20140623 15:03:19.043" starttime="20140623 15:03:19.041"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CALLINGCALLED_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20140623 15:03:19.046" level="INFO">${HISTORY_CALLINGCALLED_COL} = 2</msg>
<status status="PASS" endtime="20140623 15:03:19.046" starttime="20140623 15:03:19.044"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_TYPE_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20140623 15:03:19.048" level="INFO">${HISTORY_TYPE_COL} = 5</msg>
<status status="PASS" endtime="20140623 15:03:19.048" starttime="20140623 15:03:19.047"></status>
</kw>
<kw type="kw" timeout="" name="${HISTORY_CANNEL_COL} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>9</arg>
</arguments>
<msg timestamp="20140623 15:03:19.051" level="INFO">${HISTORY_CANNEL_COL} = 9</msg>
<status status="PASS" endtime="20140623 15:03:19.050" starttime="20140623 15:03:19.049"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${datetime} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_DATETIME_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_DATETIME_COL}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:19.192" starttime="20140623 15:03:19.054"></status>
</kw>
<msg timestamp="20140623 15:03:19.194" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140623 15:03:19.194" level="INFO">${datetime} = 24/06/2014 - 02:59:50</msg>
<status status="PASS" endtime="20140623 15:03:19.193" starttime="20140623 15:03:19.052"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${callingcalled} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CALLINGCALLED_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CALLINGCALLED_COL}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:19.296" starttime="20140623 15:03:19.199"></status>
</kw>
<msg timestamp="20140623 15:03:19.298" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140623 15:03:19.299" level="INFO">${callingcalled} = </msg>
<status status="PASS" endtime="20140623 15:03:19.297" starttime="20140623 15:03:19.196"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${type} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_TYPE_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_TYPE_COL}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:19.413" starttime="20140623 15:03:19.302"></status>
</kw>
<msg timestamp="20140623 15:03:19.414" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140623 15:03:19.414" level="INFO">${type} = tariffPlanTopup</msg>
<status status="PASS" endtime="20140623 15:03:19.414" starttime="20140623 15:03:19.300"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status_dummy}, ${channel} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get Table Cell</arg>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CANNEL_COL}</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Get Table Cell">
<doc></doc>
<arguments>
<arg>id=mytable</arg>
<arg>${HISTORY_NEWEST_ROW}</arg>
<arg>${HISTORY_CANNEL_COL}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:19.511" starttime="20140623 15:03:19.417"></status>
</kw>
<msg timestamp="20140623 15:03:19.513" level="INFO">${execution_status_dummy} = PASS</msg>
<msg timestamp="20140623 15:03:19.513" level="INFO">${channel} = AUTOMATIC</msg>
<status status="PASS" endtime="20140623 15:03:19.512" starttime="20140623 15:03:19.415"></status>
</kw>
<kw type="kw" timeout="" name="InewSelenium2Library.Unselect Frame">
<doc></doc>
<arguments>
</arguments>
<status status="PASS" endtime="20140623 15:03:19.528" starttime="20140623 15:03:19.514"></status>
</kw>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Logout">
<doc>Clicks the logout button of the current page if it is available</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogout</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:19.544" starttime="20140623 15:03:19.537"></status>
</kw>
<kw type="kw" timeout="" name="${pageContainsLogout} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<msg timestamp="20140623 15:03:19.559" level="INFO">${pageContainsLogout} = true</msg>
<status status="PASS" endtime="20140623 15:03:19.558" starttime="20140623 15:03:19.545"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pageContainsLogout}'=='true'</arg>
<arg>Click Element</arg>
<arg>id=logout</arg>
</arguments>
<kw type="kw" timeout="" name="InewSelenium2Library.Click Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.082" starttime="20140623 15:03:19.565"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.084" starttime="20140623 15:03:19.560"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogout</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.095" starttime="20140623 15:03:20.087"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.095" starttime="20140623 15:03:19.530"></status>
</kw>
<msg timestamp="20140623 15:03:20.100" level="INFO">${current_datetime} = 24/06/2014 - 02:59:50</msg>
<msg timestamp="20140623 15:03:20.100" level="INFO">${current_type} = [u'', u'tariffPlanTopup', u'AUTOMATIC']</msg>
<status status="PASS" endtime="20140623 15:03:20.098" starttime="20140623 15:03:13.686"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${current_datetime}</arg>
<arg>${marker_timestamp}</arg>
<arg>msg=New ticket UNEXPECTEDLY written for IMSI ${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:03:20.106" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:20.107" starttime="20140623 15:03:20.102"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.108" starttime="20140623 15:03:13.673"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.109" starttime="20140623 15:02:55.408"></status>
</kw>
<kw type="teardown" timeout="" name="InewSelenium2Library.Close Browser">
<doc></doc>
<arguments>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.249" starttime="20140623 15:03:20.111"></status>
</kw>
<doc>Runs a NoAnswer szenario from on-net Phone 2 to on-net Phone 1 what expects that the call attempt is released after the configured BCSM_NOANSWER_EVENT_TIMER_SECS elapsed without Phone 1 answering.
Plus verification that NO ticket was written for the Phone 1 subscriber
=========================================================</doc>
<tags>
<tag>End2EndTest</tag>
<tag>experimental</tag>
<tag>TNZ_supported</tag>
<tag>walter.heincz</tag>
</tags>
<status status="PASS" critical="yes" endtime="20140623 15:03:20.250" starttime="20140623 15:02:50.965"></status>
</test>
<kw type="teardown" timeout="" name="suite-global-keyword-resource.Teardown Suite">
<doc>This is the suite teardown procedure that is called from "Suite Teardown" keyword</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="crm_support-resource.CRM Portal Logout">
<doc>Clicks the logout button of the current page if it is available</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>BeforeLogout</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.272" starttime="20140623 15:03:20.267"></status>
</kw>
<kw type="kw" timeout="" name="${pageContainsLogout} = InewSelenium2Library.Page Contains Element">
<doc></doc>
<arguments>
<arg>id=logout</arg>
</arguments>
<msg timestamp="20140623 15:03:20.276" level="INFO">${pageContainsLogout} = false</msg>
<status status="PASS" endtime="20140623 15:03:20.276" starttime="20140623 15:03:20.273"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pageContainsLogout}'=='true'</arg>
<arg>Click Element</arg>
<arg>id=logout</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.282" starttime="20140623 15:03:20.277"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${LOG_SCREENSHOTS}'=='true'</arg>
<arg>CRM Portal Screenshot</arg>
<arg>AfterLogout</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.288" starttime="20140623 15:03:20.283"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.289" starttime="20140623 15:03:20.261"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Browser</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.291" starttime="20140623 15:03:20.290"></status>
</kw>
<kw type="kw" timeout="" name="suite-global-keyword-resource.Reset All Phones">
<doc>This helper for the TCs and Suite Setup script ensures that</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:03:20.310" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972240</msg>
<status status="PASS" endtime="20140623 15:03:20.310" starttime="20140623 15:03:20.307"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:20.323" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:20.324" starttime="20140623 15:03:20.321"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.325" starttime="20140623 15:03:20.319"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:20.333" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:20.334" starttime="20140623 15:03:20.329"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.335" starttime="20140623 15:03:20.326"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:20.343" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:20.345" starttime="20140623 15:03:20.340"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.345" starttime="20140623 15:03:20.337"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.346" starttime="20140623 15:03:20.313"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:20.352" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:20.352" starttime="20140623 15:03:20.347"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.357" starttime="20140623 15:03:20.354"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.360" starttime="20140623 15:03:20.358"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.362" starttime="20140623 15:03:20.361"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.364" starttime="20140623 15:03:20.363"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.367" starttime="20140623 15:03:20.365"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:20.371" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140623 15:03:20.719" level="INFO">15:03:20,709 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140623 15:03:20.732" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Mon Jun 23 15:03:20 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972240&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140623 15:03:20.734" starttime="20140623 15:03:20.370"></status>
</kw>
<msg timestamp="20140623 15:03:20.735" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140623 15:03:20.736" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Mon Jun 23 15:03:20 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140623 15:03:20.735" starttime="20140623 15:03:20.368"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:20.748" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:20.747" starttime="20140623 15:03:20.744"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:20.751" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:20.750" starttime="20140623 15:03:20.748"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:20.754" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:20.753" starttime="20140623 15:03:20.751"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:20.759" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:20.760" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:20.760" starttime="20140623 15:03:20.756"></status>
</kw>
<msg timestamp="20140623 15:03:20.761" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:20.762" level="INFO">${return_log_entry} = 2014-06-23 15:03:20,709 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:20.761" starttime="20140623 15:03:20.754"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.771" starttime="20140623 15:03:20.769"></status>
</kw>
<msg timestamp="20140623 15:03:20.772" level="INFO">${return_log_entry} = 2014-06-23 15:03:20,709 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:20.771" starttime="20140623 15:03:20.763"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.781" starttime="20140623 15:03:20.779"></status>
</kw>
<msg timestamp="20140623 15:03:20.781" level="INFO">${return_log_entry} = 2014-06-23 15:03:20,709 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:20.781" starttime="20140623 15:03:20.773"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.791" starttime="20140623 15:03:20.789"></status>
</kw>
<msg timestamp="20140623 15:03:20.792" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:20.792" starttime="20140623 15:03:20.782"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.806" starttime="20140623 15:03:20.804"></status>
</kw>
<msg timestamp="20140623 15:03:20.807" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:20.806" starttime="20140623 15:03:20.793"></status>
</kw>
<msg timestamp="20140623 15:03:20.808" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:20.807" starttime="20140623 15:03:20.738"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.817" starttime="20140623 15:03:20.816"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.819" starttime="20140623 15:03:20.818"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.821" starttime="20140623 15:03:20.820"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:20.833" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:20.835" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:20.835" starttime="20140623 15:03:20.830"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.836" starttime="20140623 15:03:20.828"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.837" starttime="20140623 15:03:20.822"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.837" starttime="20140623 15:03:20.809"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.838" starttime="20140623 15:03:20.299"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:03:20.850" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140623 15:03:20.851" starttime="20140623 15:03:20.848"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:20.864" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:20.865" starttime="20140623 15:03:20.861"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.866" starttime="20140623 15:03:20.860"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:20.871" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:20.872" starttime="20140623 15:03:20.868"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.872" starttime="20140623 15:03:20.867"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:20.878" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:20.878" starttime="20140623 15:03:20.875"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.879" starttime="20140623 15:03:20.873"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:20.879" starttime="20140623 15:03:20.853"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:20.883" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:20.883" starttime="20140623 15:03:20.880"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.887" starttime="20140623 15:03:20.884"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.890" starttime="20140623 15:03:20.888"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.892" starttime="20140623 15:03:20.891"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.894" starttime="20140623 15:03:20.893"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:20.897" starttime="20140623 15:03:20.895"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:20.901" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140623 15:03:21.281" level="INFO">15:03:21,270 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140623 15:03:21.294" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Mon Jun 23 15:03:21 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972239&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140623 15:03:21.296" starttime="20140623 15:03:20.900"></status>
</kw>
<msg timestamp="20140623 15:03:21.299" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140623 15:03:21.299" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Mon Jun 23 15:03:21 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140623 15:03:21.298" starttime="20140623 15:03:20.898"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:21.311" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:21.311" starttime="20140623 15:03:21.308"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.314" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:21.314" starttime="20140623 15:03:21.312"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.317" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:21.316" starttime="20140623 15:03:21.315"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.322" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:21.323" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:21.323" starttime="20140623 15:03:21.320"></status>
</kw>
<msg timestamp="20140623 15:03:21.324" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:21.325" level="INFO">${return_log_entry} = 2014-06-23 15:03:21,270 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:21.324" starttime="20140623 15:03:21.318"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.334" starttime="20140623 15:03:21.332"></status>
</kw>
<msg timestamp="20140623 15:03:21.335" level="INFO">${return_log_entry} = 2014-06-23 15:03:21,270 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:21.335" starttime="20140623 15:03:21.326"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.344" starttime="20140623 15:03:21.342"></status>
</kw>
<msg timestamp="20140623 15:03:21.345" level="INFO">${return_log_entry} = 2014-06-23 15:03:21,270 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:21.345" starttime="20140623 15:03:21.336"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.355" starttime="20140623 15:03:21.352"></status>
</kw>
<msg timestamp="20140623 15:03:21.356" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:21.355" starttime="20140623 15:03:21.346"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.369" starttime="20140623 15:03:21.367"></status>
</kw>
<msg timestamp="20140623 15:03:21.369" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:21.369" starttime="20140623 15:03:21.356"></status>
</kw>
<msg timestamp="20140623 15:03:21.371" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:21.370" starttime="20140623 15:03:21.301"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.380" starttime="20140623 15:03:21.379"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.382" starttime="20140623 15:03:21.381"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.384" starttime="20140623 15:03:21.383"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:21.396" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:21.397" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:21.398" starttime="20140623 15:03:21.392"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.398" starttime="20140623 15:03:21.391"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.399" starttime="20140623 15:03:21.385"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.399" starttime="20140623 15:03:21.372"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.400" starttime="20140623 15:03:20.840"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.413" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140623 15:03:21.413" starttime="20140623 15:03:21.410"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.426" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:21.427" starttime="20140623 15:03:21.423"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.427" starttime="20140623 15:03:21.422"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.432" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:21.433" starttime="20140623 15:03:21.430"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.433" starttime="20140623 15:03:21.428"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.438" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:21.439" starttime="20140623 15:03:21.436"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.440" starttime="20140623 15:03:21.434"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.440" starttime="20140623 15:03:21.415"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.443" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:21.444" starttime="20140623 15:03:21.441"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.447" starttime="20140623 15:03:21.445"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.450" starttime="20140623 15:03:21.448"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.452" starttime="20140623 15:03:21.451"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.454" starttime="20140623 15:03:21.453"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.457" starttime="20140623 15:03:21.455"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:21.461" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140623 15:03:21.795" level="INFO">15:03:21,784 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140623 15:03:21.807" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Mon Jun 23 15:03:21 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140623 15:03:21.809" starttime="20140623 15:03:21.460"></status>
</kw>
<msg timestamp="20140623 15:03:21.811" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140623 15:03:21.811" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 11
Size: 528
Timestamp: Mon Jun 23 15:03:21 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140623 15:03:21.810" starttime="20140623 15:03:21.458"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:21.822" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:21.822" starttime="20140623 15:03:21.820"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.825" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:21.825" starttime="20140623 15:03:21.823"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.828" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:21.828" starttime="20140623 15:03:21.826"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.834" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:21.835" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:21.835" starttime="20140623 15:03:21.831"></status>
</kw>
<msg timestamp="20140623 15:03:21.836" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:21.836" level="INFO">${return_log_entry} = 2014-06-23 15:03:21,784 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:21.836" starttime="20140623 15:03:21.829"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.845" starttime="20140623 15:03:21.843"></status>
</kw>
<msg timestamp="20140623 15:03:21.846" level="INFO">${return_log_entry} = 2014-06-23 15:03:21,784 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:21.846" starttime="20140623 15:03:21.837"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.856" starttime="20140623 15:03:21.854"></status>
</kw>
<msg timestamp="20140623 15:03:21.857" level="INFO">${return_log_entry} = 2014-06-23 15:03:21,784 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:21.857" starttime="20140623 15:03:21.847"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.867" starttime="20140623 15:03:21.865"></status>
</kw>
<msg timestamp="20140623 15:03:21.868" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:21.868" starttime="20140623 15:03:21.858"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.882" starttime="20140623 15:03:21.880"></status>
</kw>
<msg timestamp="20140623 15:03:21.883" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:21.882" starttime="20140623 15:03:21.869"></status>
</kw>
<msg timestamp="20140623 15:03:21.884" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:21.884" starttime="20140623 15:03:21.813"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.893" starttime="20140623 15:03:21.892"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.895" starttime="20140623 15:03:21.894"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.897" starttime="20140623 15:03:21.896"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:21.910" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:21.911" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:21.912" starttime="20140623 15:03:21.906"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.912" starttime="20140623 15:03:21.905"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.913" starttime="20140623 15:03:21.898"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.913" starttime="20140623 15:03:21.885"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.914" starttime="20140623 15:03:21.403"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Release">
<doc>Releases an incomming/outgoing call attempt or an already established call on an Android Phones attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.926" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140623 15:03:21.927" starttime="20140623 15:03:21.924"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.940" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:21.940" starttime="20140623 15:03:21.937"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.941" starttime="20140623 15:03:21.935"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.946" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:21.947" starttime="20140623 15:03:21.943"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.947" starttime="20140623 15:03:21.942"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.952" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:21.953" starttime="20140623 15:03:21.950"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.953" starttime="20140623 15:03:21.948"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:21.954" starttime="20140623 15:03:21.929"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:21.957" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:21.958" starttime="20140623 15:03:21.955"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.961" starttime="20140623 15:03:21.959"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.964" starttime="20140623 15:03:21.962"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.966" starttime="20140623 15:03:21.965"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.release</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.968" starttime="20140623 15:03:21.967"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.release.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:21.972" starttime="20140623 15:03:21.969"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:21.976" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140623 15:03:22.328" level="INFO">15:03:22,317 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<msg timestamp="20140623 15:03:22.342" level="FAIL">resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 10
Size: 528
Timestamp: Mon Jun 23 15:03:22 UTC 2014
TestStep: 01_release

----------------- Messages ------------------------------
[resultCode = OK] Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response

----------------- Properties ------------------------------
Encoding: UTF-8
Endpoint: http://10.189.11.226:8080/androidremoting/voice

---------------- Request ---------------------------
Request Headers: Host : 10.189.11.226:8080
Content-Length : 313
SOAPAction : ""
Accept-Encoding : gzip,deflate
User-Agent : Apache-HttpClient/4.3.1 (java 1.5)
Connection : Keep-Alive
Content-Type : text/xml;charset=UTF-8


&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.androidremoting.callsgen.inewcs.com/"&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;api:release&gt;
         &lt;api:deviceImsi&gt;232033013972241&lt;/api:deviceImsi&gt;
      &lt;/api:release&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;

---------------- Response --------------------------
Response Headers: #status# : HTTP/1.1 200 OK
Content-Length : 528
Content-Type : text/xml; charset=utf-8
Server : Jetty(6.1.18)


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;soap:Body&gt;
      &lt;ns1:releaseResponse xmlns:ns1="http://api.androidremoting.callsgen.inewcs.com/"&gt;
         &lt;ns1:return ns3:type="ns2:PhoneActionResult" xmlns:ns2="http://api.androidremoting.callsgen.inewcs.com" xmlns:ns3="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;ns2:failedReason&gt;VOICE_STATE_PRECONDITION_VIOLATION&lt;/ns2:failedReason&gt;
            &lt;ns2:resultCode&gt;FAILED&lt;/ns2:resultCode&gt;
            &lt;ns2:phoneEvents/&gt;
         &lt;/ns1:return&gt;
      &lt;/ns1:releaseResponse&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</msg>
<status status="FAIL" endtime="20140623 15:03:22.344" starttime="20140623 15:03:21.975"></status>
</kw>
<msg timestamp="20140623 15:03:22.347" level="INFO">${execution_status} = FAIL</msg>
<msg timestamp="20140623 15:03:22.347" level="INFO">${return_value_dummy} = resultCode = OK in [01_release] failed;
[Missing token [&lt;ns2:resultCode&gt;OK&lt;/ns2:resultCode&gt;] in Response]
Status: FAILED
Time Taken: 10
Size: 528
Timestamp: Mon Jun 23 15:03:22 UTC 2014
TestStep: 01_r...</msg>
<status status="PASS" endtime="20140623 15:03:22.346" starttime="20140623 15:03:21.973"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.release.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:22.359" level="INFO">${return_marker} = LowLevelOps.Voice.release.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:22.359" starttime="20140623 15:03:22.356"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:22.362" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:22.361" starttime="20140623 15:03:22.360"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:22.365" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:22.364" starttime="20140623 15:03:22.363"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:22.370" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:22.371" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:22.371" starttime="20140623 15:03:22.367"></status>
</kw>
<msg timestamp="20140623 15:03:22.372" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:22.373" level="INFO">${return_log_entry} = 2014-06-23 15:03:22,317 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:22.372" starttime="20140623 15:03:22.366"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.382" starttime="20140623 15:03:22.380"></status>
</kw>
<msg timestamp="20140623 15:03:22.383" level="INFO">${return_log_entry} = 2014-06-23 15:03:22,317 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:22.383" starttime="20140623 15:03:22.374"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.392" starttime="20140623 15:03:22.390"></status>
</kw>
<msg timestamp="20140623 15:03:22.393" level="INFO">${return_log_entry} = 2014-06-23 15:03:22,317 ERROR [log] LowLevelOps.Voice.release.output.resultCode=VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:22.392" starttime="20140623 15:03:22.384"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.402" starttime="20140623 15:03:22.400"></status>
</kw>
<msg timestamp="20140623 15:03:22.403" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:22.403" starttime="20140623 15:03:22.394"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.416" starttime="20140623 15:03:22.414"></status>
</kw>
<msg timestamp="20140623 15:03:22.417" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:22.416" starttime="20140623 15:03:22.404"></status>
</kw>
<msg timestamp="20140623 15:03:22.418" level="INFO">${resultCode} = VOICE_STATE_PRECONDITION_VIOLATION</msg>
<status status="PASS" endtime="20140623 15:03:22.418" starttime="20140623 15:03:22.349"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-Voicerelease</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.427" starttime="20140623 15:03:22.426"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.429" starttime="20140623 15:03:22.428"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.431" starttime="20140623 15:03:22.430"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:22.443" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-01_release-0-FAILED.txt&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:22.445" html="yes" level="INFO">Removed file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-Voicerelease-cancel-0-FAILED.txt&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:22.446" starttime="20140623 15:03:22.440"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:22.446" starttime="20140623 15:03:22.438"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:22.447" starttime="20140623 15:03:22.432"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:22.447" starttime="20140623 15:03:22.419"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:22.448" starttime="20140623 15:03:21.916"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:03:22.461" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972240</msg>
<status status="PASS" endtime="20140623 15:03:22.461" starttime="20140623 15:03:22.459"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:22.474" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:22.475" starttime="20140623 15:03:22.472"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:22.476" starttime="20140623 15:03:22.470"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:22.480" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:22.481" starttime="20140623 15:03:22.478"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:22.482" starttime="20140623 15:03:22.476"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:22.487" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:22.487" starttime="20140623 15:03:22.484"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:22.488" starttime="20140623 15:03:22.483"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:22.488" starttime="20140623 15:03:22.464"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:22.492" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:22.492" starttime="20140623 15:03:22.489"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.496" starttime="20140623 15:03:22.493"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.499" starttime="20140623 15:03:22.497"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.501" starttime="20140623 15:03:22.500"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.503" starttime="20140623 15:03:22.502"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.506" starttime="20140623 15:03:22.504"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:22.510" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240']</msg>
<msg timestamp="20140623 15:03:22.858" level="INFO">15:03:22,814 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
15:03:22,820 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:22.859" starttime="20140623 15:03:22.508"></status>
</kw>
<msg timestamp="20140623 15:03:22.860" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:22.861" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:03:22.860" starttime="20140623 15:03:22.507"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:22.872" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:22.871" starttime="20140623 15:03:22.869"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:22.875" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:22.874" starttime="20140623 15:03:22.873"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:22.878" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:22.877" starttime="20140623 15:03:22.876"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:22.883" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:22.884" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:22.885" starttime="20140623 15:03:22.881"></status>
</kw>
<msg timestamp="20140623 15:03:22.886" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:22.886" level="INFO">${return_log_entry} = 2014-06-23 15:03:22,820 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:22.885" starttime="20140623 15:03:22.879"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.895" starttime="20140623 15:03:22.893"></status>
</kw>
<msg timestamp="20140623 15:03:22.896" level="INFO">${return_log_entry} = 2014-06-23 15:03:22,820 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:22.896" starttime="20140623 15:03:22.887"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.905" starttime="20140623 15:03:22.903"></status>
</kw>
<msg timestamp="20140623 15:03:22.906" level="INFO">${return_log_entry} = 2014-06-23 15:03:22,820 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:22.906" starttime="20140623 15:03:22.897"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.916" starttime="20140623 15:03:22.914"></status>
</kw>
<msg timestamp="20140623 15:03:22.917" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:22.916" starttime="20140623 15:03:22.907"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.931" starttime="20140623 15:03:22.929"></status>
</kw>
<msg timestamp="20140623 15:03:22.932" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:22.931" starttime="20140623 15:03:22.918"></status>
</kw>
<msg timestamp="20140623 15:03:22.933" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:22.932" starttime="20140623 15:03:22.862"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:22.944" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140623 15:03:22.944" starttime="20140623 15:03:22.941"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:22.947" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:22.947" starttime="20140623 15:03:22.945"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:22.950" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:22.950" starttime="20140623 15:03:22.948"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:22.955" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:22.956" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:22.957" starttime="20140623 15:03:22.953"></status>
</kw>
<msg timestamp="20140623 15:03:22.958" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:22.958" level="INFO">${return_log_entry} = 2014-06-23 15:03:22,814 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:03:22.957" starttime="20140623 15:03:22.951"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.967" starttime="20140623 15:03:22.965"></status>
</kw>
<msg timestamp="20140623 15:03:22.968" level="INFO">${return_log_entry} = 2014-06-23 15:03:22,814 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:03:22.967" starttime="20140623 15:03:22.959"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.976" starttime="20140623 15:03:22.974"></status>
</kw>
<msg timestamp="20140623 15:03:22.977" level="INFO">${return_log_entry} = 2014-06-23 15:03:22,814 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:03:22.977" starttime="20140623 15:03:22.969"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:22.987" starttime="20140623 15:03:22.984"></status>
</kw>
<msg timestamp="20140623 15:03:22.988" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:22.987" starttime="20140623 15:03:22.978"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.001" starttime="20140623 15:03:22.999"></status>
</kw>
<msg timestamp="20140623 15:03:23.003" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:23.002" starttime="20140623 15:03:22.988"></status>
</kw>
<msg timestamp="20140623 15:03:23.005" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:23.004" starttime="20140623 15:03:22.934"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.014" starttime="20140623 15:03:23.013"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.016" starttime="20140623 15:03:23.015"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.018" starttime="20140623 15:03:23.017"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:23.030" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:03:23.031" starttime="20140623 15:03:23.027"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:23.031" starttime="20140623 15:03:23.025"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:23.032" starttime="20140623 15:03:23.019"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:23.032" starttime="20140623 15:03:23.006"></status>
</kw>
<msg timestamp="20140623 15:03:23.034" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:03:23.035" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:23.033" starttime="20140623 15:03:22.451"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140623 15:03:23.037" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:23.038" starttime="20140623 15:03:23.036"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 1</arg>
</arguments>
<msg timestamp="20140623 15:03:23.041" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:23.041" starttime="20140623 15:03:23.039"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.054" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972239</msg>
<status status="PASS" endtime="20140623 15:03:23.055" starttime="20140623 15:03:23.051"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.067" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:23.068" starttime="20140623 15:03:23.065"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:23.069" starttime="20140623 15:03:23.063"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.074" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:23.074" starttime="20140623 15:03:23.071"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:23.075" starttime="20140623 15:03:23.070"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.080" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:23.081" starttime="20140623 15:03:23.077"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:23.081" starttime="20140623 15:03:23.076"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:23.081" starttime="20140623 15:03:23.057"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.085" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:23.085" starttime="20140623 15:03:23.082"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.088" starttime="20140623 15:03:23.086"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.092" starttime="20140623 15:03:23.089"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.094" starttime="20140623 15:03:23.092"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.095" starttime="20140623 15:03:23.094"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.128" starttime="20140623 15:03:23.096"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:23.133" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239']</msg>
<msg timestamp="20140623 15:03:23.508" level="INFO">15:03:23,464 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
15:03:23,470 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:23.508" starttime="20140623 15:03:23.132"></status>
</kw>
<msg timestamp="20140623 15:03:23.509" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:23.510" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:03:23.509" starttime="20140623 15:03:23.130"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:23.521" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:23.521" starttime="20140623 15:03:23.519"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.524" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:23.524" starttime="20140623 15:03:23.522"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.527" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:23.527" starttime="20140623 15:03:23.525"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.532" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:23.533" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:23.534" starttime="20140623 15:03:23.530"></status>
</kw>
<msg timestamp="20140623 15:03:23.535" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:23.535" level="INFO">${return_log_entry} = 2014-06-23 15:03:23,470 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:23.534" starttime="20140623 15:03:23.528"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.544" starttime="20140623 15:03:23.542"></status>
</kw>
<msg timestamp="20140623 15:03:23.545" level="INFO">${return_log_entry} = 2014-06-23 15:03:23,470 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:23.545" starttime="20140623 15:03:23.536"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.554" starttime="20140623 15:03:23.552"></status>
</kw>
<msg timestamp="20140623 15:03:23.555" level="INFO">${return_log_entry} = 2014-06-23 15:03:23,470 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:23.554" starttime="20140623 15:03:23.546"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.564" starttime="20140623 15:03:23.562"></status>
</kw>
<msg timestamp="20140623 15:03:23.565" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:23.565" starttime="20140623 15:03:23.556"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.581" starttime="20140623 15:03:23.576"></status>
</kw>
<msg timestamp="20140623 15:03:23.582" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:23.581" starttime="20140623 15:03:23.566"></status>
</kw>
<msg timestamp="20140623 15:03:23.583" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:23.582" starttime="20140623 15:03:23.512"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:23.594" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140623 15:03:23.593" starttime="20140623 15:03:23.591"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.596" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:23.596" starttime="20140623 15:03:23.595"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.599" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:23.599" starttime="20140623 15:03:23.597"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.604" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:23.605" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:23.606" starttime="20140623 15:03:23.602"></status>
</kw>
<msg timestamp="20140623 15:03:23.607" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:23.607" level="INFO">${return_log_entry} = 2014-06-23 15:03:23,464 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:03:23.606" starttime="20140623 15:03:23.600"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.615" starttime="20140623 15:03:23.613"></status>
</kw>
<msg timestamp="20140623 15:03:23.616" level="INFO">${return_log_entry} = 2014-06-23 15:03:23,464 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:03:23.616" starttime="20140623 15:03:23.608"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.625" starttime="20140623 15:03:23.623"></status>
</kw>
<msg timestamp="20140623 15:03:23.626" level="INFO">${return_log_entry} = 2014-06-23 15:03:23,464 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:03:23.625" starttime="20140623 15:03:23.617"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.635" starttime="20140623 15:03:23.633"></status>
</kw>
<msg timestamp="20140623 15:03:23.636" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:23.636" starttime="20140623 15:03:23.627"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.648" starttime="20140623 15:03:23.647"></status>
</kw>
<msg timestamp="20140623 15:03:23.649" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:23.649" starttime="20140623 15:03:23.637"></status>
</kw>
<msg timestamp="20140623 15:03:23.650" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:23.650" starttime="20140623 15:03:23.584"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.659" starttime="20140623 15:03:23.658"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.661" starttime="20140623 15:03:23.660"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.663" starttime="20140623 15:03:23.662"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:23.674" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:03:23.675" starttime="20140623 15:03:23.671"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:23.675" starttime="20140623 15:03:23.670"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:23.676" starttime="20140623 15:03:23.664"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:23.676" starttime="20140623 15:03:23.651"></status>
</kw>
<msg timestamp="20140623 15:03:23.677" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:03:23.678" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:23.677" starttime="20140623 15:03:23.044"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140623 15:03:23.680" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:23.681" starttime="20140623 15:03:23.679"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 2</arg>
</arguments>
<msg timestamp="20140623 15:03:23.684" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:23.684" starttime="20140623 15:03:23.682"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.696" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140623 15:03:23.697" starttime="20140623 15:03:23.694"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.709" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:23.710" starttime="20140623 15:03:23.707"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:23.711" starttime="20140623 15:03:23.706"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.715" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:23.716" starttime="20140623 15:03:23.713"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:23.716" starttime="20140623 15:03:23.712"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.721" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:23.722" starttime="20140623 15:03:23.719"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:23.722" starttime="20140623 15:03:23.717"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:23.723" starttime="20140623 15:03:23.699"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:23.726" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:23.726" starttime="20140623 15:03:23.723"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.729" starttime="20140623 15:03:23.727"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.732" starttime="20140623 15:03:23.730"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.734" starttime="20140623 15:03:23.733"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.736" starttime="20140623 15:03:23.735"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:23.739" starttime="20140623 15:03:23.737"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:23.743" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140623 15:03:24.091" level="INFO">15:03:24,049 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
15:03:24,055 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:24.092" starttime="20140623 15:03:23.742"></status>
</kw>
<msg timestamp="20140623 15:03:24.094" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:24.095" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:03:24.093" starttime="20140623 15:03:23.740"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:24.105" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:24.105" starttime="20140623 15:03:24.103"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.108" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:24.108" starttime="20140623 15:03:24.106"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.111" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:24.110" starttime="20140623 15:03:24.109"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.115" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:24.117" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:24.117" starttime="20140623 15:03:24.113"></status>
</kw>
<msg timestamp="20140623 15:03:24.118" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:24.118" level="INFO">${return_log_entry} = 2014-06-23 15:03:24,055 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:24.118" starttime="20140623 15:03:24.112"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.127" starttime="20140623 15:03:24.125"></status>
</kw>
<msg timestamp="20140623 15:03:24.128" level="INFO">${return_log_entry} = 2014-06-23 15:03:24,055 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:24.128" starttime="20140623 15:03:24.119"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.137" starttime="20140623 15:03:24.135"></status>
</kw>
<msg timestamp="20140623 15:03:24.138" level="INFO">${return_log_entry} = 2014-06-23 15:03:24,055 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:24.137" starttime="20140623 15:03:24.129"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.147" starttime="20140623 15:03:24.145"></status>
</kw>
<msg timestamp="20140623 15:03:24.148" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:24.147" starttime="20140623 15:03:24.139"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.160" starttime="20140623 15:03:24.158"></status>
</kw>
<msg timestamp="20140623 15:03:24.161" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:24.161" starttime="20140623 15:03:24.148"></status>
</kw>
<msg timestamp="20140623 15:03:24.162" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:24.162" starttime="20140623 15:03:24.096"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:24.173" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140623 15:03:24.172" starttime="20140623 15:03:24.170"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.176" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:24.175" starttime="20140623 15:03:24.174"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.178" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:24.178" starttime="20140623 15:03:24.176"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.210" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:24.212" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:24.213" starttime="20140623 15:03:24.181"></status>
</kw>
<msg timestamp="20140623 15:03:24.214" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:24.214" level="INFO">${return_log_entry} = 2014-06-23 15:03:24,049 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:03:24.213" starttime="20140623 15:03:24.179"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.224" starttime="20140623 15:03:24.222"></status>
</kw>
<msg timestamp="20140623 15:03:24.225" level="INFO">${return_log_entry} = 2014-06-23 15:03:24,049 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:03:24.225" starttime="20140623 15:03:24.215"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.234" starttime="20140623 15:03:24.232"></status>
</kw>
<msg timestamp="20140623 15:03:24.235" level="INFO">${return_log_entry} = 2014-06-23 15:03:24,049 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:03:24.234" starttime="20140623 15:03:24.226"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.244" starttime="20140623 15:03:24.242"></status>
</kw>
<msg timestamp="20140623 15:03:24.245" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:24.244" starttime="20140623 15:03:24.236"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.257" starttime="20140623 15:03:24.255"></status>
</kw>
<msg timestamp="20140623 15:03:24.258" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:24.257" starttime="20140623 15:03:24.245"></status>
</kw>
<msg timestamp="20140623 15:03:24.259" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:24.259" starttime="20140623 15:03:24.163"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.268" starttime="20140623 15:03:24.267"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.270" starttime="20140623 15:03:24.269"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.272" starttime="20140623 15:03:24.270"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:24.282" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:03:24.283" starttime="20140623 15:03:24.280"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:24.284" starttime="20140623 15:03:24.278"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:24.284" starttime="20140623 15:03:24.272"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:24.284" starttime="20140623 15:03:24.260"></status>
</kw>
<msg timestamp="20140623 15:03:24.287" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:03:24.287" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:24.285" starttime="20140623 15:03:23.687"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140623 15:03:24.290" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:24.290" starttime="20140623 15:03:24.288"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 12</arg>
</arguments>
<msg timestamp="20140623 15:03:24.293" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:24.293" starttime="20140623 15:03:24.291"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${voice_state} = ars_support-resource.ARS Get Current Voice State">
<doc>Retrieves the actual state of an Android Phone's voice system attached to an Android Remoting Server</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=ars_host=${ars_host} ars_port=${ars_port} device_imsi=${device_imsi}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.305" level="INFO">msg=ars_host=10.189.11.226 ars_port=8080 device_imsi=232033013972241</msg>
<status status="PASS" endtime="20140623 15:03:24.306" starttime="20140623 15:03:24.303"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.318" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:24.319" starttime="20140623 15:03:24.316"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:24.320" starttime="20140623 15:03:24.315"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.324" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:24.325" starttime="20140623 15:03:24.322"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:24.326" starttime="20140623 15:03:24.321"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.330" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:24.331" starttime="20140623 15:03:24.328"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:24.331" starttime="20140623 15:03:24.326"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:24.332" starttime="20140623 15:03:24.308"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.335" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:24.336" starttime="20140623 15:03:24.333"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.339" starttime="20140623 15:03:24.336"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.342" starttime="20140623 15:03:24.340"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.343" starttime="20140623 15:03:24.342"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Voice.getCurrentVoiceState</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.345" starttime="20140623 15:03:24.344"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.348" starttime="20140623 15:03:24.346"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:24.352" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241']</msg>
<msg timestamp="20140623 15:03:24.699" level="INFO">15:03:24,655 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE
15:03:24,661 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:24.699" starttime="20140623 15:03:24.351"></status>
</kw>
<msg timestamp="20140623 15:03:24.700" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:24.700" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:03:24.700" starttime="20140623 15:03:24.349"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:24.711" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:24.711" starttime="20140623 15:03:24.709"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.714" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:24.713" starttime="20140623 15:03:24.712"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.716" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:24.716" starttime="20140623 15:03:24.715"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.721" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:24.722" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:24.723" starttime="20140623 15:03:24.719"></status>
</kw>
<msg timestamp="20140623 15:03:24.723" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:24.724" level="INFO">${return_log_entry} = 2014-06-23 15:03:24,661 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:24.723" starttime="20140623 15:03:24.717"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.732" starttime="20140623 15:03:24.730"></status>
</kw>
<msg timestamp="20140623 15:03:24.733" level="INFO">${return_log_entry} = 2014-06-23 15:03:24,661 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:24.733" starttime="20140623 15:03:24.725"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.742" starttime="20140623 15:03:24.740"></status>
</kw>
<msg timestamp="20140623 15:03:24.743" level="INFO">${return_log_entry} = 2014-06-23 15:03:24,661 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:24.742" starttime="20140623 15:03:24.734"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.752" starttime="20140623 15:03:24.750"></status>
</kw>
<msg timestamp="20140623 15:03:24.753" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:24.752" starttime="20140623 15:03:24.744"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.765" starttime="20140623 15:03:24.763"></status>
</kw>
<msg timestamp="20140623 15:03:24.766" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:24.765" starttime="20140623 15:03:24.753"></status>
</kw>
<msg timestamp="20140623 15:03:24.767" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:24.767" starttime="20140623 15:03:24.702"></status>
</kw>
<kw type="kw" timeout="" name="${voice_state} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.Voice.getCurrentVoiceState.output.voiceState</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:24.778" level="INFO">${return_marker} = LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=</msg>
<status status="PASS" endtime="20140623 15:03:24.777" starttime="20140623 15:03:24.775"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.780" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:24.780" starttime="20140623 15:03:24.779"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.783" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:24.783" starttime="20140623 15:03:24.781"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.788" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:24.789" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:24.789" starttime="20140623 15:03:24.786"></status>
</kw>
<msg timestamp="20140623 15:03:24.790" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:24.790" level="INFO">${return_log_entry} = 2014-06-23 15:03:24,655 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:03:24.790" starttime="20140623 15:03:24.784"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.799" starttime="20140623 15:03:24.797"></status>
</kw>
<msg timestamp="20140623 15:03:24.800" level="INFO">${return_log_entry} = 2014-06-23 15:03:24,655 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:03:24.799" starttime="20140623 15:03:24.791"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.808" starttime="20140623 15:03:24.806"></status>
</kw>
<msg timestamp="20140623 15:03:24.809" level="INFO">${return_log_entry} = 2014-06-23 15:03:24,655 INFO  [log] LowLevelOps.Voice.getCurrentVoiceState.output.voiceState=IDLE</msg>
<status status="PASS" endtime="20140623 15:03:24.809" starttime="20140623 15:03:24.801"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.818" starttime="20140623 15:03:24.816"></status>
</kw>
<msg timestamp="20140623 15:03:24.819" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:24.819" starttime="20140623 15:03:24.810"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.831" starttime="20140623 15:03:24.830"></status>
</kw>
<msg timestamp="20140623 15:03:24.832" level="INFO">${resultCode} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:24.832" starttime="20140623 15:03:24.820"></status>
</kw>
<msg timestamp="20140623 15:03:24.833" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:24.833" starttime="20140623 15:03:24.768"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-VoicegetCurrentVoiceState</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.843" starttime="20140623 15:03:24.841"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.844" starttime="20140623 15:03:24.843"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.846" starttime="20140623 15:03:24.845"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:24.857" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/LowLevelOps-VoicegetCurrentVoiceState*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:03:24.858" starttime="20140623 15:03:24.854"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:24.858" starttime="20140623 15:03:24.853"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:24.859" starttime="20140623 15:03:24.847"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:24.859" starttime="20140623 15:03:24.835"></status>
</kw>
<msg timestamp="20140623 15:03:24.861" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:03:24.861" level="INFO">${voice_state} = IDLE</msg>
<status status="PASS" endtime="20140623 15:03:24.860" starttime="20140623 15:03:24.295"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Querying voice state of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140623 15:03:24.863" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:24.864" starttime="20140623 15:03:24.862"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${voice_state}</arg>
<arg>IDLE</arg>
<arg>msg=Unexpected voice state of Phone 13</arg>
</arguments>
<msg timestamp="20140623 15:03:24.866" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:24.867" starttime="20140623 15:03:24.865"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_1_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140623 15:03:24.879" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140623 15:03:24.879" starttime="20140623 15:03:24.877"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.901" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:24.902" starttime="20140623 15:03:24.899"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:24.903" starttime="20140623 15:03:24.897"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.907" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:24.908" starttime="20140623 15:03:24.905"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:24.909" starttime="20140623 15:03:24.904"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.913" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:24.914" starttime="20140623 15:03:24.911"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:24.914" starttime="20140623 15:03:24.910"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:24.915" starttime="20140623 15:03:24.891"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:24.918" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:24.919" starttime="20140623 15:03:24.916"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.922" starttime="20140623 15:03:24.919"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.925" starttime="20140623 15:03:24.923"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.927" starttime="20140623 15:03:24.925"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.928" starttime="20140623 15:03:24.927"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.931" starttime="20140623 15:03:24.929"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.935" starttime="20140623 15:03:24.932"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:24.938" starttime="20140623 15:03:24.935"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:24.941" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140623 15:03:31.762" level="INFO">15:03:31,745 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
15:03:31,751 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:31.763" starttime="20140623 15:03:24.940"></status>
</kw>
<msg timestamp="20140623 15:03:31.766" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:31.766" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:03:31.765" starttime="20140623 15:03:24.939"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:31.778" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:31.778" starttime="20140623 15:03:31.776"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:31.781" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:31.781" starttime="20140623 15:03:31.779"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:31.784" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:31.783" starttime="20140623 15:03:31.782"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:31.788" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:31.790" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:31.790" starttime="20140623 15:03:31.786"></status>
</kw>
<msg timestamp="20140623 15:03:31.791" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:31.791" level="INFO">${return_log_entry} = 2014-06-23 15:03:31,751 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:31.791" starttime="20140623 15:03:31.785"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:31.801" starttime="20140623 15:03:31.799"></status>
</kw>
<msg timestamp="20140623 15:03:31.801" level="INFO">${return_log_entry} = 2014-06-23 15:03:31,751 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:31.801" starttime="20140623 15:03:31.792"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:31.810" starttime="20140623 15:03:31.809"></status>
</kw>
<msg timestamp="20140623 15:03:31.811" level="INFO">${return_log_entry} = 2014-06-23 15:03:31,751 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:31.811" starttime="20140623 15:03:31.803"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:31.820" starttime="20140623 15:03:31.818"></status>
</kw>
<msg timestamp="20140623 15:03:31.821" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:31.821" starttime="20140623 15:03:31.812"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:31.834" starttime="20140623 15:03:31.832"></status>
</kw>
<msg timestamp="20140623 15:03:31.835" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:31.834" starttime="20140623 15:03:31.822"></status>
</kw>
<msg timestamp="20140623 15:03:31.836" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:31.836" starttime="20140623 15:03:31.768"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:31.847" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140623 15:03:31.847" starttime="20140623 15:03:31.845"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:31.850" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:31.850" starttime="20140623 15:03:31.848"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:31.853" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:31.852" starttime="20140623 15:03:31.851"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:31.857" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:31.858" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:31.859" starttime="20140623 15:03:31.855"></status>
</kw>
<msg timestamp="20140623 15:03:31.860" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:31.860" level="INFO">${return_log_entry} = 2014-06-23 15:03:31,745 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:31.859" starttime="20140623 15:03:31.853"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:31.868" starttime="20140623 15:03:31.867"></status>
</kw>
<msg timestamp="20140623 15:03:31.869" level="INFO">${return_log_entry} = 2014-06-23 15:03:31,745 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:31.869" starttime="20140623 15:03:31.861"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:31.878" starttime="20140623 15:03:31.876"></status>
</kw>
<msg timestamp="20140623 15:03:31.879" level="INFO">${return_log_entry} = 2014-06-23 15:03:31,745 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:31.878" starttime="20140623 15:03:31.870"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:31.888" starttime="20140623 15:03:31.886"></status>
</kw>
<msg timestamp="20140623 15:03:31.889" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:31.888" starttime="20140623 15:03:31.880"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:31.901" starttime="20140623 15:03:31.900"></status>
</kw>
<msg timestamp="20140623 15:03:31.902" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:31.902" starttime="20140623 15:03:31.890"></status>
</kw>
<msg timestamp="20140623 15:03:31.903" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:31.903" starttime="20140623 15:03:31.837"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:31.913" starttime="20140623 15:03:31.911"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:31.914" starttime="20140623 15:03:31.913"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:31.916" starttime="20140623 15:03:31.915"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:31.927" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:03:31.928" starttime="20140623 15:03:31.925"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:31.928" starttime="20140623 15:03:31.923"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:31.929" starttime="20140623 15:03:31.917"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:31.929" starttime="20140623 15:03:31.905"></status>
</kw>
<msg timestamp="20140623 15:03:31.931" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:03:31.932" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:31.930" starttime="20140623 15:03:24.881"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:31.941" starttime="20140623 15:03:31.939"></status>
</kw>
<msg timestamp="20140623 15:03:31.942" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:31.941" starttime="20140623 15:03:31.933"></status>
</kw>
<msg timestamp="20140623 15:03:31.944" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:31.943" starttime="20140623 15:03:24.869"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 1 failed</arg>
</arguments>
<msg timestamp="20140623 15:03:31.946" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:31.947" starttime="20140623 15:03:31.945"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_ONNET_PHONE_2_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140623 15:03:31.959" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140623 15:03:31.958" starttime="20140623 15:03:31.957"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:31.981" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:31.982" starttime="20140623 15:03:31.979"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:31.982" starttime="20140623 15:03:31.977"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:31.987" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:31.988" starttime="20140623 15:03:31.985"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:31.988" starttime="20140623 15:03:31.983"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:31.993" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:31.994" starttime="20140623 15:03:31.991"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:31.994" starttime="20140623 15:03:31.989"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:31.994" starttime="20140623 15:03:31.971"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:31.998" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:31.998" starttime="20140623 15:03:31.995"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:32.001" starttime="20140623 15:03:31.999"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:32.006" starttime="20140623 15:03:32.003"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:32.008" starttime="20140623 15:03:32.006"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:32.010" starttime="20140623 15:03:32.008"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:32.013" starttime="20140623 15:03:32.010"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:32.016" starttime="20140623 15:03:32.014"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:32.019" starttime="20140623 15:03:32.017"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:32.023" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140623 15:03:38.839" level="INFO">15:03:38,825 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
15:03:38,831 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:38.840" starttime="20140623 15:03:32.022"></status>
</kw>
<msg timestamp="20140623 15:03:38.842" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:38.842" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:03:38.841" starttime="20140623 15:03:32.020"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:38.853" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:38.853" starttime="20140623 15:03:38.851"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:38.856" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:38.855" starttime="20140623 15:03:38.854"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:38.858" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:38.858" starttime="20140623 15:03:38.857"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:38.863" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:38.864" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:38.865" starttime="20140623 15:03:38.861"></status>
</kw>
<msg timestamp="20140623 15:03:38.866" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:38.866" level="INFO">${return_log_entry} = 2014-06-23 15:03:38,831 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:38.865" starttime="20140623 15:03:38.859"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:38.874" starttime="20140623 15:03:38.873"></status>
</kw>
<msg timestamp="20140623 15:03:38.875" level="INFO">${return_log_entry} = 2014-06-23 15:03:38,831 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:38.875" starttime="20140623 15:03:38.867"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:38.884" starttime="20140623 15:03:38.882"></status>
</kw>
<msg timestamp="20140623 15:03:38.885" level="INFO">${return_log_entry} = 2014-06-23 15:03:38,831 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:38.884" starttime="20140623 15:03:38.876"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:38.894" starttime="20140623 15:03:38.891"></status>
</kw>
<msg timestamp="20140623 15:03:38.894" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:38.894" starttime="20140623 15:03:38.885"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:38.907" starttime="20140623 15:03:38.905"></status>
</kw>
<msg timestamp="20140623 15:03:38.908" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:38.908" starttime="20140623 15:03:38.895"></status>
</kw>
<msg timestamp="20140623 15:03:38.909" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:38.909" starttime="20140623 15:03:38.844"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:38.920" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140623 15:03:38.920" starttime="20140623 15:03:38.917"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:38.923" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:38.922" starttime="20140623 15:03:38.921"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:38.925" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:38.925" starttime="20140623 15:03:38.924"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:38.930" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:38.931" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:38.932" starttime="20140623 15:03:38.928"></status>
</kw>
<msg timestamp="20140623 15:03:38.933" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:38.933" level="INFO">${return_log_entry} = 2014-06-23 15:03:38,825 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:38.932" starttime="20140623 15:03:38.926"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:38.941" starttime="20140623 15:03:38.940"></status>
</kw>
<msg timestamp="20140623 15:03:38.942" level="INFO">${return_log_entry} = 2014-06-23 15:03:38,825 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:38.942" starttime="20140623 15:03:38.934"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:38.951" starttime="20140623 15:03:38.949"></status>
</kw>
<msg timestamp="20140623 15:03:38.952" level="INFO">${return_log_entry} = 2014-06-23 15:03:38,825 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:38.952" starttime="20140623 15:03:38.943"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:38.962" starttime="20140623 15:03:38.959"></status>
</kw>
<msg timestamp="20140623 15:03:38.963" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:38.962" starttime="20140623 15:03:38.953"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:38.975" starttime="20140623 15:03:38.974"></status>
</kw>
<msg timestamp="20140623 15:03:38.976" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:38.976" starttime="20140623 15:03:38.964"></status>
</kw>
<msg timestamp="20140623 15:03:38.977" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:38.977" starttime="20140623 15:03:38.910"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:38.987" starttime="20140623 15:03:38.986"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:38.989" starttime="20140623 15:03:38.988"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:38.990" starttime="20140623 15:03:38.989"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:39.002" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:03:39.003" starttime="20140623 15:03:38.999"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:39.004" starttime="20140623 15:03:38.997"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:39.006" starttime="20140623 15:03:38.991"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:39.007" starttime="20140623 15:03:38.979"></status>
</kw>
<msg timestamp="20140623 15:03:39.009" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:03:39.010" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:39.008" starttime="20140623 15:03:31.961"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:39.019" starttime="20140623 15:03:39.017"></status>
</kw>
<msg timestamp="20140623 15:03:39.020" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:39.019" starttime="20140623 15:03:39.011"></status>
</kw>
<msg timestamp="20140623 15:03:39.022" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:39.020" starttime="20140623 15:03:31.948"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 2 failed</arg>
</arguments>
<msg timestamp="20140623 15:03:39.024" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:39.025" starttime="20140623 15:03:39.022"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_OFFNET_PHONE_12_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140623 15:03:39.037" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140623 15:03:39.036" starttime="20140623 15:03:39.035"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:39.059" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:39.060" starttime="20140623 15:03:39.057"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:39.060" starttime="20140623 15:03:39.055"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:39.096" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:39.097" starttime="20140623 15:03:39.063"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:39.098" starttime="20140623 15:03:39.061"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:39.103" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:39.104" starttime="20140623 15:03:39.100"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:39.104" starttime="20140623 15:03:39.099"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:39.105" starttime="20140623 15:03:39.049"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:39.108" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:39.109" starttime="20140623 15:03:39.106"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:39.112" starttime="20140623 15:03:39.109"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:39.115" starttime="20140623 15:03:39.113"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:39.117" starttime="20140623 15:03:39.116"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:39.119" starttime="20140623 15:03:39.118"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:39.122" starttime="20140623 15:03:39.120"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:39.125" starttime="20140623 15:03:39.123"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:39.128" starttime="20140623 15:03:39.126"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:39.132" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140623 15:03:45.750" level="INFO">15:03:45,732 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
15:03:45,739 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:45.751" starttime="20140623 15:03:39.130"></status>
</kw>
<msg timestamp="20140623 15:03:45.753" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:45.753" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:03:45.752" starttime="20140623 15:03:39.129"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:45.765" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:45.764" starttime="20140623 15:03:45.762"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:45.768" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:45.767" starttime="20140623 15:03:45.766"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:45.770" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:45.770" starttime="20140623 15:03:45.768"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:45.775" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:45.776" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:45.777" starttime="20140623 15:03:45.773"></status>
</kw>
<msg timestamp="20140623 15:03:45.778" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:45.778" level="INFO">${return_log_entry} = 2014-06-23 15:03:45,739 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:45.777" starttime="20140623 15:03:45.771"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.787" starttime="20140623 15:03:45.785"></status>
</kw>
<msg timestamp="20140623 15:03:45.788" level="INFO">${return_log_entry} = 2014-06-23 15:03:45,739 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:45.788" starttime="20140623 15:03:45.779"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.797" starttime="20140623 15:03:45.795"></status>
</kw>
<msg timestamp="20140623 15:03:45.798" level="INFO">${return_log_entry} = 2014-06-23 15:03:45,739 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:45.797" starttime="20140623 15:03:45.789"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.807" starttime="20140623 15:03:45.805"></status>
</kw>
<msg timestamp="20140623 15:03:45.808" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:45.807" starttime="20140623 15:03:45.799"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.820" starttime="20140623 15:03:45.818"></status>
</kw>
<msg timestamp="20140623 15:03:45.821" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:45.821" starttime="20140623 15:03:45.809"></status>
</kw>
<msg timestamp="20140623 15:03:45.822" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:45.822" starttime="20140623 15:03:45.755"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:45.833" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140623 15:03:45.833" starttime="20140623 15:03:45.831"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:45.836" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:45.836" starttime="20140623 15:03:45.834"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:45.839" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:45.838" starttime="20140623 15:03:45.837"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:45.843" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:45.844" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:45.845" starttime="20140623 15:03:45.841"></status>
</kw>
<msg timestamp="20140623 15:03:45.846" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:45.846" level="INFO">${return_log_entry} = 2014-06-23 15:03:45,732 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:45.845" starttime="20140623 15:03:45.840"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.855" starttime="20140623 15:03:45.853"></status>
</kw>
<msg timestamp="20140623 15:03:45.855" level="INFO">${return_log_entry} = 2014-06-23 15:03:45,732 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:45.855" starttime="20140623 15:03:45.847"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.864" starttime="20140623 15:03:45.862"></status>
</kw>
<msg timestamp="20140623 15:03:45.865" level="INFO">${return_log_entry} = 2014-06-23 15:03:45,732 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:45.865" starttime="20140623 15:03:45.857"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.874" starttime="20140623 15:03:45.872"></status>
</kw>
<msg timestamp="20140623 15:03:45.875" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:45.875" starttime="20140623 15:03:45.866"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.888" starttime="20140623 15:03:45.886"></status>
</kw>
<msg timestamp="20140623 15:03:45.889" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:45.888" starttime="20140623 15:03:45.876"></status>
</kw>
<msg timestamp="20140623 15:03:45.890" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:45.889" starttime="20140623 15:03:45.824"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.899" starttime="20140623 15:03:45.898"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.901" starttime="20140623 15:03:45.900"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.903" starttime="20140623 15:03:45.902"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:45.914" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:03:45.915" starttime="20140623 15:03:45.911"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:45.915" starttime="20140623 15:03:45.909"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:45.915" starttime="20140623 15:03:45.904"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:45.916" starttime="20140623 15:03:45.891"></status>
</kw>
<msg timestamp="20140623 15:03:45.918" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:03:45.918" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:45.917" starttime="20140623 15:03:39.038"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.927" starttime="20140623 15:03:45.926"></status>
</kw>
<msg timestamp="20140623 15:03:45.928" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:45.928" starttime="20140623 15:03:45.919"></status>
</kw>
<msg timestamp="20140623 15:03:45.930" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:45.929" starttime="20140623 15:03:39.026"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 12 failed</arg>
</arguments>
<msg timestamp="20140623 15:03:45.933" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:45.933" starttime="20140623 15:03:45.931"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Disable Call Forwarding">
<doc>executes a USSD disable call forwarding request on the passed phone</doc>
<arguments>
<arg>${ANDROID REMOTING HOST}</arg>
<arg>${ANDROID REMOTING PORT}</arg>
<arg>${ATTACHED_PSEUDO_FIXNET_PHONE_13_IMSI}</arg>
<arg>${USSD_TIMEOUT_SECONDS}</arg>
<arg>${USSD_EXPECTED_RESPONSE_DISABLE_FORWARDING}</arg>
</arguments>
<kw type="kw" timeout="" name="${ussd_code_disable_forwarding} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>\#\#21\#</arg>
</arguments>
<msg timestamp="20140623 15:03:45.946" level="INFO">${ussd_code_disable_forwarding} = ##21#</msg>
<status status="PASS" endtime="20140623 15:03:45.945" starttime="20140623 15:03:45.944"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode}, ${response_text} = ars_support-resource.ARS Ussd Request">
<doc>Sends a USSD request from an Android Phones attached to an Android Remoting Server and returns ther response text</doc>
<arguments>
<arg>${ars_host}</arg>
<arg>${ars_port}</arg>
<arg>${device_imsi}</arg>
<arg>${ussd_code_disable_forwarding}</arg>
<arg>${ussd_timeout_seconds}</arg>
</arguments>
<kw type="kw" timeout="" name="ars_support-resource.ARS Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:45.968" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:45.969" starttime="20140623 15:03:45.965"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:45.969" starttime="20140623 15:03:45.964"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:45.974" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:45.974" starttime="20140623 15:03:45.971"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:45.975" starttime="20140623 15:03:45.970"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20140623 15:03:45.980" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140623 15:03:45.980" starttime="20140623 15:03:45.977"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:45.981" starttime="20140623 15:03:45.976"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:45.981" starttime="20140623 15:03:45.958"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${ARS BRIDGE SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20140623 15:03:45.985" level="INFO">soapUI 4.5.1 TestCase Runner</msg>
<status status="PASS" endtime="20140623 15:03:45.985" starttime="20140623 15:03:45.982"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsHost=${ars_host}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.988" starttime="20140623 15:03:45.986"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>arsPort=${ars_port}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.991" starttime="20140623 15:03:45.989"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>Testcases</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.993" starttime="20140623 15:03:45.992"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>Ussd</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.995" starttime="20140623 15:03:45.994"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.deviceImsi=${device_imsi}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:45.998" starttime="20140623 15:03:45.996"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.ussdCode=${ussd_code}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:46.001" starttime="20140623 15:03:45.999"></status>
</kw>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>Testcases.Ussd.input.timeoutSeconds=${timeout_seconds}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:46.005" starttime="20140623 15:03:46.003"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" timeout="" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20140623 15:03:46.009" level="INFO">Running with the following project properties set: [u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101003', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15314', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15313', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15312', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getAccounts.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15319', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15318', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15317', u'LowLevelOps.setBalance.input.amount=0', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15310', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15310', u'LowLevelOps.setBalance.input.accountId=15311', u'LowLevelOps.setBalance.input.amount=10000000', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getSubscriberProfileByImsi.input.imsi=530052041010001', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.getMainAccount.input.subscriberId=15315', u'crceHost=10.105.140.125', u'crcePort=8080', u'crceWebservicesBasePath=/', u'LowLevelOps.setBalance.input.subscriberId=15315', u'LowLevelOps.setBalance.input.accountId=15316', u'LowLevelOps.setBalance.input.amount=10000000', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.release.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972240', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972239', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'LowLevelOps.Voice.getCurrentVoiceState.input.deviceImsi=232033013972241', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972240', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972239', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30', u'arsHost=10.189.11.226', u'arsPort=8080', u'Testcases.Ussd.input.deviceImsi=232033013972241', u'Testcases.Ussd.input.ussdCode=##21#', u'Testcases.Ussd.input.timeoutSeconds=30']</msg>
<msg timestamp="20140623 15:03:52.251" level="INFO">15:03:52,236 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.
15:03:52,243 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:52.251" starttime="20140623 15:03:46.008"></status>
</kw>
<msg timestamp="20140623 15:03:52.254" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:52.254" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20140623 15:03:52.253" starttime="20140623 15:03:46.006"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:52.265" level="INFO">${return_marker} = Testcases.Ussd.output.resultCode=</msg>
<status status="PASS" endtime="20140623 15:03:52.265" starttime="20140623 15:03:52.263"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:52.268" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:52.267" starttime="20140623 15:03:52.266"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:52.271" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:52.270" starttime="20140623 15:03:52.269"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:52.275" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:52.276" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:52.277" starttime="20140623 15:03:52.273"></status>
</kw>
<msg timestamp="20140623 15:03:52.278" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:52.278" level="INFO">${return_log_entry} = 2014-06-23 15:03:52,243 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:52.277" starttime="20140623 15:03:52.272"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:52.286" starttime="20140623 15:03:52.284"></status>
</kw>
<msg timestamp="20140623 15:03:52.287" level="INFO">${return_log_entry} = 2014-06-23 15:03:52,243 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:52.287" starttime="20140623 15:03:52.279"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:52.296" starttime="20140623 15:03:52.294"></status>
</kw>
<msg timestamp="20140623 15:03:52.296" level="INFO">${return_log_entry} = 2014-06-23 15:03:52,243 INFO  [log] Testcases.Ussd.output.resultCode=OK</msg>
<status status="PASS" endtime="20140623 15:03:52.296" starttime="20140623 15:03:52.288"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:52.305" starttime="20140623 15:03:52.303"></status>
</kw>
<msg timestamp="20140623 15:03:52.306" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:52.306" starttime="20140623 15:03:52.297"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:52.319" starttime="20140623 15:03:52.317"></status>
</kw>
<msg timestamp="20140623 15:03:52.320" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:52.319" starttime="20140623 15:03:52.307"></status>
</kw>
<msg timestamp="20140623 15:03:52.321" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:52.321" starttime="20140623 15:03:52.256"></status>
</kw>
<kw type="kw" timeout="" name="${response_text} = ars_support-resource.ARS Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>Testcases.Ussd.output.responseText</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" timeout="" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20140623 15:03:52.332" level="INFO">${return_marker} = Testcases.Ussd.output.responseText=</msg>
<status status="PASS" endtime="20140623 15:03:52.331" starttime="20140623 15:03:52.329"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:52.335" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20140623 15:03:52.334" starttime="20140623 15:03:52.333"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20140623 15:03:52.337" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20140623 15:03:52.337" starttime="20140623 15:03:52.335"></status>
</kw>
<kw type="kw" timeout="" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20140623 15:03:52.375" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20140623 15:03:52.377" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20140623 15:03:52.377" starttime="20140623 15:03:52.372"></status>
</kw>
<msg timestamp="20140623 15:03:52.378" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20140623 15:03:52.379" level="INFO">${return_log_entry} = 2014-06-23 15:03:52,236 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:52.378" starttime="20140623 15:03:52.370"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:52.388" starttime="20140623 15:03:52.386"></status>
</kw>
<msg timestamp="20140623 15:03:52.389" level="INFO">${return_log_entry} = 2014-06-23 15:03:52,236 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:52.388" starttime="20140623 15:03:52.380"></status>
</kw>
<kw type="kw" timeout="" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:52.397" starttime="20140623 15:03:52.395"></status>
</kw>
<msg timestamp="20140623 15:03:52.398" level="INFO">${return_log_entry} = 2014-06-23 15:03:52,236 INFO  [log] Testcases.Ussd.output.responseText=Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:52.398" starttime="20140623 15:03:52.390"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:52.407" starttime="20140623 15:03:52.405"></status>
</kw>
<msg timestamp="20140623 15:03:52.408" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:52.408" starttime="20140623 15:03:52.399"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:52.421" starttime="20140623 15:03:52.419"></status>
</kw>
<msg timestamp="20140623 15:03:52.422" level="INFO">${resultCode} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:52.422" starttime="20140623 15:03:52.409"></status>
</kw>
<msg timestamp="20140623 15:03:52.423" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:52.423" starttime="20140623 15:03:52.322"></status>
</kw>
<kw type="kw" timeout="" name="ars_support-resource.ARS Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>Testcases-Ussd</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:52.432" starttime="20140623 15:03:52.431"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:52.434" starttime="20140623 15:03:52.433"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${ARS BRIDGE SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:52.436" starttime="20140623 15:03:52.435"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" timeout="" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20140623 15:03:52.447" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/hew/e2e-testing/prepaid-MTC/IN_PP_MTC_006-PrepaidMTC-NoAnswer/Testcases-Ussd*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20140623 15:03:52.448" starttime="20140623 15:03:52.444"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:52.448" starttime="20140623 15:03:52.442"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:52.448" starttime="20140623 15:03:52.437"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:52.449" starttime="20140623 15:03:52.424"></status>
</kw>
<msg timestamp="20140623 15:03:52.451" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20140623 15:03:52.451" level="INFO">${response_text} = Call forwarding&lt;br&gt;Erasure was successful.</msg>
<status status="PASS" endtime="20140623 15:03:52.450" starttime="20140623 15:03:45.947"></status>
</kw>
<kw type="kw" timeout="" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK' and '${response_text}'!='${ussd_success_response}'</arg>
<arg>Set Variable</arg>
<arg>UNEXPECTED_USSD_RESPONSE</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" timeout="" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20140623 15:03:52.460" starttime="20140623 15:03:52.459"></status>
</kw>
<msg timestamp="20140623 15:03:52.461" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:52.461" starttime="20140623 15:03:52.452"></status>
</kw>
<msg timestamp="20140623 15:03:52.463" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20140623 15:03:52.462" starttime="20140623 15:03:45.935"></status>
</kw>
<kw type="kw" timeout="" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resultCode}</arg>
<arg>OK</arg>
<arg>msg=Disabling call forwarding of Phone 13 failed</arg>
</arguments>
<msg timestamp="20140623 15:03:52.466" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140623 15:03:52.466" starttime="20140623 15:03:52.464"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:52.467" starttime="20140623 15:03:20.292"></status>
</kw>
<status status="PASS" endtime="20140623 15:03:52.468" starttime="20140623 15:03:20.254"></status>
</kw>
<doc>This is an end-to-end testing implementation of the IN_PP_MTC_006 - Prepaid MTC - NoAnswer TC
This is nearly an exact copy of IN_PP_MOC_010-PrepaidMOC-NoAnswer-robot-suite.txt except that Phone 2 calls Phone 1 instead of the other way round
and the faking part is an MTC call instead of a MOC
---------------------------------------------------------------
Run Prepaid MTC NoAnswer

===============================================================================
Run with arguments:
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/MEX-resource.txt
============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20140623 15:03:52.469" starttime="20140623 15:01:42.999"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" info="" doc="" combined="" fail="0" links="">End2EndTest</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">experimental</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">TNZ_supported</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">walter.heincz</stat>
</tag>
<suite>
<stat pass="1" id="s1" fail="0" name="IN PP MTC 006-PrepaidMTC-NoAnswer-robot-suite">IN PP MTC 006-PrepaidMTC-NoAnswer-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
