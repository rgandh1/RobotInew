<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20150724 10:21:14.620">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/MOC_PREPAID_ONNET-ToUnknown-robot-suite.txt" id="s1" name="MOC PREPAID ONNET-ToUnknown-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20150724 10:21:17.215" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20150724 10:21:17.218" level="INFO">${date} = Fri Jul 24 10:21:17 CEST 2015</msg>
<status status="PASS" endtime="20150724 10:21:17.217" starttime="20150724 10:21:17.203"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150724 10:21:17.223" level="INFO">Date and time: Fri Jul 24 10:21:17 CEST 2015</msg>
<status status="PASS" endtime="20150724 10:21:17.224" starttime="20150724 10:21:17.220"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150724 10:21:17.229" level="INFO">Target IN machine: 10.105.113.135</msg>
<status status="PASS" endtime="20150724 10:21:17.230" starttime="20150724 10:21:17.226"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:17.304" starttime="20150724 10:21:17.301"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:17.484" starttime="20150724 10:21:17.317"></status>
</kw>
<msg timestamp="20150724 10:21:17.486" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20150724 10:21:17.485" starttime="20150724 10:21:17.306"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20150724 10:21:17.501" level="INFO">Logging into '10.105.113.135:22' as 'qa_automation'.</msg>
<msg timestamp="20150724 10:21:17.915" level="INFO">Read output: Last login: Fri Jul 24 06:15:32 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb13 ~]$</msg>
<status status="PASS" endtime="20150724 10:21:17.917" starttime="20150724 10:21:17.498"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:17.918" starttime="20150724 10:21:17.489"></status>
</kw>
<msg timestamp="20150724 10:21:17.920" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20150724 10:21:17.920" starttime="20150724 10:21:17.287"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20150724 10:21:17.927" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150724 10:21:17.927" starttime="20150724 10:21:17.922"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20150724 10:21:17.931" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-3.0.1 status'.</msg>
<msg timestamp="20150724 10:21:18.354" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150724 10:21:18.360" level="INFO">${output} = I-New MVNA TNZ - Core - Service 3.0.1 2015.03.26-15:26:48 is running PID: 4262 </msg>
<status status="PASS" endtime="20150724 10:21:18.357" starttime="20150724 10:21:17.929"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:18.378" starttime="20150724 10:21:18.371"></status>
</kw>
<msg timestamp="20150724 10:21:18.382" level="INFO">${status} = PASS</msg>
<msg timestamp="20150724 10:21:18.384" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20150724 10:21:18.381" starttime="20150724 10:21:18.364"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:18.404" starttime="20150724 10:21:18.400"></status>
</kw>
<msg timestamp="20150724 10:21:18.408" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:18.406" starttime="20150724 10:21:18.387"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20150724 10:21:18.418" level="INFO">${version_r} =  3.0.1 2015.03.26-15:26:48 is running PID: 4262 </msg>
<status status="PASS" endtime="20150724 10:21:18.416" starttime="20150724 10:21:18.411"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20150724 10:21:18.428" level="INFO">${version} =  3.0.1 2015.03.26-15:26:48 </msg>
<status status="PASS" endtime="20150724 10:21:18.427" starttime="20150724 10:21:18.421"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:18.437" starttime="20150724 10:21:18.433"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:18.468" starttime="20150724 10:21:18.463"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20150724 10:21:18.481" starttime="20150724 10:21:18.471"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:18.484" starttime="20150724 10:21:18.440"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:18.503" starttime="20150724 10:21:18.498"></status>
</kw>
<msg timestamp="20150724 10:21:18.505" level="INFO">${ver} =  3.0.1 2015.03.26-15:26:48 </msg>
<status status="PASS" endtime="20150724 10:21:18.504" starttime="20150724 10:21:18.487"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:18.509" starttime="20150724 10:21:18.507"></status>
</kw>
<msg timestamp="20150724 10:21:18.512" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20150724 10:21:18.513" level="INFO">${in_version} =  3.0.1 2015.03.26-15:26:48 </msg>
<status status="PASS" endtime="20150724 10:21:18.511" starttime="20150724 10:21:17.252"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:18.569" starttime="20150724 10:21:18.567"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:18.644" starttime="20150724 10:21:18.576"></status>
</kw>
<msg timestamp="20150724 10:21:18.648" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20150724 10:21:18.646" starttime="20150724 10:21:18.570"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20150724 10:21:18.669" level="INFO">Logging into '10.105.113.171:22' as 'qa_automation'.</msg>
<msg timestamp="20150724 10:21:19.530" level="INFO">Read output: Last login: Fri Jul 24 06:18:41 2015 from 10.105.80.196
[1m[qa_automation@xdr01.tb13 ~]$</msg>
<status status="PASS" endtime="20150724 10:21:19.534" starttime="20150724 10:21:18.664"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:19.537" starttime="20150724 10:21:18.651"></status>
</kw>
<msg timestamp="20150724 10:21:19.544" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20150724 10:21:19.542" starttime="20150724 10:21:18.556"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20150724 10:21:19.561" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150724 10:21:19.559" starttime="20150724 10:21:19.549"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20150724 10:21:19.570" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20150724 10:21:20.204" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150724 10:21:20.210" level="INFO">${output} = I-New UMS MVNO - XDR - Server 5.3.1.25016 is running PID: 3582 </msg>
<status status="PASS" endtime="20150724 10:21:20.207" starttime="20150724 10:21:19.565"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:20.230" starttime="20150724 10:21:20.222"></status>
</kw>
<msg timestamp="20150724 10:21:20.234" level="INFO">${status} = PASS</msg>
<msg timestamp="20150724 10:21:20.236" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20150724 10:21:20.232" starttime="20150724 10:21:20.215"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:20.259" starttime="20150724 10:21:20.254"></status>
</kw>
<msg timestamp="20150724 10:21:20.263" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:20.261" starttime="20150724 10:21:20.240"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20150724 10:21:20.274" level="INFO">${version_r} =  5.3.1.25016 is running PID: 3582 </msg>
<status status="PASS" endtime="20150724 10:21:20.273" starttime="20150724 10:21:20.267"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20150724 10:21:20.284" level="INFO">${version} =  5.3.1.25016 </msg>
<status status="PASS" endtime="20150724 10:21:20.283" starttime="20150724 10:21:20.278"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:20.292" starttime="20150724 10:21:20.288"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:20.321" starttime="20150724 10:21:20.316"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20150724 10:21:20.329" starttime="20150724 10:21:20.325"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:20.333" starttime="20150724 10:21:20.297"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:20.354" starttime="20150724 10:21:20.349"></status>
</kw>
<msg timestamp="20150724 10:21:20.357" level="INFO">${ver} =  5.3.1.25016 </msg>
<status status="PASS" endtime="20150724 10:21:20.356" starttime="20150724 10:21:20.337"></status>
</kw>
<msg timestamp="20150724 10:21:20.364" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20150724 10:21:20.366" level="INFO">${xdr_version} =  5.3.1.25016 </msg>
<status status="PASS" endtime="20150724 10:21:20.361" starttime="20150724 10:21:18.530"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:20.429" starttime="20150724 10:21:20.427"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:20.492" starttime="20150724 10:21:20.436"></status>
</kw>
<msg timestamp="20150724 10:21:20.496" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20150724 10:21:20.494" starttime="20150724 10:21:20.430"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20150724 10:21:20.521" level="INFO">Logging into '10.105.113.125:22' as 'qa_automation'.</msg>
<msg timestamp="20150724 10:21:21.023" level="INFO">Read output: Last login: Fri Jul 24 06:15:34 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@crce01.tb13 ~]$</msg>
<status status="PASS" endtime="20150724 10:21:21.025" starttime="20150724 10:21:20.516"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:21.027" starttime="20150724 10:21:20.503"></status>
</kw>
<msg timestamp="20150724 10:21:21.030" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20150724 10:21:21.029" starttime="20150724 10:21:20.416"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20150724 10:21:21.037" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20150724 10:21:21.037" starttime="20150724 10:21:21.032"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20150724 10:21:21.041" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20150724 10:21:21.222" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20150724 10:21:21.225" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 5.3.14.26930
Negret Rating &amp; Charging Engine 5.3.14.26930 is running (PID:1839, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20150724 10:21:21.224" starttime="20150724 10:21:21.039"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.240" starttime="20150724 10:21:21.234"></status>
</kw>
<msg timestamp="20150724 10:21:21.244" level="INFO">${status} = PASS</msg>
<msg timestamp="20150724 10:21:21.245" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20150724 10:21:21.243" starttime="20150724 10:21:21.229"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.264" starttime="20150724 10:21:21.260"></status>
</kw>
<msg timestamp="20150724 10:21:21.267" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:21.266" starttime="20150724 10:21:21.248"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20150724 10:21:21.277" level="INFO">${version_r} =  5.3.14.26930 is running (PID:1839, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20150724 10:21:21.275" starttime="20150724 10:21:21.270"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20150724 10:21:21.286" level="INFO">${version} =  5.3.14.26930 </msg>
<status status="PASS" endtime="20150724 10:21:21.284" starttime="20150724 10:21:21.280"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.292" starttime="20150724 10:21:21.288"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.317" starttime="20150724 10:21:21.313"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.325" starttime="20150724 10:21:21.320"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:21.329" starttime="20150724 10:21:21.295"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.346" starttime="20150724 10:21:21.341"></status>
</kw>
<msg timestamp="20150724 10:21:21.349" level="INFO">${ver} =  5.3.14.26930 </msg>
<status status="PASS" endtime="20150724 10:21:21.348" starttime="20150724 10:21:21.332"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.356" starttime="20150724 10:21:21.351"></status>
</kw>
<msg timestamp="20150724 10:21:21.362" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20150724 10:21:21.363" level="INFO">${crce_version} =  5.3.14.26930 </msg>
<status status="PASS" endtime="20150724 10:21:21.359" starttime="20150724 10:21:20.389"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150724 10:21:21.371" level="INFO">IN state= OK version= 3.0.1 2015.03.26-15:26:48 </msg>
<status status="PASS" endtime="20150724 10:21:21.373" starttime="20150724 10:21:21.366"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150724 10:21:21.381" level="INFO">XDR state= OK version= 5.3.1.25016 </msg>
<status status="PASS" endtime="20150724 10:21:21.383" starttime="20150724 10:21:21.375"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150724 10:21:21.391" level="INFO">CRCE state= OK version= 5.3.14.26930 </msg>
<status status="PASS" endtime="20150724 10:21:21.392" starttime="20150724 10:21:21.385"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20150724 10:21:21.400" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20150724 10:21:21.401" starttime="20150724 10:21:21.395"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20150724 10:21:21.409" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20150724 10:21:21.410" starttime="20150724 10:21:21.404"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20150724 10:21:21.417" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20150724 10:21:21.419" starttime="20150724 10:21:21.413"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:21.421" starttime="20150724 10:21:17.192"></status>
</kw>
<test id="s1-t1" name="Run MOC Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.449" starttime="20150724 10:21:21.446"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<msg timestamp="20150724 10:21:21.457" level="INFO">${INITIAL_BALANCE} = 10000000</msg>
<status status="PASS" endtime="20150724 10:21:21.455" starttime="20150724 10:21:21.452"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20150724 10:21:21.493" level="INFO">msg=crce_host=10.105.113.125</msg>
<status status="PASS" endtime="20150724 10:21:21.495" starttime="20150724 10:21:21.489"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20150724 10:21:21.501" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20150724 10:21:21.503" starttime="20150724 10:21:21.497"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20150724 10:21:21.507" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20150724 10:21:21.507" starttime="20150724 10:21:21.505"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20150724 10:21:21.510" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20150724 10:21:21.511" starttime="20150724 10:21:21.508"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20150724 10:21:21.514" level="INFO">msg=imsiRangeStart=530052041010000</msg>
<status status="PASS" endtime="20150724 10:21:21.515" starttime="20150724 10:21:21.512"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20150724 10:21:21.517" level="INFO">msg=msisdnRangeStart=642041010000</msg>
<status status="PASS" endtime="20150724 10:21:21.518" starttime="20150724 10:21:21.516"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20150724 10:21:21.521" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:21.522" starttime="20150724 10:21:21.519"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20150724 10:21:21.525" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20150724 10:21:21.525" starttime="20150724 10:21:21.523"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20150724 10:21:21.528" level="INFO">msg=tariffId=101001</msg>
<status status="PASS" endtime="20150724 10:21:21.529" starttime="20150724 10:21:21.526"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20150724 10:21:21.532" level="INFO">msg=balance=10000000</msg>
<status status="PASS" endtime="20150724 10:21:21.532" starttime="20150724 10:21:21.530"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:21.547" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:21.548" starttime="20150724 10:21:21.544"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:21.548" starttime="20150724 10:21:21.541"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:21.554" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:21.555" starttime="20150724 10:21:21.552"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:21.556" starttime="20150724 10:21:21.550"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:21.561" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:21.562" starttime="20150724 10:21:21.559"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:21.563" starttime="20150724 10:21:21.557"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:21.564" starttime="20150724 10:21:21.535"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20150724 10:21:21.568" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20150724 10:21:21.569" starttime="20150724 10:21:21.565"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.572" starttime="20150724 10:21:21.570"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.575" starttime="20150724 10:21:21.573"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.578" starttime="20150724 10:21:21.576"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.581" starttime="20150724 10:21:21.579"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.584" starttime="20150724 10:21:21.582"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.587" starttime="20150724 10:21:21.585"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.590" starttime="20150724 10:21:21.588"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.593" starttime="20150724 10:21:21.591"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.596" starttime="20150724 10:21:21.594"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.599" starttime="20150724 10:21:21.597"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.603" starttime="20150724 10:21:21.601"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:21.606" starttime="20150724 10:21:21.604"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20150724 10:21:21.610" level="INFO">Running with the following project properties set: [u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000']</msg>
<msg timestamp="20150724 10:21:42.132" level="INFO">10:21:21,784 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/ext] for external libraries
10:21:21,784 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
10:21:23,629 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/crce-subscriberadmin/robot_crce_bridge-soapui-project.xml]
10:21:23,648 INFO  [SoapUITestCaseRunner] Setting project property [crceHost] to [10.105.113.125]
10:21:23,649 INFO  [SoapUITestCaseRunner] Setting project property [crcePort] to [8080]
10:21:23,649 INFO  [SoapUITestCaseRunner] Setting project property [crceWebservicesBasePath] to [/inew-mvno-crce-webservices/]
10:21:23,649 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.amount] to [2]
10:21:23,649 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.imsiRangeStart] to [530052041010000]
10:21:23,649 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.msisdnRangeStart] to [642041010000]
10:21:23,649 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.type] to [PREPAID]
10:21:23,649 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.languageid] to [1]
10:21:23,650 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.tariffId] to [101001]
10:21:23,650 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.balance] to [10000000]
10:21:23,650 INFO  [SoapUITestCaseRunner] Running SoapUI tests in project [Robotframework_CRCE-Bridge]
10:21:23,650 INFO  [SoapUITestCaseRunner] Running TestCase [createTestSubscribers]
10:21:23,659 INFO  [SoapUITestCaseRunner] Running SoapUI testcase [createTestSubscribers]
10:21:23,666 INFO  [SoapUITestCaseRunner] running step [init_repeat_counter]
10:21:24,108 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
10:21:24,173 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
10:21:24,403 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:21:24,403 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
10:21:34,620 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:21:34,627 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:21:34,818 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:21:34,818 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:21:34,818 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:21:34,818 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
10:21:34,912 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
10:21:35,179 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
10:21:35,205 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
10:21:35,206 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:21:35,208 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:21:35,208 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
10:21:37,367 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:21:37,367 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:21:37,381 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:21:37,381 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:21:37,382 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:21:37,382 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
10:21:37,455 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
10:21:37,461 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
10:21:37,512 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
10:21:37,516 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:21:37,518 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:21:37,518 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
10:21:38,572 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:21:38,572 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:21:38,578 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:21:38,579 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:21:38,579 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:21:38,579 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
10:21:38,650 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
10:21:38,660 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
10:21:38,720 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
10:21:38,723 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:21:38,725 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:21:38,725 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
10:21:39,199 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:21:39,199 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:21:39,206 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:21:39,207 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:21:39,207 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:21:39,207 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
10:21:39,273 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
10:21:39,278 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
10:21:39,320 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
10:21:39,323 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:21:39,325 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:21:39,325 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
10:21:39,614 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:21:39,614 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:21:39,628 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:21:39,628 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:21:39,628 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:21:39,629 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
10:21:39,692 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
10:21:39,712 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
10:21:39,755 INFO  [SoapUITestCaseRunner] running step [setBalance]
10:21:39,756 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:21:39,758 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:21:39,758 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
10:21:40,057 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:21:40,057 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:21:40,069 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:21:40,069 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:21:40,069 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:21:40,070 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
10:21:40,133 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
10:21:40,143 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
10:21:40,185 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
10:21:40,247 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
10:21:40,251 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
10:21:40,254 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:21:40,255 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:21:40,255 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
10:21:40,602 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:21:40,603 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:21:40,619 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:21:40,619 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:21:40,619 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:21:40,619 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
10:21:40,620 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
10:21:40,644 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
10:21:40,645 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
10:21:40,647 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:21:40,649 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:21:40,649 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
10:21:40,665 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:21:40,665 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:21:40,670 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:21:40,670 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:21:40,671 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:21:40,671 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
10:21:40,671 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
10:21:40,681 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
10:21:40,683 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
10:21:40,685 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:21:40,687 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:21:40,687 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
10:21:41,319 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:21:41,319 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:21:41,325 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:21:41,325 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:21:41,325 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:21:41,326 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
10:21:41,326 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
10:21:41,332 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
10:21:41,333 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
10:21:41,335 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:21:41,337 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:21:41,337 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
10:21:41,611 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:21:41,611 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:21:41,623 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:21:41,623 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:21:41,623 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:21:41,624 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
10:21:41,624 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
10:21:41,645 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
10:21:41,646 INFO  [SoapUITestCaseRunner] running step [setBalance]
10:21:41,648 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:21:41,650 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:21:41,650 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
10:21:42,028 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:21:42,028 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:21:42,039 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:21:42,039 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:21:42,040 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:21:42,040 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
10:21:42,040 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
10:21:42,049 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
10:21:42,050 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
10:21:42,052 INFO  [SoapUITestCaseRunner] running step [finish_successful]
10:21:42,120 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK
10:21:42,122 INFO  [SoapUITestCaseRunner] Finished running SoapUI testcase [createTestSubscribers], time taken: 18405ms, status: FINISHED
10:21:42,122 INFO  [SoapUITestCaseRunner] TestCase [createTestSubscribers] finished with status [FINISHED] in 18405ms</msg>
<status status="PASS" endtime="20150724 10:21:42.139" starttime="20150724 10:21:21.609"></status>
</kw>
<msg timestamp="20150724 10:21:42.146" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:42.147" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20150724 10:21:42.143" starttime="20150724 10:21:21.607"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:42.184" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20150724 10:21:42.183" starttime="20150724 10:21:42.176"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:42.194" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:42.192" starttime="20150724 10:21:42.188"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:42.203" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:42.202" starttime="20150724 10:21:42.197"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:42.220" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:42.233" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:42.234" starttime="20150724 10:21:42.213"></status>
</kw>
<msg timestamp="20150724 10:21:42.238" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:42.240" level="INFO">${return_log_entry} = 2015-07-24 10:21:42,120 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:42.237" starttime="20150724 10:21:42.207"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:42.318" starttime="20150724 10:21:42.313"></status>
</kw>
<msg timestamp="20150724 10:21:42.322" level="INFO">${return_log_entry} = 2015-07-24 10:21:42,120 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:42.320" starttime="20150724 10:21:42.243"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:42.342" starttime="20150724 10:21:42.337"></status>
</kw>
<msg timestamp="20150724 10:21:42.345" level="INFO">${return_log_entry} = 2015-07-24 10:21:42,120 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:42.344" starttime="20150724 10:21:42.325"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:42.367" starttime="20150724 10:21:42.361"></status>
</kw>
<msg timestamp="20150724 10:21:42.370" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:42.369" starttime="20150724 10:21:42.348"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:42.397" starttime="20150724 10:21:42.392"></status>
</kw>
<msg timestamp="20150724 10:21:42.400" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:42.399" starttime="20150724 10:21:42.373"></status>
</kw>
<msg timestamp="20150724 10:21:42.405" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:42.404" starttime="20150724 10:21:42.153"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:42.434" starttime="20150724 10:21:42.429"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:42.440" starttime="20150724 10:21:42.436"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:42.447" starttime="20150724 10:21:42.443"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20150724 10:21:42.479" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20150724 10:21:42.481" starttime="20150724 10:21:42.466"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:42.483" starttime="20150724 10:21:42.461"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:42.485" starttime="20150724 10:21:42.450"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:42.487" starttime="20150724 10:21:42.409"></status>
</kw>
<msg timestamp="20150724 10:21:42.493" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20150724 10:21:42.491" starttime="20150724 10:21:21.464"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20150724 10:21:42.501" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20150724 10:21:42.503" starttime="20150724 10:21:42.497"></status>
</kw>
<kw type="kw" name="${unknown_subscriber} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}+1</arg>
</arguments>
<msg timestamp="20150724 10:21:42.510" level="INFO">${unknown_subscriber} = 642041010001</msg>
<status status="PASS" endtime="20150724 10:21:42.509" starttime="20150724 10:21:42.505"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Unknown subscriber's MSISDN: ${unknown_subscriber}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150724 10:21:42.513" level="INFO">Unknown subscriber's MSISDN: 642041010001</msg>
<status status="PASS" endtime="20150724 10:21:42.514" starttime="20150724 10:21:42.511"></status>
</kw>
<kw type="kw" name="${rc}, ${provcId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${unknown_subscriber}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:42.544" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:42.545" starttime="20150724 10:21:42.541"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:42.546" starttime="20150724 10:21:42.539"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:42.552" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:42.554" starttime="20150724 10:21:42.550"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:42.555" starttime="20150724 10:21:42.548"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:42.561" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:42.562" starttime="20150724 10:21:42.559"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:42.563" starttime="20150724 10:21:42.557"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:42.564" starttime="20150724 10:21:42.530"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20150724 10:21:42.568" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20150724 10:21:42.569" starttime="20150724 10:21:42.565"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:42.572" starttime="20150724 10:21:42.570"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:42.575" starttime="20150724 10:21:42.573"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:42.578" starttime="20150724 10:21:42.576"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:42.580" starttime="20150724 10:21:42.579"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:42.583" starttime="20150724 10:21:42.582"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:42.586" starttime="20150724 10:21:42.584"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20150724 10:21:42.590" level="INFO">Running with the following project properties set: [u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=642041010001']</msg>
<msg timestamp="20150724 10:21:43.290" level="INFO">10:21:43,286 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
10:21:43,286 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
10:21:43,287 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=52065882
10:21:43,287 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=530052041010001
10:21:43,288 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
10:21:43,288 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001
10:21:43,288 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID
10:21:43,289 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20150724 10:21:43.291" starttime="20150724 10:21:42.589"></status>
</kw>
<msg timestamp="20150724 10:21:43.293" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:43.294" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20150724 10:21:43.292" starttime="20150724 10:21:42.587"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:43.308" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20150724 10:21:43.307" starttime="20150724 10:21:43.303"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.311" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:43.311" starttime="20150724 10:21:43.309"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.315" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:43.314" starttime="20150724 10:21:43.313"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.321" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:43.325" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:43.326" starttime="20150724 10:21:43.318"></status>
</kw>
<msg timestamp="20150724 10:21:43.327" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:43.328" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,286 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:43.327" starttime="20150724 10:21:43.316"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.336" starttime="20150724 10:21:43.334"></status>
</kw>
<msg timestamp="20150724 10:21:43.337" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,286 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:43.337" starttime="20150724 10:21:43.329"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.345" starttime="20150724 10:21:43.343"></status>
</kw>
<msg timestamp="20150724 10:21:43.347" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,286 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:43.346" starttime="20150724 10:21:43.339"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.356" starttime="20150724 10:21:43.353"></status>
</kw>
<msg timestamp="20150724 10:21:43.357" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:43.356" starttime="20150724 10:21:43.348"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.367" starttime="20150724 10:21:43.366"></status>
</kw>
<msg timestamp="20150724 10:21:43.369" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:43.368" starttime="20150724 10:21:43.358"></status>
</kw>
<msg timestamp="20150724 10:21:43.371" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:43.370" starttime="20150724 10:21:43.296"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:43.383" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20150724 10:21:43.383" starttime="20150724 10:21:43.380"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.387" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:43.386" starttime="20150724 10:21:43.384"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.390" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:43.389" starttime="20150724 10:21:43.388"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.396" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:43.400" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:43.401" starttime="20150724 10:21:43.393"></status>
</kw>
<msg timestamp="20150724 10:21:43.402" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:43.403" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,286 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20150724 10:21:43.402" starttime="20150724 10:21:43.391"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.411" starttime="20150724 10:21:43.409"></status>
</kw>
<msg timestamp="20150724 10:21:43.412" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,286 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20150724 10:21:43.411" starttime="20150724 10:21:43.404"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.420" starttime="20150724 10:21:43.418"></status>
</kw>
<msg timestamp="20150724 10:21:43.421" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,286 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20150724 10:21:43.421" starttime="20150724 10:21:43.413"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.430" starttime="20150724 10:21:43.427"></status>
</kw>
<msg timestamp="20150724 10:21:43.431" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20150724 10:21:43.431" starttime="20150724 10:21:43.422"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.442" starttime="20150724 10:21:43.440"></status>
</kw>
<msg timestamp="20150724 10:21:43.443" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20150724 10:21:43.442" starttime="20150724 10:21:43.432"></status>
</kw>
<msg timestamp="20150724 10:21:43.445" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20150724 10:21:43.444" starttime="20150724 10:21:43.373"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:43.457" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20150724 10:21:43.456" starttime="20150724 10:21:43.454"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.460" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:43.460" starttime="20150724 10:21:43.458"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.463" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:43.463" starttime="20150724 10:21:43.461"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.469" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:43.473" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:43.474" starttime="20150724 10:21:43.467"></status>
</kw>
<msg timestamp="20150724 10:21:43.475" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:43.476" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,287 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=530052041010001</msg>
<status status="PASS" endtime="20150724 10:21:43.475" starttime="20150724 10:21:43.465"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.483" starttime="20150724 10:21:43.481"></status>
</kw>
<msg timestamp="20150724 10:21:43.485" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,287 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=530052041010001</msg>
<status status="PASS" endtime="20150724 10:21:43.484" starttime="20150724 10:21:43.477"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.492" starttime="20150724 10:21:43.491"></status>
</kw>
<msg timestamp="20150724 10:21:43.494" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,287 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=530052041010001</msg>
<status status="PASS" endtime="20150724 10:21:43.493" starttime="20150724 10:21:43.486"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.502" starttime="20150724 10:21:43.500"></status>
</kw>
<msg timestamp="20150724 10:21:43.504" level="INFO">${resultCode} = 530052041010001</msg>
<status status="PASS" endtime="20150724 10:21:43.503" starttime="20150724 10:21:43.495"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.516" starttime="20150724 10:21:43.514"></status>
</kw>
<msg timestamp="20150724 10:21:43.517" level="INFO">${resultCode} = 530052041010001</msg>
<status status="PASS" endtime="20150724 10:21:43.516" starttime="20150724 10:21:43.505"></status>
</kw>
<msg timestamp="20150724 10:21:43.523" level="INFO">${imsi} = 530052041010001</msg>
<status status="PASS" endtime="20150724 10:21:43.523" starttime="20150724 10:21:43.447"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:43.535" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20150724 10:21:43.534" starttime="20150724 10:21:43.532"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.538" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:43.538" starttime="20150724 10:21:43.536"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.541" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:43.541" starttime="20150724 10:21:43.539"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.547" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:43.551" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:43.552" starttime="20150724 10:21:43.544"></status>
</kw>
<msg timestamp="20150724 10:21:43.553" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:43.554" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,287 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=52065882</msg>
<status status="PASS" endtime="20150724 10:21:43.553" starttime="20150724 10:21:43.543"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.561" starttime="20150724 10:21:43.560"></status>
</kw>
<msg timestamp="20150724 10:21:43.563" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,287 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=52065882</msg>
<status status="PASS" endtime="20150724 10:21:43.562" starttime="20150724 10:21:43.555"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.570" starttime="20150724 10:21:43.568"></status>
</kw>
<msg timestamp="20150724 10:21:43.572" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,287 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=52065882</msg>
<status status="PASS" endtime="20150724 10:21:43.571" starttime="20150724 10:21:43.564"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.580" starttime="20150724 10:21:43.577"></status>
</kw>
<msg timestamp="20150724 10:21:43.581" level="INFO">${resultCode} = 52065882</msg>
<status status="PASS" endtime="20150724 10:21:43.581" starttime="20150724 10:21:43.573"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.591" starttime="20150724 10:21:43.589"></status>
</kw>
<msg timestamp="20150724 10:21:43.593" level="INFO">${resultCode} = 52065882</msg>
<status status="PASS" endtime="20150724 10:21:43.592" starttime="20150724 10:21:43.582"></status>
</kw>
<msg timestamp="20150724 10:21:43.594" level="INFO">${id} = 52065882</msg>
<status status="PASS" endtime="20150724 10:21:43.594" starttime="20150724 10:21:43.525"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:43.606" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20150724 10:21:43.605" starttime="20150724 10:21:43.603"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.609" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:43.608" starttime="20150724 10:21:43.607"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.612" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:43.612" starttime="20150724 10:21:43.610"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.618" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:43.622" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:43.622" starttime="20150724 10:21:43.615"></status>
</kw>
<msg timestamp="20150724 10:21:43.624" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:43.624" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,288 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20150724 10:21:43.623" starttime="20150724 10:21:43.613"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.632" starttime="20150724 10:21:43.630"></status>
</kw>
<msg timestamp="20150724 10:21:43.633" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,288 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20150724 10:21:43.633" starttime="20150724 10:21:43.625"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.640" starttime="20150724 10:21:43.639"></status>
</kw>
<msg timestamp="20150724 10:21:43.642" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,288 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20150724 10:21:43.641" starttime="20150724 10:21:43.634"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.650" starttime="20150724 10:21:43.648"></status>
</kw>
<msg timestamp="20150724 10:21:43.651" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20150724 10:21:43.651" starttime="20150724 10:21:43.643"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.661" starttime="20150724 10:21:43.659"></status>
</kw>
<msg timestamp="20150724 10:21:43.662" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20150724 10:21:43.662" starttime="20150724 10:21:43.652"></status>
</kw>
<msg timestamp="20150724 10:21:43.664" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20150724 10:21:43.663" starttime="20150724 10:21:43.596"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:43.675" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20150724 10:21:43.675" starttime="20150724 10:21:43.673"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.678" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:43.678" starttime="20150724 10:21:43.676"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.682" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:43.681" starttime="20150724 10:21:43.680"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.687" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:43.691" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:43.692" starttime="20150724 10:21:43.685"></status>
</kw>
<msg timestamp="20150724 10:21:43.693" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:43.694" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,288 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20150724 10:21:43.693" starttime="20150724 10:21:43.683"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.701" starttime="20150724 10:21:43.699"></status>
</kw>
<msg timestamp="20150724 10:21:43.702" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,288 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20150724 10:21:43.702" starttime="20150724 10:21:43.695"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.710" starttime="20150724 10:21:43.708"></status>
</kw>
<msg timestamp="20150724 10:21:43.711" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,288 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20150724 10:21:43.711" starttime="20150724 10:21:43.704"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.720" starttime="20150724 10:21:43.718"></status>
</kw>
<msg timestamp="20150724 10:21:43.721" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20150724 10:21:43.721" starttime="20150724 10:21:43.712"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.731" starttime="20150724 10:21:43.729"></status>
</kw>
<msg timestamp="20150724 10:21:43.733" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20150724 10:21:43.732" starttime="20150724 10:21:43.722"></status>
</kw>
<msg timestamp="20150724 10:21:43.734" level="INFO">${tariffId} = 101001</msg>
<status status="PASS" endtime="20150724 10:21:43.734" starttime="20150724 10:21:43.666"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:43.745" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20150724 10:21:43.744" starttime="20150724 10:21:43.742"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.748" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:43.748" starttime="20150724 10:21:43.746"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.751" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:43.751" starttime="20150724 10:21:43.749"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.757" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:43.761" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:43.762" starttime="20150724 10:21:43.755"></status>
</kw>
<msg timestamp="20150724 10:21:43.763" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:43.764" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,288 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:43.763" starttime="20150724 10:21:43.752"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.771" starttime="20150724 10:21:43.769"></status>
</kw>
<msg timestamp="20150724 10:21:43.772" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,288 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:43.772" starttime="20150724 10:21:43.765"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.780" starttime="20150724 10:21:43.778"></status>
</kw>
<msg timestamp="20150724 10:21:43.781" level="INFO">${return_log_entry} = 2015-07-24 10:21:43,288 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:43.780" starttime="20150724 10:21:43.773"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.789" starttime="20150724 10:21:43.787"></status>
</kw>
<msg timestamp="20150724 10:21:43.790" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:43.789" starttime="20150724 10:21:43.782"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.800" starttime="20150724 10:21:43.798"></status>
</kw>
<msg timestamp="20150724 10:21:43.801" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:43.800" starttime="20150724 10:21:43.791"></status>
</kw>
<msg timestamp="20150724 10:21:43.803" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:43.802" starttime="20150724 10:21:43.736"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.812" starttime="20150724 10:21:43.810"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.814" starttime="20150724 10:21:43.813"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.817" starttime="20150724 10:21:43.815"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20150724 10:21:43.829" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20150724 10:21:43.829" starttime="20150724 10:21:43.824"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:43.830" starttime="20150724 10:21:43.822"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:43.831" starttime="20150724 10:21:43.818"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:43.832" starttime="20150724 10:21:43.804"></status>
</kw>
<msg timestamp="20150724 10:21:43.835" level="INFO">${rc} = OK</msg>
<msg timestamp="20150724 10:21:43.836" level="INFO">${provcId} = 1</msg>
<msg timestamp="20150724 10:21:43.836" level="INFO">${imsi} = 530052041010001</msg>
<msg timestamp="20150724 10:21:43.837" level="INFO">${id} = 52065882</msg>
<msg timestamp="20150724 10:21:43.837" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20150724 10:21:43.838" level="INFO">${tariffId} = 101001</msg>
<msg timestamp="20150724 10:21:43.838" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:43.834" starttime="20150724 10:21:42.518"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Deleting "unknown" subscriber...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150724 10:21:43.841" level="INFO">Deleting "unknown" subscriber...</msg>
<status status="PASS" endtime="20150724 10:21:43.842" starttime="20150724 10:21:43.840"></status>
</kw>
<kw type="kw" name="${rc} = subscriber-admin-support-resource.CRCE Delete Subscriber">
<doc>This is a delegator to the CRCE webservice operation deleteSubcriber</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.862" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:43.863" starttime="20150724 10:21:43.860"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:43.863" starttime="20150724 10:21:43.858"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.868" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:43.869" starttime="20150724 10:21:43.866"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:43.870" starttime="20150724 10:21:43.864"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.874" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:43.875" starttime="20150724 10:21:43.872"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:43.876" starttime="20150724 10:21:43.871"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:43.877" starttime="20150724 10:21:43.853"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20150724 10:21:43.880" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20150724 10:21:43.881" starttime="20150724 10:21:43.877"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.883" starttime="20150724 10:21:43.882"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.886" starttime="20150724 10:21:43.884"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.889" starttime="20150724 10:21:43.887"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.892" starttime="20150724 10:21:43.890"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>deleteSubscriber</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.894" starttime="20150724 10:21:43.892"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.deleteSubscriber.input.id=${id}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:43.896" starttime="20150724 10:21:43.895"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20150724 10:21:43.900" level="INFO">Running with the following project properties set: [u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=642041010001', u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.deleteSubscriber.input.id=52065882']</msg>
<msg timestamp="20150724 10:21:44.758" level="INFO">10:21:44,755 INFO  [log] LowLevelOps.deleteSubscriber.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:44.760" starttime="20150724 10:21:43.899"></status>
</kw>
<msg timestamp="20150724 10:21:44.765" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:44.766" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20150724 10:21:44.763" starttime="20150724 10:21:43.897"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.deleteSubscriber.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:44.793" level="INFO">${return_marker} = LowLevelOps.deleteSubscriber.output.resultCode=</msg>
<status status="PASS" endtime="20150724 10:21:44.792" starttime="20150724 10:21:44.786"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:44.800" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:44.798" starttime="20150724 10:21:44.795"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:44.806" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:44.805" starttime="20150724 10:21:44.802"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:44.818" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:44.826" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:44.827" starttime="20150724 10:21:44.813"></status>
</kw>
<msg timestamp="20150724 10:21:44.830" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:44.831" level="INFO">${return_log_entry} = 2015-07-24 10:21:44,755 INFO  [log] LowLevelOps.deleteSubscriber.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:44.829" starttime="20150724 10:21:44.809"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:44.945" starttime="20150724 10:21:44.939"></status>
</kw>
<msg timestamp="20150724 10:21:44.949" level="INFO">${return_log_entry} = 2015-07-24 10:21:44,755 INFO  [log] LowLevelOps.deleteSubscriber.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:44.948" starttime="20150724 10:21:44.834"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:44.971" starttime="20150724 10:21:44.966"></status>
</kw>
<msg timestamp="20150724 10:21:44.975" level="INFO">${return_log_entry} = 2015-07-24 10:21:44,755 INFO  [log] LowLevelOps.deleteSubscriber.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:44.974" starttime="20150724 10:21:44.953"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:44.999" starttime="20150724 10:21:44.993"></status>
</kw>
<msg timestamp="20150724 10:21:45.004" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:45.001" starttime="20150724 10:21:44.979"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:45.028" starttime="20150724 10:21:45.024"></status>
</kw>
<msg timestamp="20150724 10:21:45.030" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:45.029" starttime="20150724 10:21:45.007"></status>
</kw>
<msg timestamp="20150724 10:21:45.035" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:45.033" starttime="20150724 10:21:44.771"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-DeleteSubscriber</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:45.055" starttime="20150724 10:21:45.051"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:45.061" starttime="20150724 10:21:45.057"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:45.066" starttime="20150724 10:21:45.063"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20150724 10:21:45.091" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/LowLevelOps-DeleteSubscriber*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/LowLevelOps-DeleteSubscriber*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20150724 10:21:45.093" starttime="20150724 10:21:45.081"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:45.094" starttime="20150724 10:21:45.077"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:45.096" starttime="20150724 10:21:45.068"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:45.098" starttime="20150724 10:21:45.038"></status>
</kw>
<msg timestamp="20150724 10:21:45.103" level="INFO">${rc} = OK</msg>
<status status="PASS" endtime="20150724 10:21:45.100" starttime="20150724 10:21:43.844"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Deleting subscriber returned rc= ${rc}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150724 10:21:45.109" level="INFO">Deleting subscriber returned rc= OK</msg>
<status status="PASS" endtime="20150724 10:21:45.111" starttime="20150724 10:21:45.106"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${rc}'=='OK'</arg>
<arg>Log</arg>
<arg>Test Subscribers prepared!</arg>
<arg>console=yes</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>msg=Subscriber preparation failed!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers prepared!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150724 10:21:45.126" level="INFO">Test Subscribers prepared!</msg>
<status status="PASS" endtime="20150724 10:21:45.127" starttime="20150724 10:21:45.123"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:45.129" starttime="20150724 10:21:45.113"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC 1s to unknown subscriber*******</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:45.131" starttime="20150724 10:21:45.130"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the MOC call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150724 10:21:45.134" level="INFO">Running the MOC call...</msg>
<status status="PASS" endtime="20150724 10:21:45.135" starttime="20150724 10:21:45.132"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC 1s">
<doc>Runs a standard MOC 1s session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${unknown_subscriber}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc1s</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20150724 10:21:45.162" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv</msg>
<status status="PASS" endtime="20150724 10:21:45.162" starttime="20150724 10:21:45.160"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20150724 10:21:45.165" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv</msg>
<status status="PASS" endtime="20150724 10:21:45.165" starttime="20150724 10:21:45.163"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20150724 10:21:45.169" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini</msg>
<status status="PASS" endtime="20150724 10:21:45.168" starttime="20150724 10:21:45.166"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20150724 10:21:45.177" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc1s.cgs</msg>
<status status="PASS" endtime="20150724 10:21:45.177" starttime="20150724 10:21:45.175"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:45.180" starttime="20150724 10:21:45.178"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20150724 10:21:45.184" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:45.184" starttime="20150724 10:21:45.181"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:45.187" starttime="20150724 10:21:45.185"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20150724 10:21:45.190" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:45.191" starttime="20150724 10:21:45.188"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20150724 10:21:45.196" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:45.196" starttime="20150724 10:21:45.192"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:45.198" starttime="20150724 10:21:45.197"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20150724 10:21:45.202" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:45.202" starttime="20150724 10:21:45.199"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20150724 10:21:45.207" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:45.208" starttime="20150724 10:21:45.203"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:45.210" starttime="20150724 10:21:45.209"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20150724 10:21:45.219" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc1s.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20150724 10:21:50.297" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20150724 10:21:50.279" starttime="20150724 10:21:45.211"></status>
</kw>
<msg timestamp="20150724 10:21:50.317" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20150724 10:21:50.315" starttime="20150724 10:21:45.149"></status>
</kw>
<msg timestamp="20150724 10:21:50.322" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20150724 10:21:50.320" starttime="20150724 10:21:45.137"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CG return code is: ${rc}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150724 10:21:50.329" level="INFO">CG return code is: 0</msg>
<status status="PASS" endtime="20150724 10:21:50.331" starttime="20150724 10:21:50.324"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:50.376" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:50.378" starttime="20150724 10:21:50.371"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:50.380" starttime="20150724 10:21:50.367"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:50.390" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:50.391" starttime="20150724 10:21:50.385"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:50.393" starttime="20150724 10:21:50.382"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:50.403" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:50.404" starttime="20150724 10:21:50.398"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:50.406" starttime="20150724 10:21:50.395"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:50.408" starttime="20150724 10:21:50.356"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20150724 10:21:50.415" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20150724 10:21:50.416" starttime="20150724 10:21:50.410"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:50.422" starttime="20150724 10:21:50.418"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:50.428" starttime="20150724 10:21:50.424"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:50.434" starttime="20150724 10:21:50.430"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:50.439" starttime="20150724 10:21:50.436"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:50.444" starttime="20150724 10:21:50.441"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:50.450" starttime="20150724 10:21:50.446"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20150724 10:21:50.458" level="INFO">Running with the following project properties set: [u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=642041010001', u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.deleteSubscriber.input.id=52065882', u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=642041010000']</msg>
<msg timestamp="20150724 10:21:50.947" level="INFO">10:21:50,936 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
10:21:50,937 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
10:21:50,939 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=52065880
10:21:50,940 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=530052041010000
10:21:50,941 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
10:21:50,942 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001
10:21:50,943 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID
10:21:50,944 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20150724 10:21:50.948" starttime="20150724 10:21:50.455"></status>
</kw>
<msg timestamp="20150724 10:21:50.951" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:50.952" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20150724 10:21:50.950" starttime="20150724 10:21:50.452"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:50.972" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20150724 10:21:50.971" starttime="20150724 10:21:50.967"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:50.978" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:50.977" starttime="20150724 10:21:50.974"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:50.985" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:50.984" starttime="20150724 10:21:50.980"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:50.994" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:50.996" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:50.997" starttime="20150724 10:21:50.990"></status>
</kw>
<msg timestamp="20150724 10:21:51.000" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:51.002" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,936 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:50.999" starttime="20150724 10:21:50.987"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.010" starttime="20150724 10:21:51.008"></status>
</kw>
<msg timestamp="20150724 10:21:51.011" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,936 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:51.011" starttime="20150724 10:21:51.004"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.018" starttime="20150724 10:21:51.016"></status>
</kw>
<msg timestamp="20150724 10:21:51.019" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,936 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:51.019" starttime="20150724 10:21:51.012"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.027" starttime="20150724 10:21:51.024"></status>
</kw>
<msg timestamp="20150724 10:21:51.028" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:51.027" starttime="20150724 10:21:51.020"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.037" starttime="20150724 10:21:51.035"></status>
</kw>
<msg timestamp="20150724 10:21:51.038" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:51.038" starttime="20150724 10:21:51.029"></status>
</kw>
<msg timestamp="20150724 10:21:51.040" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:51.040" starttime="20150724 10:21:50.955"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:51.050" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20150724 10:21:51.050" starttime="20150724 10:21:51.048"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.053" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:51.053" starttime="20150724 10:21:51.051"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.056" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:51.056" starttime="20150724 10:21:51.054"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.061" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:51.062" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:51.063" starttime="20150724 10:21:51.059"></status>
</kw>
<msg timestamp="20150724 10:21:51.064" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:51.064" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,937 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20150724 10:21:51.063" starttime="20150724 10:21:51.057"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.071" starttime="20150724 10:21:51.070"></status>
</kw>
<msg timestamp="20150724 10:21:51.073" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,937 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20150724 10:21:51.072" starttime="20150724 10:21:51.065"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.080" starttime="20150724 10:21:51.078"></status>
</kw>
<msg timestamp="20150724 10:21:51.081" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,937 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20150724 10:21:51.080" starttime="20150724 10:21:51.074"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.088" starttime="20150724 10:21:51.086"></status>
</kw>
<msg timestamp="20150724 10:21:51.089" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20150724 10:21:51.089" starttime="20150724 10:21:51.082"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.098" starttime="20150724 10:21:51.097"></status>
</kw>
<msg timestamp="20150724 10:21:51.099" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20150724 10:21:51.099" starttime="20150724 10:21:51.090"></status>
</kw>
<msg timestamp="20150724 10:21:51.101" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20150724 10:21:51.101" starttime="20150724 10:21:51.042"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:51.111" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20150724 10:21:51.110" starttime="20150724 10:21:51.108"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.114" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:51.113" starttime="20150724 10:21:51.112"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.117" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:51.116" starttime="20150724 10:21:51.115"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.121" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:51.122" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:51.123" starttime="20150724 10:21:51.119"></status>
</kw>
<msg timestamp="20150724 10:21:51.124" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:51.125" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,940 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=530052041010000</msg>
<status status="PASS" endtime="20150724 10:21:51.124" starttime="20150724 10:21:51.118"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.131" starttime="20150724 10:21:51.130"></status>
</kw>
<msg timestamp="20150724 10:21:51.133" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,940 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=530052041010000</msg>
<status status="PASS" endtime="20150724 10:21:51.132" starttime="20150724 10:21:51.126"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.139" starttime="20150724 10:21:51.138"></status>
</kw>
<msg timestamp="20150724 10:21:51.140" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,940 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=530052041010000</msg>
<status status="PASS" endtime="20150724 10:21:51.140" starttime="20150724 10:21:51.134"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.147" starttime="20150724 10:21:51.145"></status>
</kw>
<msg timestamp="20150724 10:21:51.149" level="INFO">${resultCode} = 530052041010000</msg>
<status status="PASS" endtime="20150724 10:21:51.148" starttime="20150724 10:21:51.141"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.157" starttime="20150724 10:21:51.156"></status>
</kw>
<msg timestamp="20150724 10:21:51.159" level="INFO">${resultCode} = 530052041010000</msg>
<status status="PASS" endtime="20150724 10:21:51.158" starttime="20150724 10:21:51.149"></status>
</kw>
<msg timestamp="20150724 10:21:51.160" level="INFO">${imsi} = 530052041010000</msg>
<status status="PASS" endtime="20150724 10:21:51.160" starttime="20150724 10:21:51.103"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:51.170" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20150724 10:21:51.169" starttime="20150724 10:21:51.167"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.173" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:51.172" starttime="20150724 10:21:51.171"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.175" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:51.175" starttime="20150724 10:21:51.173"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.180" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:51.181" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:51.182" starttime="20150724 10:21:51.178"></status>
</kw>
<msg timestamp="20150724 10:21:51.183" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:51.183" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,939 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=52065880</msg>
<status status="PASS" endtime="20150724 10:21:51.182" starttime="20150724 10:21:51.176"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.190" starttime="20150724 10:21:51.188"></status>
</kw>
<msg timestamp="20150724 10:21:51.191" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,939 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=52065880</msg>
<status status="PASS" endtime="20150724 10:21:51.190" starttime="20150724 10:21:51.184"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.197" starttime="20150724 10:21:51.196"></status>
</kw>
<msg timestamp="20150724 10:21:51.198" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,939 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=52065880</msg>
<status status="PASS" endtime="20150724 10:21:51.198" starttime="20150724 10:21:51.192"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.205" starttime="20150724 10:21:51.203"></status>
</kw>
<msg timestamp="20150724 10:21:51.206" level="INFO">${resultCode} = 52065880</msg>
<status status="PASS" endtime="20150724 10:21:51.206" starttime="20150724 10:21:51.199"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.215" starttime="20150724 10:21:51.214"></status>
</kw>
<msg timestamp="20150724 10:21:51.216" level="INFO">${resultCode} = 52065880</msg>
<status status="PASS" endtime="20150724 10:21:51.216" starttime="20150724 10:21:51.207"></status>
</kw>
<msg timestamp="20150724 10:21:51.218" level="INFO">${id} = 52065880</msg>
<status status="PASS" endtime="20150724 10:21:51.218" starttime="20150724 10:21:51.162"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:51.228" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20150724 10:21:51.227" starttime="20150724 10:21:51.225"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.230" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:51.230" starttime="20150724 10:21:51.228"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.233" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:51.233" starttime="20150724 10:21:51.231"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.238" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:51.239" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:51.239" starttime="20150724 10:21:51.236"></status>
</kw>
<msg timestamp="20150724 10:21:51.240" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:51.241" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,941 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20150724 10:21:51.240" starttime="20150724 10:21:51.234"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.247" starttime="20150724 10:21:51.246"></status>
</kw>
<msg timestamp="20150724 10:21:51.249" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,941 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20150724 10:21:51.248" starttime="20150724 10:21:51.242"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.255" starttime="20150724 10:21:51.254"></status>
</kw>
<msg timestamp="20150724 10:21:51.257" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,941 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20150724 10:21:51.256" starttime="20150724 10:21:51.250"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.264" starttime="20150724 10:21:51.262"></status>
</kw>
<msg timestamp="20150724 10:21:51.265" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20150724 10:21:51.264" starttime="20150724 10:21:51.258"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.274" starttime="20150724 10:21:51.272"></status>
</kw>
<msg timestamp="20150724 10:21:51.275" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20150724 10:21:51.275" starttime="20150724 10:21:51.266"></status>
</kw>
<msg timestamp="20150724 10:21:51.277" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20150724 10:21:51.276" starttime="20150724 10:21:51.220"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:51.288" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20150724 10:21:51.287" starttime="20150724 10:21:51.285"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.291" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:51.290" starttime="20150724 10:21:51.289"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.293" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:51.293" starttime="20150724 10:21:51.291"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.298" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:51.299" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:51.299" starttime="20150724 10:21:51.296"></status>
</kw>
<msg timestamp="20150724 10:21:51.301" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:51.301" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,942 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20150724 10:21:51.300" starttime="20150724 10:21:51.294"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.307" starttime="20150724 10:21:51.306"></status>
</kw>
<msg timestamp="20150724 10:21:51.309" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,942 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20150724 10:21:51.308" starttime="20150724 10:21:51.302"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.315" starttime="20150724 10:21:51.313"></status>
</kw>
<msg timestamp="20150724 10:21:51.316" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,942 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20150724 10:21:51.316" starttime="20150724 10:21:51.310"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.323" starttime="20150724 10:21:51.321"></status>
</kw>
<msg timestamp="20150724 10:21:51.324" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20150724 10:21:51.324" starttime="20150724 10:21:51.317"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.333" starttime="20150724 10:21:51.332"></status>
</kw>
<msg timestamp="20150724 10:21:51.334" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20150724 10:21:51.334" starttime="20150724 10:21:51.325"></status>
</kw>
<msg timestamp="20150724 10:21:51.336" level="INFO">${tariffId} = 101001</msg>
<status status="PASS" endtime="20150724 10:21:51.335" starttime="20150724 10:21:51.278"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:51.346" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20150724 10:21:51.345" starttime="20150724 10:21:51.343"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.349" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:51.348" starttime="20150724 10:21:51.347"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.351" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:51.351" starttime="20150724 10:21:51.350"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.356" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:51.357" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:51.358" starttime="20150724 10:21:51.354"></status>
</kw>
<msg timestamp="20150724 10:21:51.359" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:51.360" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,943 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:51.359" starttime="20150724 10:21:51.352"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.366" starttime="20150724 10:21:51.364"></status>
</kw>
<msg timestamp="20150724 10:21:51.367" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,943 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:51.366" starttime="20150724 10:21:51.360"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.373" starttime="20150724 10:21:51.372"></status>
</kw>
<msg timestamp="20150724 10:21:51.375" level="INFO">${return_log_entry} = 2015-07-24 10:21:50,943 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:51.374" starttime="20150724 10:21:51.368"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.382" starttime="20150724 10:21:51.380"></status>
</kw>
<msg timestamp="20150724 10:21:51.383" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:51.383" starttime="20150724 10:21:51.376"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.392" starttime="20150724 10:21:51.391"></status>
</kw>
<msg timestamp="20150724 10:21:51.394" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:51.393" starttime="20150724 10:21:51.384"></status>
</kw>
<msg timestamp="20150724 10:21:51.395" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:51.395" starttime="20150724 10:21:51.338"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.404" starttime="20150724 10:21:51.402"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.406" starttime="20150724 10:21:51.404"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.408" starttime="20150724 10:21:51.407"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20150724 10:21:51.416" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20150724 10:21:51.417" starttime="20150724 10:21:51.414"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:51.418" starttime="20150724 10:21:51.413"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:51.418" starttime="20150724 10:21:51.409"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:51.419" starttime="20150724 10:21:51.397"></status>
</kw>
<msg timestamp="20150724 10:21:51.422" level="INFO">${rc} = OK</msg>
<msg timestamp="20150724 10:21:51.423" level="INFO">${provId} = 1</msg>
<msg timestamp="20150724 10:21:51.423" level="INFO">${imsi} = 530052041010000</msg>
<msg timestamp="20150724 10:21:51.424" level="INFO">${id} = 52065880</msg>
<msg timestamp="20150724 10:21:51.424" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20150724 10:21:51.425" level="INFO">${tariffId} = 101001</msg>
<msg timestamp="20150724 10:21:51.425" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20150724 10:21:51.421" starttime="20150724 10:21:50.337"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.444" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:51.445" starttime="20150724 10:21:51.442"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:51.445" starttime="20150724 10:21:51.440"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.450" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:51.450" starttime="20150724 10:21:51.448"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:51.451" starttime="20150724 10:21:51.446"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.455" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20150724 10:21:51.456" starttime="20150724 10:21:51.453"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:51.456" starttime="20150724 10:21:51.452"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:51.457" starttime="20150724 10:21:51.435"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20150724 10:21:51.460" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20150724 10:21:51.461" starttime="20150724 10:21:51.458"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.463" starttime="20150724 10:21:51.461"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.466" starttime="20150724 10:21:51.464"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.468" starttime="20150724 10:21:51.466"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.470" starttime="20150724 10:21:51.469"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.472" starttime="20150724 10:21:51.471"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:51.475" starttime="20150724 10:21:51.473"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20150724 10:21:51.478" level="INFO">Running with the following project properties set: [u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=642041010001', u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.deleteSubscriber.input.id=52065882', u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=642041010000', u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=52065880']</msg>
<msg timestamp="20150724 10:21:51.991" level="INFO">10:21:51,983 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
10:21:51,985 INFO  [log] LowLevelOps.getMainAccount.output.accountId=52065881
10:21:51,986 INFO  [log] LowLevelOps.getMainAccount.output.balance=9980000
10:21:51,987 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
10:21:51,988 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20150724 10:21:51.993" starttime="20150724 10:21:51.477"></status>
</kw>
<msg timestamp="20150724 10:21:52.001" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:52.003" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20150724 10:21:51.995" starttime="20150724 10:21:51.476"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:52.013" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20150724 10:21:52.013" starttime="20150724 10:21:52.011"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.017" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:52.016" starttime="20150724 10:21:52.014"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.020" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:52.019" starttime="20150724 10:21:52.018"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.025" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:52.028" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:52.029" starttime="20150724 10:21:52.023"></status>
</kw>
<msg timestamp="20150724 10:21:52.030" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:52.030" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,983 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:52.029" starttime="20150724 10:21:52.021"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.037" starttime="20150724 10:21:52.035"></status>
</kw>
<msg timestamp="20150724 10:21:52.038" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,983 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:52.037" starttime="20150724 10:21:52.031"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.044" starttime="20150724 10:21:52.043"></status>
</kw>
<msg timestamp="20150724 10:21:52.045" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,983 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20150724 10:21:52.045" starttime="20150724 10:21:52.039"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.052" starttime="20150724 10:21:52.050"></status>
</kw>
<msg timestamp="20150724 10:21:52.053" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:52.053" starttime="20150724 10:21:52.046"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.062" starttime="20150724 10:21:52.060"></status>
</kw>
<msg timestamp="20150724 10:21:52.063" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:52.062" starttime="20150724 10:21:52.054"></status>
</kw>
<msg timestamp="20150724 10:21:52.064" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20150724 10:21:52.064" starttime="20150724 10:21:52.006"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:52.073" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20150724 10:21:52.073" starttime="20150724 10:21:52.071"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.076" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:52.075" starttime="20150724 10:21:52.074"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.078" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:52.078" starttime="20150724 10:21:52.077"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.083" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:52.086" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:52.086" starttime="20150724 10:21:52.081"></status>
</kw>
<msg timestamp="20150724 10:21:52.088" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:52.088" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,985 INFO  [log] LowLevelOps.getMainAccount.output.accountId=52065881</msg>
<status status="PASS" endtime="20150724 10:21:52.087" starttime="20150724 10:21:52.079"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.094" starttime="20150724 10:21:52.093"></status>
</kw>
<msg timestamp="20150724 10:21:52.095" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,985 INFO  [log] LowLevelOps.getMainAccount.output.accountId=52065881</msg>
<status status="PASS" endtime="20150724 10:21:52.095" starttime="20150724 10:21:52.089"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.101" starttime="20150724 10:21:52.100"></status>
</kw>
<msg timestamp="20150724 10:21:52.103" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,985 INFO  [log] LowLevelOps.getMainAccount.output.accountId=52065881</msg>
<status status="PASS" endtime="20150724 10:21:52.102" starttime="20150724 10:21:52.096"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.109" starttime="20150724 10:21:52.107"></status>
</kw>
<msg timestamp="20150724 10:21:52.110" level="INFO">${resultCode} = 52065881</msg>
<status status="PASS" endtime="20150724 10:21:52.110" starttime="20150724 10:21:52.103"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.119" starttime="20150724 10:21:52.117"></status>
</kw>
<msg timestamp="20150724 10:21:52.120" level="INFO">${resultCode} = 52065881</msg>
<status status="PASS" endtime="20150724 10:21:52.119" starttime="20150724 10:21:52.111"></status>
</kw>
<msg timestamp="20150724 10:21:52.121" level="INFO">${accountId} = 52065881</msg>
<status status="PASS" endtime="20150724 10:21:52.121" starttime="20150724 10:21:52.066"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:52.130" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20150724 10:21:52.129" starttime="20150724 10:21:52.127"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.132" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:52.132" starttime="20150724 10:21:52.130"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.135" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:52.134" starttime="20150724 10:21:52.133"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.139" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:52.142" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:52.143" starttime="20150724 10:21:52.137"></status>
</kw>
<msg timestamp="20150724 10:21:52.144" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:52.144" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,986 INFO  [log] LowLevelOps.getMainAccount.output.balance=9980000</msg>
<status status="PASS" endtime="20150724 10:21:52.143" starttime="20150724 10:21:52.136"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.150" starttime="20150724 10:21:52.149"></status>
</kw>
<msg timestamp="20150724 10:21:52.151" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,986 INFO  [log] LowLevelOps.getMainAccount.output.balance=9980000</msg>
<status status="PASS" endtime="20150724 10:21:52.151" starttime="20150724 10:21:52.145"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.158" starttime="20150724 10:21:52.156"></status>
</kw>
<msg timestamp="20150724 10:21:52.159" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,986 INFO  [log] LowLevelOps.getMainAccount.output.balance=9980000</msg>
<status status="PASS" endtime="20150724 10:21:52.158" starttime="20150724 10:21:52.152"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.165" starttime="20150724 10:21:52.163"></status>
</kw>
<msg timestamp="20150724 10:21:52.166" level="INFO">${resultCode} = 9980000</msg>
<status status="PASS" endtime="20150724 10:21:52.166" starttime="20150724 10:21:52.160"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.174" starttime="20150724 10:21:52.173"></status>
</kw>
<msg timestamp="20150724 10:21:52.176" level="INFO">${resultCode} = 9980000</msg>
<status status="PASS" endtime="20150724 10:21:52.175" starttime="20150724 10:21:52.167"></status>
</kw>
<msg timestamp="20150724 10:21:52.177" level="INFO">${balance} = 9980000</msg>
<status status="PASS" endtime="20150724 10:21:52.176" starttime="20150724 10:21:52.123"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:52.185" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20150724 10:21:52.185" starttime="20150724 10:21:52.183"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.188" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:52.187" starttime="20150724 10:21:52.186"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.190" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:52.190" starttime="20150724 10:21:52.189"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.195" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:52.198" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:52.198" starttime="20150724 10:21:52.193"></status>
</kw>
<msg timestamp="20150724 10:21:52.199" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:52.200" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,987 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20150724 10:21:52.199" starttime="20150724 10:21:52.191"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.206" starttime="20150724 10:21:52.205"></status>
</kw>
<msg timestamp="20150724 10:21:52.207" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,987 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20150724 10:21:52.207" starttime="20150724 10:21:52.201"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.213" starttime="20150724 10:21:52.212"></status>
</kw>
<msg timestamp="20150724 10:21:52.215" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,987 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20150724 10:21:52.214" starttime="20150724 10:21:52.208"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.221" starttime="20150724 10:21:52.219"></status>
</kw>
<msg timestamp="20150724 10:21:52.222" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20150724 10:21:52.222" starttime="20150724 10:21:52.215"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.230" starttime="20150724 10:21:52.229"></status>
</kw>
<msg timestamp="20150724 10:21:52.232" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20150724 10:21:52.231" starttime="20150724 10:21:52.223"></status>
</kw>
<msg timestamp="20150724 10:21:52.233" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20150724 10:21:52.233" starttime="20150724 10:21:52.178"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20150724 10:21:52.242" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20150724 10:21:52.241" starttime="20150724 10:21:52.240"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.244" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20150724 10:21:52.244" starttime="20150724 10:21:52.243"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.247" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20150724 10:21:52.247" starttime="20150724 10:21:52.245"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20150724 10:21:52.251" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20150724 10:21:52.255" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20150724 10:21:52.255" starttime="20150724 10:21:52.249"></status>
</kw>
<msg timestamp="20150724 10:21:52.256" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20150724 10:21:52.257" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,988 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20150724 10:21:52.256" starttime="20150724 10:21:52.248"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.262" starttime="20150724 10:21:52.261"></status>
</kw>
<msg timestamp="20150724 10:21:52.263" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,988 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20150724 10:21:52.263" starttime="20150724 10:21:52.257"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.269" starttime="20150724 10:21:52.268"></status>
</kw>
<msg timestamp="20150724 10:21:52.270" level="INFO">${return_log_entry} = 2015-07-24 10:21:51,988 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20150724 10:21:52.270" starttime="20150724 10:21:52.264"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.277" starttime="20150724 10:21:52.275"></status>
</kw>
<msg timestamp="20150724 10:21:52.278" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20150724 10:21:52.277" starttime="20150724 10:21:52.271"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.286" starttime="20150724 10:21:52.284"></status>
</kw>
<msg timestamp="20150724 10:21:52.287" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20150724 10:21:52.286" starttime="20150724 10:21:52.279"></status>
</kw>
<msg timestamp="20150724 10:21:52.288" level="INFO">${currencyId} = 1</msg>
<status status="PASS" endtime="20150724 10:21:52.288" starttime="20150724 10:21:52.235"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.295" starttime="20150724 10:21:52.294"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.297" starttime="20150724 10:21:52.296"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20150724 10:21:52.299" starttime="20150724 10:21:52.298"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20150724 10:21:52.308" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20150724 10:21:52.309" starttime="20150724 10:21:52.304"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:52.310" starttime="20150724 10:21:52.303"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:52.310" starttime="20150724 10:21:52.300"></status>
</kw>
<status status="PASS" endtime="20150724 10:21:52.311" starttime="20150724 10:21:52.289"></status>
</kw>
<msg timestamp="20150724 10:21:52.313" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20150724 10:21:52.314" level="INFO">${accId} = 52065881</msg>
<msg timestamp="20150724 10:21:52.314" level="INFO">${bal} = 9980000</msg>
<msg timestamp="20150724 10:21:52.315" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20150724 10:21:52.315" level="INFO">${curr} = 1</msg>
<status status="PASS" endtime="20150724 10:21:52.312" starttime="20150724 10:21:51.428"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Balance of the calling party is: ${bal}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20150724 10:21:52.317" level="INFO">Balance of the calling party is: 9980000</msg>
<status status="PASS" endtime="20150724 10:21:52.318" starttime="20150724 10:21:52.316"></status>
</kw>
<doc>Test will make a MOC call, duration 1s.

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_involved</tag>
<tag>TNZ_supported</tag>
</tags>
<status status="PASS" critical="yes" endtime="20150724 10:21:52.319" starttime="20150724 10:21:21.426"></status>
</test>
<doc>Testing the prepaid MOC call to the unknown subscriber

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20150724 10:21:52.323" starttime="20150724 10:21:14.627"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" info="" doc="" combined="" fail="0" links="">matko.sanseovic</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">MOC_involved</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">TNZ_supported</stat>
</tag>
<suite>
<stat pass="1" id="s1" fail="0" name="MOC PREPAID ONNET-ToUnknown-robot-suite">MOC PREPAID ONNET-ToUnknown-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
