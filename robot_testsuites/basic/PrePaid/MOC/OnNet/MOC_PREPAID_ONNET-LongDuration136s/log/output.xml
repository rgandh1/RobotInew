<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20160122 15:48:47.749">
<suite source="/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/MOC_PREPAID_ONNET-LongDuration136s-robot-suite.txt" id="s1" name="MOC PREPAID ONNET-LongDuration136s-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20160122 15:48:49.851" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20160122 15:48:49.858" level="INFO">${date} = Fri Jan 22 15:48:49 CET 2016</msg>
<status status="PASS" endtime="20160122 15:48:49.855" starttime="20160122 15:48:49.838"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:48:49.869" level="INFO">Date and time: Fri Jan 22 15:48:49 CET 2016</msg>
<status status="PASS" endtime="20160122 15:48:49.872" starttime="20160122 15:48:49.862"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:48:49.882" level="INFO">Target IN machine: 10.105.119.135</msg>
<status status="PASS" endtime="20160122 15:48:49.884" starttime="20160122 15:48:49.876"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:50.023" starttime="20160122 15:48:50.021"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:50.193" starttime="20160122 15:48:50.038"></status>
</kw>
<msg timestamp="20160122 15:48:50.195" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20160122 15:48:50.194" starttime="20160122 15:48:50.025"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160122 15:48:50.206" level="INFO">Logging into '10.105.119.135:22' as 'qa_automation'.</msg>
<msg timestamp="20160122 15:48:50.766" level="INFO">Read output: Last login: Fri Jan 22 14:29:06 2016 from 10.105.101.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb19 ~]$</msg>
<status status="PASS" endtime="20160122 15:48:50.768" starttime="20160122 15:48:50.203"></status>
</kw>
<status status="PASS" endtime="20160122 15:48:50.770" starttime="20160122 15:48:50.197"></status>
</kw>
<msg timestamp="20160122 15:48:50.774" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20160122 15:48:50.773" starttime="20160122 15:48:50.006"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160122 15:48:50.783" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160122 15:48:50.782" starttime="20160122 15:48:50.776"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160122 15:48:50.788" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20160122 15:48:51.542" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160122 15:48:51.549" level="INFO">${output} = I-New MVNA TEMM - Core - Service 1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160122 15:48:51.546" starttime="20160122 15:48:50.785"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:51.571" starttime="20160122 15:48:51.563"></status>
</kw>
<msg timestamp="20160122 15:48:51.576" level="INFO">${status} = PASS</msg>
<msg timestamp="20160122 15:48:51.578" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160122 15:48:51.574" starttime="20160122 15:48:51.554"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:51.600" starttime="20160122 15:48:51.596"></status>
</kw>
<msg timestamp="20160122 15:48:51.604" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:48:51.603" starttime="20160122 15:48:51.582"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20160122 15:48:51.613" level="INFO">${version_r} =  1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160122 15:48:51.612" starttime="20160122 15:48:51.607"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160122 15:48:51.622" level="INFO">${version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160122 15:48:51.621" starttime="20160122 15:48:51.616"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:51.630" starttime="20160122 15:48:51.627"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:51.660" starttime="20160122 15:48:51.655"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160122 15:48:51.668" starttime="20160122 15:48:51.663"></status>
</kw>
<status status="PASS" endtime="20160122 15:48:51.672" starttime="20160122 15:48:51.634"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:51.689" starttime="20160122 15:48:51.685"></status>
</kw>
<msg timestamp="20160122 15:48:51.692" level="INFO">${ver} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160122 15:48:51.691" starttime="20160122 15:48:51.675"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:51.699" starttime="20160122 15:48:51.695"></status>
</kw>
<msg timestamp="20160122 15:48:51.705" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20160122 15:48:51.706" level="INFO">${in_version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160122 15:48:51.702" starttime="20160122 15:48:49.938"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:51.781" starttime="20160122 15:48:51.779"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:51.835" starttime="20160122 15:48:51.788"></status>
</kw>
<msg timestamp="20160122 15:48:51.837" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20160122 15:48:51.836" starttime="20160122 15:48:51.783"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160122 15:48:51.846" level="INFO">Logging into '10.105.119.171:22' as 'qa_automation'.</msg>
<msg timestamp="20160122 15:48:52.375" level="INFO">Read output: Last login: Fri Jan 22 14:29:08 2016 from 10.105.101.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb19 ~]$</msg>
<status status="PASS" endtime="20160122 15:48:52.376" starttime="20160122 15:48:51.844"></status>
</kw>
<status status="PASS" endtime="20160122 15:48:52.379" starttime="20160122 15:48:51.838"></status>
</kw>
<msg timestamp="20160122 15:48:52.385" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20160122 15:48:52.383" starttime="20160122 15:48:51.769"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160122 15:48:52.398" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160122 15:48:52.397" starttime="20160122 15:48:52.388"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160122 15:48:52.405" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20160122 15:48:52.834" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160122 15:48:52.835" level="INFO">${output} = I-New UMS MVNO - XDR - Server 6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160122 15:48:52.835" starttime="20160122 15:48:52.401"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:52.842" starttime="20160122 15:48:52.839"></status>
</kw>
<msg timestamp="20160122 15:48:52.843" level="INFO">${status} = PASS</msg>
<msg timestamp="20160122 15:48:52.844" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160122 15:48:52.843" starttime="20160122 15:48:52.837"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:52.852" starttime="20160122 15:48:52.850"></status>
</kw>
<msg timestamp="20160122 15:48:52.853" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:48:52.853" starttime="20160122 15:48:52.845"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20160122 15:48:52.857" level="INFO">${version_r} =  6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160122 15:48:52.857" starttime="20160122 15:48:52.855"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160122 15:48:52.861" level="INFO">${version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160122 15:48:52.861" starttime="20160122 15:48:52.858"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:52.864" starttime="20160122 15:48:52.863"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:52.880" starttime="20160122 15:48:52.878"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160122 15:48:52.883" starttime="20160122 15:48:52.881"></status>
</kw>
<status status="PASS" endtime="20160122 15:48:52.884" starttime="20160122 15:48:52.865"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:52.892" starttime="20160122 15:48:52.890"></status>
</kw>
<msg timestamp="20160122 15:48:52.893" level="INFO">${ver} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160122 15:48:52.893" starttime="20160122 15:48:52.886"></status>
</kw>
<msg timestamp="20160122 15:48:52.896" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20160122 15:48:52.897" level="INFO">${xdr_version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160122 15:48:52.895" starttime="20160122 15:48:51.742"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:52.951" starttime="20160122 15:48:52.949"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:53.007" starttime="20160122 15:48:52.958"></status>
</kw>
<msg timestamp="20160122 15:48:53.010" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20160122 15:48:53.009" starttime="20160122 15:48:52.952"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160122 15:48:53.019" level="INFO">Logging into '10.105.119.125:22' as 'qa_automation'.</msg>
<msg timestamp="20160122 15:48:53.570" level="INFO">Read output: Last login: Fri Jan 22 14:29:09 2016 from 10.105.101.196
id: cannot find name for group ID 20007
[1m[qa_automation@crce01.tb19 ~]$</msg>
<status status="PASS" endtime="20160122 15:48:53.572" starttime="20160122 15:48:53.017"></status>
</kw>
<status status="PASS" endtime="20160122 15:48:53.573" starttime="20160122 15:48:53.012"></status>
</kw>
<msg timestamp="20160122 15:48:53.576" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20160122 15:48:53.574" starttime="20160122 15:48:52.939"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160122 15:48:53.582" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160122 15:48:53.582" starttime="20160122 15:48:53.577"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160122 15:48:53.586" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20160122 15:48:53.807" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160122 15:48:53.809" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.1.24.31533
Negret Rating &amp; Charging Engine 6.1.24.31533 is running (PID:9357, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160122 15:48:53.808" starttime="20160122 15:48:53.584"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:53.815" starttime="20160122 15:48:53.813"></status>
</kw>
<msg timestamp="20160122 15:48:53.817" level="INFO">${status} = PASS</msg>
<msg timestamp="20160122 15:48:53.817" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160122 15:48:53.816" starttime="20160122 15:48:53.810"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:53.825" starttime="20160122 15:48:53.823"></status>
</kw>
<msg timestamp="20160122 15:48:53.826" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:48:53.825" starttime="20160122 15:48:53.818"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160122 15:48:53.830" level="INFO">${version_r} =  6.1.24.31533 is running (PID:9357, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160122 15:48:53.829" starttime="20160122 15:48:53.827"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160122 15:48:53.833" level="INFO">${version} =  6.1.24.31533 </msg>
<status status="PASS" endtime="20160122 15:48:53.833" starttime="20160122 15:48:53.831"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:53.837" starttime="20160122 15:48:53.836"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:53.849" starttime="20160122 15:48:53.847"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160122 15:48:53.852" starttime="20160122 15:48:53.850"></status>
</kw>
<status status="PASS" endtime="20160122 15:48:53.853" starttime="20160122 15:48:53.839"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:53.861" starttime="20160122 15:48:53.859"></status>
</kw>
<msg timestamp="20160122 15:48:53.862" level="INFO">${ver} =  6.1.24.31533 </msg>
<status status="PASS" endtime="20160122 15:48:53.861" starttime="20160122 15:48:53.854"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:53.865" starttime="20160122 15:48:53.863"></status>
</kw>
<msg timestamp="20160122 15:48:53.867" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20160122 15:48:53.868" level="INFO">${crce_version} =  6.1.24.31533 </msg>
<status status="PASS" endtime="20160122 15:48:53.866" starttime="20160122 15:48:52.912"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:53.915" starttime="20160122 15:48:53.913"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:53.968" starttime="20160122 15:48:53.921"></status>
</kw>
<msg timestamp="20160122 15:48:53.971" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20160122 15:48:53.970" starttime="20160122 15:48:53.916"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160122 15:48:53.990" level="INFO">Logging into '10.105.119.159:22' as 'qa_automation'.</msg>
<msg timestamp="20160122 15:48:54.420" level="INFO">Read output: Last login: Fri Jan 22 14:29:10 2016 from 10.105.101.196
id: cannot find name for group ID 20007
[1m[qa_automation@ocs01.tb19 ~]$</msg>
<status status="PASS" endtime="20160122 15:48:54.422" starttime="20160122 15:48:53.985"></status>
</kw>
<status status="PASS" endtime="20160122 15:48:54.423" starttime="20160122 15:48:53.974"></status>
</kw>
<msg timestamp="20160122 15:48:54.426" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20160122 15:48:54.425" starttime="20160122 15:48:53.904"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160122 15:48:54.433" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160122 15:48:54.432" starttime="20160122 15:48:54.427"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160122 15:48:54.435" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20160122 15:48:54.517" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160122 15:48:54.518" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 32521)</msg>
<status status="PASS" endtime="20160122 15:48:54.518" starttime="20160122 15:48:54.434"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.524" starttime="20160122 15:48:54.522"></status>
</kw>
<msg timestamp="20160122 15:48:54.526" level="INFO">${status} = PASS</msg>
<msg timestamp="20160122 15:48:54.526" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160122 15:48:54.525" starttime="20160122 15:48:54.520"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.533" starttime="20160122 15:48:54.532"></status>
</kw>
<msg timestamp="20160122 15:48:54.535" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:48:54.534" starttime="20160122 15:48:54.528"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160122 15:48:54.538" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 32521)</msg>
<status status="PASS" endtime="20160122 15:48:54.538" starttime="20160122 15:48:54.536"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160122 15:48:54.542" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160122 15:48:54.541" starttime="20160122 15:48:54.539"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.544" starttime="20160122 15:48:54.543"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.555" starttime="20160122 15:48:54.554"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.558" starttime="20160122 15:48:54.557"></status>
</kw>
<status status="PASS" endtime="20160122 15:48:54.560" starttime="20160122 15:48:54.546"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.567" starttime="20160122 15:48:54.565"></status>
</kw>
<msg timestamp="20160122 15:48:54.568" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160122 15:48:54.567" starttime="20160122 15:48:54.561"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.571" starttime="20160122 15:48:54.569"></status>
</kw>
<msg timestamp="20160122 15:48:54.573" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20160122 15:48:54.574" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160122 15:48:54.572" starttime="20160122 15:48:53.882"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:48:54.577" level="INFO">IN state= OK version= 1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160122 15:48:54.578" starttime="20160122 15:48:54.575"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:48:54.581" level="INFO">XDR state= OK version= 6.1.5.27971 </msg>
<status status="PASS" endtime="20160122 15:48:54.582" starttime="20160122 15:48:54.579"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:48:54.585" level="INFO">CRCE state= OK version= 6.1.24.31533 </msg>
<status status="PASS" endtime="20160122 15:48:54.586" starttime="20160122 15:48:54.583"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:48:54.589" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160122 15:48:54.590" starttime="20160122 15:48:54.587"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20160122 15:48:54.593" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 15:48:54.593" starttime="20160122 15:48:54.591"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20160122 15:48:54.596" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 15:48:54.597" starttime="20160122 15:48:54.594"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20160122 15:48:54.600" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 15:48:54.600" starttime="20160122 15:48:54.598"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20160122 15:48:54.604" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 15:48:54.605" starttime="20160122 15:48:54.602"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.614" starttime="20160122 15:48:54.610"></status>
</kw>
<msg timestamp="20160122 15:48:54.616" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160122 15:48:54.615" starttime="20160122 15:48:54.606"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.619" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160122 15:48:54.620" starttime="20160122 15:48:54.617"></status>
</kw>
<status status="PASS" endtime="20160122 15:48:54.621" starttime="20160122 15:48:49.826"></status>
</kw>
<test id="s1-t1" name="Run MOC 136s Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.633" starttime="20160122 15:48:54.631"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100000000</arg>
</arguments>
<msg timestamp="20160122 15:48:54.636" level="INFO">${INITIAL_BALANCE} = 100000000</msg>
<status status="PASS" endtime="20160122 15:48:54.636" starttime="20160122 15:48:54.634"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.652" level="INFO">msg=crce_host=10.105.119.125</msg>
<status status="PASS" endtime="20160122 15:48:54.652" starttime="20160122 15:48:54.650"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.655" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20160122 15:48:54.656" starttime="20160122 15:48:54.653"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.658" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20160122 15:48:54.659" starttime="20160122 15:48:54.657"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.661" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20160122 15:48:54.662" starttime="20160122 15:48:54.660"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.665" level="INFO">msg=imsiRangeStart=334030880001000</msg>
<status status="PASS" endtime="20160122 15:48:54.665" starttime="20160122 15:48:54.663"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.668" level="INFO">msg=msisdnRangeStart=525516001000</msg>
<status status="PASS" endtime="20160122 15:48:54.669" starttime="20160122 15:48:54.666"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.671" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20160122 15:48:54.672" starttime="20160122 15:48:54.670"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.674" level="INFO">msg=languageid=3</msg>
<status status="PASS" endtime="20160122 15:48:54.675" starttime="20160122 15:48:54.673"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.678" level="INFO">msg=tariffId=101001</msg>
<status status="PASS" endtime="20160122 15:48:54.678" starttime="20160122 15:48:54.676"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.681" level="INFO">msg=balance=100000000</msg>
<status status="PASS" endtime="20160122 15:48:54.681" starttime="20160122 15:48:54.679"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.695" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:48:54.696" starttime="20160122 15:48:54.692"></status>
</kw>
<status status="PASS" endtime="20160122 15:48:54.697" starttime="20160122 15:48:54.690"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.701" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:48:54.702" starttime="20160122 15:48:54.699"></status>
</kw>
<status status="PASS" endtime="20160122 15:48:54.703" starttime="20160122 15:48:54.698"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.708" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:48:54.709" starttime="20160122 15:48:54.706"></status>
</kw>
<status status="PASS" endtime="20160122 15:48:54.710" starttime="20160122 15:48:54.704"></status>
</kw>
<status status="PASS" endtime="20160122 15:48:54.710" starttime="20160122 15:48:54.684"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160122 15:48:54.714" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160122 15:48:54.715" starttime="20160122 15:48:54.711"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.718" starttime="20160122 15:48:54.716"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.720" starttime="20160122 15:48:54.719"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.723" starttime="20160122 15:48:54.721"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.726" starttime="20160122 15:48:54.724"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.728" starttime="20160122 15:48:54.727"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.731" starttime="20160122 15:48:54.729"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.733" starttime="20160122 15:48:54.732"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.736" starttime="20160122 15:48:54.734"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.739" starttime="20160122 15:48:54.737"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.742" starttime="20160122 15:48:54.740"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.745" starttime="20160122 15:48:54.743"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:48:54.747" starttime="20160122 15:48:54.746"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160122 15:48:54.751" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=3', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=100000000']</msg>
<msg timestamp="20160122 15:49:00.785" level="INFO">15:48:54,917 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/ext] for external libraries
15:48:54,917 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
15:48:56,501 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/crce-subscriberadmin/robot_crce_bridge-soapui-project.xml]
15:48:56,516 INFO  [SoapUITestCaseRunner] Setting project property [crceHost] to [10.105.119.125]
15:48:56,516 INFO  [SoapUITestCaseRunner] Setting project property [crcePort] to [8080]
15:48:56,516 INFO  [SoapUITestCaseRunner] Setting project property [crceWebservicesBasePath] to [/inew-mvno-crce-webservices/]
15:48:56,516 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.amount] to [2]
15:48:56,516 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.imsiRangeStart] to [334030880001000]
15:48:56,516 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.msisdnRangeStart] to [525516001000]
15:48:56,517 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.type] to [PREPAID]
15:48:56,517 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.languageid] to [3]
15:48:56,517 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.tariffId] to [101001]
15:48:56,517 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.balance] to [100000000]
15:48:56,517 INFO  [SoapUITestCaseRunner] Running SoapUI tests in project [Robotframework_CRCE-Bridge]
15:48:56,517 INFO  [SoapUITestCaseRunner] Running TestCase [createTestSubscribers]
15:48:56,526 INFO  [SoapUITestCaseRunner] Running SoapUI testcase [createTestSubscribers]
15:48:56,532 INFO  [SoapUITestCaseRunner] running step [init_repeat_counter]
15:48:56,948 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
15:48:57,008 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
15:48:57,770 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:48:57,771 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:48:57,870 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:48:57,877 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:48:58,024 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:48:58,024 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:48:58,024 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:48:58,024 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
15:48:58,084 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
15:48:58,349 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
15:48:58,377 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
15:48:58,379 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:48:58,380 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:48:58,380 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:48:58,605 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:48:58,606 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:48:58,613 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:48:58,614 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:48:58,614 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:48:58,614 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
15:48:58,684 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
15:48:58,690 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
15:48:58,739 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
15:48:58,742 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:48:58,744 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:48:58,744 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:48:58,793 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:48:58,793 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:48:58,796 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:48:58,796 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:48:58,796 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:48:58,796 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
15:48:58,827 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
15:48:58,832 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
15:48:58,851 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
15:48:58,853 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:48:58,854 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:48:58,855 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:48:59,005 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:48:59,006 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:48:59,012 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:48:59,013 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:48:59,013 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:48:59,013 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
15:48:59,078 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
15:48:59,083 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
15:48:59,125 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
15:48:59,128 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:48:59,130 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:48:59,130 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
15:48:59,202 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:48:59,203 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:48:59,216 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:48:59,216 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:48:59,216 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:48:59,216 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
15:48:59,279 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
15:48:59,300 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
15:48:59,343 INFO  [SoapUITestCaseRunner] running step [setBalance]
15:48:59,346 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:48:59,348 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:48:59,349 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
15:48:59,751 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:48:59,751 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:48:59,763 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:48:59,764 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:48:59,764 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:48:59,764 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
15:48:59,828 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
15:48:59,838 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
15:48:59,873 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
15:48:59,901 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
15:48:59,903 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
15:48:59,904 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:48:59,906 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:48:59,906 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:48:59,974 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:48:59,974 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:48:59,982 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:48:59,982 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:48:59,982 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:48:59,982 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
15:48:59,982 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
15:48:59,996 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
15:48:59,997 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
15:48:59,999 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:49:00,001 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:49:00,001 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:49:00,263 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:49:00,263 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:49:00,269 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:49:00,269 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:49:00,270 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:49:00,270 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
15:49:00,270 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
15:49:00,275 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
15:49:00,277 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
15:49:00,280 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:49:00,281 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:49:00,281 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:49:00,341 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:49:00,341 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:49:00,346 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:49:00,346 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:49:00,347 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:49:00,347 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
15:49:00,347 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
15:49:00,357 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
15:49:00,358 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
15:49:00,362 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:49:00,364 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:49:00,364 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:49:00,456 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:49:00,456 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:49:00,462 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:49:00,463 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:49:00,463 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:49:00,463 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
15:49:00,463 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
15:49:00,469 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
15:49:00,469 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
15:49:00,472 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:49:00,473 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:49:00,474 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
15:49:00,536 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:49:00,536 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:49:00,548 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:49:00,548 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:49:00,548 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:49:00,549 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
15:49:00,549 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
15:49:00,569 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
15:49:00,570 INFO  [SoapUITestCaseRunner] running step [setBalance]
15:49:00,572 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:49:00,574 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:49:00,574 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
15:49:00,682 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:49:00,682 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:49:00,693 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:49:00,693 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:49:00,693 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:49:00,694 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
15:49:00,694 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
15:49:00,703 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
15:49:00,704 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
15:49:00,705 INFO  [SoapUITestCaseRunner] running step [finish_successful]
15:49:00,773 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK
15:49:00,775 INFO  [SoapUITestCaseRunner] Finished running SoapUI testcase [createTestSubscribers], time taken: 4194ms, status: FINISHED
15:49:00,775 INFO  [SoapUITestCaseRunner] TestCase [createTestSubscribers] finished with status [FINISHED] in 4194ms</msg>
<status status="PASS" endtime="20160122 15:49:00.795" starttime="20160122 15:48:54.750"></status>
</kw>
<msg timestamp="20160122 15:49:00.802" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:49:00.803" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160122 15:49:00.799" starttime="20160122 15:48:54.748"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:49:00.837" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20160122 15:49:00.836" starttime="20160122 15:49:00.830"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:49:00.845" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:49:00.844" starttime="20160122 15:49:00.840"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:49:00.854" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:49:00.852" starttime="20160122 15:49:00.848"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:49:00.867" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:49:00.873" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20160122 15:49:00.874" starttime="20160122 15:49:00.862"></status>
</kw>
<msg timestamp="20160122 15:49:00.875" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:49:00.875" level="INFO">${return_log_entry} = 2016-01-22 15:49:00,773 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:49:00.874" starttime="20160122 15:49:00.857"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:49:00.884" starttime="20160122 15:49:00.882"></status>
</kw>
<msg timestamp="20160122 15:49:00.885" level="INFO">${return_log_entry} = 2016-01-22 15:49:00,773 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:49:00.885" starttime="20160122 15:49:00.877"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:49:00.893" starttime="20160122 15:49:00.891"></status>
</kw>
<msg timestamp="20160122 15:49:00.895" level="INFO">${return_log_entry} = 2016-01-22 15:49:00,773 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:49:00.894" starttime="20160122 15:49:00.887"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:49:00.903" starttime="20160122 15:49:00.901"></status>
</kw>
<msg timestamp="20160122 15:49:00.905" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:49:00.904" starttime="20160122 15:49:00.896"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:49:00.915" starttime="20160122 15:49:00.913"></status>
</kw>
<msg timestamp="20160122 15:49:00.916" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:49:00.915" starttime="20160122 15:49:00.906"></status>
</kw>
<msg timestamp="20160122 15:49:00.918" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:49:00.917" starttime="20160122 15:49:00.809"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:49:00.929" starttime="20160122 15:49:00.927"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:49:00.931" starttime="20160122 15:49:00.930"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:49:00.934" starttime="20160122 15:49:00.932"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160122 15:49:00.946" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160122 15:49:00.947" starttime="20160122 15:49:00.941"></status>
</kw>
<status status="PASS" endtime="20160122 15:49:00.948" starttime="20160122 15:49:00.939"></status>
</kw>
<status status="PASS" endtime="20160122 15:49:00.948" starttime="20160122 15:49:00.935"></status>
</kw>
<status status="PASS" endtime="20160122 15:49:00.949" starttime="20160122 15:49:00.919"></status>
</kw>
<msg timestamp="20160122 15:49:00.951" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20160122 15:49:00.951" starttime="20160122 15:48:54.639"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20160122 15:49:00.954" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 15:49:00.955" starttime="20160122 15:49:00.953"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:49:00.957" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20160122 15:49:00.958" starttime="20160122 15:49:00.956"></status>
</kw>
<kw type="kw" name="${calling_int} = BuiltIn.Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<msg timestamp="20160122 15:49:00.961" level="INFO">Argument types are:
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160122 15:49:00.962" level="INFO">${calling_int} = 525516001000</msg>
<status status="PASS" endtime="20160122 15:49:00.961" starttime="20160122 15:49:00.959"></status>
</kw>
<kw type="kw" name="${called_party} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${calling_int}+1</arg>
</arguments>
<msg timestamp="20160122 15:49:00.967" level="INFO">${called_party} = 525516001001</msg>
<status status="PASS" endtime="20160122 15:49:00.967" starttime="20160122 15:49:00.963"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC 1s *******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:49:00.970" starttime="20160122 15:49:00.968"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the MOC call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:49:00.972" level="INFO">Running the MOC call...</msg>
<status status="PASS" endtime="20160122 15:49:00.973" starttime="20160122 15:49:00.971"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC 136s">
<doc>Runs a standard MOC 136s session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${called_party}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc136s</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20160122 15:49:01.002" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv</msg>
<status status="PASS" endtime="20160122 15:49:01.001" starttime="20160122 15:49:01.000"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20160122 15:49:01.005" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv</msg>
<status status="PASS" endtime="20160122 15:49:01.005" starttime="20160122 15:49:01.003"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20160122 15:49:01.009" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini</msg>
<status status="PASS" endtime="20160122 15:49:01.008" starttime="20160122 15:49:01.006"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20160122 15:49:01.012" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc136s.cgs</msg>
<status status="PASS" endtime="20160122 15:49:01.011" starttime="20160122 15:49:01.010"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:49:01.014" starttime="20160122 15:49:01.013"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20160122 15:49:01.018" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:49:01.019" starttime="20160122 15:49:01.015"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:49:01.021" starttime="20160122 15:49:01.020"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20160122 15:49:01.057" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:49:01.058" starttime="20160122 15:49:01.052"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20160122 15:49:01.062" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:49:01.063" starttime="20160122 15:49:01.059"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:49:01.065" starttime="20160122 15:49:01.064"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20160122 15:49:01.069" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:49:01.069" starttime="20160122 15:49:01.066"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20160122 15:49:01.074" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:49:01.075" starttime="20160122 15:49:01.070"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:49:01.077" starttime="20160122 15:49:01.075"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20160122 15:49:01.087" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc136s.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20160122 15:51:21.185" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160122 15:51:21.177" starttime="20160122 15:49:01.078"></status>
</kw>
<msg timestamp="20160122 15:51:21.203" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160122 15:51:21.201" starttime="20160122 15:49:00.988"></status>
</kw>
<msg timestamp="20160122 15:51:21.207" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160122 15:51:21.205" starttime="20160122 15:49:00.976"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:51:21.214" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20160122 15:51:21.216" starttime="20160122 15:51:21.210"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.223" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 15:51:21.224" starttime="20160122 15:51:21.218"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.229" starttime="20160122 15:51:21.226"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.280" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:51:21.281" starttime="20160122 15:51:21.274"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:21.283" starttime="20160122 15:51:21.271"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.293" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:51:21.294" starttime="20160122 15:51:21.288"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:21.296" starttime="20160122 15:51:21.285"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.306" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:51:21.307" starttime="20160122 15:51:21.301"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:21.309" starttime="20160122 15:51:21.298"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:21.311" starttime="20160122 15:51:21.258"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.318" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160122 15:51:21.319" starttime="20160122 15:51:21.313"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.325" starttime="20160122 15:51:21.321"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.331" starttime="20160122 15:51:21.327"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.337" starttime="20160122 15:51:21.333"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.341" starttime="20160122 15:51:21.339"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.346" starttime="20160122 15:51:21.343"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.352" starttime="20160122 15:51:21.348"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160122 15:51:21.360" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=3', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=100000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001000']</msg>
<msg timestamp="20160122 15:51:21.678" level="INFO">15:51:21,674 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
15:51:21,674 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
15:51:21,675 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=35133
15:51:21,675 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000
15:51:21,675 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
15:51:21,676 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001
15:51:21,676 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID
15:51:21,677 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=3</msg>
<status status="PASS" endtime="20160122 15:51:21.678" starttime="20160122 15:51:21.357"></status>
</kw>
<msg timestamp="20160122 15:51:21.680" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:51:21.680" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160122 15:51:21.679" starttime="20160122 15:51:21.354"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:51:21.691" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20160122 15:51:21.691" starttime="20160122 15:51:21.689"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.694" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:51:21.694" starttime="20160122 15:51:21.692"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.697" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:51:21.697" starttime="20160122 15:51:21.695"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.702" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:51:21.706" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 15:51:21.707" starttime="20160122 15:51:21.700"></status>
</kw>
<msg timestamp="20160122 15:51:21.708" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:51:21.709" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,674 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:51:21.708" starttime="20160122 15:51:21.698"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.717" starttime="20160122 15:51:21.715"></status>
</kw>
<msg timestamp="20160122 15:51:21.718" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,674 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:51:21.717" starttime="20160122 15:51:21.710"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.725" starttime="20160122 15:51:21.723"></status>
</kw>
<msg timestamp="20160122 15:51:21.726" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,674 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:51:21.726" starttime="20160122 15:51:21.719"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.734" starttime="20160122 15:51:21.732"></status>
</kw>
<msg timestamp="20160122 15:51:21.735" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:51:21.735" starttime="20160122 15:51:21.727"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.746" starttime="20160122 15:51:21.744"></status>
</kw>
<msg timestamp="20160122 15:51:21.747" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:51:21.746" starttime="20160122 15:51:21.736"></status>
</kw>
<msg timestamp="20160122 15:51:21.748" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:51:21.748" starttime="20160122 15:51:21.682"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:51:21.759" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20160122 15:51:21.759" starttime="20160122 15:51:21.757"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.762" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:51:21.762" starttime="20160122 15:51:21.760"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.765" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:51:21.765" starttime="20160122 15:51:21.763"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.770" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:51:21.774" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 15:51:21.775" starttime="20160122 15:51:21.768"></status>
</kw>
<msg timestamp="20160122 15:51:21.776" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:51:21.777" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,674 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160122 15:51:21.775" starttime="20160122 15:51:21.766"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.784" starttime="20160122 15:51:21.782"></status>
</kw>
<msg timestamp="20160122 15:51:21.785" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,674 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160122 15:51:21.785" starttime="20160122 15:51:21.777"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.792" starttime="20160122 15:51:21.790"></status>
</kw>
<msg timestamp="20160122 15:51:21.793" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,674 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160122 15:51:21.793" starttime="20160122 15:51:21.786"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.801" starttime="20160122 15:51:21.799"></status>
</kw>
<msg timestamp="20160122 15:51:21.802" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160122 15:51:21.802" starttime="20160122 15:51:21.794"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.812" starttime="20160122 15:51:21.810"></status>
</kw>
<msg timestamp="20160122 15:51:21.813" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160122 15:51:21.813" starttime="20160122 15:51:21.803"></status>
</kw>
<msg timestamp="20160122 15:51:21.815" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20160122 15:51:21.815" starttime="20160122 15:51:21.750"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:51:21.826" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20160122 15:51:21.825" starttime="20160122 15:51:21.823"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.829" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:51:21.828" starttime="20160122 15:51:21.827"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.832" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:51:21.831" starttime="20160122 15:51:21.830"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.837" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:51:21.840" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 15:51:21.841" starttime="20160122 15:51:21.835"></status>
</kw>
<msg timestamp="20160122 15:51:21.842" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:51:21.843" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,675 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160122 15:51:21.842" starttime="20160122 15:51:21.833"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.850" starttime="20160122 15:51:21.848"></status>
</kw>
<msg timestamp="20160122 15:51:21.851" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,675 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160122 15:51:21.851" starttime="20160122 15:51:21.844"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.858" starttime="20160122 15:51:21.856"></status>
</kw>
<msg timestamp="20160122 15:51:21.860" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,675 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160122 15:51:21.859" starttime="20160122 15:51:21.852"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.868" starttime="20160122 15:51:21.866"></status>
</kw>
<msg timestamp="20160122 15:51:21.869" level="INFO">${resultCode} = 334030880001000</msg>
<status status="PASS" endtime="20160122 15:51:21.869" starttime="20160122 15:51:21.861"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.879" starttime="20160122 15:51:21.877"></status>
</kw>
<msg timestamp="20160122 15:51:21.880" level="INFO">${resultCode} = 334030880001000</msg>
<status status="PASS" endtime="20160122 15:51:21.879" starttime="20160122 15:51:21.870"></status>
</kw>
<msg timestamp="20160122 15:51:21.882" level="INFO">${imsi} = 334030880001000</msg>
<status status="PASS" endtime="20160122 15:51:21.881" starttime="20160122 15:51:21.817"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:51:21.893" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20160122 15:51:21.892" starttime="20160122 15:51:21.890"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.896" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:51:21.896" starttime="20160122 15:51:21.894"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.899" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:51:21.898" starttime="20160122 15:51:21.897"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.904" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:51:21.908" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 15:51:21.909" starttime="20160122 15:51:21.902"></status>
</kw>
<msg timestamp="20160122 15:51:21.910" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:51:21.911" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,675 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=35133</msg>
<status status="PASS" endtime="20160122 15:51:21.910" starttime="20160122 15:51:21.900"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.917" starttime="20160122 15:51:21.916"></status>
</kw>
<msg timestamp="20160122 15:51:21.919" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,675 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=35133</msg>
<status status="PASS" endtime="20160122 15:51:21.918" starttime="20160122 15:51:21.912"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.925" starttime="20160122 15:51:21.924"></status>
</kw>
<msg timestamp="20160122 15:51:21.927" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,675 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=35133</msg>
<status status="PASS" endtime="20160122 15:51:21.926" starttime="20160122 15:51:21.919"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.934" starttime="20160122 15:51:21.932"></status>
</kw>
<msg timestamp="20160122 15:51:21.935" level="INFO">${resultCode} = 35133</msg>
<status status="PASS" endtime="20160122 15:51:21.935" starttime="20160122 15:51:21.928"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.944" starttime="20160122 15:51:21.943"></status>
</kw>
<msg timestamp="20160122 15:51:21.946" level="INFO">${resultCode} = 35133</msg>
<status status="PASS" endtime="20160122 15:51:21.945" starttime="20160122 15:51:21.936"></status>
</kw>
<msg timestamp="20160122 15:51:21.947" level="INFO">${id} = 35133</msg>
<status status="PASS" endtime="20160122 15:51:21.947" starttime="20160122 15:51:21.883"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:51:21.957" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20160122 15:51:21.957" starttime="20160122 15:51:21.955"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.960" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:51:21.960" starttime="20160122 15:51:21.958"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.963" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:51:21.962" starttime="20160122 15:51:21.961"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:51:21.968" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:51:21.971" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 15:51:21.972" starttime="20160122 15:51:21.965"></status>
</kw>
<msg timestamp="20160122 15:51:21.973" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:51:21.974" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,675 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160122 15:51:21.973" starttime="20160122 15:51:21.964"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.980" starttime="20160122 15:51:21.979"></status>
</kw>
<msg timestamp="20160122 15:51:21.982" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,675 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160122 15:51:21.981" starttime="20160122 15:51:21.975"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.989" starttime="20160122 15:51:21.987"></status>
</kw>
<msg timestamp="20160122 15:51:21.990" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,675 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160122 15:51:21.989" starttime="20160122 15:51:21.982"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:21.998" starttime="20160122 15:51:21.996"></status>
</kw>
<msg timestamp="20160122 15:51:21.999" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160122 15:51:21.999" starttime="20160122 15:51:21.991"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.009" starttime="20160122 15:51:22.007"></status>
</kw>
<msg timestamp="20160122 15:51:22.010" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160122 15:51:22.010" starttime="20160122 15:51:22.000"></status>
</kw>
<msg timestamp="20160122 15:51:22.012" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20160122 15:51:22.011" starttime="20160122 15:51:21.949"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:51:22.022" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20160122 15:51:22.022" starttime="20160122 15:51:22.020"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.025" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:51:22.025" starttime="20160122 15:51:22.023"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.028" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:51:22.027" starttime="20160122 15:51:22.026"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.033" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:51:22.036" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 15:51:22.037" starttime="20160122 15:51:22.031"></status>
</kw>
<msg timestamp="20160122 15:51:22.038" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:51:22.039" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,676 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160122 15:51:22.038" starttime="20160122 15:51:22.029"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.045" starttime="20160122 15:51:22.044"></status>
</kw>
<msg timestamp="20160122 15:51:22.046" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,676 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160122 15:51:22.046" starttime="20160122 15:51:22.040"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.053" starttime="20160122 15:51:22.052"></status>
</kw>
<msg timestamp="20160122 15:51:22.055" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,676 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160122 15:51:22.054" starttime="20160122 15:51:22.047"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.062" starttime="20160122 15:51:22.060"></status>
</kw>
<msg timestamp="20160122 15:51:22.063" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160122 15:51:22.062" starttime="20160122 15:51:22.055"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.072" starttime="20160122 15:51:22.070"></status>
</kw>
<msg timestamp="20160122 15:51:22.073" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160122 15:51:22.073" starttime="20160122 15:51:22.064"></status>
</kw>
<msg timestamp="20160122 15:51:22.075" level="INFO">${tariffId} = 101001</msg>
<status status="PASS" endtime="20160122 15:51:22.074" starttime="20160122 15:51:22.014"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:51:22.085" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20160122 15:51:22.084" starttime="20160122 15:51:22.082"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.088" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:51:22.087" starttime="20160122 15:51:22.086"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.091" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:51:22.090" starttime="20160122 15:51:22.089"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.096" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:51:22.100" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 15:51:22.100" starttime="20160122 15:51:22.093"></status>
</kw>
<msg timestamp="20160122 15:51:22.102" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:51:22.102" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,676 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160122 15:51:22.101" starttime="20160122 15:51:22.092"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.109" starttime="20160122 15:51:22.107"></status>
</kw>
<msg timestamp="20160122 15:51:22.110" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,676 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160122 15:51:22.110" starttime="20160122 15:51:22.103"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.117" starttime="20160122 15:51:22.116"></status>
</kw>
<msg timestamp="20160122 15:51:22.119" level="INFO">${return_log_entry} = 2016-01-22 15:51:21,676 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160122 15:51:22.118" starttime="20160122 15:51:22.111"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.126" starttime="20160122 15:51:22.124"></status>
</kw>
<msg timestamp="20160122 15:51:22.127" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160122 15:51:22.127" starttime="20160122 15:51:22.120"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.136" starttime="20160122 15:51:22.135"></status>
</kw>
<msg timestamp="20160122 15:51:22.137" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160122 15:51:22.137" starttime="20160122 15:51:22.128"></status>
</kw>
<msg timestamp="20160122 15:51:22.139" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160122 15:51:22.138" starttime="20160122 15:51:22.076"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.147" starttime="20160122 15:51:22.146"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.150" starttime="20160122 15:51:22.148"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.152" starttime="20160122 15:51:22.150"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160122 15:51:22.163" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160122 15:51:22.164" starttime="20160122 15:51:22.158"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:22.164" starttime="20160122 15:51:22.157"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:22.165" starttime="20160122 15:51:22.153"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:22.166" starttime="20160122 15:51:22.140"></status>
</kw>
<msg timestamp="20160122 15:51:22.169" level="INFO">${rc} = OK</msg>
<msg timestamp="20160122 15:51:22.170" level="INFO">${provId} = 1</msg>
<msg timestamp="20160122 15:51:22.170" level="INFO">${imsi} = 334030880001000</msg>
<msg timestamp="20160122 15:51:22.171" level="INFO">${id} = 35133</msg>
<msg timestamp="20160122 15:51:22.171" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20160122 15:51:22.172" level="INFO">${tariffId} = 101001</msg>
<msg timestamp="20160122 15:51:22.172" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160122 15:51:22.168" starttime="20160122 15:51:21.236"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.192" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:51:22.192" starttime="20160122 15:51:22.190"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:22.193" starttime="20160122 15:51:22.188"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.197" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:51:22.198" starttime="20160122 15:51:22.195"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:22.199" starttime="20160122 15:51:22.194"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.205" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:51:22.205" starttime="20160122 15:51:22.202"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:22.206" starttime="20160122 15:51:22.200"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:22.207" starttime="20160122 15:51:22.183"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.210" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160122 15:51:22.211" starttime="20160122 15:51:22.208"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.213" starttime="20160122 15:51:22.212"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.216" starttime="20160122 15:51:22.214"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.219" starttime="20160122 15:51:22.217"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.221" starttime="20160122 15:51:22.220"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.223" starttime="20160122 15:51:22.222"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.226" starttime="20160122 15:51:22.224"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160122 15:51:22.229" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=3', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=100000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=35133']</msg>
<msg timestamp="20160122 15:51:22.487" level="INFO">15:51:22,485 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
15:51:22,485 INFO  [log] LowLevelOps.getMainAccount.output.accountId=35134
15:51:22,486 INFO  [log] LowLevelOps.getMainAccount.output.balance=88000000
15:51:22,486 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
15:51:22,486 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160122 15:51:22.488" starttime="20160122 15:51:22.228"></status>
</kw>
<msg timestamp="20160122 15:51:22.490" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:51:22.490" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160122 15:51:22.489" starttime="20160122 15:51:22.227"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:51:22.500" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20160122 15:51:22.500" starttime="20160122 15:51:22.498"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.503" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:51:22.503" starttime="20160122 15:51:22.501"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.506" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:51:22.505" starttime="20160122 15:51:22.504"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.510" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:51:22.514" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 15:51:22.515" starttime="20160122 15:51:22.508"></status>
</kw>
<msg timestamp="20160122 15:51:22.516" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:51:22.516" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,485 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:51:22.515" starttime="20160122 15:51:22.507"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.539" starttime="20160122 15:51:22.537"></status>
</kw>
<msg timestamp="20160122 15:51:22.540" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,485 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:51:22.540" starttime="20160122 15:51:22.517"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.548" starttime="20160122 15:51:22.546"></status>
</kw>
<msg timestamp="20160122 15:51:22.549" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,485 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:51:22.548" starttime="20160122 15:51:22.541"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.556" starttime="20160122 15:51:22.554"></status>
</kw>
<msg timestamp="20160122 15:51:22.557" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:51:22.557" starttime="20160122 15:51:22.550"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.566" starttime="20160122 15:51:22.565"></status>
</kw>
<msg timestamp="20160122 15:51:22.567" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:51:22.567" starttime="20160122 15:51:22.558"></status>
</kw>
<msg timestamp="20160122 15:51:22.569" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:51:22.569" starttime="20160122 15:51:22.492"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:51:22.579" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20160122 15:51:22.579" starttime="20160122 15:51:22.577"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.582" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:51:22.581" starttime="20160122 15:51:22.580"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.585" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:51:22.584" starttime="20160122 15:51:22.583"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.589" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:51:22.593" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 15:51:22.593" starttime="20160122 15:51:22.587"></status>
</kw>
<msg timestamp="20160122 15:51:22.594" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:51:22.595" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,485 INFO  [log] LowLevelOps.getMainAccount.output.accountId=35134</msg>
<status status="PASS" endtime="20160122 15:51:22.594" starttime="20160122 15:51:22.586"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.601" starttime="20160122 15:51:22.600"></status>
</kw>
<msg timestamp="20160122 15:51:22.602" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,485 INFO  [log] LowLevelOps.getMainAccount.output.accountId=35134</msg>
<status status="PASS" endtime="20160122 15:51:22.602" starttime="20160122 15:51:22.596"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.609" starttime="20160122 15:51:22.607"></status>
</kw>
<msg timestamp="20160122 15:51:22.610" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,485 INFO  [log] LowLevelOps.getMainAccount.output.accountId=35134</msg>
<status status="PASS" endtime="20160122 15:51:22.610" starttime="20160122 15:51:22.603"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.617" starttime="20160122 15:51:22.615"></status>
</kw>
<msg timestamp="20160122 15:51:22.618" level="INFO">${resultCode} = 35134</msg>
<status status="PASS" endtime="20160122 15:51:22.618" starttime="20160122 15:51:22.611"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.627" starttime="20160122 15:51:22.626"></status>
</kw>
<msg timestamp="20160122 15:51:22.628" level="INFO">${resultCode} = 35134</msg>
<status status="PASS" endtime="20160122 15:51:22.628" starttime="20160122 15:51:22.619"></status>
</kw>
<msg timestamp="20160122 15:51:22.630" level="INFO">${accountId} = 35134</msg>
<status status="PASS" endtime="20160122 15:51:22.629" starttime="20160122 15:51:22.571"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:51:22.645" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20160122 15:51:22.645" starttime="20160122 15:51:22.643"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.648" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:51:22.648" starttime="20160122 15:51:22.646"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.651" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:51:22.650" starttime="20160122 15:51:22.649"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.656" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:51:22.659" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 15:51:22.659" starttime="20160122 15:51:22.653"></status>
</kw>
<msg timestamp="20160122 15:51:22.660" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:51:22.661" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,486 INFO  [log] LowLevelOps.getMainAccount.output.balance=88000000</msg>
<status status="PASS" endtime="20160122 15:51:22.660" starttime="20160122 15:51:22.652"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.667" starttime="20160122 15:51:22.666"></status>
</kw>
<msg timestamp="20160122 15:51:22.668" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,486 INFO  [log] LowLevelOps.getMainAccount.output.balance=88000000</msg>
<status status="PASS" endtime="20160122 15:51:22.668" starttime="20160122 15:51:22.662"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.674" starttime="20160122 15:51:22.673"></status>
</kw>
<msg timestamp="20160122 15:51:22.676" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,486 INFO  [log] LowLevelOps.getMainAccount.output.balance=88000000</msg>
<status status="PASS" endtime="20160122 15:51:22.675" starttime="20160122 15:51:22.669"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.682" starttime="20160122 15:51:22.680"></status>
</kw>
<msg timestamp="20160122 15:51:22.683" level="INFO">${resultCode} = 88000000</msg>
<status status="PASS" endtime="20160122 15:51:22.683" starttime="20160122 15:51:22.676"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.692" starttime="20160122 15:51:22.690"></status>
</kw>
<msg timestamp="20160122 15:51:22.693" level="INFO">${resultCode} = 88000000</msg>
<status status="PASS" endtime="20160122 15:51:22.692" starttime="20160122 15:51:22.684"></status>
</kw>
<msg timestamp="20160122 15:51:22.694" level="INFO">${balance} = 88000000</msg>
<status status="PASS" endtime="20160122 15:51:22.694" starttime="20160122 15:51:22.631"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:51:22.704" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20160122 15:51:22.703" starttime="20160122 15:51:22.701"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.706" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:51:22.706" starttime="20160122 15:51:22.704"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.709" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:51:22.708" starttime="20160122 15:51:22.707"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.713" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:51:22.716" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 15:51:22.717" starttime="20160122 15:51:22.711"></status>
</kw>
<msg timestamp="20160122 15:51:22.718" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:51:22.718" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,486 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160122 15:51:22.717" starttime="20160122 15:51:22.710"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.725" starttime="20160122 15:51:22.723"></status>
</kw>
<msg timestamp="20160122 15:51:22.726" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,486 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160122 15:51:22.725" starttime="20160122 15:51:22.719"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.732" starttime="20160122 15:51:22.730"></status>
</kw>
<msg timestamp="20160122 15:51:22.733" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,486 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160122 15:51:22.732" starttime="20160122 15:51:22.726"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.740" starttime="20160122 15:51:22.738"></status>
</kw>
<msg timestamp="20160122 15:51:22.741" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160122 15:51:22.740" starttime="20160122 15:51:22.734"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.749" starttime="20160122 15:51:22.748"></status>
</kw>
<msg timestamp="20160122 15:51:22.750" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160122 15:51:22.750" starttime="20160122 15:51:22.742"></status>
</kw>
<msg timestamp="20160122 15:51:22.752" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20160122 15:51:22.751" starttime="20160122 15:51:22.696"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:51:22.761" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20160122 15:51:22.760" starttime="20160122 15:51:22.759"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.764" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:51:22.763" starttime="20160122 15:51:22.762"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.766" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:51:22.766" starttime="20160122 15:51:22.764"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.770" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:51:22.773" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 15:51:22.774" starttime="20160122 15:51:22.768"></status>
</kw>
<msg timestamp="20160122 15:51:22.775" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:51:22.776" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,486 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160122 15:51:22.775" starttime="20160122 15:51:22.767"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.781" starttime="20160122 15:51:22.780"></status>
</kw>
<msg timestamp="20160122 15:51:22.783" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,486 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160122 15:51:22.782" starttime="20160122 15:51:22.776"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.789" starttime="20160122 15:51:22.787"></status>
</kw>
<msg timestamp="20160122 15:51:22.790" level="INFO">${return_log_entry} = 2016-01-22 15:51:22,486 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160122 15:51:22.789" starttime="20160122 15:51:22.783"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.796" starttime="20160122 15:51:22.794"></status>
</kw>
<msg timestamp="20160122 15:51:22.797" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20160122 15:51:22.797" starttime="20160122 15:51:22.791"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.806" starttime="20160122 15:51:22.804"></status>
</kw>
<msg timestamp="20160122 15:51:22.807" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20160122 15:51:22.806" starttime="20160122 15:51:22.798"></status>
</kw>
<msg timestamp="20160122 15:51:22.808" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20160122 15:51:22.808" starttime="20160122 15:51:22.753"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.816" starttime="20160122 15:51:22.814"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.818" starttime="20160122 15:51:22.817"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:51:22.820" starttime="20160122 15:51:22.819"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160122 15:51:22.830" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160122 15:51:22.830" starttime="20160122 15:51:22.826"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:22.831" starttime="20160122 15:51:22.824"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:22.831" starttime="20160122 15:51:22.821"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:22.832" starttime="20160122 15:51:22.809"></status>
</kw>
<msg timestamp="20160122 15:51:22.834" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20160122 15:51:22.835" level="INFO">${accId} = 35134</msg>
<msg timestamp="20160122 15:51:22.835" level="INFO">${bal} = 88000000</msg>
<msg timestamp="20160122 15:51:22.836" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20160122 15:51:22.836" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20160122 15:51:22.834" starttime="20160122 15:51:22.175"></status>
</kw>
<kw type="kw" name="${target_bal} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${INITIAL_BALANCE}-3*${TESTSUBCRIBERS DEFAULT SLICE COSTS}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.841" level="INFO">${target_bal} = 94000000</msg>
<status status="PASS" endtime="20160122 15:51:22.840" starttime="20160122 15:51:22.837"></status>
</kw>
<kw type="kw" name="${target_bal_mex} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${INITIAL_BALANCE}-6*${TESTSUBCRIBERS DEFAULT SLICE COSTS}</arg>
</arguments>
<msg timestamp="20160122 15:51:22.845" level="INFO">${target_bal_mex} = 88000000</msg>
<status status="PASS" endtime="20160122 15:51:22.845" starttime="20160122 15:51:22.842"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='VIRGIN_COLUMBIA'</arg>
<arg>Should Be Equal As Numbers</arg>
<arg>${bal}</arg>
<arg>99920080</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
<arg>ELSE IF</arg>
<arg>'${SUT PROJECT TAG PREFIX}'=='MVNA_MEX'</arg>
<arg>Should Be Equal As Numbers</arg>
<arg>${bal}</arg>
<arg>${target_bal_mex}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Numbers</arg>
<arg>${target_bal}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${bal}</arg>
<arg>${target_bal_mex}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<msg timestamp="20160122 15:51:22.855" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20160122 15:51:22.856" starttime="20160122 15:51:22.853"></status>
</kw>
<status status="PASS" endtime="20160122 15:51:22.857" starttime="20160122 15:51:22.847"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check OK!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:51:22.859" level="INFO">Account balance check OK!</msg>
<status status="PASS" endtime="20160122 15:51:22.859" starttime="20160122 15:51:22.857"></status>
</kw>
<doc>Test will make a MOC call, duration 136s.

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>SMARTSPACE_supported</tag>
<tag>TNZ_supported</tag>
</tags>
<status status="PASS" critical="yes" endtime="20160122 15:51:22.860" starttime="20160122 15:48:54.623"></status>
</test>
<doc>Testing the prepaid MOC call, duration is 136s - longer than one slice (more than 60s)

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20160122 15:51:22.865" starttime="20160122 15:48:47.756"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" info="" doc="" combined="" fail="0" links="">matko.sanseovic</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">MOC_only</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">SMARTSPACE_supported</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">TNZ_supported</stat>
</tag>
<suite>
<stat pass="1" id="s1" fail="0" name="MOC PREPAID ONNET-LongDuration136s-robot-suite">MOC PREPAID ONNET-LongDuration136s-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
