<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20151202 14:45:06.633">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/MOC_POSTPAID_ONNET-ShortDuration-robot-suite.txt" id="s1" name="MOC POSTPAID ONNET-ShortDuration-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20151202 14:45:08.994" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20151202 14:45:08.997" level="INFO">${date} = Wed Dec  2 14:45:08 CET 2015</msg>
<status status="PASS" endtime="20151202 14:45:08.996" starttime="20151202 14:45:08.981"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:45:09.002" level="INFO">Date and time: Wed Dec  2 14:45:08 CET 2015</msg>
<status status="PASS" endtime="20151202 14:45:09.003" starttime="20151202 14:45:08.999"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:45:09.009" level="INFO">Target IN machine: 10.105.125.135</msg>
<status status="PASS" endtime="20151202 14:45:09.010" starttime="20151202 14:45:09.006"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:09.096" starttime="20151202 14:45:09.094"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:09.516" starttime="20151202 14:45:09.110"></status>
</kw>
<msg timestamp="20151202 14:45:09.521" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20151202 14:45:09.519" starttime="20151202 14:45:09.098"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151202 14:45:09.544" level="INFO">Logging into '10.105.125.135:22' as 'qa_automation'.</msg>
<msg timestamp="20151202 14:45:09.969" level="INFO">Read output: Last login: Wed Dec  2 13:32:13 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb25 ~]$</msg>
<status status="PASS" endtime="20151202 14:45:09.971" starttime="20151202 14:45:09.538"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:09.974" starttime="20151202 14:45:09.525"></status>
</kw>
<msg timestamp="20151202 14:45:09.979" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20151202 14:45:09.978" starttime="20151202 14:45:09.078"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151202 14:45:09.995" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151202 14:45:09.993" starttime="20151202 14:45:09.983"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151202 14:45:10.004" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20151202 14:45:10.868" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151202 14:45:10.873" level="INFO">${output} = I-New MVNA MTel - Core - Service 1.0.0 2015.11.12-14:31:57 is running PID: 12768 </msg>
<status status="PASS" endtime="20151202 14:45:10.870" starttime="20151202 14:45:09.998"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:10.890" starttime="20151202 14:45:10.883"></status>
</kw>
<msg timestamp="20151202 14:45:10.894" level="INFO">${status} = PASS</msg>
<msg timestamp="20151202 14:45:10.896" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151202 14:45:10.892" starttime="20151202 14:45:10.877"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:10.914" starttime="20151202 14:45:10.910"></status>
</kw>
<msg timestamp="20151202 14:45:10.918" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:45:10.917" starttime="20151202 14:45:10.899"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20151202 14:45:10.927" level="INFO">${version_r} =  1.0.0 2015.11.12-14:31:57 is running PID: 12768 </msg>
<status status="PASS" endtime="20151202 14:45:10.926" starttime="20151202 14:45:10.921"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151202 14:45:10.937" level="INFO">${version} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151202 14:45:10.936" starttime="20151202 14:45:10.931"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:10.945" starttime="20151202 14:45:10.941"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:10.976" starttime="20151202 14:45:10.971"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151202 14:45:10.990" starttime="20151202 14:45:10.980"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:10.993" starttime="20151202 14:45:10.949"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:11.011" starttime="20151202 14:45:11.006"></status>
</kw>
<msg timestamp="20151202 14:45:11.016" level="INFO">${ver} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151202 14:45:11.013" starttime="20151202 14:45:10.996"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:11.024" starttime="20151202 14:45:11.019"></status>
</kw>
<msg timestamp="20151202 14:45:11.030" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20151202 14:45:11.031" level="INFO">${in_version} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151202 14:45:11.028" starttime="20151202 14:45:09.037"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:11.174" starttime="20151202 14:45:11.172"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:11.268" starttime="20151202 14:45:11.181"></status>
</kw>
<msg timestamp="20151202 14:45:11.272" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20151202 14:45:11.271" starttime="20151202 14:45:11.175"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151202 14:45:11.294" level="INFO">Logging into '10.105.125.171:22' as 'qa_automation'.</msg>
<msg timestamp="20151202 14:45:11.547" level="INFO">Read output: Last login: Wed Dec  2 13:32:14 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb25 ~]$</msg>
<status status="PASS" endtime="20151202 14:45:11.549" starttime="20151202 14:45:11.289"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:11.552" starttime="20151202 14:45:11.275"></status>
</kw>
<msg timestamp="20151202 14:45:11.556" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20151202 14:45:11.555" starttime="20151202 14:45:11.134"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151202 14:45:11.571" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151202 14:45:11.569" starttime="20151202 14:45:11.559"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151202 14:45:11.578" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20151202 14:45:11.772" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151202 14:45:11.776" level="INFO">${output} = I-New UMS MVNO - XDR 6.2.0 is running PID: 5581 </msg>
<status status="PASS" endtime="20151202 14:45:11.774" starttime="20151202 14:45:11.574"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:11.791" starttime="20151202 14:45:11.785"></status>
</kw>
<msg timestamp="20151202 14:45:11.795" level="INFO">${status} = PASS</msg>
<msg timestamp="20151202 14:45:11.796" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151202 14:45:11.794" starttime="20151202 14:45:11.779"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:11.815" starttime="20151202 14:45:11.811"></status>
</kw>
<msg timestamp="20151202 14:45:11.818" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:45:11.817" starttime="20151202 14:45:11.800"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20151202 14:45:11.828" level="INFO">${version_r} = I-New UMS MVNO - XDR 6.2.0 is running PID: 5581 </msg>
<status status="PASS" endtime="20151202 14:45:11.826" starttime="20151202 14:45:11.822"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151202 14:45:11.837" level="INFO">${version} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151202 14:45:11.835" starttime="20151202 14:45:11.831"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:11.843" starttime="20151202 14:45:11.840"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:11.874" starttime="20151202 14:45:11.869"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151202 14:45:11.882" starttime="20151202 14:45:11.877"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:11.886" starttime="20151202 14:45:11.847"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:11.904" starttime="20151202 14:45:11.900"></status>
</kw>
<msg timestamp="20151202 14:45:11.908" level="INFO">${ver} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151202 14:45:11.907" starttime="20151202 14:45:11.889"></status>
</kw>
<msg timestamp="20151202 14:45:11.913" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20151202 14:45:11.915" level="INFO">${xdr_version} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151202 14:45:11.912" starttime="20151202 14:45:11.071"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:12.026" starttime="20151202 14:45:12.024"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:12.088" starttime="20151202 14:45:12.033"></status>
</kw>
<msg timestamp="20151202 14:45:12.092" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20151202 14:45:12.090" starttime="20151202 14:45:12.027"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151202 14:45:12.113" level="INFO">Logging into '10.105.125.159:22' as 'qa_automation'.</msg>
<msg timestamp="20151202 14:45:12.331" level="INFO">Read output: Last login: Wed Dec  2 13:32:16 2015 from 10.105.80.196
[1m[qa_automation@ocs01.tb25 ~]$</msg>
<status status="PASS" endtime="20151202 14:45:12.334" starttime="20151202 14:45:12.108"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:12.336" starttime="20151202 14:45:12.095"></status>
</kw>
<msg timestamp="20151202 14:45:12.340" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20151202 14:45:12.339" starttime="20151202 14:45:12.012"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151202 14:45:12.354" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151202 14:45:12.353" starttime="20151202 14:45:12.343"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151202 14:45:12.363" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20151202 14:45:12.530" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151202 14:45:12.534" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.2.0.30830
Negret Rating &amp; Charging Engine 6.2.0.30830 is running (PID:28716, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20151202 14:45:12.532" starttime="20151202 14:45:12.357"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:12.550" starttime="20151202 14:45:12.543"></status>
</kw>
<msg timestamp="20151202 14:45:12.553" level="INFO">${status} = PASS</msg>
<msg timestamp="20151202 14:45:12.555" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151202 14:45:12.552" starttime="20151202 14:45:12.537"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:12.574" starttime="20151202 14:45:12.570"></status>
</kw>
<msg timestamp="20151202 14:45:12.577" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:45:12.576" starttime="20151202 14:45:12.558"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20151202 14:45:12.586" level="INFO">${version_r} =  6.2.0.30830 is running (PID:28716, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20151202 14:45:12.585" starttime="20151202 14:45:12.580"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151202 14:45:12.595" level="INFO">${version} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151202 14:45:12.594" starttime="20151202 14:45:12.589"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:12.602" starttime="20151202 14:45:12.598"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:12.631" starttime="20151202 14:45:12.626"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151202 14:45:12.641" starttime="20151202 14:45:12.634"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:12.644" starttime="20151202 14:45:12.605"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:12.662" starttime="20151202 14:45:12.658"></status>
</kw>
<msg timestamp="20151202 14:45:12.666" level="INFO">${ver} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151202 14:45:12.664" starttime="20151202 14:45:12.648"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:12.673" starttime="20151202 14:45:12.669"></status>
</kw>
<msg timestamp="20151202 14:45:12.679" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20151202 14:45:12.681" level="INFO">${crce_version} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151202 14:45:12.677" starttime="20151202 14:45:11.954"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:12.779" starttime="20151202 14:45:12.777"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:12.839" starttime="20151202 14:45:12.786"></status>
</kw>
<msg timestamp="20151202 14:45:12.843" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20151202 14:45:12.842" starttime="20151202 14:45:12.780"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151202 14:45:12.865" level="INFO">Logging into '10.105.125.159:22' as 'qa_automation'.</msg>
<msg timestamp="20151202 14:45:13.016" level="INFO">Read output: Last login: Wed Dec  2 13:45:12 2015 from 10.105.80.196
[1m[qa_automation@ocs01.tb25 ~]$</msg>
<status status="PASS" endtime="20151202 14:45:13.019" starttime="20151202 14:45:12.859"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:13.022" starttime="20151202 14:45:12.847"></status>
</kw>
<msg timestamp="20151202 14:45:13.030" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20151202 14:45:13.027" starttime="20151202 14:45:12.766"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151202 14:45:13.044" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151202 14:45:13.043" starttime="20151202 14:45:13.033"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151202 14:45:13.052" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20151202 14:45:13.134" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151202 14:45:13.137" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp is running (PID: 6110)</msg>
<status status="PASS" endtime="20151202 14:45:13.136" starttime="20151202 14:45:13.047"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.153" starttime="20151202 14:45:13.146"></status>
</kw>
<msg timestamp="20151202 14:45:13.156" level="INFO">${status} = PASS</msg>
<msg timestamp="20151202 14:45:13.157" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151202 14:45:13.155" starttime="20151202 14:45:13.140"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.175" starttime="20151202 14:45:13.171"></status>
</kw>
<msg timestamp="20151202 14:45:13.178" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:45:13.177" starttime="20151202 14:45:13.160"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20151202 14:45:13.187" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp is running (PID: 6110)</msg>
<status status="PASS" endtime="20151202 14:45:13.186" starttime="20151202 14:45:13.181"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151202 14:45:13.196" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151202 14:45:13.195" starttime="20151202 14:45:13.190"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.202" starttime="20151202 14:45:13.199"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.231" starttime="20151202 14:45:13.226"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.242" starttime="20151202 14:45:13.233"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:13.246" starttime="20151202 14:45:13.206"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.263" starttime="20151202 14:45:13.259"></status>
</kw>
<msg timestamp="20151202 14:45:13.266" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151202 14:45:13.265" starttime="20151202 14:45:13.249"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.274" starttime="20151202 14:45:13.269"></status>
</kw>
<msg timestamp="20151202 14:45:13.320" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20151202 14:45:13.322" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151202 14:45:13.317" starttime="20151202 14:45:12.717"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:45:13.332" level="INFO">IN state= OK version= 1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151202 14:45:13.334" starttime="20151202 14:45:13.325"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:45:13.342" level="INFO">XDR state= OK version=I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151202 14:45:13.344" starttime="20151202 14:45:13.337"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:45:13.352" level="INFO">CRCE state= OK version= 6.2.0.30830 </msg>
<status status="PASS" endtime="20151202 14:45:13.354" starttime="20151202 14:45:13.347"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:45:13.362" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151202 14:45:13.364" starttime="20151202 14:45:13.357"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20151202 14:45:13.372" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 14:45:13.374" starttime="20151202 14:45:13.367"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20151202 14:45:13.381" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 14:45:13.383" starttime="20151202 14:45:13.376"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20151202 14:45:13.391" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 14:45:13.392" starttime="20151202 14:45:13.386"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20151202 14:45:13.400" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 14:45:13.402" starttime="20151202 14:45:13.395"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.417" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes</msg>
<status status="PASS" endtime="20151202 14:45:13.415" starttime="20151202 14:45:13.404"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.425" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes</msg>
<status status="PASS" endtime="20151202 14:45:13.427" starttime="20151202 14:45:13.420"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:13.429" starttime="20151202 14:45:08.968"></status>
</kw>
<test id="s1-t1" name="Run PP MOC Short Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.461" starttime="20151202 14:45:13.458"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<msg timestamp="20151202 14:45:13.469" level="INFO">${INITIAL_BALANCE} = 0</msg>
<status status="PASS" endtime="20151202 14:45:13.468" starttime="20151202 14:45:13.464"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS PP IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
<arg>POSTPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS PP DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.510" level="INFO">msg=crce_host=10.105.125.159</msg>
<status status="PASS" endtime="20151202 14:45:13.511" starttime="20151202 14:45:13.505"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.518" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20151202 14:45:13.519" starttime="20151202 14:45:13.514"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.526" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20151202 14:45:13.528" starttime="20151202 14:45:13.522"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.534" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20151202 14:45:13.536" starttime="20151202 14:45:13.530"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.543" level="INFO">msg=imsiRangeStart=232201667725500</msg>
<status status="PASS" endtime="20151202 14:45:13.544" starttime="20151202 14:45:13.539"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.551" level="INFO">msg=msisdnRangeStart=43667725500</msg>
<status status="PASS" endtime="20151202 14:45:13.553" starttime="20151202 14:45:13.547"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.559" level="INFO">msg=type=POSTPAID</msg>
<status status="PASS" endtime="20151202 14:45:13.561" starttime="20151202 14:45:13.555"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.567" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20151202 14:45:13.569" starttime="20151202 14:45:13.563"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.575" level="INFO">msg=tariffId=101004</msg>
<status status="PASS" endtime="20151202 14:45:13.577" starttime="20151202 14:45:13.571"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.584" level="INFO">msg=balance=0</msg>
<status status="PASS" endtime="20151202 14:45:13.585" starttime="20151202 14:45:13.579"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.619" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:45:13.621" starttime="20151202 14:45:13.613"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:13.623" starttime="20151202 14:45:13.608"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.634" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:45:13.635" starttime="20151202 14:45:13.630"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:13.636" starttime="20151202 14:45:13.626"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.641" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:45:13.642" starttime="20151202 14:45:13.639"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:13.643" starttime="20151202 14:45:13.637"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:13.644" starttime="20151202 14:45:13.590"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 14:45:13.649" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 14:45:13.649" starttime="20151202 14:45:13.645"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.653" starttime="20151202 14:45:13.651"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.656" starttime="20151202 14:45:13.654"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.659" starttime="20151202 14:45:13.657"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.662" starttime="20151202 14:45:13.660"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.664" starttime="20151202 14:45:13.663"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.668" starttime="20151202 14:45:13.666"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.671" starttime="20151202 14:45:13.669"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.674" starttime="20151202 14:45:13.672"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.677" starttime="20151202 14:45:13.675"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.680" starttime="20151202 14:45:13.678"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.683" starttime="20151202 14:45:13.681"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:13.686" starttime="20151202 14:45:13.684"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 14:45:13.691" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0']</msg>
<msg timestamp="20151202 14:45:18.933" level="INFO">14:45:13,860 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/ext] for external libraries
14:45:13,861 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
14:45:16,065 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/crce-subscriberadmin/robot_crce_bridge-soapui-project.xml]
14:45:16,084 INFO  [SoapUITestCaseRunner] Setting project property [crceHost] to [10.105.125.159]
14:45:16,084 INFO  [SoapUITestCaseRunner] Setting project property [crcePort] to [8080]
14:45:16,085 INFO  [SoapUITestCaseRunner] Setting project property [crceWebservicesBasePath] to [/inew-mvno-crce-webservices/]
14:45:16,085 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.amount] to [2]
14:45:16,085 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.imsiRangeStart] to [232201667725500]
14:45:16,085 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.msisdnRangeStart] to [43667725500]
14:45:16,086 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.type] to [POSTPAID]
14:45:16,086 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.languageid] to [1]
14:45:16,086 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.tariffId] to [101004]
14:45:16,086 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.balance] to [0]
14:45:16,087 INFO  [SoapUITestCaseRunner] Running SoapUI tests in project [Robotframework_CRCE-Bridge]
14:45:16,087 INFO  [SoapUITestCaseRunner] Running TestCase [createTestSubscribers]
14:45:16,100 INFO  [SoapUITestCaseRunner] Running SoapUI testcase [createTestSubscribers]
14:45:16,109 INFO  [SoapUITestCaseRunner] running step [init_repeat_counter]
14:45:16,590 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
14:45:16,650 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
14:45:16,833 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:45:16,833 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
14:45:16,856 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:45:16,863 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:45:17,026 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:45:17,026 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:45:17,026 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:45:17,026 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
14:45:17,138 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
14:45:17,415 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
14:45:17,442 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
14:45:17,443 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:45:17,445 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:45:17,445 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
14:45:17,563 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:45:17,564 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:45:17,571 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:45:17,572 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:45:17,572 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:45:17,572 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
14:45:17,643 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
14:45:17,649 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
14:45:17,698 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
14:45:17,701 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:45:17,703 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:45:17,703 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
14:45:17,718 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:45:17,718 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:45:17,724 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:45:17,725 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:45:17,725 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:45:17,725 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
14:45:17,793 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
14:45:17,804 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
14:45:17,848 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
14:45:17,851 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:45:17,853 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:45:17,853 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
14:45:17,908 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:45:17,908 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:45:17,915 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:45:17,915 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:45:17,915 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:45:17,915 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
14:45:17,982 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
14:45:17,988 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
14:45:18,031 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
14:45:18,034 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:45:18,036 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:45:18,036 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
14:45:18,060 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:45:18,060 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:45:18,074 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:45:18,074 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:45:18,074 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:45:18,074 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
14:45:18,138 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
14:45:18,159 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
14:45:18,203 INFO  [SoapUITestCaseRunner] running step [setBalance]
14:45:18,206 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:45:18,208 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:45:18,208 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
14:45:18,247 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:45:18,248 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:45:18,260 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:45:18,260 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:45:18,260 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:45:18,260 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
14:45:18,324 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
14:45:18,334 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
14:45:18,376 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
14:45:18,408 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
14:45:18,411 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
14:45:18,412 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:45:18,414 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:45:18,414 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
14:45:18,428 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:45:18,428 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:45:18,436 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:45:18,436 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:45:18,436 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:45:18,436 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
14:45:18,436 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
14:45:18,448 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
14:45:18,448 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
14:45:18,449 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:45:18,451 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:45:18,451 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
14:45:18,555 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:45:18,555 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:45:18,561 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:45:18,561 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:45:18,561 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:45:18,561 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
14:45:18,562 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
14:45:18,567 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
14:45:18,568 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
14:45:18,571 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:45:18,573 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:45:18,573 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
14:45:18,585 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:45:18,585 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:45:18,591 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:45:18,591 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:45:18,591 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:45:18,591 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
14:45:18,592 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
14:45:18,601 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
14:45:18,602 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
14:45:18,605 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:45:18,607 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:45:18,607 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
14:45:18,678 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:45:18,678 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:45:18,683 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:45:18,684 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:45:18,684 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:45:18,684 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
14:45:18,684 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
14:45:18,689 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
14:45:18,690 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
14:45:18,692 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:45:18,694 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:45:18,694 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
14:45:18,735 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:45:18,735 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:45:18,747 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:45:18,747 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:45:18,747 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:45:18,747 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
14:45:18,748 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
14:45:18,768 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
14:45:18,769 INFO  [SoapUITestCaseRunner] running step [setBalance]
14:45:18,771 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:45:18,773 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:45:18,773 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
14:45:18,827 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:45:18,827 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:45:18,838 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:45:18,838 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:45:18,838 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:45:18,839 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
14:45:18,839 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
14:45:18,848 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
14:45:18,849 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
14:45:18,851 INFO  [SoapUITestCaseRunner] running step [finish_successful]
14:45:18,921 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK
14:45:18,922 INFO  [SoapUITestCaseRunner] Finished running SoapUI testcase [createTestSubscribers], time taken: 2763ms, status: FINISHED
14:45:18,923 INFO  [SoapUITestCaseRunner] TestCase [createTestSubscribers] finished with status [FINISHED] in 2763ms</msg>
<status status="PASS" endtime="20151202 14:45:18.943" starttime="20151202 14:45:13.689"></status>
</kw>
<msg timestamp="20151202 14:45:18.951" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:18.953" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 14:45:18.947" starttime="20151202 14:45:13.688"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:45:18.994" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20151202 14:45:18.993" starttime="20151202 14:45:18.985"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:19.005" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:45:19.002" starttime="20151202 14:45:18.997"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:19.011" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:45:19.010" starttime="20151202 14:45:19.008"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:45:19.018" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:45:19.024" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20151202 14:45:19.025" starttime="20151202 14:45:19.015"></status>
</kw>
<msg timestamp="20151202 14:45:19.026" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:19.027" level="INFO">${return_log_entry} = 2015-12-02 14:45:18,921 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:45:19.026" starttime="20151202 14:45:19.012"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:19.037" starttime="20151202 14:45:19.035"></status>
</kw>
<msg timestamp="20151202 14:45:19.039" level="INFO">${return_log_entry} = 2015-12-02 14:45:18,921 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:45:19.038" starttime="20151202 14:45:19.028"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:19.048" starttime="20151202 14:45:19.046"></status>
</kw>
<msg timestamp="20151202 14:45:19.050" level="INFO">${return_log_entry} = 2015-12-02 14:45:18,921 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:45:19.049" starttime="20151202 14:45:19.040"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:19.108" starttime="20151202 14:45:19.099"></status>
</kw>
<msg timestamp="20151202 14:45:19.111" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:45:19.110" starttime="20151202 14:45:19.051"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:19.136" starttime="20151202 14:45:19.132"></status>
</kw>
<msg timestamp="20151202 14:45:19.140" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:45:19.138" starttime="20151202 14:45:19.114"></status>
</kw>
<msg timestamp="20151202 14:45:19.146" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:45:19.143" starttime="20151202 14:45:18.959"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:19.176" starttime="20151202 14:45:19.172"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:19.183" starttime="20151202 14:45:19.179"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:19.189" starttime="20151202 14:45:19.185"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 14:45:19.221" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 14:45:19.223" starttime="20151202 14:45:19.207"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:19.225" starttime="20151202 14:45:19.202"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:19.227" starttime="20151202 14:45:19.192"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:19.229" starttime="20151202 14:45:19.150"></status>
</kw>
<msg timestamp="20151202 14:45:19.235" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20151202 14:45:19.233" starttime="20151202 14:45:13.475"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20151202 14:45:19.243" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 14:45:19.245" starttime="20151202 14:45:19.238"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:45:19.251" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20151202 14:45:19.253" starttime="20151202 14:45:19.247"></status>
</kw>
<kw type="kw" name="${calling_int} = BuiltIn.Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
</arguments>
<msg timestamp="20151202 14:45:19.260" level="INFO">Argument types are:
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20151202 14:45:19.263" level="INFO">${calling_int} = 43667725500</msg>
<status status="PASS" endtime="20151202 14:45:19.262" starttime="20151202 14:45:19.255"></status>
</kw>
<kw type="kw" name="${called_party} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${calling_int}+1</arg>
</arguments>
<msg timestamp="20151202 14:45:19.276" level="INFO">${called_party} = 43667725501</msg>
<status status="PASS" endtime="20151202 14:45:19.274" starttime="20151202 14:45:19.266"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC 1s *******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:19.281" starttime="20151202 14:45:19.278"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC 1s">
<doc>Runs a standard MOC 1s session</doc>
<arguments>
<arg>${TESTSUBCRIBERS PP IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
<arg>${called_party}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc1s</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20151202 14:45:19.359" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv</msg>
<status status="PASS" endtime="20151202 14:45:19.358" starttime="20151202 14:45:19.353"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20151202 14:45:19.366" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv</msg>
<status status="PASS" endtime="20151202 14:45:19.365" starttime="20151202 14:45:19.361"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20151202 14:45:19.373" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini</msg>
<status status="PASS" endtime="20151202 14:45:19.372" starttime="20151202 14:45:19.368"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20151202 14:45:19.380" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc1s.cgs</msg>
<status status="PASS" endtime="20151202 14:45:19.379" starttime="20151202 14:45:19.375"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:19.384" starttime="20151202 14:45:19.382"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20151202 14:45:19.389" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:45:19.390" starttime="20151202 14:45:19.385"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:19.392" starttime="20151202 14:45:19.391"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20151202 14:45:19.396" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:45:19.397" starttime="20151202 14:45:19.393"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20151202 14:45:19.401" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:45:19.402" starttime="20151202 14:45:19.398"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:19.405" starttime="20151202 14:45:19.403"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20151202 14:45:19.408" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:45:19.409" starttime="20151202 14:45:19.406"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20151202 14:45:19.415" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:45:19.415" starttime="20151202 14:45:19.410"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:19.418" starttime="20151202 14:45:19.416"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20151202 14:45:19.430" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc1s.cgs /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20151202 14:45:24.554" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151202 14:45:24.551" starttime="20151202 14:45:19.419"></status>
</kw>
<msg timestamp="20151202 14:45:24.559" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151202 14:45:24.557" starttime="20151202 14:45:19.324"></status>
</kw>
<msg timestamp="20151202 14:45:24.564" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151202 14:45:24.562" starttime="20151202 14:45:19.287"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:45:24.571" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20151202 14:45:24.573" starttime="20151202 14:45:24.567"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20151202 14:45:24.581" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 14:45:24.583" starttime="20151202 14:45:24.576"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:24.588" starttime="20151202 14:45:24.585"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 14:45:24.644" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:45:24.646" starttime="20151202 14:45:24.639"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:24.648" starttime="20151202 14:45:24.635"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 14:45:24.659" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:45:24.661" starttime="20151202 14:45:24.654"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:24.663" starttime="20151202 14:45:24.650"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 14:45:24.674" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:45:24.675" starttime="20151202 14:45:24.669"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:24.677" starttime="20151202 14:45:24.665"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:24.679" starttime="20151202 14:45:24.619"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 14:45:24.687" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 14:45:24.688" starttime="20151202 14:45:24.681"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:24.695" starttime="20151202 14:45:24.690"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:24.702" starttime="20151202 14:45:24.697"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:24.708" starttime="20151202 14:45:24.704"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:24.714" starttime="20151202 14:45:24.711"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:24.719" starttime="20151202 14:45:24.716"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:24.726" starttime="20151202 14:45:24.722"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 14:45:24.735" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725500']</msg>
<msg timestamp="20151202 14:45:25.119" level="INFO">14:45:25,111 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
14:45:25,112 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
14:45:25,113 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166226
14:45:25,113 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500
14:45:25,114 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
14:45:25,115 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004
14:45:25,116 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID
14:45:25,116 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20151202 14:45:25.121" starttime="20151202 14:45:24.732"></status>
</kw>
<msg timestamp="20151202 14:45:25.126" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:25.127" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 14:45:25.123" starttime="20151202 14:45:24.728"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:45:25.144" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20151202 14:45:25.143" starttime="20151202 14:45:25.140"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.147" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:45:25.146" starttime="20151202 14:45:25.145"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.150" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:45:25.150" starttime="20151202 14:45:25.148"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.156" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:45:25.160" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 14:45:25.161" starttime="20151202 14:45:25.153"></status>
</kw>
<msg timestamp="20151202 14:45:25.162" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:25.163" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,111 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:45:25.162" starttime="20151202 14:45:25.151"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.171" starttime="20151202 14:45:25.169"></status>
</kw>
<msg timestamp="20151202 14:45:25.172" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,111 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:45:25.172" starttime="20151202 14:45:25.164"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.180" starttime="20151202 14:45:25.178"></status>
</kw>
<msg timestamp="20151202 14:45:25.181" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,111 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:45:25.181" starttime="20151202 14:45:25.173"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.189" starttime="20151202 14:45:25.187"></status>
</kw>
<msg timestamp="20151202 14:45:25.191" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:45:25.190" starttime="20151202 14:45:25.182"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.201" starttime="20151202 14:45:25.199"></status>
</kw>
<msg timestamp="20151202 14:45:25.202" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:45:25.202" starttime="20151202 14:45:25.192"></status>
</kw>
<msg timestamp="20151202 14:45:25.204" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:45:25.204" starttime="20151202 14:45:25.131"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:45:25.216" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20151202 14:45:25.216" starttime="20151202 14:45:25.214"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.220" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:45:25.219" starttime="20151202 14:45:25.217"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.223" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:45:25.222" starttime="20151202 14:45:25.221"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.228" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:45:25.233" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 14:45:25.234" starttime="20151202 14:45:25.226"></status>
</kw>
<msg timestamp="20151202 14:45:25.235" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:25.235" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,112 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 14:45:25.234" starttime="20151202 14:45:25.224"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.243" starttime="20151202 14:45:25.241"></status>
</kw>
<msg timestamp="20151202 14:45:25.244" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,112 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 14:45:25.244" starttime="20151202 14:45:25.237"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.252" starttime="20151202 14:45:25.250"></status>
</kw>
<msg timestamp="20151202 14:45:25.253" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,112 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 14:45:25.253" starttime="20151202 14:45:25.246"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.262" starttime="20151202 14:45:25.260"></status>
</kw>
<msg timestamp="20151202 14:45:25.263" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151202 14:45:25.263" starttime="20151202 14:45:25.254"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.273" starttime="20151202 14:45:25.272"></status>
</kw>
<msg timestamp="20151202 14:45:25.275" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151202 14:45:25.274" starttime="20151202 14:45:25.264"></status>
</kw>
<msg timestamp="20151202 14:45:25.277" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20151202 14:45:25.276" starttime="20151202 14:45:25.206"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:45:25.289" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20151202 14:45:25.288" starttime="20151202 14:45:25.286"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.292" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:45:25.292" starttime="20151202 14:45:25.290"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.295" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:45:25.295" starttime="20151202 14:45:25.293"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.301" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:45:25.305" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 14:45:25.306" starttime="20151202 14:45:25.298"></status>
</kw>
<msg timestamp="20151202 14:45:25.307" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:25.308" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,113 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 14:45:25.307" starttime="20151202 14:45:25.297"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.315" starttime="20151202 14:45:25.313"></status>
</kw>
<msg timestamp="20151202 14:45:25.317" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,113 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 14:45:25.316" starttime="20151202 14:45:25.309"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.324" starttime="20151202 14:45:25.322"></status>
</kw>
<msg timestamp="20151202 14:45:25.326" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,113 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 14:45:25.325" starttime="20151202 14:45:25.318"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.334" starttime="20151202 14:45:25.331"></status>
</kw>
<msg timestamp="20151202 14:45:25.335" level="INFO">${resultCode} = 232201667725500</msg>
<status status="PASS" endtime="20151202 14:45:25.334" starttime="20151202 14:45:25.327"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.345" starttime="20151202 14:45:25.343"></status>
</kw>
<msg timestamp="20151202 14:45:25.346" level="INFO">${resultCode} = 232201667725500</msg>
<status status="PASS" endtime="20151202 14:45:25.346" starttime="20151202 14:45:25.336"></status>
</kw>
<msg timestamp="20151202 14:45:25.348" level="INFO">${imsi} = 232201667725500</msg>
<status status="PASS" endtime="20151202 14:45:25.348" starttime="20151202 14:45:25.278"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:45:25.360" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20151202 14:45:25.360" starttime="20151202 14:45:25.357"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.364" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:45:25.363" starttime="20151202 14:45:25.361"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.367" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:45:25.366" starttime="20151202 14:45:25.365"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.372" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:45:25.376" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 14:45:25.377" starttime="20151202 14:45:25.370"></status>
</kw>
<msg timestamp="20151202 14:45:25.379" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:25.379" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,113 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166226</msg>
<status status="PASS" endtime="20151202 14:45:25.378" starttime="20151202 14:45:25.368"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.387" starttime="20151202 14:45:25.385"></status>
</kw>
<msg timestamp="20151202 14:45:25.388" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,113 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166226</msg>
<status status="PASS" endtime="20151202 14:45:25.388" starttime="20151202 14:45:25.380"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.396" starttime="20151202 14:45:25.394"></status>
</kw>
<msg timestamp="20151202 14:45:25.397" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,113 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166226</msg>
<status status="PASS" endtime="20151202 14:45:25.397" starttime="20151202 14:45:25.389"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.444" starttime="20151202 14:45:25.437"></status>
</kw>
<msg timestamp="20151202 14:45:25.447" level="INFO">${resultCode} = 166226</msg>
<status status="PASS" endtime="20151202 14:45:25.446" starttime="20151202 14:45:25.398"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.471" starttime="20151202 14:45:25.467"></status>
</kw>
<msg timestamp="20151202 14:45:25.474" level="INFO">${resultCode} = 166226</msg>
<status status="PASS" endtime="20151202 14:45:25.473" starttime="20151202 14:45:25.449"></status>
</kw>
<msg timestamp="20151202 14:45:25.478" level="INFO">${id} = 166226</msg>
<status status="PASS" endtime="20151202 14:45:25.477" starttime="20151202 14:45:25.350"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:45:25.505" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20151202 14:45:25.503" starttime="20151202 14:45:25.498"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.513" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:45:25.512" starttime="20151202 14:45:25.508"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.520" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:45:25.519" starttime="20151202 14:45:25.515"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.531" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:45:25.541" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 14:45:25.542" starttime="20151202 14:45:25.526"></status>
</kw>
<msg timestamp="20151202 14:45:25.545" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:25.546" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,114 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 14:45:25.544" starttime="20151202 14:45:25.522"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.563" starttime="20151202 14:45:25.559"></status>
</kw>
<msg timestamp="20151202 14:45:25.566" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,114 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 14:45:25.564" starttime="20151202 14:45:25.549"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.582" starttime="20151202 14:45:25.578"></status>
</kw>
<msg timestamp="20151202 14:45:25.584" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,114 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 14:45:25.583" starttime="20151202 14:45:25.568"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.602" starttime="20151202 14:45:25.597"></status>
</kw>
<msg timestamp="20151202 14:45:25.605" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151202 14:45:25.604" starttime="20151202 14:45:25.587"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.626" starttime="20151202 14:45:25.623"></status>
</kw>
<msg timestamp="20151202 14:45:25.629" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151202 14:45:25.628" starttime="20151202 14:45:25.607"></status>
</kw>
<msg timestamp="20151202 14:45:25.633" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20151202 14:45:25.632" starttime="20151202 14:45:25.483"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:45:25.644" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20151202 14:45:25.644" starttime="20151202 14:45:25.642"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.648" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:45:25.647" starttime="20151202 14:45:25.645"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.651" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:45:25.650" starttime="20151202 14:45:25.649"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.656" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:45:25.660" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 14:45:25.661" starttime="20151202 14:45:25.654"></status>
</kw>
<msg timestamp="20151202 14:45:25.662" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:25.663" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,115 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 14:45:25.662" starttime="20151202 14:45:25.652"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.672" starttime="20151202 14:45:25.670"></status>
</kw>
<msg timestamp="20151202 14:45:25.673" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,115 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 14:45:25.672" starttime="20151202 14:45:25.664"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.680" starttime="20151202 14:45:25.678"></status>
</kw>
<msg timestamp="20151202 14:45:25.681" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,115 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 14:45:25.681" starttime="20151202 14:45:25.674"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.689" starttime="20151202 14:45:25.687"></status>
</kw>
<msg timestamp="20151202 14:45:25.691" level="INFO">${resultCode} = 101004</msg>
<status status="PASS" endtime="20151202 14:45:25.690" starttime="20151202 14:45:25.683"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.700" starttime="20151202 14:45:25.698"></status>
</kw>
<msg timestamp="20151202 14:45:25.701" level="INFO">${resultCode} = 101004</msg>
<status status="PASS" endtime="20151202 14:45:25.701" starttime="20151202 14:45:25.692"></status>
</kw>
<msg timestamp="20151202 14:45:25.703" level="INFO">${tariffId} = 101004</msg>
<status status="PASS" endtime="20151202 14:45:25.703" starttime="20151202 14:45:25.635"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:45:25.714" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20151202 14:45:25.713" starttime="20151202 14:45:25.711"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.717" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:45:25.716" starttime="20151202 14:45:25.715"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.720" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:45:25.719" starttime="20151202 14:45:25.718"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.725" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:45:25.729" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 14:45:25.730" starttime="20151202 14:45:25.723"></status>
</kw>
<msg timestamp="20151202 14:45:25.731" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:25.731" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,116 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 14:45:25.730" starttime="20151202 14:45:25.721"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.739" starttime="20151202 14:45:25.737"></status>
</kw>
<msg timestamp="20151202 14:45:25.740" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,116 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 14:45:25.739" starttime="20151202 14:45:25.732"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.747" starttime="20151202 14:45:25.745"></status>
</kw>
<msg timestamp="20151202 14:45:25.748" level="INFO">${return_log_entry} = 2015-12-02 14:45:25,116 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 14:45:25.748" starttime="20151202 14:45:25.741"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.756" starttime="20151202 14:45:25.754"></status>
</kw>
<msg timestamp="20151202 14:45:25.758" level="INFO">${resultCode} = POSTPAID</msg>
<status status="PASS" endtime="20151202 14:45:25.757" starttime="20151202 14:45:25.749"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.767" starttime="20151202 14:45:25.765"></status>
</kw>
<msg timestamp="20151202 14:45:25.768" level="INFO">${resultCode} = POSTPAID</msg>
<status status="PASS" endtime="20151202 14:45:25.768" starttime="20151202 14:45:25.759"></status>
</kw>
<msg timestamp="20151202 14:45:25.770" level="INFO">${type} = POSTPAID</msg>
<status status="PASS" endtime="20151202 14:45:25.770" starttime="20151202 14:45:25.705"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.780" starttime="20151202 14:45:25.778"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.782" starttime="20151202 14:45:25.780"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.784" starttime="20151202 14:45:25.783"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 14:45:25.796" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 14:45:25.797" starttime="20151202 14:45:25.791"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:25.798" starttime="20151202 14:45:25.789"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:25.799" starttime="20151202 14:45:25.785"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:25.799" starttime="20151202 14:45:25.772"></status>
</kw>
<msg timestamp="20151202 14:45:25.803" level="INFO">${rc} = OK</msg>
<msg timestamp="20151202 14:45:25.804" level="INFO">${provId} = 1</msg>
<msg timestamp="20151202 14:45:25.804" level="INFO">${imsi} = 232201667725500</msg>
<msg timestamp="20151202 14:45:25.805" level="INFO">${id} = 166226</msg>
<msg timestamp="20151202 14:45:25.805" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20151202 14:45:25.806" level="INFO">${tariffId} = 101004</msg>
<msg timestamp="20151202 14:45:25.806" level="INFO">${type} = POSTPAID</msg>
<status status="PASS" endtime="20151202 14:45:25.802" starttime="20151202 14:45:24.595"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.828" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:45:25.829" starttime="20151202 14:45:25.825"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:25.830" starttime="20151202 14:45:25.823"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.837" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:45:25.838" starttime="20151202 14:45:25.835"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:25.839" starttime="20151202 14:45:25.833"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.843" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:45:25.844" starttime="20151202 14:45:25.841"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:25.845" starttime="20151202 14:45:25.839"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:25.845" starttime="20151202 14:45:25.818"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 14:45:25.849" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 14:45:25.849" starttime="20151202 14:45:25.846"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.852" starttime="20151202 14:45:25.850"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.855" starttime="20151202 14:45:25.853"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.858" starttime="20151202 14:45:25.856"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.860" starttime="20151202 14:45:25.859"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.862" starttime="20151202 14:45:25.861"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:25.865" starttime="20151202 14:45:25.863"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 14:45:25.869" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725500', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=166226']</msg>
<msg timestamp="20151202 14:45:26.070" level="INFO">14:45:26,066 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
14:45:26,067 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166227
14:45:26,067 INFO  [log] LowLevelOps.getMainAccount.output.balance=75000
14:45:26,068 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
14:45:26,068 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 14:45:26.071" starttime="20151202 14:45:25.868"></status>
</kw>
<msg timestamp="20151202 14:45:26.074" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:26.075" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 14:45:26.073" starttime="20151202 14:45:25.866"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:45:26.088" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20151202 14:45:26.087" starttime="20151202 14:45:26.084"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.091" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:45:26.091" starttime="20151202 14:45:26.089"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.095" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:45:26.094" starttime="20151202 14:45:26.092"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.101" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:45:26.105" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 14:45:26.106" starttime="20151202 14:45:26.098"></status>
</kw>
<msg timestamp="20151202 14:45:26.108" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:26.108" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,066 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:45:26.107" starttime="20151202 14:45:26.096"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.117" starttime="20151202 14:45:26.115"></status>
</kw>
<msg timestamp="20151202 14:45:26.119" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,066 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:45:26.118" starttime="20151202 14:45:26.110"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.127" starttime="20151202 14:45:26.125"></status>
</kw>
<msg timestamp="20151202 14:45:26.128" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,066 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:45:26.128" starttime="20151202 14:45:26.120"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.137" starttime="20151202 14:45:26.134"></status>
</kw>
<msg timestamp="20151202 14:45:26.138" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:45:26.137" starttime="20151202 14:45:26.129"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.147" starttime="20151202 14:45:26.146"></status>
</kw>
<msg timestamp="20151202 14:45:26.148" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:45:26.148" starttime="20151202 14:45:26.139"></status>
</kw>
<msg timestamp="20151202 14:45:26.150" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:45:26.150" starttime="20151202 14:45:26.077"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:45:26.161" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20151202 14:45:26.161" starttime="20151202 14:45:26.159"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.164" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:45:26.164" starttime="20151202 14:45:26.162"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.167" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:45:26.167" starttime="20151202 14:45:26.165"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.172" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:45:26.176" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 14:45:26.176" starttime="20151202 14:45:26.170"></status>
</kw>
<msg timestamp="20151202 14:45:26.178" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:26.178" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,067 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166227</msg>
<status status="PASS" endtime="20151202 14:45:26.177" starttime="20151202 14:45:26.168"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.185" starttime="20151202 14:45:26.184"></status>
</kw>
<msg timestamp="20151202 14:45:26.187" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,067 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166227</msg>
<status status="PASS" endtime="20151202 14:45:26.186" starttime="20151202 14:45:26.179"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.193" starttime="20151202 14:45:26.192"></status>
</kw>
<msg timestamp="20151202 14:45:26.195" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,067 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166227</msg>
<status status="PASS" endtime="20151202 14:45:26.194" starttime="20151202 14:45:26.188"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.202" starttime="20151202 14:45:26.200"></status>
</kw>
<msg timestamp="20151202 14:45:26.203" level="INFO">${resultCode} = 166227</msg>
<status status="PASS" endtime="20151202 14:45:26.203" starttime="20151202 14:45:26.196"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.213" starttime="20151202 14:45:26.211"></status>
</kw>
<msg timestamp="20151202 14:45:26.214" level="INFO">${resultCode} = 166227</msg>
<status status="PASS" endtime="20151202 14:45:26.213" starttime="20151202 14:45:26.204"></status>
</kw>
<msg timestamp="20151202 14:45:26.215" level="INFO">${accountId} = 166227</msg>
<status status="PASS" endtime="20151202 14:45:26.215" starttime="20151202 14:45:26.152"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:45:26.226" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20151202 14:45:26.226" starttime="20151202 14:45:26.224"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.229" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:45:26.229" starttime="20151202 14:45:26.227"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.232" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:45:26.232" starttime="20151202 14:45:26.230"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.271" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:45:26.276" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 14:45:26.278" starttime="20151202 14:45:26.235"></status>
</kw>
<msg timestamp="20151202 14:45:26.280" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:26.280" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,067 INFO  [log] LowLevelOps.getMainAccount.output.balance=75000</msg>
<status status="PASS" endtime="20151202 14:45:26.279" starttime="20151202 14:45:26.233"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.289" starttime="20151202 14:45:26.287"></status>
</kw>
<msg timestamp="20151202 14:45:26.290" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,067 INFO  [log] LowLevelOps.getMainAccount.output.balance=75000</msg>
<status status="PASS" endtime="20151202 14:45:26.290" starttime="20151202 14:45:26.281"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.297" starttime="20151202 14:45:26.295"></status>
</kw>
<msg timestamp="20151202 14:45:26.298" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,067 INFO  [log] LowLevelOps.getMainAccount.output.balance=75000</msg>
<status status="PASS" endtime="20151202 14:45:26.298" starttime="20151202 14:45:26.291"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.306" starttime="20151202 14:45:26.304"></status>
</kw>
<msg timestamp="20151202 14:45:26.307" level="INFO">${resultCode} = 75000</msg>
<status status="PASS" endtime="20151202 14:45:26.307" starttime="20151202 14:45:26.299"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.317" starttime="20151202 14:45:26.315"></status>
</kw>
<msg timestamp="20151202 14:45:26.318" level="INFO">${resultCode} = 75000</msg>
<status status="PASS" endtime="20151202 14:45:26.318" starttime="20151202 14:45:26.308"></status>
</kw>
<msg timestamp="20151202 14:45:26.320" level="INFO">${balance} = 75000</msg>
<status status="PASS" endtime="20151202 14:45:26.320" starttime="20151202 14:45:26.217"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:45:26.330" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20151202 14:45:26.330" starttime="20151202 14:45:26.328"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.333" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:45:26.333" starttime="20151202 14:45:26.331"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.336" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:45:26.336" starttime="20151202 14:45:26.334"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.341" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:45:26.345" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 14:45:26.346" starttime="20151202 14:45:26.339"></status>
</kw>
<msg timestamp="20151202 14:45:26.347" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:26.348" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,068 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 14:45:26.347" starttime="20151202 14:45:26.337"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.354" starttime="20151202 14:45:26.353"></status>
</kw>
<msg timestamp="20151202 14:45:26.356" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,068 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 14:45:26.355" starttime="20151202 14:45:26.349"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.363" starttime="20151202 14:45:26.361"></status>
</kw>
<msg timestamp="20151202 14:45:26.364" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,068 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 14:45:26.363" starttime="20151202 14:45:26.357"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.371" starttime="20151202 14:45:26.369"></status>
</kw>
<msg timestamp="20151202 14:45:26.372" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151202 14:45:26.372" starttime="20151202 14:45:26.365"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.382" starttime="20151202 14:45:26.380"></status>
</kw>
<msg timestamp="20151202 14:45:26.383" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151202 14:45:26.383" starttime="20151202 14:45:26.373"></status>
</kw>
<msg timestamp="20151202 14:45:26.385" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20151202 14:45:26.384" starttime="20151202 14:45:26.322"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:45:26.395" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20151202 14:45:26.394" starttime="20151202 14:45:26.392"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.398" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:45:26.397" starttime="20151202 14:45:26.396"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.401" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:45:26.401" starttime="20151202 14:45:26.399"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:45:26.406" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:45:26.410" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 14:45:26.411" starttime="20151202 14:45:26.404"></status>
</kw>
<msg timestamp="20151202 14:45:26.412" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:45:26.413" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,068 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 14:45:26.412" starttime="20151202 14:45:26.402"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.420" starttime="20151202 14:45:26.418"></status>
</kw>
<msg timestamp="20151202 14:45:26.421" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,068 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 14:45:26.420" starttime="20151202 14:45:26.414"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.428" starttime="20151202 14:45:26.427"></status>
</kw>
<msg timestamp="20151202 14:45:26.430" level="INFO">${return_log_entry} = 2015-12-02 14:45:26,068 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 14:45:26.429" starttime="20151202 14:45:26.422"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.437" starttime="20151202 14:45:26.435"></status>
</kw>
<msg timestamp="20151202 14:45:26.438" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151202 14:45:26.438" starttime="20151202 14:45:26.431"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.448" starttime="20151202 14:45:26.446"></status>
</kw>
<msg timestamp="20151202 14:45:26.449" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151202 14:45:26.448" starttime="20151202 14:45:26.439"></status>
</kw>
<msg timestamp="20151202 14:45:26.450" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20151202 14:45:26.450" starttime="20151202 14:45:26.387"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.458" starttime="20151202 14:45:26.457"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.461" starttime="20151202 14:45:26.459"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.463" starttime="20151202 14:45:26.462"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 14:45:26.474" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 14:45:26.475" starttime="20151202 14:45:26.470"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:26.476" starttime="20151202 14:45:26.468"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:26.477" starttime="20151202 14:45:26.464"></status>
</kw>
<status status="PASS" endtime="20151202 14:45:26.478" starttime="20151202 14:45:26.452"></status>
</kw>
<msg timestamp="20151202 14:45:26.481" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20151202 14:45:26.481" level="INFO">${accId} = 166227</msg>
<msg timestamp="20151202 14:45:26.482" level="INFO">${bal} = 75000</msg>
<msg timestamp="20151202 14:45:26.482" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20151202 14:45:26.482" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20151202 14:45:26.480" starttime="20151202 14:45:25.809"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${target_bal}=</arg>
<arg>Evaluate</arg>
<arg>${INITIAL_BALANCE}-${TESTSUBCRIBERS DEFAULT SLICE COSTS}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.485" starttime="20151202 14:45:26.484"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Should Be Equal As Numbers</arg>
<arg>${target_bal}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<status status="PASS" endtime="20151202 14:45:26.488" starttime="20151202 14:45:26.486"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Balance after the call is: ${bal}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:45:26.490" level="INFO">Balance after the call is: 75000</msg>
<status status="PASS" endtime="20151202 14:45:26.491" starttime="20151202 14:45:26.489"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check OK!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:45:26.494" level="INFO">Account balance check OK!</msg>
<status status="PASS" endtime="20151202 14:45:26.495" starttime="20151202 14:45:26.493"></status>
</kw>
<doc>Test will make a POSTPAID MOC call, duration 1s.

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>POSTPAID_supported</tag>
</tags>
<status status="PASS" critical="yes" endtime="20151202 14:45:26.496" starttime="20151202 14:45:13.434"></status>
</test>
<doc>Testing the postpaid MOC call, duration is 1s - shorter than one slice (less than 60s)

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20151202 14:45:26.501" starttime="20151202 14:45:06.641"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" info="" doc="" combined="" fail="0" links="">matko.sanseovic</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">MOC_only</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">POSTPAID_supported</stat>
</tag>
<suite>
<stat pass="1" id="s1" fail="0" name="MOC POSTPAID ONNET-ShortDuration-robot-suite">MOC POSTPAID ONNET-ShortDuration-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
