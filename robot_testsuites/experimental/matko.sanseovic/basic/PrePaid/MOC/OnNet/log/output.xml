<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20160118 10:20:45.888">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet" id="s1" name="OnNet">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-Abandon" id="s1-s1" name="MOC PREPAID ONNET-Abandon">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-Abandon/MOC_PREPAID_ONNET-Abandon-robot-suite.txt" id="s1-s1-s1" name="MOC PREPAID ONNET-Abandon-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20160118 10:20:47.607" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:20:47.611" level="INFO">${date} = Mon Jan 18 10:20:47 CET 2016</msg>
<status status="PASS" endtime="20160118 10:20:47.610" starttime="20160118 10:20:47.595"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:20:47.615" level="INFO">Date and time: Mon Jan 18 10:20:47 CET 2016</msg>
<status status="PASS" endtime="20160118 10:20:47.616" starttime="20160118 10:20:47.613"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:20:47.621" level="INFO">Target IN machine: 10.105.119.135</msg>
<status status="PASS" endtime="20160118 10:20:47.622" starttime="20160118 10:20:47.618"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:47.695" starttime="20160118 10:20:47.692"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:47.892" starttime="20160118 10:20:47.709"></status>
</kw>
<msg timestamp="20160118 10:20:47.894" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20160118 10:20:47.893" starttime="20160118 10:20:47.696"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:20:47.905" level="INFO">Logging into '10.105.119.135:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:20:48.428" level="INFO">Read output: Last login: Mon Jan 18 09:18:38 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:20:48.430" starttime="20160118 10:20:47.902"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:48.432" starttime="20160118 10:20:47.896"></status>
</kw>
<msg timestamp="20160118 10:20:48.436" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20160118 10:20:48.435" starttime="20160118 10:20:47.678"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:20:48.444" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:20:48.443" starttime="20160118 10:20:48.437"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:20:48.447" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20160118 10:20:49.146" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:20:49.149" level="INFO">${output} = I-New MVNA TEMM - Core - Service 1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:20:49.148" starttime="20160118 10:20:48.445"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:49.156" starttime="20160118 10:20:49.153"></status>
</kw>
<msg timestamp="20160118 10:20:49.158" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:20:49.159" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:20:49.157" starttime="20160118 10:20:49.151"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:49.167" starttime="20160118 10:20:49.165"></status>
</kw>
<msg timestamp="20160118 10:20:49.168" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:20:49.168" starttime="20160118 10:20:49.160"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20160118 10:20:49.172" level="INFO">${version_r} =  1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:20:49.172" starttime="20160118 10:20:49.170"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:20:49.177" level="INFO">${version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:20:49.177" starttime="20160118 10:20:49.174"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:49.180" starttime="20160118 10:20:49.178"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:49.193" starttime="20160118 10:20:49.191"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:20:49.200" starttime="20160118 10:20:49.195"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:49.201" starttime="20160118 10:20:49.182"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:49.208" starttime="20160118 10:20:49.206"></status>
</kw>
<msg timestamp="20160118 10:20:49.210" level="INFO">${ver} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:20:49.209" starttime="20160118 10:20:49.202"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:49.213" starttime="20160118 10:20:49.211"></status>
</kw>
<msg timestamp="20160118 10:20:49.215" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20160118 10:20:49.216" level="INFO">${in_version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:20:49.214" starttime="20160118 10:20:47.643"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:49.268" starttime="20160118 10:20:49.266"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:49.335" starttime="20160118 10:20:49.274"></status>
</kw>
<msg timestamp="20160118 10:20:49.338" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20160118 10:20:49.337" starttime="20160118 10:20:49.269"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:20:49.358" level="INFO">Logging into '10.105.119.171:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:20:49.793" level="INFO">Read output: Last login: Mon Jan 18 09:18:39 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:20:49.795" starttime="20160118 10:20:49.353"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:49.797" starttime="20160118 10:20:49.341"></status>
</kw>
<msg timestamp="20160118 10:20:49.802" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20160118 10:20:49.800" starttime="20160118 10:20:49.256"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:20:49.815" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:20:49.814" starttime="20160118 10:20:49.805"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:20:49.822" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20160118 10:20:50.235" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:20:50.240" level="INFO">${output} = I-New UMS MVNO - XDR - Server 6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:20:50.237" starttime="20160118 10:20:49.818"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:50.253" starttime="20160118 10:20:50.247"></status>
</kw>
<msg timestamp="20160118 10:20:50.256" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:20:50.258" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:20:50.255" starttime="20160118 10:20:50.242"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:50.274" starttime="20160118 10:20:50.271"></status>
</kw>
<msg timestamp="20160118 10:20:50.278" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:20:50.276" starttime="20160118 10:20:50.260"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20160118 10:20:50.286" level="INFO">${version_r} =  6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:20:50.285" starttime="20160118 10:20:50.280"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:20:50.294" level="INFO">${version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:20:50.293" starttime="20160118 10:20:50.289"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:50.300" starttime="20160118 10:20:50.297"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:50.324" starttime="20160118 10:20:50.320"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:20:50.332" starttime="20160118 10:20:50.327"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:50.335" starttime="20160118 10:20:50.303"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:50.352" starttime="20160118 10:20:50.348"></status>
</kw>
<msg timestamp="20160118 10:20:50.355" level="INFO">${ver} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:20:50.353" starttime="20160118 10:20:50.338"></status>
</kw>
<msg timestamp="20160118 10:20:50.360" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20160118 10:20:50.362" level="INFO">${xdr_version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:20:50.358" starttime="20160118 10:20:49.231"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:50.462" starttime="20160118 10:20:50.460"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:50.526" starttime="20160118 10:20:50.468"></status>
</kw>
<msg timestamp="20160118 10:20:50.529" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20160118 10:20:50.528" starttime="20160118 10:20:50.463"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:20:50.547" level="INFO">Logging into '10.105.119.125:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:20:51.106" level="INFO">Read output: Last login: Mon Jan 18 09:18:40 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@crce01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:20:51.108" starttime="20160118 10:20:50.543"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:51.109" starttime="20160118 10:20:50.532"></status>
</kw>
<msg timestamp="20160118 10:20:51.112" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20160118 10:20:51.111" starttime="20160118 10:20:50.442"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:20:51.118" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:20:51.118" starttime="20160118 10:20:51.113"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:20:51.122" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20160118 10:20:51.352" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:20:51.355" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.1.23.31100
Negret Rating &amp; Charging Engine 6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:20:51.354" starttime="20160118 10:20:51.119"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:51.369" starttime="20160118 10:20:51.363"></status>
</kw>
<msg timestamp="20160118 10:20:51.372" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:20:51.373" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:20:51.371" starttime="20160118 10:20:51.358"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:51.390" starttime="20160118 10:20:51.386"></status>
</kw>
<msg timestamp="20160118 10:20:51.393" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:20:51.391" starttime="20160118 10:20:51.376"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:20:51.400" level="INFO">${version_r} =  6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:20:51.399" starttime="20160118 10:20:51.395"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:20:51.409" level="INFO">${version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:20:51.408" starttime="20160118 10:20:51.403"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:51.414" starttime="20160118 10:20:51.411"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:51.437" starttime="20160118 10:20:51.433"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:20:51.443" starttime="20160118 10:20:51.440"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:51.447" starttime="20160118 10:20:51.417"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:51.463" starttime="20160118 10:20:51.459"></status>
</kw>
<msg timestamp="20160118 10:20:51.466" level="INFO">${ver} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:20:51.465" starttime="20160118 10:20:51.450"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:51.473" starttime="20160118 10:20:51.469"></status>
</kw>
<msg timestamp="20160118 10:20:51.478" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20160118 10:20:51.480" level="INFO">${crce_version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:20:51.476" starttime="20160118 10:20:50.393"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:51.578" starttime="20160118 10:20:51.574"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:51.647" starttime="20160118 10:20:51.591"></status>
</kw>
<msg timestamp="20160118 10:20:51.651" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20160118 10:20:51.649" starttime="20160118 10:20:51.580"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:20:51.668" level="INFO">Logging into '10.105.119.159:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:20:52.182" level="INFO">Read output: Last login: Mon Jan 18 09:18:41 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@ocs01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:20:52.184" starttime="20160118 10:20:51.664"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:52.186" starttime="20160118 10:20:51.653"></status>
</kw>
<msg timestamp="20160118 10:20:52.189" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20160118 10:20:52.188" starttime="20160118 10:20:51.554"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:20:52.195" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:20:52.195" starttime="20160118 10:20:52.190"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:20:52.198" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20160118 10:20:52.257" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:20:52.258" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:20:52.258" starttime="20160118 10:20:52.197"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.264" starttime="20160118 10:20:52.262"></status>
</kw>
<msg timestamp="20160118 10:20:52.266" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:20:52.266" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:20:52.265" starttime="20160118 10:20:52.260"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.279" starttime="20160118 10:20:52.278"></status>
</kw>
<msg timestamp="20160118 10:20:52.280" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:20:52.280" starttime="20160118 10:20:52.267"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:20:52.284" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:20:52.283" starttime="20160118 10:20:52.282"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:20:52.287" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:20:52.287" starttime="20160118 10:20:52.285"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.290" starttime="20160118 10:20:52.288"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.301" starttime="20160118 10:20:52.299"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.303" starttime="20160118 10:20:52.302"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:52.305" starttime="20160118 10:20:52.291"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.312" starttime="20160118 10:20:52.310"></status>
</kw>
<msg timestamp="20160118 10:20:52.313" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:20:52.313" starttime="20160118 10:20:52.306"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.316" starttime="20160118 10:20:52.314"></status>
</kw>
<msg timestamp="20160118 10:20:52.318" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20160118 10:20:52.319" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:20:52.317" starttime="20160118 10:20:51.508"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:20:52.322" level="INFO">IN state= OK version= 1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:20:52.323" starttime="20160118 10:20:52.320"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:20:52.326" level="INFO">XDR state= OK version= 6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:20:52.327" starttime="20160118 10:20:52.324"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:20:52.330" level="INFO">CRCE state= OK version= 6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:20:52.331" starttime="20160118 10:20:52.328"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:20:52.334" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:20:52.335" starttime="20160118 10:20:52.332"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20160118 10:20:52.338" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:20:52.339" starttime="20160118 10:20:52.336"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20160118 10:20:52.342" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:20:52.343" starttime="20160118 10:20:52.340"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20160118 10:20:52.346" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:20:52.346" starttime="20160118 10:20:52.344"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20160118 10:20:52.349" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:20:52.350" starttime="20160118 10:20:52.347"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.359" starttime="20160118 10:20:52.355"></status>
</kw>
<msg timestamp="20160118 10:20:52.360" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:20:52.360" starttime="20160118 10:20:52.351"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.364" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:20:52.364" starttime="20160118 10:20:52.361"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:52.365" starttime="20160118 10:20:47.585"></status>
</kw>
<test id="s1-s1-s1-t1" name="Run MOC Abandon Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.381" starttime="20160118 10:20:52.379"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<msg timestamp="20160118 10:20:52.384" level="INFO">${INITIAL_BALANCE} = 10000000</msg>
<status status="PASS" endtime="20160118 10:20:52.383" starttime="20160118 10:20:52.382"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>1</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.399" level="INFO">msg=crce_host=10.105.119.125</msg>
<status status="PASS" endtime="20160118 10:20:52.400" starttime="20160118 10:20:52.397"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.402" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20160118 10:20:52.403" starttime="20160118 10:20:52.401"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.405" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20160118 10:20:52.406" starttime="20160118 10:20:52.404"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.409" level="INFO">msg=amount=1</msg>
<status status="PASS" endtime="20160118 10:20:52.409" starttime="20160118 10:20:52.407"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.412" level="INFO">msg=imsiRangeStart=334030880001000</msg>
<status status="PASS" endtime="20160118 10:20:52.413" starttime="20160118 10:20:52.410"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.415" level="INFO">msg=msisdnRangeStart=525516001000</msg>
<status status="PASS" endtime="20160118 10:20:52.416" starttime="20160118 10:20:52.413"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.418" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:20:52.419" starttime="20160118 10:20:52.417"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.421" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20160118 10:20:52.422" starttime="20160118 10:20:52.420"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.425" level="INFO">msg=tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:20:52.425" starttime="20160118 10:20:52.423"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.428" level="INFO">msg=balance=10000000</msg>
<status status="PASS" endtime="20160118 10:20:52.428" starttime="20160118 10:20:52.426"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.445" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:20:52.446" starttime="20160118 10:20:52.442"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:52.447" starttime="20160118 10:20:52.441"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.452" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:20:52.452" starttime="20160118 10:20:52.450"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:52.453" starttime="20160118 10:20:52.448"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.459" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:20:52.459" starttime="20160118 10:20:52.456"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:52.460" starttime="20160118 10:20:52.454"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:52.461" starttime="20160118 10:20:52.430"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:20:52.465" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:20:52.466" starttime="20160118 10:20:52.462"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.469" starttime="20160118 10:20:52.467"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.471" starttime="20160118 10:20:52.469"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.474" starttime="20160118 10:20:52.472"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.477" starttime="20160118 10:20:52.475"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.479" starttime="20160118 10:20:52.478"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.482" starttime="20160118 10:20:52.480"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.485" starttime="20160118 10:20:52.483"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.488" starttime="20160118 10:20:52.486"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.490" starttime="20160118 10:20:52.489"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.493" starttime="20160118 10:20:52.491"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.509" starttime="20160118 10:20:52.494"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:52.514" starttime="20160118 10:20:52.511"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:20:52.518" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000']</msg>
<msg timestamp="20160118 10:20:57.004" level="INFO">10:20:52,685 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/ext] for external libraries
10:20:52,686 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
10:20:54,202 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/crce-subscriberadmin/robot_crce_bridge-soapui-project.xml]
10:20:54,212 INFO  [SoapUITestCaseRunner] Setting project property [crceHost] to [10.105.119.125]
10:20:54,212 INFO  [SoapUITestCaseRunner] Setting project property [crcePort] to [8080]
10:20:54,212 INFO  [SoapUITestCaseRunner] Setting project property [crceWebservicesBasePath] to [/inew-mvno-crce-webservices/]
10:20:54,212 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.amount] to [1]
10:20:54,212 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.imsiRangeStart] to [334030880001000]
10:20:54,212 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.msisdnRangeStart] to [525516001000]
10:20:54,213 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.type] to [PREPAID]
10:20:54,213 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.languageid] to [1]
10:20:54,213 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.tariffId] to [101001]
10:20:54,213 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.balance] to [10000000]
10:20:54,213 INFO  [SoapUITestCaseRunner] Running SoapUI tests in project [Robotframework_CRCE-Bridge]
10:20:54,213 INFO  [SoapUITestCaseRunner] Running TestCase [createTestSubscribers]
10:20:54,222 INFO  [SoapUITestCaseRunner] Running SoapUI testcase [createTestSubscribers]
10:20:54,228 INFO  [SoapUITestCaseRunner] running step [init_repeat_counter]
10:20:54,640 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
10:20:54,702 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
10:20:54,884 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:20:54,884 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
10:20:55,142 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:20:55,149 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:20:55,332 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:20:55,333 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:20:55,333 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:20:55,333 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
10:20:55,396 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
10:20:55,672 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
10:20:55,699 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
10:20:55,700 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:20:55,702 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:20:55,702 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
10:20:55,876 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:20:55,876 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:20:55,884 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:20:55,884 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:20:55,884 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:20:55,884 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
10:20:55,955 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
10:20:55,961 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
10:20:56,009 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
10:20:56,013 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:20:56,015 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:20:56,015 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
10:20:56,118 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:20:56,118 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:20:56,124 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:20:56,124 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:20:56,124 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:20:56,124 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
10:20:56,226 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
10:20:56,237 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
10:20:56,280 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
10:20:56,283 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:20:56,285 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:20:56,285 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
10:20:56,361 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:20:56,361 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:20:56,368 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:20:56,368 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:20:56,368 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:20:56,368 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
10:20:56,436 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
10:20:56,442 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
10:20:56,483 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
10:20:56,486 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:20:56,488 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:20:56,488 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
10:20:56,576 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:20:56,576 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:20:56,589 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:20:56,590 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:20:56,590 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:20:56,590 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
10:20:56,655 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
10:20:56,676 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
10:20:56,713 INFO  [SoapUITestCaseRunner] running step [setBalance]
10:20:56,715 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
10:20:56,716 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
10:20:56,716 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
10:20:56,811 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
10:20:56,812 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
10:20:56,817 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
10:20:56,817 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
10:20:56,817 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
10:20:56,817 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
10:20:56,868 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
10:20:56,878 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
10:20:56,920 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
10:20:56,967 INFO  [SoapUITestCaseRunner] running step [finish_successful]
10:20:57,000 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK
10:20:57,001 INFO  [SoapUITestCaseRunner] Finished running SoapUI testcase [createTestSubscribers], time taken: 2742ms, status: FINISHED
10:20:57,001 INFO  [SoapUITestCaseRunner] TestCase [createTestSubscribers] finished with status [FINISHED] in 2742ms</msg>
<status status="PASS" endtime="20160118 10:20:57.009" starttime="20160118 10:20:52.516"></status>
</kw>
<msg timestamp="20160118 10:20:57.012" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:20:57.013" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:20:57.010" starttime="20160118 10:20:52.515"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:20:57.029" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:20:57.028" starttime="20160118 10:20:57.025"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:20:57.032" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:20:57.032" starttime="20160118 10:20:57.030"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:20:57.036" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:20:57.036" starttime="20160118 10:20:57.034"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:20:57.042" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:20:57.048" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20160118 10:20:57.049" starttime="20160118 10:20:57.040"></status>
</kw>
<msg timestamp="20160118 10:20:57.050" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:20:57.051" level="INFO">${return_log_entry} = 2016-01-18 10:20:57,000 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:20:57.049" starttime="20160118 10:20:57.038"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:57.060" starttime="20160118 10:20:57.058"></status>
</kw>
<msg timestamp="20160118 10:20:57.062" level="INFO">${return_log_entry} = 2016-01-18 10:20:57,000 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:20:57.061" starttime="20160118 10:20:57.052"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:57.070" starttime="20160118 10:20:57.068"></status>
</kw>
<msg timestamp="20160118 10:20:57.072" level="INFO">${return_log_entry} = 2016-01-18 10:20:57,000 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:20:57.071" starttime="20160118 10:20:57.063"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:57.081" starttime="20160118 10:20:57.078"></status>
</kw>
<msg timestamp="20160118 10:20:57.083" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:20:57.082" starttime="20160118 10:20:57.073"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:57.094" starttime="20160118 10:20:57.092"></status>
</kw>
<msg timestamp="20160118 10:20:57.095" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:20:57.095" starttime="20160118 10:20:57.084"></status>
</kw>
<msg timestamp="20160118 10:20:57.097" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:20:57.097" starttime="20160118 10:20:57.015"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:57.110" starttime="20160118 10:20:57.108"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:57.113" starttime="20160118 10:20:57.111"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:57.116" starttime="20160118 10:20:57.114"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:20:57.130" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:20:57.131" starttime="20160118 10:20:57.124"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:57.132" starttime="20160118 10:20:57.122"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:57.132" starttime="20160118 10:20:57.117"></status>
</kw>
<status status="PASS" endtime="20160118 10:20:57.133" starttime="20160118 10:20:57.099"></status>
</kw>
<msg timestamp="20160118 10:20:57.136" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20160118 10:20:57.135" starttime="20160118 10:20:52.386"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20160118 10:20:57.139" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:20:57.139" starttime="20160118 10:20:57.137"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:20:57.142" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20160118 10:20:57.143" starttime="20160118 10:20:57.141"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC Abandon *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:57.145" starttime="20160118 10:20:57.144"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the MOC abandon call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:20:57.148" level="INFO">Running the MOC abandon call...</msg>
<status status="PASS" endtime="20160118 10:20:57.149" starttime="20160118 10:20:57.147"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC Abandon">
<doc>Runs an abandoned MOC session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc-abandon</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20160118 10:20:57.184" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-subscribers.csv</msg>
<status status="PASS" endtime="20160118 10:20:57.183" starttime="20160118 10:20:57.181"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20160118 10:20:57.188" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-fleXml.csv</msg>
<status status="PASS" endtime="20160118 10:20:57.187" starttime="20160118 10:20:57.185"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20160118 10:20:57.191" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-workspace.ini</msg>
<status status="PASS" endtime="20160118 10:20:57.191" starttime="20160118 10:20:57.189"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20160118 10:20:57.195" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc-abandon.cgs</msg>
<status status="PASS" endtime="20160118 10:20:57.194" starttime="20160118 10:20:57.192"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:57.197" starttime="20160118 10:20:57.196"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:20:57.202" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:20:57.203" starttime="20160118 10:20:57.198"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:57.205" starttime="20160118 10:20:57.204"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20160118 10:20:57.209" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:20:57.210" starttime="20160118 10:20:57.206"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:20:57.215" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:20:57.216" starttime="20160118 10:20:57.211"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:57.218" starttime="20160118 10:20:57.217"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20160118 10:20:57.222" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:20:57.222" starttime="20160118 10:20:57.219"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20160118 10:20:57.228" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:20:57.228" starttime="20160118 10:20:57.223"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:20:57.231" starttime="20160118 10:20:57.229"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20160118 10:20:57.243" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc-abandon.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-abandon-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:21:21.426" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:21:21.421" starttime="20160118 10:20:57.232"></status>
</kw>
<msg timestamp="20160118 10:21:21.434" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:21:21.432" starttime="20160118 10:20:57.168"></status>
</kw>
<msg timestamp="20160118 10:21:21.439" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:21:21.437" starttime="20160118 10:20:57.152"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:21.446" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20160118 10:21:21.448" starttime="20160118 10:21:21.442"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20160118 10:21:21.458" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:21:21.460" starttime="20160118 10:21:21.452"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:21.466" starttime="20160118 10:21:21.463"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:21.520" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:21.522" starttime="20160118 10:21:21.514"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:21.523" starttime="20160118 10:21:21.510"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:21.534" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:21.536" starttime="20160118 10:21:21.530"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:21.538" starttime="20160118 10:21:21.526"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:21.549" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:21.551" starttime="20160118 10:21:21.544"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:21.553" starttime="20160118 10:21:21.540"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:21.555" starttime="20160118 10:21:21.496"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:21:21.563" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:21:21.564" starttime="20160118 10:21:21.557"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:21.570" starttime="20160118 10:21:21.566"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:21.577" starttime="20160118 10:21:21.572"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:21.583" starttime="20160118 10:21:21.579"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:21.585" starttime="20160118 10:21:21.584"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:21.587" starttime="20160118 10:21:21.586"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:21.590" starttime="20160118 10:21:21.588"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:21:21.595" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001000']</msg>
<msg timestamp="20160118 10:21:21.954" level="INFO">10:21:21,948 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
10:21:21,949 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
10:21:21,949 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34538
10:21:21,950 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000
10:21:21,951 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
10:21:21,951 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001
10:21:21,952 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID
10:21:21,952 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20160118 10:21:21.955" starttime="20160118 10:21:21.593"></status>
</kw>
<msg timestamp="20160118 10:21:21.957" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:21.958" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:21:21.956" starttime="20160118 10:21:21.592"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:21.971" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:21:21.970" starttime="20160118 10:21:21.968"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:21.974" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:21.974" starttime="20160118 10:21:21.972"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:21.978" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:21.977" starttime="20160118 10:21:21.975"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:21.983" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:21.987" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:21.988" starttime="20160118 10:21:21.981"></status>
</kw>
<msg timestamp="20160118 10:21:21.989" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:21.990" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,948 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:21.989" starttime="20160118 10:21:21.979"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:21.998" starttime="20160118 10:21:21.996"></status>
</kw>
<msg timestamp="20160118 10:21:21.999" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,948 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:21.998" starttime="20160118 10:21:21.991"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.007" starttime="20160118 10:21:22.005"></status>
</kw>
<msg timestamp="20160118 10:21:22.008" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,948 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:22.007" starttime="20160118 10:21:22.000"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.016" starttime="20160118 10:21:22.014"></status>
</kw>
<msg timestamp="20160118 10:21:22.017" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:22.017" starttime="20160118 10:21:22.009"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.028" starttime="20160118 10:21:22.026"></status>
</kw>
<msg timestamp="20160118 10:21:22.029" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:22.028" starttime="20160118 10:21:22.018"></status>
</kw>
<msg timestamp="20160118 10:21:22.031" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:22.030" starttime="20160118 10:21:21.960"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:22.043" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20160118 10:21:22.042" starttime="20160118 10:21:22.040"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.046" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:22.046" starttime="20160118 10:21:22.044"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.049" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:22.049" starttime="20160118 10:21:22.047"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.055" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:22.059" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:22.059" starttime="20160118 10:21:22.052"></status>
</kw>
<msg timestamp="20160118 10:21:22.061" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:22.061" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,949 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:21:22.060" starttime="20160118 10:21:22.050"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.069" starttime="20160118 10:21:22.067"></status>
</kw>
<msg timestamp="20160118 10:21:22.070" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,949 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:21:22.069" starttime="20160118 10:21:22.062"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.078" starttime="20160118 10:21:22.076"></status>
</kw>
<msg timestamp="20160118 10:21:22.079" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,949 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:21:22.079" starttime="20160118 10:21:22.072"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.088" starttime="20160118 10:21:22.086"></status>
</kw>
<msg timestamp="20160118 10:21:22.089" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160118 10:21:22.089" starttime="20160118 10:21:22.080"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.099" starttime="20160118 10:21:22.097"></status>
</kw>
<msg timestamp="20160118 10:21:22.101" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160118 10:21:22.100" starttime="20160118 10:21:22.090"></status>
</kw>
<msg timestamp="20160118 10:21:22.102" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20160118 10:21:22.102" starttime="20160118 10:21:22.033"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:22.114" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20160118 10:21:22.114" starttime="20160118 10:21:22.111"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.117" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:22.117" starttime="20160118 10:21:22.115"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.120" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:22.120" starttime="20160118 10:21:22.118"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.126" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:22.130" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:22.131" starttime="20160118 10:21:22.123"></status>
</kw>
<msg timestamp="20160118 10:21:22.132" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:22.132" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,950 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:21:22.131" starttime="20160118 10:21:22.121"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.140" starttime="20160118 10:21:22.138"></status>
</kw>
<msg timestamp="20160118 10:21:22.141" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,950 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:21:22.140" starttime="20160118 10:21:22.133"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.148" starttime="20160118 10:21:22.146"></status>
</kw>
<msg timestamp="20160118 10:21:22.150" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,950 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:21:22.149" starttime="20160118 10:21:22.142"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.158" starttime="20160118 10:21:22.156"></status>
</kw>
<msg timestamp="20160118 10:21:22.159" level="INFO">${resultCode} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:21:22.159" starttime="20160118 10:21:22.151"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.202" starttime="20160118 10:21:22.199"></status>
</kw>
<msg timestamp="20160118 10:21:22.203" level="INFO">${resultCode} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:21:22.203" starttime="20160118 10:21:22.160"></status>
</kw>
<msg timestamp="20160118 10:21:22.205" level="INFO">${imsi} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:21:22.205" starttime="20160118 10:21:22.104"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:22.218" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20160118 10:21:22.217" starttime="20160118 10:21:22.215"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.221" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:22.220" starttime="20160118 10:21:22.219"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.224" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:22.224" starttime="20160118 10:21:22.222"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.230" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:22.233" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:22.234" starttime="20160118 10:21:22.227"></status>
</kw>
<msg timestamp="20160118 10:21:22.235" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:22.235" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,949 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34538</msg>
<status status="PASS" endtime="20160118 10:21:22.234" starttime="20160118 10:21:22.225"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.242" starttime="20160118 10:21:22.241"></status>
</kw>
<msg timestamp="20160118 10:21:22.243" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,949 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34538</msg>
<status status="PASS" endtime="20160118 10:21:22.243" starttime="20160118 10:21:22.236"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.250" starttime="20160118 10:21:22.248"></status>
</kw>
<msg timestamp="20160118 10:21:22.251" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,949 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34538</msg>
<status status="PASS" endtime="20160118 10:21:22.251" starttime="20160118 10:21:22.244"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.259" starttime="20160118 10:21:22.257"></status>
</kw>
<msg timestamp="20160118 10:21:22.260" level="INFO">${resultCode} = 34538</msg>
<status status="PASS" endtime="20160118 10:21:22.259" starttime="20160118 10:21:22.252"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.269" starttime="20160118 10:21:22.267"></status>
</kw>
<msg timestamp="20160118 10:21:22.270" level="INFO">${resultCode} = 34538</msg>
<status status="PASS" endtime="20160118 10:21:22.270" starttime="20160118 10:21:22.261"></status>
</kw>
<msg timestamp="20160118 10:21:22.272" level="INFO">${id} = 34538</msg>
<status status="PASS" endtime="20160118 10:21:22.271" starttime="20160118 10:21:22.208"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:22.282" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20160118 10:21:22.281" starttime="20160118 10:21:22.279"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.285" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:22.284" starttime="20160118 10:21:22.283"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.288" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:22.287" starttime="20160118 10:21:22.286"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.292" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:22.296" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:22.297" starttime="20160118 10:21:22.290"></status>
</kw>
<msg timestamp="20160118 10:21:22.298" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:22.298" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,951 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:21:22.297" starttime="20160118 10:21:22.289"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.305" starttime="20160118 10:21:22.303"></status>
</kw>
<msg timestamp="20160118 10:21:22.306" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,951 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:21:22.306" starttime="20160118 10:21:22.299"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.313" starttime="20160118 10:21:22.311"></status>
</kw>
<msg timestamp="20160118 10:21:22.314" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,951 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:21:22.313" starttime="20160118 10:21:22.307"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.321" starttime="20160118 10:21:22.319"></status>
</kw>
<msg timestamp="20160118 10:21:22.322" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:21:22.322" starttime="20160118 10:21:22.315"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.332" starttime="20160118 10:21:22.330"></status>
</kw>
<msg timestamp="20160118 10:21:22.333" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:21:22.332" starttime="20160118 10:21:22.323"></status>
</kw>
<msg timestamp="20160118 10:21:22.335" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:21:22.334" starttime="20160118 10:21:22.273"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:22.345" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20160118 10:21:22.344" starttime="20160118 10:21:22.342"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.348" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:22.347" starttime="20160118 10:21:22.346"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.352" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:22.351" starttime="20160118 10:21:22.348"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.356" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:22.360" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:22.361" starttime="20160118 10:21:22.354"></status>
</kw>
<msg timestamp="20160118 10:21:22.362" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:22.362" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,951 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:21:22.361" starttime="20160118 10:21:22.353"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.369" starttime="20160118 10:21:22.368"></status>
</kw>
<msg timestamp="20160118 10:21:22.370" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,951 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:21:22.370" starttime="20160118 10:21:22.363"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.377" starttime="20160118 10:21:22.375"></status>
</kw>
<msg timestamp="20160118 10:21:22.378" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,951 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:21:22.378" starttime="20160118 10:21:22.371"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.385" starttime="20160118 10:21:22.383"></status>
</kw>
<msg timestamp="20160118 10:21:22.387" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160118 10:21:22.386" starttime="20160118 10:21:22.379"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.395" starttime="20160118 10:21:22.394"></status>
</kw>
<msg timestamp="20160118 10:21:22.397" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160118 10:21:22.396" starttime="20160118 10:21:22.387"></status>
</kw>
<msg timestamp="20160118 10:21:22.398" level="INFO">${tariffId} = 101001</msg>
<status status="PASS" endtime="20160118 10:21:22.398" starttime="20160118 10:21:22.336"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:22.408" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20160118 10:21:22.408" starttime="20160118 10:21:22.406"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.411" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:22.411" starttime="20160118 10:21:22.409"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.414" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:22.413" starttime="20160118 10:21:22.412"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.418" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:22.422" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:22.422" starttime="20160118 10:21:22.416"></status>
</kw>
<msg timestamp="20160118 10:21:22.424" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:22.424" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,952 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:22.423" starttime="20160118 10:21:22.415"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.431" starttime="20160118 10:21:22.429"></status>
</kw>
<msg timestamp="20160118 10:21:22.432" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,952 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:22.431" starttime="20160118 10:21:22.425"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.438" starttime="20160118 10:21:22.437"></status>
</kw>
<msg timestamp="20160118 10:21:22.440" level="INFO">${return_log_entry} = 2016-01-18 10:21:21,952 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:22.439" starttime="20160118 10:21:22.433"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.448" starttime="20160118 10:21:22.445"></status>
</kw>
<msg timestamp="20160118 10:21:22.449" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:22.448" starttime="20160118 10:21:22.440"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.458" starttime="20160118 10:21:22.456"></status>
</kw>
<msg timestamp="20160118 10:21:22.459" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:22.459" starttime="20160118 10:21:22.450"></status>
</kw>
<msg timestamp="20160118 10:21:22.461" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:22.460" starttime="20160118 10:21:22.400"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.470" starttime="20160118 10:21:22.468"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.472" starttime="20160118 10:21:22.471"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.474" starttime="20160118 10:21:22.473"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:21:22.485" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:21:22.486" starttime="20160118 10:21:22.481"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:22.487" starttime="20160118 10:21:22.479"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:22.487" starttime="20160118 10:21:22.475"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:22.488" starttime="20160118 10:21:22.462"></status>
</kw>
<msg timestamp="20160118 10:21:22.491" level="INFO">${rc} = OK</msg>
<msg timestamp="20160118 10:21:22.492" level="INFO">${provId} = 1</msg>
<msg timestamp="20160118 10:21:22.492" level="INFO">${imsi} = 334030880001000</msg>
<msg timestamp="20160118 10:21:22.493" level="INFO">${id} = 34538</msg>
<msg timestamp="20160118 10:21:22.493" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20160118 10:21:22.494" level="INFO">${tariffId} = 101001</msg>
<msg timestamp="20160118 10:21:22.494" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:22.490" starttime="20160118 10:21:21.473"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.513" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:22.514" starttime="20160118 10:21:22.511"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:22.515" starttime="20160118 10:21:22.510"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.519" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:22.519" starttime="20160118 10:21:22.517"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:22.520" starttime="20160118 10:21:22.516"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.524" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:22.525" starttime="20160118 10:21:22.522"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:22.526" starttime="20160118 10:21:22.521"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:22.526" starttime="20160118 10:21:22.505"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.529" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:21:22.530" starttime="20160118 10:21:22.527"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.532" starttime="20160118 10:21:22.530"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.535" starttime="20160118 10:21:22.533"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.537" starttime="20160118 10:21:22.536"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.539" starttime="20160118 10:21:22.538"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.541" starttime="20160118 10:21:22.540"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.544" starttime="20160118 10:21:22.542"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:21:22.547" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=34538']</msg>
<msg timestamp="20160118 10:21:22.779" level="INFO">10:21:22,776 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
10:21:22,776 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34539
10:21:22,777 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000
10:21:22,777 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
10:21:22,778 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:21:22.780" starttime="20160118 10:21:22.546"></status>
</kw>
<msg timestamp="20160118 10:21:22.781" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:22.781" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:21:22.780" starttime="20160118 10:21:22.545"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:22.791" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:21:22.790" starttime="20160118 10:21:22.788"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.793" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:22.793" starttime="20160118 10:21:22.792"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.796" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:22.796" starttime="20160118 10:21:22.794"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.801" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:22.804" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:22.804" starttime="20160118 10:21:22.799"></status>
</kw>
<msg timestamp="20160118 10:21:22.805" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:22.806" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,776 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:22.805" starttime="20160118 10:21:22.797"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.812" starttime="20160118 10:21:22.811"></status>
</kw>
<msg timestamp="20160118 10:21:22.814" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,776 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:22.813" starttime="20160118 10:21:22.807"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.820" starttime="20160118 10:21:22.818"></status>
</kw>
<msg timestamp="20160118 10:21:22.821" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,776 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:22.821" starttime="20160118 10:21:22.814"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.828" starttime="20160118 10:21:22.826"></status>
</kw>
<msg timestamp="20160118 10:21:22.829" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:22.829" starttime="20160118 10:21:22.822"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.838" starttime="20160118 10:21:22.836"></status>
</kw>
<msg timestamp="20160118 10:21:22.839" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:22.839" starttime="20160118 10:21:22.830"></status>
</kw>
<msg timestamp="20160118 10:21:22.841" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:22.840" starttime="20160118 10:21:22.783"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:22.850" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20160118 10:21:22.849" starttime="20160118 10:21:22.847"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.852" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:22.852" starttime="20160118 10:21:22.851"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.855" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:22.855" starttime="20160118 10:21:22.853"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.860" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:22.863" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:22.863" starttime="20160118 10:21:22.858"></status>
</kw>
<msg timestamp="20160118 10:21:22.864" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:22.865" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,776 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34539</msg>
<status status="PASS" endtime="20160118 10:21:22.864" starttime="20160118 10:21:22.856"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.871" starttime="20160118 10:21:22.870"></status>
</kw>
<msg timestamp="20160118 10:21:22.873" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,776 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34539</msg>
<status status="PASS" endtime="20160118 10:21:22.872" starttime="20160118 10:21:22.866"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.879" starttime="20160118 10:21:22.877"></status>
</kw>
<msg timestamp="20160118 10:21:22.880" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,776 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34539</msg>
<status status="PASS" endtime="20160118 10:21:22.880" starttime="20160118 10:21:22.873"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.887" starttime="20160118 10:21:22.885"></status>
</kw>
<msg timestamp="20160118 10:21:22.888" level="INFO">${resultCode} = 34539</msg>
<status status="PASS" endtime="20160118 10:21:22.888" starttime="20160118 10:21:22.881"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.897" starttime="20160118 10:21:22.895"></status>
</kw>
<msg timestamp="20160118 10:21:22.898" level="INFO">${resultCode} = 34539</msg>
<status status="PASS" endtime="20160118 10:21:22.897" starttime="20160118 10:21:22.889"></status>
</kw>
<msg timestamp="20160118 10:21:22.899" level="INFO">${accountId} = 34539</msg>
<status status="PASS" endtime="20160118 10:21:22.899" starttime="20160118 10:21:22.842"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:22.909" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20160118 10:21:22.908" starttime="20160118 10:21:22.907"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.912" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:22.911" starttime="20160118 10:21:22.910"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.914" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:22.914" starttime="20160118 10:21:22.913"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.919" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:22.922" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:22.922" starttime="20160118 10:21:22.917"></status>
</kw>
<msg timestamp="20160118 10:21:22.923" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:22.924" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,777 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000</msg>
<status status="PASS" endtime="20160118 10:21:22.923" starttime="20160118 10:21:22.915"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.930" starttime="20160118 10:21:22.928"></status>
</kw>
<msg timestamp="20160118 10:21:22.931" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,777 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000</msg>
<status status="PASS" endtime="20160118 10:21:22.931" starttime="20160118 10:21:22.925"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.938" starttime="20160118 10:21:22.936"></status>
</kw>
<msg timestamp="20160118 10:21:22.939" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,777 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000</msg>
<status status="PASS" endtime="20160118 10:21:22.938" starttime="20160118 10:21:22.932"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.945" starttime="20160118 10:21:22.943"></status>
</kw>
<msg timestamp="20160118 10:21:22.946" level="INFO">${resultCode} = 10000000</msg>
<status status="PASS" endtime="20160118 10:21:22.946" starttime="20160118 10:21:22.940"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.955" starttime="20160118 10:21:22.953"></status>
</kw>
<msg timestamp="20160118 10:21:22.956" level="INFO">${resultCode} = 10000000</msg>
<status status="PASS" endtime="20160118 10:21:22.955" starttime="20160118 10:21:22.947"></status>
</kw>
<msg timestamp="20160118 10:21:22.957" level="INFO">${balance} = 10000000</msg>
<status status="PASS" endtime="20160118 10:21:22.957" starttime="20160118 10:21:22.901"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:22.966" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20160118 10:21:22.965" starttime="20160118 10:21:22.964"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.968" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:22.968" starttime="20160118 10:21:22.967"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.971" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:22.971" starttime="20160118 10:21:22.969"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:22.975" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:22.978" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:22.979" starttime="20160118 10:21:22.973"></status>
</kw>
<msg timestamp="20160118 10:21:22.980" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:22.980" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,777 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:21:22.979" starttime="20160118 10:21:22.972"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:22.986" starttime="20160118 10:21:22.985"></status>
</kw>
<msg timestamp="20160118 10:21:22.987" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,777 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:21:22.987" starttime="20160118 10:21:22.981"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:23.027" starttime="20160118 10:21:23.026"></status>
</kw>
<msg timestamp="20160118 10:21:23.029" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,777 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:21:23.028" starttime="20160118 10:21:22.988"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:23.037" starttime="20160118 10:21:23.035"></status>
</kw>
<msg timestamp="20160118 10:21:23.038" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160118 10:21:23.037" starttime="20160118 10:21:23.030"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:23.047" starttime="20160118 10:21:23.045"></status>
</kw>
<msg timestamp="20160118 10:21:23.048" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160118 10:21:23.047" starttime="20160118 10:21:23.039"></status>
</kw>
<msg timestamp="20160118 10:21:23.050" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20160118 10:21:23.049" starttime="20160118 10:21:22.959"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:23.058" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20160118 10:21:23.058" starttime="20160118 10:21:23.056"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:23.061" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:23.061" starttime="20160118 10:21:23.059"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:23.064" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:23.063" starttime="20160118 10:21:23.062"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:23.068" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:23.071" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:23.072" starttime="20160118 10:21:23.066"></status>
</kw>
<msg timestamp="20160118 10:21:23.073" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:23.073" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,778 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:21:23.072" starttime="20160118 10:21:23.065"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:23.080" starttime="20160118 10:21:23.078"></status>
</kw>
<msg timestamp="20160118 10:21:23.081" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,778 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:21:23.080" starttime="20160118 10:21:23.074"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:23.087" starttime="20160118 10:21:23.086"></status>
</kw>
<msg timestamp="20160118 10:21:23.088" level="INFO">${return_log_entry} = 2016-01-18 10:21:22,778 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:21:23.088" starttime="20160118 10:21:23.082"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:23.095" starttime="20160118 10:21:23.093"></status>
</kw>
<msg timestamp="20160118 10:21:23.096" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20160118 10:21:23.096" starttime="20160118 10:21:23.089"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:23.104" starttime="20160118 10:21:23.103"></status>
</kw>
<msg timestamp="20160118 10:21:23.105" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20160118 10:21:23.105" starttime="20160118 10:21:23.097"></status>
</kw>
<msg timestamp="20160118 10:21:23.107" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20160118 10:21:23.106" starttime="20160118 10:21:23.051"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:23.114" starttime="20160118 10:21:23.112"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:23.116" starttime="20160118 10:21:23.114"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:23.118" starttime="20160118 10:21:23.116"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:21:23.128" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:21:23.128" starttime="20160118 10:21:23.124"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:23.129" starttime="20160118 10:21:23.122"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:23.130" starttime="20160118 10:21:23.118"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:23.130" starttime="20160118 10:21:23.108"></status>
</kw>
<msg timestamp="20160118 10:21:23.133" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20160118 10:21:23.133" level="INFO">${accId} = 34539</msg>
<msg timestamp="20160118 10:21:23.134" level="INFO">${bal} = 10000000</msg>
<msg timestamp="20160118 10:21:23.134" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20160118 10:21:23.135" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20160118 10:21:23.132" starttime="20160118 10:21:22.496"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${target_bal}=</arg>
<arg>Evaluate</arg>
<arg>${INITIAL_BALANCE}-${TESTSUBCRIBERS DEFAULT SLICE COSTS}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:23.137" starttime="20160118 10:21:23.136"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Should Be Equal As Numbers</arg>
<arg>${target_bal}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:23.139" starttime="20160118 10:21:23.138"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check: ${bal}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:23.142" level="INFO">Account balance check: 10000000</msg>
<status status="PASS" endtime="20160118 10:21:23.142" starttime="20160118 10:21:23.140"></status>
</kw>
<doc>Test will make an abandoned MOC call

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
</tags>
<status status="PASS" critical="yes" endtime="20160118 10:21:23.143" starttime="20160118 10:20:52.367"></status>
</test>
<doc>Testing the prepaid MOC call. Calling party abandons the call

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20160118 10:21:23.147" starttime="20160118 10:20:46.226"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20160118 10:21:23.157" starttime="20160118 10:20:46.197"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-Busy" id="s1-s2" name="MOC PREPAID ONNET-Busy">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-Busy/MOC_PREPAID_ONNET-Busy-robot-suite.txt" id="s1-s2-s1" name="MOC PREPAID ONNET-Busy-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20160118 10:21:23.354" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:21:23.359" level="INFO">${date} = Mon Jan 18 10:21:23 CET 2016</msg>
<status status="PASS" endtime="20160118 10:21:23.357" starttime="20160118 10:21:23.347"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:23.364" level="INFO">Date and time: Mon Jan 18 10:21:23 CET 2016</msg>
<status status="PASS" endtime="20160118 10:21:23.366" starttime="20160118 10:21:23.360"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:23.371" level="INFO">Target IN machine: 10.105.119.135</msg>
<status status="PASS" endtime="20160118 10:21:23.372" starttime="20160118 10:21:23.367"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:23.444" starttime="20160118 10:21:23.441"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:24.090" starttime="20160118 10:21:23.455"></status>
</kw>
<msg timestamp="20160118 10:21:24.095" level="INFO">${ssh_connection} = 5</msg>
<status status="PASS" endtime="20160118 10:21:24.093" starttime="20160118 10:21:23.446"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:21:24.110" level="INFO">Logging into '10.105.119.135:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:21:27.347" level="INFO">Read output: Last login: Mon Jan 18 09:20:48 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:21:27.348" starttime="20160118 10:21:24.106"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:27.350" starttime="20160118 10:21:24.097"></status>
</kw>
<msg timestamp="20160118 10:21:27.352" level="INFO">${ssh_connection} = 5</msg>
<status status="PASS" endtime="20160118 10:21:27.352" starttime="20160118 10:21:23.429"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:21:27.358" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:21:27.358" starttime="20160118 10:21:27.354"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:21:27.361" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20160118 10:21:29.944" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:21:29.948" level="INFO">${output} = I-New MVNA TEMM - Core - Service 1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:21:29.946" starttime="20160118 10:21:27.359"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:29.958" starttime="20160118 10:21:29.953"></status>
</kw>
<msg timestamp="20160118 10:21:29.961" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:21:29.961" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:21:29.960" starttime="20160118 10:21:29.950"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:29.974" starttime="20160118 10:21:29.971"></status>
</kw>
<msg timestamp="20160118 10:21:29.976" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:29.975" starttime="20160118 10:21:29.963"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20160118 10:21:29.982" level="INFO">${version_r} =  1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:21:29.981" starttime="20160118 10:21:29.978"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:21:29.988" level="INFO">${version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:21:29.987" starttime="20160118 10:21:29.984"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:29.992" starttime="20160118 10:21:29.990"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:30.008" starttime="20160118 10:21:30.004"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:21:30.012" starttime="20160118 10:21:30.009"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:30.016" starttime="20160118 10:21:29.995"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:30.029" starttime="20160118 10:21:30.026"></status>
</kw>
<msg timestamp="20160118 10:21:30.031" level="INFO">${ver} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:21:30.030" starttime="20160118 10:21:30.018"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:30.036" starttime="20160118 10:21:30.033"></status>
</kw>
<msg timestamp="20160118 10:21:30.040" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20160118 10:21:30.041" level="INFO">${in_version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:21:30.038" starttime="20160118 10:21:23.395"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:30.092" starttime="20160118 10:21:30.091"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:30.141" starttime="20160118 10:21:30.097"></status>
</kw>
<msg timestamp="20160118 10:21:30.143" level="INFO">${ssh_connection} = 6</msg>
<status status="PASS" endtime="20160118 10:21:30.142" starttime="20160118 10:21:30.093"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:21:30.150" level="INFO">Logging into '10.105.119.171:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:21:30.654" level="INFO">Read output: Last login: Mon Jan 18 09:20:49 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:21:30.656" starttime="20160118 10:21:30.148"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:30.656" starttime="20160118 10:21:30.144"></status>
</kw>
<msg timestamp="20160118 10:21:30.658" level="INFO">${ssh_connection} = 6</msg>
<status status="PASS" endtime="20160118 10:21:30.658" starttime="20160118 10:21:30.086"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:21:30.664" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:21:30.663" starttime="20160118 10:21:30.659"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:21:30.666" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20160118 10:21:31.143" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:21:31.145" level="INFO">${output} = I-New UMS MVNO - XDR - Server 6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:21:31.144" starttime="20160118 10:21:30.664"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:31.151" starttime="20160118 10:21:31.149"></status>
</kw>
<msg timestamp="20160118 10:21:31.152" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:21:31.152" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:21:31.152" starttime="20160118 10:21:31.146"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:31.158" starttime="20160118 10:21:31.157"></status>
</kw>
<msg timestamp="20160118 10:21:31.159" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:31.159" starttime="20160118 10:21:31.153"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20160118 10:21:31.162" level="INFO">${version_r} =  6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:21:31.161" starttime="20160118 10:21:31.160"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:21:31.164" level="INFO">${version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:21:31.164" starttime="20160118 10:21:31.163"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:31.166" starttime="20160118 10:21:31.165"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:31.173" starttime="20160118 10:21:31.172"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:21:31.176" starttime="20160118 10:21:31.174"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:31.177" starttime="20160118 10:21:31.168"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:31.183" starttime="20160118 10:21:31.181"></status>
</kw>
<msg timestamp="20160118 10:21:31.184" level="INFO">${ver} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:21:31.183" starttime="20160118 10:21:31.178"></status>
</kw>
<msg timestamp="20160118 10:21:31.186" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20160118 10:21:31.186" level="INFO">${xdr_version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:21:31.185" starttime="20160118 10:21:30.061"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:31.224" starttime="20160118 10:21:31.223"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:31.284" starttime="20160118 10:21:31.229"></status>
</kw>
<msg timestamp="20160118 10:21:31.287" level="INFO">${ssh_connection} = 7</msg>
<status status="PASS" endtime="20160118 10:21:31.286" starttime="20160118 10:21:31.225"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:21:31.301" level="INFO">Logging into '10.105.119.125:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:21:31.808" level="INFO">Read output: Last login: Mon Jan 18 09:20:50 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@crce01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:21:31.809" starttime="20160118 10:21:31.298"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:31.810" starttime="20160118 10:21:31.289"></status>
</kw>
<msg timestamp="20160118 10:21:31.812" level="INFO">${ssh_connection} = 7</msg>
<status status="PASS" endtime="20160118 10:21:31.811" starttime="20160118 10:21:31.218"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:21:31.817" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:21:31.817" starttime="20160118 10:21:31.813"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:21:31.819" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20160118 10:21:32.054" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:21:32.058" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.1.23.31100
Negret Rating &amp; Charging Engine 6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:21:32.056" starttime="20160118 10:21:31.818"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.068" starttime="20160118 10:21:32.064"></status>
</kw>
<msg timestamp="20160118 10:21:32.071" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:21:32.072" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:21:32.070" starttime="20160118 10:21:32.060"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.085" starttime="20160118 10:21:32.082"></status>
</kw>
<msg timestamp="20160118 10:21:32.087" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:32.086" starttime="20160118 10:21:32.074"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:21:32.093" level="INFO">${version_r} =  6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:21:32.092" starttime="20160118 10:21:32.089"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:21:32.099" level="INFO">${version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:21:32.098" starttime="20160118 10:21:32.095"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.103" starttime="20160118 10:21:32.101"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.117" starttime="20160118 10:21:32.114"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.122" starttime="20160118 10:21:32.119"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:32.125" starttime="20160118 10:21:32.105"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.137" starttime="20160118 10:21:32.134"></status>
</kw>
<msg timestamp="20160118 10:21:32.140" level="INFO">${ver} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:21:32.139" starttime="20160118 10:21:32.127"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.144" starttime="20160118 10:21:32.141"></status>
</kw>
<msg timestamp="20160118 10:21:32.148" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20160118 10:21:32.149" level="INFO">${crce_version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:21:32.147" starttime="20160118 10:21:31.196"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.226" starttime="20160118 10:21:32.224"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.298" starttime="20160118 10:21:32.237"></status>
</kw>
<msg timestamp="20160118 10:21:32.301" level="INFO">${ssh_connection} = 8</msg>
<status status="PASS" endtime="20160118 10:21:32.300" starttime="20160118 10:21:32.228"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:21:32.318" level="INFO">Logging into '10.105.119.159:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:21:32.754" level="INFO">Read output: Last login: Mon Jan 18 09:20:51 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@ocs01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:21:32.757" starttime="20160118 10:21:32.314"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:32.758" starttime="20160118 10:21:32.303"></status>
</kw>
<msg timestamp="20160118 10:21:32.761" level="INFO">${ssh_connection} = 8</msg>
<status status="PASS" endtime="20160118 10:21:32.760" starttime="20160118 10:21:32.212"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:21:32.773" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:21:32.772" starttime="20160118 10:21:32.764"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:21:32.777" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20160118 10:21:32.832" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:21:32.835" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:21:32.834" starttime="20160118 10:21:32.774"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.844" starttime="20160118 10:21:32.840"></status>
</kw>
<msg timestamp="20160118 10:21:32.846" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:21:32.847" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:21:32.845" starttime="20160118 10:21:32.837"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.859" starttime="20160118 10:21:32.856"></status>
</kw>
<msg timestamp="20160118 10:21:32.861" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:32.860" starttime="20160118 10:21:32.849"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:21:32.867" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:21:32.866" starttime="20160118 10:21:32.863"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:21:32.872" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:21:32.871" starttime="20160118 10:21:32.868"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.876" starttime="20160118 10:21:32.874"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.890" starttime="20160118 10:21:32.887"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.894" starttime="20160118 10:21:32.892"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:32.897" starttime="20160118 10:21:32.878"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.909" starttime="20160118 10:21:32.906"></status>
</kw>
<msg timestamp="20160118 10:21:32.911" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:21:32.910" starttime="20160118 10:21:32.899"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.915" starttime="20160118 10:21:32.912"></status>
</kw>
<msg timestamp="20160118 10:21:32.918" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20160118 10:21:32.919" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:21:32.917" starttime="20160118 10:21:32.180"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:32.924" level="INFO">IN state= OK version= 1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:21:32.926" starttime="20160118 10:21:32.921"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:32.931" level="INFO">XDR state= OK version= 6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:21:32.932" starttime="20160118 10:21:32.927"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:32.937" level="INFO">CRCE state= OK version= 6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:21:32.938" starttime="20160118 10:21:32.934"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:32.943" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:21:32.945" starttime="20160118 10:21:32.940"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20160118 10:21:32.950" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:21:32.951" starttime="20160118 10:21:32.947"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20160118 10:21:32.955" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:21:32.956" starttime="20160118 10:21:32.952"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20160118 10:21:32.959" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:21:32.959" starttime="20160118 10:21:32.957"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20160118 10:21:32.961" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:21:32.962" starttime="20160118 10:21:32.960"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.969" starttime="20160118 10:21:32.966"></status>
</kw>
<msg timestamp="20160118 10:21:32.970" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:21:32.970" starttime="20160118 10:21:32.962"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20160118 10:21:32.972" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:21:32.973" starttime="20160118 10:21:32.971"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:32.973" starttime="20160118 10:21:23.343"></status>
</kw>
<test id="s1-s2-s1-t1" name="Run MOC Busy Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:32.981" starttime="20160118 10:21:32.980"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<msg timestamp="20160118 10:21:32.984" level="INFO">${INITIAL_BALANCE} = 10000000</msg>
<status status="PASS" endtime="20160118 10:21:32.983" starttime="20160118 10:21:32.982"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>1</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20160118 10:21:32.993" level="INFO">msg=crce_host=10.105.119.125</msg>
<status status="PASS" endtime="20160118 10:21:32.993" starttime="20160118 10:21:32.992"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20160118 10:21:32.995" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20160118 10:21:32.995" starttime="20160118 10:21:32.994"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20160118 10:21:32.997" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20160118 10:21:32.998" starttime="20160118 10:21:32.996"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20160118 10:21:33.000" level="INFO">msg=amount=1</msg>
<status status="PASS" endtime="20160118 10:21:33.000" starttime="20160118 10:21:32.999"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:21:33.002" level="INFO">msg=imsiRangeStart=334030880001000</msg>
<status status="PASS" endtime="20160118 10:21:33.003" starttime="20160118 10:21:33.001"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:21:33.005" level="INFO">msg=msisdnRangeStart=525516001000</msg>
<status status="PASS" endtime="20160118 10:21:33.005" starttime="20160118 10:21:33.004"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20160118 10:21:33.007" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:33.008" starttime="20160118 10:21:33.006"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20160118 10:21:33.009" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20160118 10:21:33.010" starttime="20160118 10:21:33.008"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20160118 10:21:33.012" level="INFO">msg=tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:21:33.012" starttime="20160118 10:21:33.011"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20160118 10:21:33.014" level="INFO">msg=balance=10000000</msg>
<status status="PASS" endtime="20160118 10:21:33.014" starttime="20160118 10:21:33.013"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:33.023" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:33.023" starttime="20160118 10:21:33.021"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:33.024" starttime="20160118 10:21:33.019"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:33.027" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:33.028" starttime="20160118 10:21:33.026"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:33.028" starttime="20160118 10:21:33.024"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:33.032" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:33.032" starttime="20160118 10:21:33.030"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:33.033" starttime="20160118 10:21:33.029"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:33.034" starttime="20160118 10:21:33.016"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:21:33.036" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:21:33.037" starttime="20160118 10:21:33.034"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:33.039" starttime="20160118 10:21:33.037"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:33.041" starttime="20160118 10:21:33.039"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:33.043" starttime="20160118 10:21:33.041"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:33.044" starttime="20160118 10:21:33.043"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:33.046" starttime="20160118 10:21:33.045"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:33.048" starttime="20160118 10:21:33.047"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:33.050" starttime="20160118 10:21:33.049"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:33.052" starttime="20160118 10:21:33.051"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:33.054" starttime="20160118 10:21:33.053"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:33.056" starttime="20160118 10:21:33.055"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:33.058" starttime="20160118 10:21:33.057"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:33.060" starttime="20160118 10:21:33.059"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:21:33.063" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000']</msg>
<msg timestamp="20160118 10:21:34.164" level="INFO">10:21:34,163 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:34.165" starttime="20160118 10:21:33.062"></status>
</kw>
<msg timestamp="20160118 10:21:34.167" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:34.168" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:21:34.166" starttime="20160118 10:21:33.061"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:34.177" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:21:34.176" starttime="20160118 10:21:34.174"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:34.179" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:34.179" starttime="20160118 10:21:34.178"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:34.181" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:34.181" starttime="20160118 10:21:34.180"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:34.185" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:34.185" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:34.186" starttime="20160118 10:21:34.183"></status>
</kw>
<msg timestamp="20160118 10:21:34.187" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:34.187" level="INFO">${return_log_entry} = 2016-01-18 10:21:34,163 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:34.186" starttime="20160118 10:21:34.182"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:34.193" starttime="20160118 10:21:34.191"></status>
</kw>
<msg timestamp="20160118 10:21:34.194" level="INFO">${return_log_entry} = 2016-01-18 10:21:34,163 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:34.193" starttime="20160118 10:21:34.188"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:34.199" starttime="20160118 10:21:34.198"></status>
</kw>
<msg timestamp="20160118 10:21:34.200" level="INFO">${return_log_entry} = 2016-01-18 10:21:34,163 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:34.199" starttime="20160118 10:21:34.194"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:34.205" starttime="20160118 10:21:34.204"></status>
</kw>
<msg timestamp="20160118 10:21:34.206" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:34.205" starttime="20160118 10:21:34.200"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:34.213" starttime="20160118 10:21:34.212"></status>
</kw>
<msg timestamp="20160118 10:21:34.214" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:34.214" starttime="20160118 10:21:34.207"></status>
</kw>
<msg timestamp="20160118 10:21:34.215" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:34.215" starttime="20160118 10:21:34.170"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:34.221" starttime="20160118 10:21:34.220"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:34.223" starttime="20160118 10:21:34.222"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:34.225" starttime="20160118 10:21:34.223"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:21:34.231" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:21:34.232" starttime="20160118 10:21:34.229"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:34.232" starttime="20160118 10:21:34.228"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:34.233" starttime="20160118 10:21:34.225"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:34.233" starttime="20160118 10:21:34.216"></status>
</kw>
<msg timestamp="20160118 10:21:34.235" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20160118 10:21:34.234" starttime="20160118 10:21:32.986"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20160118 10:21:34.237" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:21:34.237" starttime="20160118 10:21:34.236"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:34.239" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20160118 10:21:34.240" starttime="20160118 10:21:34.238"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC Busy *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:34.241" starttime="20160118 10:21:34.240"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the MOC busy call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:34.243" level="INFO">Running the MOC busy call...</msg>
<status status="PASS" endtime="20160118 10:21:34.243" starttime="20160118 10:21:34.242"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC Busy">
<doc>Runs an busy MOC session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc-busy</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20160118 10:21:34.260" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-subscribers.csv</msg>
<status status="PASS" endtime="20160118 10:21:34.260" starttime="20160118 10:21:34.258"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20160118 10:21:34.262" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-fleXml.csv</msg>
<status status="PASS" endtime="20160118 10:21:34.262" starttime="20160118 10:21:34.261"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20160118 10:21:34.265" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-workspace.ini</msg>
<status status="PASS" endtime="20160118 10:21:34.264" starttime="20160118 10:21:34.263"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20160118 10:21:34.267" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc-busy.cgs</msg>
<status status="PASS" endtime="20160118 10:21:34.267" starttime="20160118 10:21:34.265"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:34.269" starttime="20160118 10:21:34.268"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:21:34.272" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:34.272" starttime="20160118 10:21:34.269"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:34.274" starttime="20160118 10:21:34.273"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20160118 10:21:34.276" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:34.277" starttime="20160118 10:21:34.275"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:21:34.280" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:34.280" starttime="20160118 10:21:34.278"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:34.282" starttime="20160118 10:21:34.281"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20160118 10:21:34.284" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:34.285" starttime="20160118 10:21:34.283"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20160118 10:21:34.288" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:34.288" starttime="20160118 10:21:34.285"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:34.290" starttime="20160118 10:21:34.289"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20160118 10:21:34.297" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc-busy.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:21:47.617" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:21:47.616" starttime="20160118 10:21:34.291"></status>
</kw>
<msg timestamp="20160118 10:21:47.619" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:21:47.618" starttime="20160118 10:21:34.252"></status>
</kw>
<msg timestamp="20160118 10:21:47.621" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:21:47.620" starttime="20160118 10:21:34.245"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:47.622" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20160118 10:21:47.623" starttime="20160118 10:21:47.621"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20160118 10:21:47.625" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:21:47.626" starttime="20160118 10:21:47.624"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:47.628" starttime="20160118 10:21:47.627"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:47.641" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:47.642" starttime="20160118 10:21:47.640"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:47.642" starttime="20160118 10:21:47.638"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:47.646" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:47.646" starttime="20160118 10:21:47.644"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:47.647" starttime="20160118 10:21:47.643"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:47.650" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:47.651" starttime="20160118 10:21:47.649"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:47.651" starttime="20160118 10:21:47.647"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:47.652" starttime="20160118 10:21:47.635"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:21:47.654" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:21:47.654" starttime="20160118 10:21:47.652"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:47.656" starttime="20160118 10:21:47.655"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:47.658" starttime="20160118 10:21:47.657"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:47.660" starttime="20160118 10:21:47.659"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:47.662" starttime="20160118 10:21:47.661"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:47.663" starttime="20160118 10:21:47.663"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:47.665" starttime="20160118 10:21:47.664"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:21:47.668" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001000']</msg>
<msg timestamp="20160118 10:21:47.943" level="INFO">10:21:47,938 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
10:21:47,938 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
10:21:47,939 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34541
10:21:47,939 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000
10:21:47,940 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
10:21:47,941 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001
10:21:47,941 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID
10:21:47,942 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20160118 10:21:47.943" starttime="20160118 10:21:47.667"></status>
</kw>
<msg timestamp="20160118 10:21:47.945" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:47.945" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:21:47.944" starttime="20160118 10:21:47.666"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:47.952" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:21:47.951" starttime="20160118 10:21:47.950"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:47.954" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:47.953" starttime="20160118 10:21:47.952"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:47.956" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:47.956" starttime="20160118 10:21:47.955"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:47.960" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:47.960" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:47.961" starttime="20160118 10:21:47.958"></status>
</kw>
<msg timestamp="20160118 10:21:47.962" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:47.962" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,938 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:47.962" starttime="20160118 10:21:47.957"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:47.967" starttime="20160118 10:21:47.966"></status>
</kw>
<msg timestamp="20160118 10:21:47.968" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,938 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:47.968" starttime="20160118 10:21:47.963"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:47.973" starttime="20160118 10:21:47.972"></status>
</kw>
<msg timestamp="20160118 10:21:47.974" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,938 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:47.974" starttime="20160118 10:21:47.969"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:47.980" starttime="20160118 10:21:47.978"></status>
</kw>
<msg timestamp="20160118 10:21:47.981" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:47.980" starttime="20160118 10:21:47.975"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:47.987" starttime="20160118 10:21:47.986"></status>
</kw>
<msg timestamp="20160118 10:21:47.988" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:47.988" starttime="20160118 10:21:47.981"></status>
</kw>
<msg timestamp="20160118 10:21:47.990" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:47.989" starttime="20160118 10:21:47.946"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:47.996" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20160118 10:21:47.996" starttime="20160118 10:21:47.995"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:47.999" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:47.999" starttime="20160118 10:21:47.997"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.001" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:48.001" starttime="20160118 10:21:48.000"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.005" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:48.006" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:48.006" starttime="20160118 10:21:48.003"></status>
</kw>
<msg timestamp="20160118 10:21:48.007" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:48.008" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,938 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:21:48.007" starttime="20160118 10:21:48.002"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.013" starttime="20160118 10:21:48.012"></status>
</kw>
<msg timestamp="20160118 10:21:48.014" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,938 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:21:48.014" starttime="20160118 10:21:48.008"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.019" starttime="20160118 10:21:48.018"></status>
</kw>
<msg timestamp="20160118 10:21:48.020" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,938 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:21:48.019" starttime="20160118 10:21:48.015"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.025" starttime="20160118 10:21:48.024"></status>
</kw>
<msg timestamp="20160118 10:21:48.026" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160118 10:21:48.026" starttime="20160118 10:21:48.021"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.033" starttime="20160118 10:21:48.032"></status>
</kw>
<msg timestamp="20160118 10:21:48.034" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160118 10:21:48.033" starttime="20160118 10:21:48.027"></status>
</kw>
<msg timestamp="20160118 10:21:48.036" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20160118 10:21:48.035" starttime="20160118 10:21:47.991"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:48.042" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20160118 10:21:48.042" starttime="20160118 10:21:48.041"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.045" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:48.044" starttime="20160118 10:21:48.043"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.047" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:48.046" starttime="20160118 10:21:48.045"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.050" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:48.051" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:48.051" starttime="20160118 10:21:48.049"></status>
</kw>
<msg timestamp="20160118 10:21:48.052" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:48.053" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,939 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:21:48.052" starttime="20160118 10:21:48.047"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.057" starttime="20160118 10:21:48.056"></status>
</kw>
<msg timestamp="20160118 10:21:48.058" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,939 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:21:48.058" starttime="20160118 10:21:48.053"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.063" starttime="20160118 10:21:48.062"></status>
</kw>
<msg timestamp="20160118 10:21:48.064" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,939 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:21:48.064" starttime="20160118 10:21:48.059"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.069" starttime="20160118 10:21:48.068"></status>
</kw>
<msg timestamp="20160118 10:21:48.070" level="INFO">${resultCode} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:21:48.070" starttime="20160118 10:21:48.065"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.077" starttime="20160118 10:21:48.076"></status>
</kw>
<msg timestamp="20160118 10:21:48.078" level="INFO">${resultCode} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:21:48.078" starttime="20160118 10:21:48.071"></status>
</kw>
<msg timestamp="20160118 10:21:48.079" level="INFO">${imsi} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:21:48.079" starttime="20160118 10:21:48.037"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:48.086" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20160118 10:21:48.086" starttime="20160118 10:21:48.085"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.089" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:48.088" starttime="20160118 10:21:48.087"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.091" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:48.090" starttime="20160118 10:21:48.089"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.094" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:48.095" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:48.095" starttime="20160118 10:21:48.093"></status>
</kw>
<msg timestamp="20160118 10:21:48.096" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:48.097" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,939 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34541</msg>
<status status="PASS" endtime="20160118 10:21:48.096" starttime="20160118 10:21:48.091"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.101" starttime="20160118 10:21:48.100"></status>
</kw>
<msg timestamp="20160118 10:21:48.102" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,939 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34541</msg>
<status status="PASS" endtime="20160118 10:21:48.102" starttime="20160118 10:21:48.097"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.107" starttime="20160118 10:21:48.106"></status>
</kw>
<msg timestamp="20160118 10:21:48.108" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,939 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34541</msg>
<status status="PASS" endtime="20160118 10:21:48.108" starttime="20160118 10:21:48.103"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.113" starttime="20160118 10:21:48.112"></status>
</kw>
<msg timestamp="20160118 10:21:48.114" level="INFO">${resultCode} = 34541</msg>
<status status="PASS" endtime="20160118 10:21:48.114" starttime="20160118 10:21:48.109"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.121" starttime="20160118 10:21:48.120"></status>
</kw>
<msg timestamp="20160118 10:21:48.122" level="INFO">${resultCode} = 34541</msg>
<status status="PASS" endtime="20160118 10:21:48.122" starttime="20160118 10:21:48.115"></status>
</kw>
<msg timestamp="20160118 10:21:48.123" level="INFO">${id} = 34541</msg>
<status status="PASS" endtime="20160118 10:21:48.123" starttime="20160118 10:21:48.081"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:48.130" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20160118 10:21:48.130" starttime="20160118 10:21:48.128"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.132" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:48.132" starttime="20160118 10:21:48.131"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.134" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:48.134" starttime="20160118 10:21:48.133"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.138" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:48.138" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:48.139" starttime="20160118 10:21:48.136"></status>
</kw>
<msg timestamp="20160118 10:21:48.140" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:48.140" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,940 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:21:48.139" starttime="20160118 10:21:48.135"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.145" starttime="20160118 10:21:48.144"></status>
</kw>
<msg timestamp="20160118 10:21:48.146" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,940 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:21:48.146" starttime="20160118 10:21:48.141"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.151" starttime="20160118 10:21:48.150"></status>
</kw>
<msg timestamp="20160118 10:21:48.152" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,940 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:21:48.152" starttime="20160118 10:21:48.147"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.157" starttime="20160118 10:21:48.156"></status>
</kw>
<msg timestamp="20160118 10:21:48.158" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:21:48.158" starttime="20160118 10:21:48.153"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.165" starttime="20160118 10:21:48.164"></status>
</kw>
<msg timestamp="20160118 10:21:48.166" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:21:48.165" starttime="20160118 10:21:48.159"></status>
</kw>
<msg timestamp="20160118 10:21:48.167" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:21:48.167" starttime="20160118 10:21:48.124"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:48.174" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20160118 10:21:48.173" starttime="20160118 10:21:48.172"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.176" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:48.176" starttime="20160118 10:21:48.175"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.178" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:48.178" starttime="20160118 10:21:48.177"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.181" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:48.182" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:48.182" starttime="20160118 10:21:48.180"></status>
</kw>
<msg timestamp="20160118 10:21:48.183" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:48.184" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,941 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:21:48.183" starttime="20160118 10:21:48.179"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.189" starttime="20160118 10:21:48.188"></status>
</kw>
<msg timestamp="20160118 10:21:48.190" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,941 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:21:48.189" starttime="20160118 10:21:48.184"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.194" starttime="20160118 10:21:48.193"></status>
</kw>
<msg timestamp="20160118 10:21:48.195" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,941 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:21:48.195" starttime="20160118 10:21:48.190"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.200" starttime="20160118 10:21:48.199"></status>
</kw>
<msg timestamp="20160118 10:21:48.201" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160118 10:21:48.201" starttime="20160118 10:21:48.196"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.208" starttime="20160118 10:21:48.207"></status>
</kw>
<msg timestamp="20160118 10:21:48.209" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160118 10:21:48.209" starttime="20160118 10:21:48.202"></status>
</kw>
<msg timestamp="20160118 10:21:48.210" level="INFO">${tariffId} = 101001</msg>
<status status="PASS" endtime="20160118 10:21:48.210" starttime="20160118 10:21:48.168"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:48.235" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20160118 10:21:48.234" starttime="20160118 10:21:48.233"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.237" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:48.237" starttime="20160118 10:21:48.236"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.239" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:48.239" starttime="20160118 10:21:48.238"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.243" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:48.244" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:48.244" starttime="20160118 10:21:48.241"></status>
</kw>
<msg timestamp="20160118 10:21:48.245" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:48.245" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,941 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:48.245" starttime="20160118 10:21:48.240"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.251" starttime="20160118 10:21:48.250"></status>
</kw>
<msg timestamp="20160118 10:21:48.252" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,941 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:48.251" starttime="20160118 10:21:48.246"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.256" starttime="20160118 10:21:48.255"></status>
</kw>
<msg timestamp="20160118 10:21:48.257" level="INFO">${return_log_entry} = 2016-01-18 10:21:47,941 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:48.257" starttime="20160118 10:21:48.252"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.262" starttime="20160118 10:21:48.261"></status>
</kw>
<msg timestamp="20160118 10:21:48.263" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:48.263" starttime="20160118 10:21:48.258"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.270" starttime="20160118 10:21:48.269"></status>
</kw>
<msg timestamp="20160118 10:21:48.271" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:48.270" starttime="20160118 10:21:48.264"></status>
</kw>
<msg timestamp="20160118 10:21:48.272" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:48.271" starttime="20160118 10:21:48.212"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.277" starttime="20160118 10:21:48.276"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.279" starttime="20160118 10:21:48.278"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.281" starttime="20160118 10:21:48.280"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:21:48.287" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:21:48.287" starttime="20160118 10:21:48.285"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:48.288" starttime="20160118 10:21:48.284"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:48.288" starttime="20160118 10:21:48.281"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:48.289" starttime="20160118 10:21:48.273"></status>
</kw>
<msg timestamp="20160118 10:21:48.291" level="INFO">${rc} = OK</msg>
<msg timestamp="20160118 10:21:48.292" level="INFO">${provId} = 1</msg>
<msg timestamp="20160118 10:21:48.292" level="INFO">${imsi} = 334030880001000</msg>
<msg timestamp="20160118 10:21:48.293" level="INFO">${id} = 34541</msg>
<msg timestamp="20160118 10:21:48.293" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20160118 10:21:48.293" level="INFO">${tariffId} = 101001</msg>
<msg timestamp="20160118 10:21:48.293" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:48.291" starttime="20160118 10:21:47.630"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.306" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:48.307" starttime="20160118 10:21:48.304"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:48.307" starttime="20160118 10:21:48.303"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.310" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:48.311" starttime="20160118 10:21:48.309"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:48.311" starttime="20160118 10:21:48.308"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.314" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:48.315" starttime="20160118 10:21:48.313"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:48.315" starttime="20160118 10:21:48.312"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:48.316" starttime="20160118 10:21:48.300"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.318" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:21:48.318" starttime="20160118 10:21:48.317"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.320" starttime="20160118 10:21:48.319"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.322" starttime="20160118 10:21:48.321"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.324" starttime="20160118 10:21:48.323"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.325" starttime="20160118 10:21:48.324"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.327" starttime="20160118 10:21:48.326"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.329" starttime="20160118 10:21:48.327"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:21:48.331" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=34541']</msg>
<msg timestamp="20160118 10:21:48.557" level="INFO">10:21:48,554 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
10:21:48,554 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34542
10:21:48,555 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000
10:21:48,556 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
10:21:48,556 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:21:48.558" starttime="20160118 10:21:48.330"></status>
</kw>
<msg timestamp="20160118 10:21:48.559" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:48.559" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:21:48.558" starttime="20160118 10:21:48.329"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:48.566" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:21:48.565" starttime="20160118 10:21:48.564"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.568" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:48.567" starttime="20160118 10:21:48.566"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.570" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:48.569" starttime="20160118 10:21:48.568"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.573" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:48.574" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:48.574" starttime="20160118 10:21:48.572"></status>
</kw>
<msg timestamp="20160118 10:21:48.575" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:48.575" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,554 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:48.575" starttime="20160118 10:21:48.571"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.580" starttime="20160118 10:21:48.579"></status>
</kw>
<msg timestamp="20160118 10:21:48.581" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,554 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:48.581" starttime="20160118 10:21:48.576"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.586" starttime="20160118 10:21:48.585"></status>
</kw>
<msg timestamp="20160118 10:21:48.587" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,554 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:21:48.587" starttime="20160118 10:21:48.582"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.592" starttime="20160118 10:21:48.591"></status>
</kw>
<msg timestamp="20160118 10:21:48.593" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:48.593" starttime="20160118 10:21:48.588"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.600" starttime="20160118 10:21:48.599"></status>
</kw>
<msg timestamp="20160118 10:21:48.601" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:48.600" starttime="20160118 10:21:48.594"></status>
</kw>
<msg timestamp="20160118 10:21:48.602" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:48.601" starttime="20160118 10:21:48.561"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:48.608" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20160118 10:21:48.608" starttime="20160118 10:21:48.606"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.610" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:48.610" starttime="20160118 10:21:48.609"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.612" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:48.612" starttime="20160118 10:21:48.611"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.615" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:48.616" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:48.616" starttime="20160118 10:21:48.614"></status>
</kw>
<msg timestamp="20160118 10:21:48.617" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:48.618" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,554 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34542</msg>
<status status="PASS" endtime="20160118 10:21:48.617" starttime="20160118 10:21:48.613"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.622" starttime="20160118 10:21:48.621"></status>
</kw>
<msg timestamp="20160118 10:21:48.623" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,554 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34542</msg>
<status status="PASS" endtime="20160118 10:21:48.623" starttime="20160118 10:21:48.618"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.628" starttime="20160118 10:21:48.627"></status>
</kw>
<msg timestamp="20160118 10:21:48.629" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,554 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34542</msg>
<status status="PASS" endtime="20160118 10:21:48.629" starttime="20160118 10:21:48.624"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.634" starttime="20160118 10:21:48.633"></status>
</kw>
<msg timestamp="20160118 10:21:48.635" level="INFO">${resultCode} = 34542</msg>
<status status="PASS" endtime="20160118 10:21:48.635" starttime="20160118 10:21:48.630"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.641" starttime="20160118 10:21:48.640"></status>
</kw>
<msg timestamp="20160118 10:21:48.642" level="INFO">${resultCode} = 34542</msg>
<status status="PASS" endtime="20160118 10:21:48.642" starttime="20160118 10:21:48.636"></status>
</kw>
<msg timestamp="20160118 10:21:48.644" level="INFO">${accountId} = 34542</msg>
<status status="PASS" endtime="20160118 10:21:48.643" starttime="20160118 10:21:48.603"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:48.650" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20160118 10:21:48.650" starttime="20160118 10:21:48.648"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.652" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:48.652" starttime="20160118 10:21:48.651"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.654" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:48.654" starttime="20160118 10:21:48.653"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.657" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:48.658" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:48.658" starttime="20160118 10:21:48.656"></status>
</kw>
<msg timestamp="20160118 10:21:48.659" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:48.660" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,555 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000</msg>
<status status="PASS" endtime="20160118 10:21:48.659" starttime="20160118 10:21:48.655"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.664" starttime="20160118 10:21:48.663"></status>
</kw>
<msg timestamp="20160118 10:21:48.665" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,555 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000</msg>
<status status="PASS" endtime="20160118 10:21:48.665" starttime="20160118 10:21:48.660"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.670" starttime="20160118 10:21:48.669"></status>
</kw>
<msg timestamp="20160118 10:21:48.671" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,555 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000</msg>
<status status="PASS" endtime="20160118 10:21:48.670" starttime="20160118 10:21:48.666"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.676" starttime="20160118 10:21:48.674"></status>
</kw>
<msg timestamp="20160118 10:21:48.677" level="INFO">${resultCode} = 10000000</msg>
<status status="PASS" endtime="20160118 10:21:48.676" starttime="20160118 10:21:48.671"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.683" starttime="20160118 10:21:48.682"></status>
</kw>
<msg timestamp="20160118 10:21:48.684" level="INFO">${resultCode} = 10000000</msg>
<status status="PASS" endtime="20160118 10:21:48.684" starttime="20160118 10:21:48.677"></status>
</kw>
<msg timestamp="20160118 10:21:48.685" level="INFO">${balance} = 10000000</msg>
<status status="PASS" endtime="20160118 10:21:48.685" starttime="20160118 10:21:48.645"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:48.692" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20160118 10:21:48.691" starttime="20160118 10:21:48.690"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.694" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:48.693" starttime="20160118 10:21:48.692"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.696" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:48.695" starttime="20160118 10:21:48.694"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.699" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:48.699" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:48.700" starttime="20160118 10:21:48.697"></status>
</kw>
<msg timestamp="20160118 10:21:48.701" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:48.701" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,556 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:21:48.700" starttime="20160118 10:21:48.696"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.706" starttime="20160118 10:21:48.705"></status>
</kw>
<msg timestamp="20160118 10:21:48.707" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,556 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:21:48.706" starttime="20160118 10:21:48.702"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.712" starttime="20160118 10:21:48.710"></status>
</kw>
<msg timestamp="20160118 10:21:48.712" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,556 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:21:48.712" starttime="20160118 10:21:48.708"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.717" starttime="20160118 10:21:48.716"></status>
</kw>
<msg timestamp="20160118 10:21:48.718" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160118 10:21:48.718" starttime="20160118 10:21:48.713"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.725" starttime="20160118 10:21:48.724"></status>
</kw>
<msg timestamp="20160118 10:21:48.726" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160118 10:21:48.725" starttime="20160118 10:21:48.719"></status>
</kw>
<msg timestamp="20160118 10:21:48.727" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20160118 10:21:48.727" starttime="20160118 10:21:48.686"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:21:48.733" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20160118 10:21:48.733" starttime="20160118 10:21:48.732"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.735" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:21:48.735" starttime="20160118 10:21:48.734"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.737" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:21:48.737" starttime="20160118 10:21:48.736"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:21:48.740" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:21:48.741" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:21:48.742" starttime="20160118 10:21:48.739"></status>
</kw>
<msg timestamp="20160118 10:21:48.743" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:21:48.743" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,556 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:21:48.742" starttime="20160118 10:21:48.738"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.747" starttime="20160118 10:21:48.746"></status>
</kw>
<msg timestamp="20160118 10:21:48.748" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,556 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:21:48.748" starttime="20160118 10:21:48.744"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.753" starttime="20160118 10:21:48.752"></status>
</kw>
<msg timestamp="20160118 10:21:48.754" level="INFO">${return_log_entry} = 2016-01-18 10:21:48,556 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:21:48.754" starttime="20160118 10:21:48.749"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.759" starttime="20160118 10:21:48.758"></status>
</kw>
<msg timestamp="20160118 10:21:48.760" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20160118 10:21:48.760" starttime="20160118 10:21:48.755"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.767" starttime="20160118 10:21:48.766"></status>
</kw>
<msg timestamp="20160118 10:21:48.768" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20160118 10:21:48.768" starttime="20160118 10:21:48.761"></status>
</kw>
<msg timestamp="20160118 10:21:48.769" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20160118 10:21:48.769" starttime="20160118 10:21:48.728"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.775" starttime="20160118 10:21:48.774"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.776" starttime="20160118 10:21:48.775"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.778" starttime="20160118 10:21:48.777"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:21:48.784" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:21:48.785" starttime="20160118 10:21:48.782"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:48.785" starttime="20160118 10:21:48.781"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:48.786" starttime="20160118 10:21:48.778"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:48.786" starttime="20160118 10:21:48.770"></status>
</kw>
<msg timestamp="20160118 10:21:48.788" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20160118 10:21:48.789" level="INFO">${accId} = 34542</msg>
<msg timestamp="20160118 10:21:48.789" level="INFO">${bal} = 10000000</msg>
<msg timestamp="20160118 10:21:48.789" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20160118 10:21:48.789" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20160118 10:21:48.788" starttime="20160118 10:21:48.295"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${target_bal}=</arg>
<arg>Evaluate</arg>
<arg>${INITIAL_BALANCE}-${TESTSUBCRIBERS DEFAULT SLICE COSTS}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.791" starttime="20160118 10:21:48.790"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Should Be Equal As Numbers</arg>
<arg>${target_bal}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:48.793" starttime="20160118 10:21:48.792"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check: ${bal}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:48.795" level="INFO">Account balance check: 10000000</msg>
<status status="PASS" endtime="20160118 10:21:48.795" starttime="20160118 10:21:48.794"></status>
</kw>
<doc>Test will make a MOC call to the busy B party.

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>TNZ_supported</tag>
</tags>
<status status="PASS" critical="yes" endtime="20160118 10:21:48.796" starttime="20160118 10:21:32.975"></status>
</test>
<doc>Testing the prepaid MOC call to the busy called party (called party in another call)

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20160118 10:21:48.799" starttime="20160118 10:21:23.181"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20160118 10:21:48.809" starttime="20160118 10:21:23.163"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s" id="s1-s3" name="MOC PREPAID ONNET-LongDuration136s">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/MOC_PREPAID_ONNET-LongDuration136s-robot-suite.txt" id="s1-s3-s1" name="MOC PREPAID ONNET-LongDuration136s-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20160118 10:21:49.004" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:21:49.011" level="INFO">${date} = Mon Jan 18 10:21:49 CET 2016</msg>
<status status="PASS" endtime="20160118 10:21:49.008" starttime="20160118 10:21:48.998"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:49.015" level="INFO">Date and time: Mon Jan 18 10:21:49 CET 2016</msg>
<status status="PASS" endtime="20160118 10:21:49.017" starttime="20160118 10:21:49.012"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:49.021" level="INFO">Target IN machine: 10.105.119.135</msg>
<status status="PASS" endtime="20160118 10:21:49.022" starttime="20160118 10:21:49.019"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:49.083" starttime="20160118 10:21:49.080"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:49.169" starttime="20160118 10:21:49.094"></status>
</kw>
<msg timestamp="20160118 10:21:49.171" level="INFO">${ssh_connection} = 9</msg>
<status status="PASS" endtime="20160118 10:21:49.170" starttime="20160118 10:21:49.085"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:21:49.182" level="INFO">Logging into '10.105.119.135:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:21:53.818" level="INFO">Read output: Last login: Mon Jan 18 09:21:25 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:21:53.821" starttime="20160118 10:21:49.179"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:53.823" starttime="20160118 10:21:49.172"></status>
</kw>
<msg timestamp="20160118 10:21:53.829" level="INFO">${ssh_connection} = 9</msg>
<status status="PASS" endtime="20160118 10:21:53.827" starttime="20160118 10:21:49.071"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:21:53.839" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:21:53.838" starttime="20160118 10:21:53.830"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:21:53.843" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20160118 10:21:55.333" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:21:55.335" level="INFO">${output} = I-New MVNA TEMM - Core - Service 1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:21:55.334" starttime="20160118 10:21:53.841"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:55.339" starttime="20160118 10:21:55.337"></status>
</kw>
<msg timestamp="20160118 10:21:55.340" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:21:55.340" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:21:55.339" starttime="20160118 10:21:55.336"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:55.345" starttime="20160118 10:21:55.344"></status>
</kw>
<msg timestamp="20160118 10:21:55.346" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:55.345" starttime="20160118 10:21:55.341"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20160118 10:21:55.348" level="INFO">${version_r} =  1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:21:55.347" starttime="20160118 10:21:55.346"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:21:55.350" level="INFO">${version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:21:55.349" starttime="20160118 10:21:55.348"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:55.351" starttime="20160118 10:21:55.350"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:55.357" starttime="20160118 10:21:55.356"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:21:55.359" starttime="20160118 10:21:55.358"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:55.363" starttime="20160118 10:21:55.352"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:55.367" starttime="20160118 10:21:55.366"></status>
</kw>
<msg timestamp="20160118 10:21:55.368" level="INFO">${ver} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:21:55.368" starttime="20160118 10:21:55.363"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:55.370" starttime="20160118 10:21:55.369"></status>
</kw>
<msg timestamp="20160118 10:21:55.371" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20160118 10:21:55.372" level="INFO">${in_version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:21:55.371" starttime="20160118 10:21:49.042"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:55.398" starttime="20160118 10:21:55.397"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:55.445" starttime="20160118 10:21:55.402"></status>
</kw>
<msg timestamp="20160118 10:21:55.446" level="INFO">${ssh_connection} = 10</msg>
<status status="PASS" endtime="20160118 10:21:55.445" starttime="20160118 10:21:55.399"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:21:55.451" level="INFO">Logging into '10.105.119.171:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:21:55.969" level="INFO">Read output: Last login: Mon Jan 18 09:21:30 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:21:55.970" starttime="20160118 10:21:55.449"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:55.971" starttime="20160118 10:21:55.446"></status>
</kw>
<msg timestamp="20160118 10:21:55.973" level="INFO">${ssh_connection} = 10</msg>
<status status="PASS" endtime="20160118 10:21:55.972" starttime="20160118 10:21:55.393"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:21:55.977" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:21:55.977" starttime="20160118 10:21:55.973"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:21:55.979" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20160118 10:21:56.442" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:21:56.446" level="INFO">${output} = I-New UMS MVNO - XDR - Server 6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:21:56.444" starttime="20160118 10:21:55.978"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:56.454" starttime="20160118 10:21:56.450"></status>
</kw>
<msg timestamp="20160118 10:21:56.456" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:21:56.457" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:21:56.455" starttime="20160118 10:21:56.448"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:56.467" starttime="20160118 10:21:56.465"></status>
</kw>
<msg timestamp="20160118 10:21:56.469" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:56.469" starttime="20160118 10:21:56.458"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20160118 10:21:56.474" level="INFO">${version_r} =  6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:21:56.473" starttime="20160118 10:21:56.471"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:21:56.479" level="INFO">${version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:21:56.478" starttime="20160118 10:21:56.475"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:56.482" starttime="20160118 10:21:56.480"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:56.494" starttime="20160118 10:21:56.491"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:21:56.498" starttime="20160118 10:21:56.496"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:56.502" starttime="20160118 10:21:56.484"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:56.512" starttime="20160118 10:21:56.510"></status>
</kw>
<msg timestamp="20160118 10:21:56.514" level="INFO">${ver} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:21:56.513" starttime="20160118 10:21:56.503"></status>
</kw>
<msg timestamp="20160118 10:21:56.518" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20160118 10:21:56.519" level="INFO">${xdr_version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:21:56.516" starttime="20160118 10:21:55.380"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:56.578" starttime="20160118 10:21:56.576"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:56.633" starttime="20160118 10:21:56.585"></status>
</kw>
<msg timestamp="20160118 10:21:56.634" level="INFO">${ssh_connection} = 11</msg>
<status status="PASS" endtime="20160118 10:21:56.634" starttime="20160118 10:21:56.580"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:21:56.640" level="INFO">Logging into '10.105.119.125:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:21:57.175" level="INFO">Read output: Last login: Mon Jan 18 09:21:31 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@crce01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:21:57.177" starttime="20160118 10:21:56.639"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:57.178" starttime="20160118 10:21:56.635"></status>
</kw>
<msg timestamp="20160118 10:21:57.180" level="INFO">${ssh_connection} = 11</msg>
<status status="PASS" endtime="20160118 10:21:57.179" starttime="20160118 10:21:56.567"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:21:57.185" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:21:57.184" starttime="20160118 10:21:57.181"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:21:57.186" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20160118 10:21:57.389" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:21:57.391" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.1.23.31100
Negret Rating &amp; Charging Engine 6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:21:57.390" starttime="20160118 10:21:57.185"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:57.394" starttime="20160118 10:21:57.392"></status>
</kw>
<msg timestamp="20160118 10:21:57.395" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:21:57.395" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:21:57.395" starttime="20160118 10:21:57.391"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:57.400" starttime="20160118 10:21:57.399"></status>
</kw>
<msg timestamp="20160118 10:21:57.401" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:57.401" starttime="20160118 10:21:57.396"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:21:57.403" level="INFO">${version_r} =  6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:21:57.403" starttime="20160118 10:21:57.402"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:21:57.405" level="INFO">${version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:21:57.405" starttime="20160118 10:21:57.404"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:57.407" starttime="20160118 10:21:57.406"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:57.412" starttime="20160118 10:21:57.411"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:21:57.414" starttime="20160118 10:21:57.413"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:57.417" starttime="20160118 10:21:57.408"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:57.421" starttime="20160118 10:21:57.420"></status>
</kw>
<msg timestamp="20160118 10:21:57.422" level="INFO">${ver} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:21:57.422" starttime="20160118 10:21:57.418"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:57.424" starttime="20160118 10:21:57.423"></status>
</kw>
<msg timestamp="20160118 10:21:57.426" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20160118 10:21:57.426" level="INFO">${crce_version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:21:57.425" starttime="20160118 10:21:56.538"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:57.454" starttime="20160118 10:21:57.453"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:57.526" starttime="20160118 10:21:57.458"></status>
</kw>
<msg timestamp="20160118 10:21:57.529" level="INFO">${ssh_connection} = 12</msg>
<status status="PASS" endtime="20160118 10:21:57.528" starttime="20160118 10:21:57.454"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:21:57.542" level="INFO">Logging into '10.105.119.159:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:21:57.959" level="INFO">Read output: Last login: Mon Jan 18 09:21:32 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@ocs01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:21:57.960" starttime="20160118 10:21:57.539"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:57.961" starttime="20160118 10:21:57.531"></status>
</kw>
<msg timestamp="20160118 10:21:57.963" level="INFO">${ssh_connection} = 12</msg>
<status status="PASS" endtime="20160118 10:21:57.962" starttime="20160118 10:21:57.448"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:21:57.967" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:21:57.967" starttime="20160118 10:21:57.963"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:21:57.969" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20160118 10:21:58.071" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:21:58.073" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:21:58.072" starttime="20160118 10:21:57.968"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.076" starttime="20160118 10:21:58.075"></status>
</kw>
<msg timestamp="20160118 10:21:58.077" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:21:58.078" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:21:58.077" starttime="20160118 10:21:58.074"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.083" starttime="20160118 10:21:58.081"></status>
</kw>
<msg timestamp="20160118 10:21:58.084" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:21:58.083" starttime="20160118 10:21:58.078"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:21:58.086" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:21:58.085" starttime="20160118 10:21:58.084"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:21:58.088" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:21:58.087" starttime="20160118 10:21:58.086"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.089" starttime="20160118 10:21:58.088"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.095" starttime="20160118 10:21:58.094"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.098" starttime="20160118 10:21:58.095"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:58.099" starttime="20160118 10:21:58.090"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.103" starttime="20160118 10:21:58.102"></status>
</kw>
<msg timestamp="20160118 10:21:58.104" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:21:58.104" starttime="20160118 10:21:58.100"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.106" starttime="20160118 10:21:58.105"></status>
</kw>
<msg timestamp="20160118 10:21:58.107" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20160118 10:21:58.108" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:21:58.107" starttime="20160118 10:21:57.435"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:58.110" level="INFO">IN state= OK version= 1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:21:58.110" starttime="20160118 10:21:58.108"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:58.112" level="INFO">XDR state= OK version= 6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:21:58.113" starttime="20160118 10:21:58.111"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:58.115" level="INFO">CRCE state= OK version= 6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:21:58.115" starttime="20160118 10:21:58.113"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:21:58.117" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:21:58.118" starttime="20160118 10:21:58.116"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20160118 10:21:58.119" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:21:58.120" starttime="20160118 10:21:58.118"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20160118 10:21:58.121" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:21:58.122" starttime="20160118 10:21:58.120"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20160118 10:21:58.124" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:21:58.124" starttime="20160118 10:21:58.122"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20160118 10:21:58.126" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:21:58.126" starttime="20160118 10:21:58.125"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.132" starttime="20160118 10:21:58.129"></status>
</kw>
<msg timestamp="20160118 10:21:58.133" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:21:58.133" starttime="20160118 10:21:58.127"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.135" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:21:58.135" starttime="20160118 10:21:58.134"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:58.136" starttime="20160118 10:21:48.995"></status>
</kw>
<test id="s1-s3-s1-t1" name="Run MOC 136s Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.166" starttime="20160118 10:21:58.154"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1000000</arg>
</arguments>
<msg timestamp="20160118 10:21:58.168" level="INFO">${INITIAL_BALANCE} = 1000000</msg>
<status status="PASS" endtime="20160118 10:21:58.168" starttime="20160118 10:21:58.167"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.176" level="INFO">msg=crce_host=10.105.119.125</msg>
<status status="PASS" endtime="20160118 10:21:58.177" starttime="20160118 10:21:58.175"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.178" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20160118 10:21:58.179" starttime="20160118 10:21:58.177"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.180" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20160118 10:21:58.181" starttime="20160118 10:21:58.179"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.182" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20160118 10:21:58.183" starttime="20160118 10:21:58.181"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.184" level="INFO">msg=imsiRangeStart=334030880001000</msg>
<status status="PASS" endtime="20160118 10:21:58.185" starttime="20160118 10:21:58.183"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.186" level="INFO">msg=msisdnRangeStart=525516001000</msg>
<status status="PASS" endtime="20160118 10:21:58.187" starttime="20160118 10:21:58.185"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.188" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:21:58.189" starttime="20160118 10:21:58.187"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.190" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20160118 10:21:58.191" starttime="20160118 10:21:58.189"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.192" level="INFO">msg=tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:21:58.193" starttime="20160118 10:21:58.191"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.194" level="INFO">msg=balance=1000000</msg>
<status status="PASS" endtime="20160118 10:21:58.195" starttime="20160118 10:21:58.193"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.203" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:58.203" starttime="20160118 10:21:58.200"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:58.204" starttime="20160118 10:21:58.199"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.207" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:58.208" starttime="20160118 10:21:58.206"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:58.208" starttime="20160118 10:21:58.205"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.211" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:21:58.212" starttime="20160118 10:21:58.210"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:58.212" starttime="20160118 10:21:58.209"></status>
</kw>
<status status="PASS" endtime="20160118 10:21:58.213" starttime="20160118 10:21:58.196"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:21:58.215" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:21:58.215" starttime="20160118 10:21:58.213"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.217" starttime="20160118 10:21:58.216"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.219" starttime="20160118 10:21:58.218"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.221" starttime="20160118 10:21:58.220"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.222" starttime="20160118 10:21:58.221"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.224" starttime="20160118 10:21:58.223"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.226" starttime="20160118 10:21:58.224"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.227" starttime="20160118 10:21:58.226"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.229" starttime="20160118 10:21:58.228"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.231" starttime="20160118 10:21:58.230"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.233" starttime="20160118 10:21:58.232"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.235" starttime="20160118 10:21:58.234"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:21:58.237" starttime="20160118 10:21:58.235"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:21:58.239" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=1000000']</msg>
<msg timestamp="20160118 10:22:00.201" level="INFO">10:22:00,199 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:00.202" starttime="20160118 10:21:58.238"></status>
</kw>
<msg timestamp="20160118 10:22:00.204" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:00.205" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:22:00.203" starttime="20160118 10:21:58.237"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:00.212" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:22:00.212" starttime="20160118 10:22:00.210"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:00.214" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:00.214" starttime="20160118 10:22:00.213"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:00.217" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:00.216" starttime="20160118 10:22:00.215"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:00.220" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:00.220" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:00.221" starttime="20160118 10:22:00.218"></status>
</kw>
<msg timestamp="20160118 10:22:00.222" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:00.222" level="INFO">${return_log_entry} = 2016-01-18 10:22:00,199 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:00.222" starttime="20160118 10:22:00.217"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:00.228" starttime="20160118 10:22:00.227"></status>
</kw>
<msg timestamp="20160118 10:22:00.229" level="INFO">${return_log_entry} = 2016-01-18 10:22:00,199 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:00.228" starttime="20160118 10:22:00.223"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:00.234" starttime="20160118 10:22:00.233"></status>
</kw>
<msg timestamp="20160118 10:22:00.235" level="INFO">${return_log_entry} = 2016-01-18 10:22:00,199 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:00.234" starttime="20160118 10:22:00.230"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:00.240" starttime="20160118 10:22:00.238"></status>
</kw>
<msg timestamp="20160118 10:22:00.241" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:00.240" starttime="20160118 10:22:00.235"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:00.248" starttime="20160118 10:22:00.247"></status>
</kw>
<msg timestamp="20160118 10:22:00.249" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:00.248" starttime="20160118 10:22:00.242"></status>
</kw>
<msg timestamp="20160118 10:22:00.250" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:00.250" starttime="20160118 10:22:00.206"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:00.256" starttime="20160118 10:22:00.254"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:00.257" starttime="20160118 10:22:00.256"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:00.259" starttime="20160118 10:22:00.258"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:22:00.265" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:22:00.266" starttime="20160118 10:22:00.264"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:00.266" starttime="20160118 10:22:00.262"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:00.267" starttime="20160118 10:22:00.259"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:00.268" starttime="20160118 10:22:00.251"></status>
</kw>
<msg timestamp="20160118 10:22:00.269" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20160118 10:22:00.268" starttime="20160118 10:21:58.170"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20160118 10:22:00.271" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:00.272" starttime="20160118 10:22:00.270"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:00.273" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20160118 10:22:00.274" starttime="20160118 10:22:00.272"></status>
</kw>
<kw type="kw" name="${calling_int} = BuiltIn.Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<msg timestamp="20160118 10:22:00.276" level="INFO">Argument types are:
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160118 10:22:00.277" level="INFO">${calling_int} = 525516001000</msg>
<status status="PASS" endtime="20160118 10:22:00.276" starttime="20160118 10:22:00.275"></status>
</kw>
<kw type="kw" name="${called_party} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${calling_int}+1</arg>
</arguments>
<msg timestamp="20160118 10:22:00.281" level="INFO">${called_party} = 525516001001</msg>
<status status="PASS" endtime="20160118 10:22:00.281" starttime="20160118 10:22:00.277"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC 1s *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:00.283" starttime="20160118 10:22:00.282"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the MOC call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:00.284" level="INFO">Running the MOC call...</msg>
<status status="PASS" endtime="20160118 10:22:00.285" starttime="20160118 10:22:00.283"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC 136s">
<doc>Runs a standard MOC 136s session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${called_party}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc136s</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20160118 10:22:00.302" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv</msg>
<status status="PASS" endtime="20160118 10:22:00.301" starttime="20160118 10:22:00.300"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20160118 10:22:00.304" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv</msg>
<status status="PASS" endtime="20160118 10:22:00.304" starttime="20160118 10:22:00.302"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20160118 10:22:00.306" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini</msg>
<status status="PASS" endtime="20160118 10:22:00.306" starttime="20160118 10:22:00.305"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20160118 10:22:00.309" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc136s.cgs</msg>
<status status="PASS" endtime="20160118 10:22:00.308" starttime="20160118 10:22:00.307"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:00.310" starttime="20160118 10:22:00.309"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:22:00.313" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:00.314" starttime="20160118 10:22:00.311"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:00.315" starttime="20160118 10:22:00.314"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20160118 10:22:00.318" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:00.319" starttime="20160118 10:22:00.316"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:22:00.322" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:00.322" starttime="20160118 10:22:00.319"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:00.324" starttime="20160118 10:22:00.323"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20160118 10:22:00.326" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:00.327" starttime="20160118 10:22:00.324"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20160118 10:22:00.330" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:00.330" starttime="20160118 10:22:00.327"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:00.332" starttime="20160118 10:22:00.331"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20160118 10:22:00.340" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc136s.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:22:15.772" level="INFO">${rc} = 1</msg>
<status status="PASS" endtime="20160118 10:22:15.769" starttime="20160118 10:22:00.333"></status>
</kw>
<msg timestamp="20160118 10:22:15.776" level="INFO">${rc} = 1</msg>
<status status="PASS" endtime="20160118 10:22:15.774" starttime="20160118 10:22:00.294"></status>
</kw>
<msg timestamp="20160118 10:22:15.779" level="INFO">${rc} = 1</msg>
<status status="PASS" endtime="20160118 10:22:15.778" starttime="20160118 10:22:00.287"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:15.783" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20160118 10:22:15.785" starttime="20160118 10:22:15.781"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20160118 10:22:15.789" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160118 10:22:15.829" level="FAIL">CG Session ended with rc 1: 1.0 != 0.0</msg>
<status status="FAIL" endtime="20160118 10:22:15.831" starttime="20160118 10:22:15.786"></status>
</kw>
<doc>Test will make a MOC call, duration 136s.

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>SMARTSPACE_supported</tag>
<tag>TNZ_supported</tag>
</tags>
<status status="FAIL" critical="yes" endtime="20160118 10:22:15.834" starttime="20160118 10:21:58.137">CG Session ended with rc 1: 1.0 != 0.0</status>
</test>
<doc>Testing the prepaid MOC call, duration is 136s - longer than one slice (more than 60s)

============================================================</doc>
<metadata>
</metadata>
<status status="FAIL" endtime="20160118 10:22:15.843" starttime="20160118 10:21:48.831"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="FAIL" endtime="20160118 10:22:15.861" starttime="20160118 10:21:48.814"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s" id="s1-s4" name="MOC PREPAID ONNET-LongDuration196s">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration196s/MOC_PREPAID_ONNET-LongDuration196s-robot-suite.txt" id="s1-s4-s1" name="MOC PREPAID ONNET-LongDuration196s-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20160118 10:22:16.094" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:22:16.099" level="INFO">${date} = Mon Jan 18 10:22:16 CET 2016</msg>
<status status="PASS" endtime="20160118 10:22:16.098" starttime="20160118 10:22:16.089"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:16.105" level="INFO">Date and time: Mon Jan 18 10:22:16 CET 2016</msg>
<status status="PASS" endtime="20160118 10:22:16.106" starttime="20160118 10:22:16.102"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:16.112" level="INFO">Target IN machine: 10.105.119.135</msg>
<status status="PASS" endtime="20160118 10:22:16.113" starttime="20160118 10:22:16.109"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:16.178" starttime="20160118 10:22:16.173"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:16.265" starttime="20160118 10:22:16.188"></status>
</kw>
<msg timestamp="20160118 10:22:16.268" level="INFO">${ssh_connection} = 13</msg>
<status status="PASS" endtime="20160118 10:22:16.267" starttime="20160118 10:22:16.180"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:22:16.279" level="INFO">Logging into '10.105.119.135:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:22:16.859" level="INFO">Read output: Last login: Mon Jan 18 09:21:52 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:22:16.861" starttime="20160118 10:22:16.276"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:16.862" starttime="20160118 10:22:16.269"></status>
</kw>
<msg timestamp="20160118 10:22:16.866" level="INFO">${ssh_connection} = 13</msg>
<status status="PASS" endtime="20160118 10:22:16.865" starttime="20160118 10:22:16.163"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:22:16.874" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:22:16.873" starttime="20160118 10:22:16.867"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:22:16.876" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20160118 10:22:17.408" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:22:17.411" level="INFO">${output} = I-New MVNA TEMM - Core - Service 1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:22:17.409" starttime="20160118 10:22:16.875"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:17.414" starttime="20160118 10:22:17.413"></status>
</kw>
<msg timestamp="20160118 10:22:17.415" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:22:17.416" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:22:17.415" starttime="20160118 10:22:17.412"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:17.421" starttime="20160118 10:22:17.420"></status>
</kw>
<msg timestamp="20160118 10:22:17.422" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:17.421" starttime="20160118 10:22:17.416"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20160118 10:22:17.424" level="INFO">${version_r} =  1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:22:17.423" starttime="20160118 10:22:17.422"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:22:17.426" level="INFO">${version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:22:17.426" starttime="20160118 10:22:17.425"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:17.427" starttime="20160118 10:22:17.427"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:17.433" starttime="20160118 10:22:17.432"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:22:17.435" starttime="20160118 10:22:17.434"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:17.436" starttime="20160118 10:22:17.429"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:17.442" starttime="20160118 10:22:17.440"></status>
</kw>
<msg timestamp="20160118 10:22:17.443" level="INFO">${ver} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:22:17.442" starttime="20160118 10:22:17.437"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:17.444" starttime="20160118 10:22:17.443"></status>
</kw>
<msg timestamp="20160118 10:22:17.446" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20160118 10:22:17.446" level="INFO">${in_version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:22:17.445" starttime="20160118 10:22:16.133"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:17.514" starttime="20160118 10:22:17.512"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:17.569" starttime="20160118 10:22:17.523"></status>
</kw>
<msg timestamp="20160118 10:22:17.571" level="INFO">${ssh_connection} = 14</msg>
<status status="PASS" endtime="20160118 10:22:17.570" starttime="20160118 10:22:17.516"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:22:17.576" level="INFO">Logging into '10.105.119.171:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:22:18.101" level="INFO">Read output: Last login: Mon Jan 18 09:21:55 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:22:18.103" starttime="20160118 10:22:17.575"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:18.104" starttime="20160118 10:22:17.571"></status>
</kw>
<msg timestamp="20160118 10:22:18.106" level="INFO">${ssh_connection} = 14</msg>
<status status="PASS" endtime="20160118 10:22:18.105" starttime="20160118 10:22:17.502"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:22:18.111" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:22:18.110" starttime="20160118 10:22:18.107"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:22:18.113" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20160118 10:22:18.560" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:22:18.562" level="INFO">${output} = I-New UMS MVNO - XDR - Server 6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:22:18.561" starttime="20160118 10:22:18.112"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:18.570" starttime="20160118 10:22:18.566"></status>
</kw>
<msg timestamp="20160118 10:22:18.572" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:22:18.573" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:22:18.571" starttime="20160118 10:22:18.564"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:18.583" starttime="20160118 10:22:18.581"></status>
</kw>
<msg timestamp="20160118 10:22:18.585" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:18.584" starttime="20160118 10:22:18.574"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20160118 10:22:18.589" level="INFO">${version_r} =  6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:22:18.588" starttime="20160118 10:22:18.587"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:22:18.594" level="INFO">${version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:22:18.593" starttime="20160118 10:22:18.591"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:18.597" starttime="20160118 10:22:18.595"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:18.609" starttime="20160118 10:22:18.607"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:22:18.614" starttime="20160118 10:22:18.611"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:18.617" starttime="20160118 10:22:18.600"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:18.627" starttime="20160118 10:22:18.625"></status>
</kw>
<msg timestamp="20160118 10:22:18.630" level="INFO">${ver} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:22:18.629" starttime="20160118 10:22:18.619"></status>
</kw>
<msg timestamp="20160118 10:22:18.633" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20160118 10:22:18.634" level="INFO">${xdr_version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:22:18.632" starttime="20160118 10:22:17.470"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:18.691" starttime="20160118 10:22:18.689"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:18.744" starttime="20160118 10:22:18.699"></status>
</kw>
<msg timestamp="20160118 10:22:18.746" level="INFO">${ssh_connection} = 15</msg>
<status status="PASS" endtime="20160118 10:22:18.745" starttime="20160118 10:22:18.692"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:22:18.751" level="INFO">Logging into '10.105.119.125:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:22:19.283" level="INFO">Read output: Last login: Mon Jan 18 09:21:56 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@crce01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:22:19.284" starttime="20160118 10:22:18.750"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:19.285" starttime="20160118 10:22:18.746"></status>
</kw>
<msg timestamp="20160118 10:22:19.288" level="INFO">${ssh_connection} = 15</msg>
<status status="PASS" endtime="20160118 10:22:19.287" starttime="20160118 10:22:18.679"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:22:19.293" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:22:19.293" starttime="20160118 10:22:19.289"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:22:19.295" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20160118 10:22:19.527" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:22:19.530" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.1.23.31100
Negret Rating &amp; Charging Engine 6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:22:19.529" starttime="20160118 10:22:19.294"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:19.538" starttime="20160118 10:22:19.534"></status>
</kw>
<msg timestamp="20160118 10:22:19.540" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:22:19.541" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:22:19.539" starttime="20160118 10:22:19.531"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:19.551" starttime="20160118 10:22:19.549"></status>
</kw>
<msg timestamp="20160118 10:22:19.553" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:19.552" starttime="20160118 10:22:19.542"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:22:19.558" level="INFO">${version_r} =  6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:22:19.557" starttime="20160118 10:22:19.555"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:22:19.563" level="INFO">${version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:22:19.562" starttime="20160118 10:22:19.559"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:19.566" starttime="20160118 10:22:19.564"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:19.579" starttime="20160118 10:22:19.576"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:22:19.585" starttime="20160118 10:22:19.580"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:19.587" starttime="20160118 10:22:19.569"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:19.596" starttime="20160118 10:22:19.594"></status>
</kw>
<msg timestamp="20160118 10:22:19.599" level="INFO">${ver} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:22:19.598" starttime="20160118 10:22:19.588"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:19.602" starttime="20160118 10:22:19.600"></status>
</kw>
<msg timestamp="20160118 10:22:19.606" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20160118 10:22:19.607" level="INFO">${crce_version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:22:19.604" starttime="20160118 10:22:18.653"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:19.664" starttime="20160118 10:22:19.661"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:19.717" starttime="20160118 10:22:19.672"></status>
</kw>
<msg timestamp="20160118 10:22:19.720" level="INFO">${ssh_connection} = 16</msg>
<status status="PASS" endtime="20160118 10:22:19.719" starttime="20160118 10:22:19.665"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:22:19.731" level="INFO">Logging into '10.105.119.159:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:22:20.148" level="INFO">Read output: Last login: Mon Jan 18 09:21:57 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@ocs01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:22:20.150" starttime="20160118 10:22:19.729"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:20.152" starttime="20160118 10:22:19.721"></status>
</kw>
<msg timestamp="20160118 10:22:20.157" level="INFO">${ssh_connection} = 16</msg>
<status status="PASS" endtime="20160118 10:22:20.156" starttime="20160118 10:22:19.652"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:22:20.167" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:22:20.166" starttime="20160118 10:22:20.159"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:22:20.171" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20160118 10:22:20.240" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:22:20.242" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:22:20.241" starttime="20160118 10:22:20.169"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.245" starttime="20160118 10:22:20.244"></status>
</kw>
<msg timestamp="20160118 10:22:20.246" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:22:20.247" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:22:20.246" starttime="20160118 10:22:20.242"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.252" starttime="20160118 10:22:20.251"></status>
</kw>
<msg timestamp="20160118 10:22:20.253" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:20.252" starttime="20160118 10:22:20.247"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:22:20.255" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:22:20.254" starttime="20160118 10:22:20.253"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:22:20.257" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:22:20.256" starttime="20160118 10:22:20.255"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.258" starttime="20160118 10:22:20.257"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.265" starttime="20160118 10:22:20.264"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.267" starttime="20160118 10:22:20.266"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:20.269" starttime="20160118 10:22:20.259"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.274" starttime="20160118 10:22:20.273"></status>
</kw>
<msg timestamp="20160118 10:22:20.275" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:22:20.274" starttime="20160118 10:22:20.270"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.276" starttime="20160118 10:22:20.275"></status>
</kw>
<msg timestamp="20160118 10:22:20.278" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20160118 10:22:20.279" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:22:20.277" starttime="20160118 10:22:19.625"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:20.280" level="INFO">IN state= OK version= 1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:22:20.281" starttime="20160118 10:22:20.279"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:20.283" level="INFO">XDR state= OK version= 6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:22:20.284" starttime="20160118 10:22:20.282"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:20.286" level="INFO">CRCE state= OK version= 6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:22:20.286" starttime="20160118 10:22:20.284"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:20.288" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:22:20.289" starttime="20160118 10:22:20.287"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20160118 10:22:20.290" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:20.291" starttime="20160118 10:22:20.289"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20160118 10:22:20.293" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:20.293" starttime="20160118 10:22:20.291"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20160118 10:22:20.295" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:20.295" starttime="20160118 10:22:20.294"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20160118 10:22:20.297" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:20.297" starttime="20160118 10:22:20.296"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.304" starttime="20160118 10:22:20.301"></status>
</kw>
<msg timestamp="20160118 10:22:20.305" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:22:20.304" starttime="20160118 10:22:20.298"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.307" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:22:20.307" starttime="20160118 10:22:20.305"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:20.308" starttime="20160118 10:22:16.086"></status>
</kw>
<test id="s1-s4-s1-t1" name="Run MOC 196s Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.314" starttime="20160118 10:22:20.313"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1000000</arg>
</arguments>
<msg timestamp="20160118 10:22:20.316" level="INFO">${INITIAL_BALANCE} = 1000000</msg>
<status status="PASS" endtime="20160118 10:22:20.316" starttime="20160118 10:22:20.315"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.324" level="INFO">msg=crce_host=10.105.119.125</msg>
<status status="PASS" endtime="20160118 10:22:20.325" starttime="20160118 10:22:20.323"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.326" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20160118 10:22:20.327" starttime="20160118 10:22:20.325"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.328" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20160118 10:22:20.329" starttime="20160118 10:22:20.327"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.331" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20160118 10:22:20.331" starttime="20160118 10:22:20.330"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.333" level="INFO">msg=imsiRangeStart=334030880001000</msg>
<status status="PASS" endtime="20160118 10:22:20.333" starttime="20160118 10:22:20.332"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.335" level="INFO">msg=msisdnRangeStart=525516001000</msg>
<status status="PASS" endtime="20160118 10:22:20.335" starttime="20160118 10:22:20.334"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.337" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:22:20.337" starttime="20160118 10:22:20.336"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.339" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20160118 10:22:20.339" starttime="20160118 10:22:20.338"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.341" level="INFO">msg=tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:22:20.341" starttime="20160118 10:22:20.340"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.343" level="INFO">msg=balance=1000000</msg>
<status status="PASS" endtime="20160118 10:22:20.344" starttime="20160118 10:22:20.342"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.351" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:20.351" starttime="20160118 10:22:20.349"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:20.352" starttime="20160118 10:22:20.348"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.355" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:20.355" starttime="20160118 10:22:20.353"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:20.356" starttime="20160118 10:22:20.352"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.359" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:20.360" starttime="20160118 10:22:20.358"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:20.360" starttime="20160118 10:22:20.357"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:20.361" starttime="20160118 10:22:20.345"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:22:20.363" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:22:20.364" starttime="20160118 10:22:20.361"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.365" starttime="20160118 10:22:20.364"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.367" starttime="20160118 10:22:20.366"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.369" starttime="20160118 10:22:20.368"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.371" starttime="20160118 10:22:20.370"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.372" starttime="20160118 10:22:20.371"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.374" starttime="20160118 10:22:20.373"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.376" starttime="20160118 10:22:20.375"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.378" starttime="20160118 10:22:20.376"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.379" starttime="20160118 10:22:20.378"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.381" starttime="20160118 10:22:20.380"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.383" starttime="20160118 10:22:20.382"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:20.385" starttime="20160118 10:22:20.384"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:22:20.387" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=1000000']</msg>
<msg timestamp="20160118 10:22:22.853" level="INFO">10:22:22,851 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:22.854" starttime="20160118 10:22:20.386"></status>
</kw>
<msg timestamp="20160118 10:22:22.856" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:22.857" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:22:22.855" starttime="20160118 10:22:20.386"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:22.864" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:22:22.863" starttime="20160118 10:22:22.862"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:22.866" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:22.865" starttime="20160118 10:22:22.864"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:22.868" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:22.867" starttime="20160118 10:22:22.866"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:22.871" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:22.871" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:22.872" starttime="20160118 10:22:22.869"></status>
</kw>
<msg timestamp="20160118 10:22:22.873" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:22.873" level="INFO">${return_log_entry} = 2016-01-18 10:22:22,851 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:22.872" starttime="20160118 10:22:22.868"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:22.879" starttime="20160118 10:22:22.877"></status>
</kw>
<msg timestamp="20160118 10:22:22.880" level="INFO">${return_log_entry} = 2016-01-18 10:22:22,851 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:22.879" starttime="20160118 10:22:22.874"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:22.884" starttime="20160118 10:22:22.883"></status>
</kw>
<msg timestamp="20160118 10:22:22.885" level="INFO">${return_log_entry} = 2016-01-18 10:22:22,851 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:22.885" starttime="20160118 10:22:22.880"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:22.890" starttime="20160118 10:22:22.889"></status>
</kw>
<msg timestamp="20160118 10:22:22.891" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:22.891" starttime="20160118 10:22:22.886"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:22.897" starttime="20160118 10:22:22.896"></status>
</kw>
<msg timestamp="20160118 10:22:22.898" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:22.898" starttime="20160118 10:22:22.892"></status>
</kw>
<msg timestamp="20160118 10:22:22.900" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:22.899" starttime="20160118 10:22:22.858"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:22.905" starttime="20160118 10:22:22.904"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:22.906" starttime="20160118 10:22:22.905"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:22.908" starttime="20160118 10:22:22.907"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:22:22.914" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:22:22.915" starttime="20160118 10:22:22.912"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:22.915" starttime="20160118 10:22:22.911"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:22.916" starttime="20160118 10:22:22.909"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:22.916" starttime="20160118 10:22:22.901"></status>
</kw>
<msg timestamp="20160118 10:22:22.918" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20160118 10:22:22.917" starttime="20160118 10:22:20.318"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20160118 10:22:22.920" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:22.920" starttime="20160118 10:22:22.919"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:22.922" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20160118 10:22:22.922" starttime="20160118 10:22:22.921"></status>
</kw>
<kw type="kw" name="${calling_int} = BuiltIn.Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<msg timestamp="20160118 10:22:22.924" level="INFO">Argument types are:
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160118 10:22:22.925" level="INFO">${calling_int} = 525516001000</msg>
<status status="PASS" endtime="20160118 10:22:22.925" starttime="20160118 10:22:22.923"></status>
</kw>
<kw type="kw" name="${called_party} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${calling_int}+1</arg>
</arguments>
<msg timestamp="20160118 10:22:22.929" level="INFO">${called_party} = 525516001001</msg>
<status status="PASS" endtime="20160118 10:22:22.928" starttime="20160118 10:22:22.926"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC 1s *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:22.930" starttime="20160118 10:22:22.929"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the MOC call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:22.932" level="INFO">Running the MOC call...</msg>
<status status="PASS" endtime="20160118 10:22:22.932" starttime="20160118 10:22:22.931"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC 196s">
<doc>Runs a standard MOC 196s session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${called_party}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc196s</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20160118 10:22:22.948" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-subscribers.csv</msg>
<status status="PASS" endtime="20160118 10:22:22.947" starttime="20160118 10:22:22.946"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20160118 10:22:22.950" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv</msg>
<status status="PASS" endtime="20160118 10:22:22.949" starttime="20160118 10:22:22.948"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20160118 10:22:22.952" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini</msg>
<status status="PASS" endtime="20160118 10:22:22.952" starttime="20160118 10:22:22.950"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20160118 10:22:22.954" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc196s.cgs</msg>
<status status="PASS" endtime="20160118 10:22:22.954" starttime="20160118 10:22:22.953"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:22.956" starttime="20160118 10:22:22.955"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:22:22.959" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:22.959" starttime="20160118 10:22:22.956"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:22.961" starttime="20160118 10:22:22.960"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20160118 10:22:22.963" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:22.964" starttime="20160118 10:22:22.961"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:22:22.967" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:22.967" starttime="20160118 10:22:22.964"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:22.968" starttime="20160118 10:22:22.968"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20160118 10:22:22.971" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:22.971" starttime="20160118 10:22:22.969"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20160118 10:22:22.974" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:22.975" starttime="20160118 10:22:22.972"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:22.976" starttime="20160118 10:22:22.975"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20160118 10:22:22.985" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc196s.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:22:38.459" level="INFO">${rc} = 1</msg>
<status status="PASS" endtime="20160118 10:22:38.457" starttime="20160118 10:22:22.977"></status>
</kw>
<msg timestamp="20160118 10:22:38.461" level="INFO">${rc} = 1</msg>
<status status="PASS" endtime="20160118 10:22:38.460" starttime="20160118 10:22:22.941"></status>
</kw>
<msg timestamp="20160118 10:22:38.462" level="INFO">${rc} = 1</msg>
<status status="PASS" endtime="20160118 10:22:38.462" starttime="20160118 10:22:22.934"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:38.464" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20160118 10:22:38.465" starttime="20160118 10:22:38.463"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20160118 10:22:38.467" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160118 10:22:38.469" level="FAIL">CG Session ended with rc 1: 1.0 != 0.0</msg>
<status status="FAIL" endtime="20160118 10:22:38.469" starttime="20160118 10:22:38.466"></status>
</kw>
<doc>Test will make a MOC call, duration 196s.

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>MTEL_supported</tag>
</tags>
<status status="FAIL" critical="yes" endtime="20160118 10:22:38.470" starttime="20160118 10:22:20.309">CG Session ended with rc 1: 1.0 != 0.0</status>
</test>
<doc>Testing the prepaid MOC call, duration is 196s - longer than one slice (more than 60s)

============================================================</doc>
<metadata>
</metadata>
<status status="FAIL" endtime="20160118 10:22:38.473" starttime="20160118 10:22:15.913"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="FAIL" endtime="20160118 10:22:38.480" starttime="20160118 10:22:15.873"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer" id="s1-s5" name="MOC PREPAID ONNET-NoAnswer">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoAnswer/MOC_PREPAID_ONNET-NoAnswer-robot-suite.txt" id="s1-s5-s1" name="MOC PREPAID ONNET-NoAnswer-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20160118 10:22:38.650" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:22:38.653" level="INFO">${date} = Mon Jan 18 10:22:38 CET 2016</msg>
<status status="PASS" endtime="20160118 10:22:38.653" starttime="20160118 10:22:38.647"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:38.662" level="INFO">Date and time: Mon Jan 18 10:22:38 CET 2016</msg>
<status status="PASS" endtime="20160118 10:22:38.663" starttime="20160118 10:22:38.661"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:38.664" level="INFO">Target IN machine: 10.105.119.135</msg>
<status status="PASS" endtime="20160118 10:22:38.665" starttime="20160118 10:22:38.663"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:38.690" starttime="20160118 10:22:38.689"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:38.743" starttime="20160118 10:22:38.694"></status>
</kw>
<msg timestamp="20160118 10:22:38.744" level="INFO">${ssh_connection} = 17</msg>
<status status="PASS" endtime="20160118 10:22:38.743" starttime="20160118 10:22:38.691"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:22:38.750" level="INFO">Logging into '10.105.119.135:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:22:39.217" level="INFO">Read output: Last login: Mon Jan 18 09:22:16 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:22:39.218" starttime="20160118 10:22:38.748"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:39.220" starttime="20160118 10:22:38.745"></status>
</kw>
<msg timestamp="20160118 10:22:39.222" level="INFO">${ssh_connection} = 17</msg>
<status status="PASS" endtime="20160118 10:22:39.221" starttime="20160118 10:22:38.685"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:22:39.226" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:22:39.226" starttime="20160118 10:22:39.223"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:22:39.228" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20160118 10:22:39.861" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:22:39.863" level="INFO">${output} = I-New MVNA TEMM - Core - Service 1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:22:39.862" starttime="20160118 10:22:39.227"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:39.867" starttime="20160118 10:22:39.865"></status>
</kw>
<msg timestamp="20160118 10:22:39.869" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:22:39.869" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:22:39.868" starttime="20160118 10:22:39.864"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:39.876" starttime="20160118 10:22:39.875"></status>
</kw>
<msg timestamp="20160118 10:22:39.877" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:39.877" starttime="20160118 10:22:39.870"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20160118 10:22:39.879" level="INFO">${version_r} =  1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:22:39.879" starttime="20160118 10:22:39.878"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:22:39.882" level="INFO">${version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:22:39.881" starttime="20160118 10:22:39.880"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:39.883" starttime="20160118 10:22:39.882"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:39.888" starttime="20160118 10:22:39.887"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:22:39.890" starttime="20160118 10:22:39.889"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:39.892" starttime="20160118 10:22:39.884"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:39.896" starttime="20160118 10:22:39.895"></status>
</kw>
<msg timestamp="20160118 10:22:39.897" level="INFO">${ver} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:22:39.897" starttime="20160118 10:22:39.893"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:39.899" starttime="20160118 10:22:39.898"></status>
</kw>
<msg timestamp="20160118 10:22:39.901" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20160118 10:22:39.901" level="INFO">${in_version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:22:39.900" starttime="20160118 10:22:38.673"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:39.926" starttime="20160118 10:22:39.925"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:39.973" starttime="20160118 10:22:39.930"></status>
</kw>
<msg timestamp="20160118 10:22:39.974" level="INFO">${ssh_connection} = 18</msg>
<status status="PASS" endtime="20160118 10:22:39.974" starttime="20160118 10:22:39.927"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:22:39.979" level="INFO">Logging into '10.105.119.171:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:22:40.533" level="INFO">Read output: Last login: Mon Jan 18 09:22:17 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:22:40.534" starttime="20160118 10:22:39.978"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:40.535" starttime="20160118 10:22:39.975"></status>
</kw>
<msg timestamp="20160118 10:22:40.537" level="INFO">${ssh_connection} = 18</msg>
<status status="PASS" endtime="20160118 10:22:40.537" starttime="20160118 10:22:39.921"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:22:40.542" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:22:40.542" starttime="20160118 10:22:40.538"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:22:40.544" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20160118 10:22:40.993" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:22:40.994" level="INFO">${output} = I-New UMS MVNO - XDR - Server 6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:22:40.994" starttime="20160118 10:22:40.543"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:40.998" starttime="20160118 10:22:40.996"></status>
</kw>
<msg timestamp="20160118 10:22:40.999" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:22:40.999" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:22:40.998" starttime="20160118 10:22:40.995"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.004" starttime="20160118 10:22:41.003"></status>
</kw>
<msg timestamp="20160118 10:22:41.005" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:41.005" starttime="20160118 10:22:41.000"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20160118 10:22:41.007" level="INFO">${version_r} =  6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:22:41.007" starttime="20160118 10:22:41.006"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:22:41.009" level="INFO">${version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:22:41.009" starttime="20160118 10:22:41.008"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.011" starttime="20160118 10:22:41.010"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.016" starttime="20160118 10:22:41.015"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.018" starttime="20160118 10:22:41.017"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:41.020" starttime="20160118 10:22:41.012"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.024" starttime="20160118 10:22:41.023"></status>
</kw>
<msg timestamp="20160118 10:22:41.025" level="INFO">${ver} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:22:41.025" starttime="20160118 10:22:41.020"></status>
</kw>
<msg timestamp="20160118 10:22:41.027" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20160118 10:22:41.027" level="INFO">${xdr_version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:22:41.026" starttime="20160118 10:22:39.909"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.064" starttime="20160118 10:22:41.062"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.135" starttime="20160118 10:22:41.068"></status>
</kw>
<msg timestamp="20160118 10:22:41.136" level="INFO">${ssh_connection} = 19</msg>
<status status="PASS" endtime="20160118 10:22:41.135" starttime="20160118 10:22:41.064"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:22:41.140" level="INFO">Logging into '10.105.119.125:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:22:41.644" level="INFO">Read output: Last login: Mon Jan 18 09:22:19 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@crce01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:22:41.644" starttime="20160118 10:22:41.139"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:41.645" starttime="20160118 10:22:41.136"></status>
</kw>
<msg timestamp="20160118 10:22:41.646" level="INFO">${ssh_connection} = 19</msg>
<status status="PASS" endtime="20160118 10:22:41.646" starttime="20160118 10:22:41.058"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:22:41.650" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:22:41.650" starttime="20160118 10:22:41.647"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:22:41.652" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20160118 10:22:41.884" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:22:41.886" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.1.23.31100
Negret Rating &amp; Charging Engine 6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:22:41.885" starttime="20160118 10:22:41.651"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.889" starttime="20160118 10:22:41.888"></status>
</kw>
<msg timestamp="20160118 10:22:41.890" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:22:41.890" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:22:41.890" starttime="20160118 10:22:41.886"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.895" starttime="20160118 10:22:41.894"></status>
</kw>
<msg timestamp="20160118 10:22:41.896" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:41.896" starttime="20160118 10:22:41.891"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:22:41.898" level="INFO">${version_r} =  6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:22:41.898" starttime="20160118 10:22:41.897"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:22:41.900" level="INFO">${version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:22:41.900" starttime="20160118 10:22:41.899"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.901" starttime="20160118 10:22:41.901"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.907" starttime="20160118 10:22:41.905"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.909" starttime="20160118 10:22:41.907"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:41.910" starttime="20160118 10:22:41.902"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.914" starttime="20160118 10:22:41.913"></status>
</kw>
<msg timestamp="20160118 10:22:41.915" level="INFO">${ver} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:22:41.915" starttime="20160118 10:22:41.911"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.917" starttime="20160118 10:22:41.916"></status>
</kw>
<msg timestamp="20160118 10:22:41.918" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20160118 10:22:41.918" level="INFO">${crce_version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:22:41.918" starttime="20160118 10:22:41.035"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.944" starttime="20160118 10:22:41.943"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:41.977" starttime="20160118 10:22:41.947"></status>
</kw>
<msg timestamp="20160118 10:22:41.978" level="INFO">${ssh_connection} = 20</msg>
<status status="PASS" endtime="20160118 10:22:41.978" starttime="20160118 10:22:41.944"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:22:41.983" level="INFO">Logging into '10.105.119.159:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:22:42.469" level="INFO">Read output: Last login: Mon Jan 18 09:22:20 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@ocs01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:22:42.470" starttime="20160118 10:22:41.982"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:42.471" starttime="20160118 10:22:41.979"></status>
</kw>
<msg timestamp="20160118 10:22:42.473" level="INFO">${ssh_connection} = 20</msg>
<status status="PASS" endtime="20160118 10:22:42.473" starttime="20160118 10:22:41.939"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:22:42.478" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:22:42.478" starttime="20160118 10:22:42.474"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:22:42.480" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20160118 10:22:42.555" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:22:42.556" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:22:42.556" starttime="20160118 10:22:42.479"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.559" starttime="20160118 10:22:42.558"></status>
</kw>
<msg timestamp="20160118 10:22:42.560" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:22:42.561" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:22:42.560" starttime="20160118 10:22:42.557"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.565" starttime="20160118 10:22:42.564"></status>
</kw>
<msg timestamp="20160118 10:22:42.566" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:42.565" starttime="20160118 10:22:42.561"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:22:42.568" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:22:42.567" starttime="20160118 10:22:42.566"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:22:42.570" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:22:42.569" starttime="20160118 10:22:42.568"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.571" starttime="20160118 10:22:42.570"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.577" starttime="20160118 10:22:42.576"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.580" starttime="20160118 10:22:42.578"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:42.581" starttime="20160118 10:22:42.572"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.586" starttime="20160118 10:22:42.585"></status>
</kw>
<msg timestamp="20160118 10:22:42.587" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:22:42.586" starttime="20160118 10:22:42.581"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.588" starttime="20160118 10:22:42.587"></status>
</kw>
<msg timestamp="20160118 10:22:42.590" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20160118 10:22:42.590" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:22:42.589" starttime="20160118 10:22:41.927"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:42.592" level="INFO">IN state= OK version= 1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:22:42.593" starttime="20160118 10:22:42.591"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:42.595" level="INFO">XDR state= OK version= 6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:22:42.595" starttime="20160118 10:22:42.593"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:42.597" level="INFO">CRCE state= OK version= 6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:22:42.598" starttime="20160118 10:22:42.596"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:42.599" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:22:42.600" starttime="20160118 10:22:42.598"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20160118 10:22:42.602" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:42.602" starttime="20160118 10:22:42.600"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20160118 10:22:42.604" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:42.604" starttime="20160118 10:22:42.603"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20160118 10:22:42.606" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:42.606" starttime="20160118 10:22:42.605"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20160118 10:22:42.608" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:42.608" starttime="20160118 10:22:42.607"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.614" starttime="20160118 10:22:42.612"></status>
</kw>
<msg timestamp="20160118 10:22:42.615" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:22:42.615" starttime="20160118 10:22:42.609"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.617" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:22:42.618" starttime="20160118 10:22:42.616"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:42.618" starttime="20160118 10:22:38.644"></status>
</kw>
<test id="s1-s5-s1-t1" name="Run MOC NoAnswer Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.624" starttime="20160118 10:22:42.624"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<msg timestamp="20160118 10:22:42.626" level="INFO">${INITIAL_BALANCE} = 10000000</msg>
<status status="PASS" endtime="20160118 10:22:42.626" starttime="20160118 10:22:42.625"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>1</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.634" level="INFO">msg=crce_host=10.105.119.125</msg>
<status status="PASS" endtime="20160118 10:22:42.634" starttime="20160118 10:22:42.633"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.636" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20160118 10:22:42.636" starttime="20160118 10:22:42.635"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.638" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20160118 10:22:42.638" starttime="20160118 10:22:42.637"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.640" level="INFO">msg=amount=1</msg>
<status status="PASS" endtime="20160118 10:22:42.640" starttime="20160118 10:22:42.639"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.642" level="INFO">msg=imsiRangeStart=334030880001000</msg>
<status status="PASS" endtime="20160118 10:22:42.642" starttime="20160118 10:22:42.641"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.644" level="INFO">msg=msisdnRangeStart=525516001000</msg>
<status status="PASS" endtime="20160118 10:22:42.644" starttime="20160118 10:22:42.643"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.646" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:22:42.646" starttime="20160118 10:22:42.645"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.648" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20160118 10:22:42.648" starttime="20160118 10:22:42.647"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.650" level="INFO">msg=tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:22:42.650" starttime="20160118 10:22:42.649"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.652" level="INFO">msg=balance=10000000</msg>
<status status="PASS" endtime="20160118 10:22:42.652" starttime="20160118 10:22:42.651"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.659" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:42.660" starttime="20160118 10:22:42.657"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:42.660" starttime="20160118 10:22:42.656"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.663" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:42.664" starttime="20160118 10:22:42.662"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:42.664" starttime="20160118 10:22:42.661"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.667" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:42.667" starttime="20160118 10:22:42.666"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:42.668" starttime="20160118 10:22:42.665"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:42.669" starttime="20160118 10:22:42.653"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:22:42.671" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:22:42.671" starttime="20160118 10:22:42.669"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.673" starttime="20160118 10:22:42.672"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.675" starttime="20160118 10:22:42.673"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.676" starttime="20160118 10:22:42.675"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.678" starttime="20160118 10:22:42.677"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.679" starttime="20160118 10:22:42.678"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.681" starttime="20160118 10:22:42.680"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.683" starttime="20160118 10:22:42.682"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.684" starttime="20160118 10:22:42.683"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.686" starttime="20160118 10:22:42.685"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.688" starttime="20160118 10:22:42.687"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.690" starttime="20160118 10:22:42.689"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:42.691" starttime="20160118 10:22:42.690"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:22:42.694" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000']</msg>
<msg timestamp="20160118 10:22:43.725" level="INFO">10:22:43,722 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:43.726" starttime="20160118 10:22:42.693"></status>
</kw>
<msg timestamp="20160118 10:22:43.730" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:43.731" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:22:43.728" starttime="20160118 10:22:42.692"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:43.743" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:22:43.743" starttime="20160118 10:22:43.740"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:43.747" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:43.746" starttime="20160118 10:22:43.744"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:43.751" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:43.750" starttime="20160118 10:22:43.748"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:43.756" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:43.758" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:43.758" starttime="20160118 10:22:43.754"></status>
</kw>
<msg timestamp="20160118 10:22:43.760" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:43.761" level="INFO">${return_log_entry} = 2016-01-18 10:22:43,722 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:43.759" starttime="20160118 10:22:43.752"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:43.770" starttime="20160118 10:22:43.768"></status>
</kw>
<msg timestamp="20160118 10:22:43.772" level="INFO">${return_log_entry} = 2016-01-18 10:22:43,722 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:43.771" starttime="20160118 10:22:43.762"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:43.780" starttime="20160118 10:22:43.778"></status>
</kw>
<msg timestamp="20160118 10:22:43.782" level="INFO">${return_log_entry} = 2016-01-18 10:22:43,722 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:43.781" starttime="20160118 10:22:43.773"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:43.791" starttime="20160118 10:22:43.789"></status>
</kw>
<msg timestamp="20160118 10:22:43.793" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:43.792" starttime="20160118 10:22:43.783"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:43.805" starttime="20160118 10:22:43.803"></status>
</kw>
<msg timestamp="20160118 10:22:43.807" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:43.806" starttime="20160118 10:22:43.794"></status>
</kw>
<msg timestamp="20160118 10:22:43.809" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:43.808" starttime="20160118 10:22:43.734"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:43.818" starttime="20160118 10:22:43.817"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:43.821" starttime="20160118 10:22:43.819"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:43.824" starttime="20160118 10:22:43.822"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:22:43.834" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:22:43.834" starttime="20160118 10:22:43.832"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:43.835" starttime="20160118 10:22:43.830"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:43.835" starttime="20160118 10:22:43.825"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:43.836" starttime="20160118 10:22:43.811"></status>
</kw>
<msg timestamp="20160118 10:22:43.837" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20160118 10:22:43.837" starttime="20160118 10:22:42.628"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20160118 10:22:43.839" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:43.840" starttime="20160118 10:22:43.838"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:43.841" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20160118 10:22:43.842" starttime="20160118 10:22:43.840"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC NoAnswer *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:43.843" starttime="20160118 10:22:43.842"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the MOC NoAnswer call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:43.845" level="INFO">Running the MOC NoAnswer call...</msg>
<status status="PASS" endtime="20160118 10:22:43.845" starttime="20160118 10:22:43.844"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC NoAnswer">
<doc>Runs an NoAnswer MOC session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc-noanswer</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20160118 10:22:43.860" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-subscribers.csv</msg>
<status status="PASS" endtime="20160118 10:22:43.859" starttime="20160118 10:22:43.858"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20160118 10:22:43.862" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-fleXml.csv</msg>
<status status="PASS" endtime="20160118 10:22:43.862" starttime="20160118 10:22:43.860"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20160118 10:22:43.864" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-workspace.ini</msg>
<status status="PASS" endtime="20160118 10:22:43.864" starttime="20160118 10:22:43.863"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20160118 10:22:43.866" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc-noanswer.cgs</msg>
<status status="PASS" endtime="20160118 10:22:43.866" starttime="20160118 10:22:43.865"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:43.868" starttime="20160118 10:22:43.867"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:22:43.870" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:43.871" starttime="20160118 10:22:43.868"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:43.872" starttime="20160118 10:22:43.871"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20160118 10:22:43.875" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:43.875" starttime="20160118 10:22:43.873"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:22:43.878" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:43.879" starttime="20160118 10:22:43.876"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:43.880" starttime="20160118 10:22:43.879"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20160118 10:22:43.882" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:43.883" starttime="20160118 10:22:43.881"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20160118 10:22:43.886" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:43.886" starttime="20160118 10:22:43.883"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:43.888" starttime="20160118 10:22:43.887"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20160118 10:22:43.895" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc-noanswer.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-noanswer-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:22:48.213" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:22:48.212" starttime="20160118 10:22:43.888"></status>
</kw>
<msg timestamp="20160118 10:22:48.215" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:22:48.214" starttime="20160118 10:22:43.853"></status>
</kw>
<msg timestamp="20160118 10:22:48.216" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:22:48.216" starttime="20160118 10:22:43.847"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:48.218" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20160118 10:22:48.219" starttime="20160118 10:22:48.217"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.221" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:48.222" starttime="20160118 10:22:48.220"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.223" starttime="20160118 10:22:48.222"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.235" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:48.236" starttime="20160118 10:22:48.234"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:48.236" starttime="20160118 10:22:48.233"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.239" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:48.239" starttime="20160118 10:22:48.238"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:48.240" starttime="20160118 10:22:48.237"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.243" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:48.243" starttime="20160118 10:22:48.241"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:48.244" starttime="20160118 10:22:48.241"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:48.244" starttime="20160118 10:22:48.230"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.246" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:22:48.247" starttime="20160118 10:22:48.245"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.248" starttime="20160118 10:22:48.247"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.250" starttime="20160118 10:22:48.249"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.252" starttime="20160118 10:22:48.251"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.253" starttime="20160118 10:22:48.252"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.255" starttime="20160118 10:22:48.254"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.256" starttime="20160118 10:22:48.255"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:22:48.259" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001000']</msg>
<msg timestamp="20160118 10:22:48.424" level="INFO">10:22:48,417 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
10:22:48,418 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
10:22:48,418 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34552
10:22:48,419 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000
10:22:48,420 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
10:22:48,421 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001
10:22:48,422 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID
10:22:48,423 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20160118 10:22:48.425" starttime="20160118 10:22:48.258"></status>
</kw>
<msg timestamp="20160118 10:22:48.426" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:48.426" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:22:48.425" starttime="20160118 10:22:48.257"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:48.432" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:22:48.432" starttime="20160118 10:22:48.431"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.434" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:48.434" starttime="20160118 10:22:48.433"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.436" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:48.436" starttime="20160118 10:22:48.435"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.439" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:48.440" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:48.440" starttime="20160118 10:22:48.438"></status>
</kw>
<msg timestamp="20160118 10:22:48.441" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:48.441" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,417 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:48.441" starttime="20160118 10:22:48.437"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.446" starttime="20160118 10:22:48.445"></status>
</kw>
<msg timestamp="20160118 10:22:48.447" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,417 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:48.446" starttime="20160118 10:22:48.442"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.451" starttime="20160118 10:22:48.450"></status>
</kw>
<msg timestamp="20160118 10:22:48.452" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,417 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:48.452" starttime="20160118 10:22:48.447"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.457" starttime="20160118 10:22:48.456"></status>
</kw>
<msg timestamp="20160118 10:22:48.458" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:48.458" starttime="20160118 10:22:48.453"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.464" starttime="20160118 10:22:48.463"></status>
</kw>
<msg timestamp="20160118 10:22:48.465" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:48.465" starttime="20160118 10:22:48.459"></status>
</kw>
<msg timestamp="20160118 10:22:48.466" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:48.466" starttime="20160118 10:22:48.427"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:48.472" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20160118 10:22:48.472" starttime="20160118 10:22:48.471"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.474" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:48.474" starttime="20160118 10:22:48.473"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.476" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:48.476" starttime="20160118 10:22:48.475"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.479" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:48.480" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:48.480" starttime="20160118 10:22:48.478"></status>
</kw>
<msg timestamp="20160118 10:22:48.481" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:48.481" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,418 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:22:48.481" starttime="20160118 10:22:48.477"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.486" starttime="20160118 10:22:48.485"></status>
</kw>
<msg timestamp="20160118 10:22:48.486" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,418 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:22:48.486" starttime="20160118 10:22:48.482"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.491" starttime="20160118 10:22:48.490"></status>
</kw>
<msg timestamp="20160118 10:22:48.492" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,418 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:22:48.491" starttime="20160118 10:22:48.487"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.496" starttime="20160118 10:22:48.495"></status>
</kw>
<msg timestamp="20160118 10:22:48.497" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160118 10:22:48.497" starttime="20160118 10:22:48.492"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.504" starttime="20160118 10:22:48.503"></status>
</kw>
<msg timestamp="20160118 10:22:48.504" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160118 10:22:48.504" starttime="20160118 10:22:48.498"></status>
</kw>
<msg timestamp="20160118 10:22:48.506" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20160118 10:22:48.505" starttime="20160118 10:22:48.467"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:48.512" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20160118 10:22:48.511" starttime="20160118 10:22:48.510"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.513" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:48.513" starttime="20160118 10:22:48.512"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.515" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:48.515" starttime="20160118 10:22:48.514"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.518" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:48.519" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:48.519" starttime="20160118 10:22:48.517"></status>
</kw>
<msg timestamp="20160118 10:22:48.520" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:48.520" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,419 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:22:48.520" starttime="20160118 10:22:48.516"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.525" starttime="20160118 10:22:48.524"></status>
</kw>
<msg timestamp="20160118 10:22:48.526" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,419 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:22:48.525" starttime="20160118 10:22:48.521"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.530" starttime="20160118 10:22:48.529"></status>
</kw>
<msg timestamp="20160118 10:22:48.531" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,419 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:22:48.531" starttime="20160118 10:22:48.526"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.536" starttime="20160118 10:22:48.535"></status>
</kw>
<msg timestamp="20160118 10:22:48.537" level="INFO">${resultCode} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:22:48.536" starttime="20160118 10:22:48.532"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.543" starttime="20160118 10:22:48.542"></status>
</kw>
<msg timestamp="20160118 10:22:48.544" level="INFO">${resultCode} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:22:48.543" starttime="20160118 10:22:48.537"></status>
</kw>
<msg timestamp="20160118 10:22:48.545" level="INFO">${imsi} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:22:48.545" starttime="20160118 10:22:48.507"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:48.551" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20160118 10:22:48.550" starttime="20160118 10:22:48.549"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.553" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:48.552" starttime="20160118 10:22:48.551"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.555" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:48.554" starttime="20160118 10:22:48.553"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.557" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:48.558" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:48.559" starttime="20160118 10:22:48.556"></status>
</kw>
<msg timestamp="20160118 10:22:48.559" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:48.560" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,418 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34552</msg>
<status status="PASS" endtime="20160118 10:22:48.559" starttime="20160118 10:22:48.555"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.564" starttime="20160118 10:22:48.563"></status>
</kw>
<msg timestamp="20160118 10:22:48.565" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,418 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34552</msg>
<status status="PASS" endtime="20160118 10:22:48.565" starttime="20160118 10:22:48.560"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.569" starttime="20160118 10:22:48.568"></status>
</kw>
<msg timestamp="20160118 10:22:48.570" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,418 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34552</msg>
<status status="PASS" endtime="20160118 10:22:48.570" starttime="20160118 10:22:48.566"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.575" starttime="20160118 10:22:48.574"></status>
</kw>
<msg timestamp="20160118 10:22:48.576" level="INFO">${resultCode} = 34552</msg>
<status status="PASS" endtime="20160118 10:22:48.576" starttime="20160118 10:22:48.571"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.582" starttime="20160118 10:22:48.581"></status>
</kw>
<msg timestamp="20160118 10:22:48.583" level="INFO">${resultCode} = 34552</msg>
<status status="PASS" endtime="20160118 10:22:48.583" starttime="20160118 10:22:48.576"></status>
</kw>
<msg timestamp="20160118 10:22:48.584" level="INFO">${id} = 34552</msg>
<status status="PASS" endtime="20160118 10:22:48.584" starttime="20160118 10:22:48.546"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:48.590" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20160118 10:22:48.590" starttime="20160118 10:22:48.589"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.592" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:48.592" starttime="20160118 10:22:48.591"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.594" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:48.594" starttime="20160118 10:22:48.593"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.597" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:48.598" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:48.598" starttime="20160118 10:22:48.596"></status>
</kw>
<msg timestamp="20160118 10:22:48.599" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:48.599" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,420 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:22:48.599" starttime="20160118 10:22:48.595"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.604" starttime="20160118 10:22:48.603"></status>
</kw>
<msg timestamp="20160118 10:22:48.604" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,420 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:22:48.604" starttime="20160118 10:22:48.600"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.609" starttime="20160118 10:22:48.608"></status>
</kw>
<msg timestamp="20160118 10:22:48.610" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,420 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:22:48.609" starttime="20160118 10:22:48.605"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.615" starttime="20160118 10:22:48.613"></status>
</kw>
<msg timestamp="20160118 10:22:48.615" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:22:48.615" starttime="20160118 10:22:48.610"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.622" starttime="20160118 10:22:48.621"></status>
</kw>
<msg timestamp="20160118 10:22:48.622" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:22:48.622" starttime="20160118 10:22:48.616"></status>
</kw>
<msg timestamp="20160118 10:22:48.624" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:22:48.623" starttime="20160118 10:22:48.585"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:48.630" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20160118 10:22:48.629" starttime="20160118 10:22:48.628"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.632" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:48.631" starttime="20160118 10:22:48.630"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.633" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:48.633" starttime="20160118 10:22:48.632"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.636" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:48.637" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:48.637" starttime="20160118 10:22:48.635"></status>
</kw>
<msg timestamp="20160118 10:22:48.638" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:48.639" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,421 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:22:48.638" starttime="20160118 10:22:48.634"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.643" starttime="20160118 10:22:48.642"></status>
</kw>
<msg timestamp="20160118 10:22:48.644" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,421 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:22:48.643" starttime="20160118 10:22:48.639"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.648" starttime="20160118 10:22:48.647"></status>
</kw>
<msg timestamp="20160118 10:22:48.649" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,421 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:22:48.649" starttime="20160118 10:22:48.644"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.654" starttime="20160118 10:22:48.653"></status>
</kw>
<msg timestamp="20160118 10:22:48.655" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160118 10:22:48.654" starttime="20160118 10:22:48.650"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.661" starttime="20160118 10:22:48.660"></status>
</kw>
<msg timestamp="20160118 10:22:48.662" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160118 10:22:48.661" starttime="20160118 10:22:48.655"></status>
</kw>
<msg timestamp="20160118 10:22:48.663" level="INFO">${tariffId} = 101001</msg>
<status status="PASS" endtime="20160118 10:22:48.663" starttime="20160118 10:22:48.625"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:48.669" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20160118 10:22:48.668" starttime="20160118 10:22:48.667"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.671" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:48.670" starttime="20160118 10:22:48.669"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.673" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:48.672" starttime="20160118 10:22:48.671"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.676" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:48.676" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:48.677" starttime="20160118 10:22:48.674"></status>
</kw>
<msg timestamp="20160118 10:22:48.678" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:48.678" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,422 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:22:48.677" starttime="20160118 10:22:48.673"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.682" starttime="20160118 10:22:48.681"></status>
</kw>
<msg timestamp="20160118 10:22:48.683" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,422 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:22:48.683" starttime="20160118 10:22:48.678"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.687" starttime="20160118 10:22:48.686"></status>
</kw>
<msg timestamp="20160118 10:22:48.688" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,422 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:22:48.688" starttime="20160118 10:22:48.684"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.693" starttime="20160118 10:22:48.692"></status>
</kw>
<msg timestamp="20160118 10:22:48.694" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:22:48.694" starttime="20160118 10:22:48.689"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.700" starttime="20160118 10:22:48.699"></status>
</kw>
<msg timestamp="20160118 10:22:48.701" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:22:48.701" starttime="20160118 10:22:48.695"></status>
</kw>
<msg timestamp="20160118 10:22:48.702" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:22:48.702" starttime="20160118 10:22:48.664"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.707" starttime="20160118 10:22:48.706"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.709" starttime="20160118 10:22:48.708"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.710" starttime="20160118 10:22:48.709"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:22:48.716" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:22:48.716" starttime="20160118 10:22:48.714"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:48.717" starttime="20160118 10:22:48.714"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:48.717" starttime="20160118 10:22:48.711"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:48.718" starttime="20160118 10:22:48.703"></status>
</kw>
<msg timestamp="20160118 10:22:48.720" level="INFO">${rc} = OK</msg>
<msg timestamp="20160118 10:22:48.720" level="INFO">${provId} = 1</msg>
<msg timestamp="20160118 10:22:48.721" level="INFO">${imsi} = 334030880001000</msg>
<msg timestamp="20160118 10:22:48.721" level="INFO">${id} = 34552</msg>
<msg timestamp="20160118 10:22:48.721" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20160118 10:22:48.721" level="INFO">${tariffId} = 101001</msg>
<msg timestamp="20160118 10:22:48.722" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:22:48.720" starttime="20160118 10:22:48.225"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.758" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:48.758" starttime="20160118 10:22:48.756"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:48.759" starttime="20160118 10:22:48.755"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.762" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:48.762" starttime="20160118 10:22:48.760"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:48.763" starttime="20160118 10:22:48.759"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.766" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:48.766" starttime="20160118 10:22:48.764"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:48.767" starttime="20160118 10:22:48.763"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:48.768" starttime="20160118 10:22:48.751"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.769" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:22:48.770" starttime="20160118 10:22:48.768"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.771" starttime="20160118 10:22:48.770"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.773" starttime="20160118 10:22:48.772"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.775" starttime="20160118 10:22:48.774"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.776" starttime="20160118 10:22:48.775"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.778" starttime="20160118 10:22:48.777"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.779" starttime="20160118 10:22:48.778"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:22:48.782" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=34552']</msg>
<msg timestamp="20160118 10:22:48.971" level="INFO">10:22:48,964 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
10:22:48,966 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34553
10:22:48,967 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000
10:22:48,969 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
10:22:48,970 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:22:48.972" starttime="20160118 10:22:48.781"></status>
</kw>
<msg timestamp="20160118 10:22:48.973" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:48.973" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:22:48.972" starttime="20160118 10:22:48.780"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:48.979" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:22:48.979" starttime="20160118 10:22:48.978"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.981" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:48.981" starttime="20160118 10:22:48.980"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.983" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:48.983" starttime="20160118 10:22:48.982"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:48.986" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:48.987" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:48.987" starttime="20160118 10:22:48.985"></status>
</kw>
<msg timestamp="20160118 10:22:48.988" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:48.988" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,964 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:48.988" starttime="20160118 10:22:48.984"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.993" starttime="20160118 10:22:48.992"></status>
</kw>
<msg timestamp="20160118 10:22:48.994" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,964 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:48.994" starttime="20160118 10:22:48.989"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:48.999" starttime="20160118 10:22:48.998"></status>
</kw>
<msg timestamp="20160118 10:22:48.999" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,964 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:48.999" starttime="20160118 10:22:48.995"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.004" starttime="20160118 10:22:49.003"></status>
</kw>
<msg timestamp="20160118 10:22:49.005" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:49.005" starttime="20160118 10:22:49.000"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.011" starttime="20160118 10:22:49.010"></status>
</kw>
<msg timestamp="20160118 10:22:49.012" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:49.012" starttime="20160118 10:22:49.006"></status>
</kw>
<msg timestamp="20160118 10:22:49.014" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:49.013" starttime="20160118 10:22:48.974"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:49.020" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20160118 10:22:49.019" starttime="20160118 10:22:49.018"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:49.022" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:49.021" starttime="20160118 10:22:49.020"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:49.023" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:49.023" starttime="20160118 10:22:49.022"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:49.026" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:49.027" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:49.027" starttime="20160118 10:22:49.025"></status>
</kw>
<msg timestamp="20160118 10:22:49.028" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:49.029" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,966 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34553</msg>
<status status="PASS" endtime="20160118 10:22:49.028" starttime="20160118 10:22:49.024"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.033" starttime="20160118 10:22:49.032"></status>
</kw>
<msg timestamp="20160118 10:22:49.034" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,966 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34553</msg>
<status status="PASS" endtime="20160118 10:22:49.033" starttime="20160118 10:22:49.029"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.038" starttime="20160118 10:22:49.037"></status>
</kw>
<msg timestamp="20160118 10:22:49.039" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,966 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34553</msg>
<status status="PASS" endtime="20160118 10:22:49.039" starttime="20160118 10:22:49.034"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.044" starttime="20160118 10:22:49.043"></status>
</kw>
<msg timestamp="20160118 10:22:49.045" level="INFO">${resultCode} = 34553</msg>
<status status="PASS" endtime="20160118 10:22:49.044" starttime="20160118 10:22:49.040"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.051" starttime="20160118 10:22:49.050"></status>
</kw>
<msg timestamp="20160118 10:22:49.052" level="INFO">${resultCode} = 34553</msg>
<status status="PASS" endtime="20160118 10:22:49.051" starttime="20160118 10:22:49.045"></status>
</kw>
<msg timestamp="20160118 10:22:49.053" level="INFO">${accountId} = 34553</msg>
<status status="PASS" endtime="20160118 10:22:49.052" starttime="20160118 10:22:49.015"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:49.059" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20160118 10:22:49.058" starttime="20160118 10:22:49.057"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:49.061" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:49.060" starttime="20160118 10:22:49.059"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:49.063" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:49.062" starttime="20160118 10:22:49.061"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:49.065" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:49.066" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:49.066" starttime="20160118 10:22:49.064"></status>
</kw>
<msg timestamp="20160118 10:22:49.067" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:49.068" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,967 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000</msg>
<status status="PASS" endtime="20160118 10:22:49.067" starttime="20160118 10:22:49.063"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.072" starttime="20160118 10:22:49.071"></status>
</kw>
<msg timestamp="20160118 10:22:49.073" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,967 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000</msg>
<status status="PASS" endtime="20160118 10:22:49.073" starttime="20160118 10:22:49.068"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.077" starttime="20160118 10:22:49.076"></status>
</kw>
<msg timestamp="20160118 10:22:49.078" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,967 INFO  [log] LowLevelOps.getMainAccount.output.balance=10000000</msg>
<status status="PASS" endtime="20160118 10:22:49.078" starttime="20160118 10:22:49.073"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.083" starttime="20160118 10:22:49.082"></status>
</kw>
<msg timestamp="20160118 10:22:49.084" level="INFO">${resultCode} = 10000000</msg>
<status status="PASS" endtime="20160118 10:22:49.084" starttime="20160118 10:22:49.079"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.090" starttime="20160118 10:22:49.089"></status>
</kw>
<msg timestamp="20160118 10:22:49.091" level="INFO">${resultCode} = 10000000</msg>
<status status="PASS" endtime="20160118 10:22:49.091" starttime="20160118 10:22:49.085"></status>
</kw>
<msg timestamp="20160118 10:22:49.092" level="INFO">${balance} = 10000000</msg>
<status status="PASS" endtime="20160118 10:22:49.092" starttime="20160118 10:22:49.054"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:49.098" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20160118 10:22:49.098" starttime="20160118 10:22:49.096"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:49.100" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:49.100" starttime="20160118 10:22:49.099"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:49.102" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:49.101" starttime="20160118 10:22:49.100"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:49.105" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:49.105" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:49.106" starttime="20160118 10:22:49.103"></status>
</kw>
<msg timestamp="20160118 10:22:49.107" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:49.107" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,969 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:22:49.106" starttime="20160118 10:22:49.102"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.111" starttime="20160118 10:22:49.110"></status>
</kw>
<msg timestamp="20160118 10:22:49.112" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,969 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:22:49.112" starttime="20160118 10:22:49.107"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.117" starttime="20160118 10:22:49.116"></status>
</kw>
<msg timestamp="20160118 10:22:49.117" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,969 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:22:49.117" starttime="20160118 10:22:49.113"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.122" starttime="20160118 10:22:49.121"></status>
</kw>
<msg timestamp="20160118 10:22:49.123" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160118 10:22:49.123" starttime="20160118 10:22:49.118"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.129" starttime="20160118 10:22:49.128"></status>
</kw>
<msg timestamp="20160118 10:22:49.130" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160118 10:22:49.130" starttime="20160118 10:22:49.124"></status>
</kw>
<msg timestamp="20160118 10:22:49.131" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20160118 10:22:49.131" starttime="20160118 10:22:49.093"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:49.137" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20160118 10:22:49.137" starttime="20160118 10:22:49.135"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:49.139" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:49.138" starttime="20160118 10:22:49.137"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:49.144" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:49.144" starttime="20160118 10:22:49.139"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:49.147" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:49.148" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:49.148" starttime="20160118 10:22:49.146"></status>
</kw>
<msg timestamp="20160118 10:22:49.149" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:49.149" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,970 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:22:49.149" starttime="20160118 10:22:49.145"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.154" starttime="20160118 10:22:49.153"></status>
</kw>
<msg timestamp="20160118 10:22:49.154" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,970 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:22:49.154" starttime="20160118 10:22:49.150"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.159" starttime="20160118 10:22:49.158"></status>
</kw>
<msg timestamp="20160118 10:22:49.160" level="INFO">${return_log_entry} = 2016-01-18 10:22:48,970 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:22:49.159" starttime="20160118 10:22:49.155"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.164" starttime="20160118 10:22:49.163"></status>
</kw>
<msg timestamp="20160118 10:22:49.165" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20160118 10:22:49.165" starttime="20160118 10:22:49.160"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.171" starttime="20160118 10:22:49.170"></status>
</kw>
<msg timestamp="20160118 10:22:49.172" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20160118 10:22:49.172" starttime="20160118 10:22:49.166"></status>
</kw>
<msg timestamp="20160118 10:22:49.173" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20160118 10:22:49.173" starttime="20160118 10:22:49.132"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.178" starttime="20160118 10:22:49.177"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.180" starttime="20160118 10:22:49.179"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.181" starttime="20160118 10:22:49.180"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:22:49.187" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:22:49.187" starttime="20160118 10:22:49.185"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:49.188" starttime="20160118 10:22:49.184"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:49.188" starttime="20160118 10:22:49.182"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:49.189" starttime="20160118 10:22:49.174"></status>
</kw>
<msg timestamp="20160118 10:22:49.191" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20160118 10:22:49.191" level="INFO">${accId} = 34553</msg>
<msg timestamp="20160118 10:22:49.192" level="INFO">${bal} = 10000000</msg>
<msg timestamp="20160118 10:22:49.192" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20160118 10:22:49.192" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20160118 10:22:49.190" starttime="20160118 10:22:48.724"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${target_bal}=</arg>
<arg>Evaluate</arg>
<arg>${INITIAL_BALANCE}-${TESTSUBCRIBERS DEFAULT SLICE COSTS}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.194" starttime="20160118 10:22:49.193"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Should Be Equal As Numbers</arg>
<arg>${target_bal}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.195" starttime="20160118 10:22:49.194"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check: ${bal}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:49.197" level="INFO">Account balance check: 10000000</msg>
<status status="PASS" endtime="20160118 10:22:49.197" starttime="20160118 10:22:49.196"></status>
</kw>
<doc>Test will make a MOC call in NoAnswer case

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>TNZ_supported</tag>
</tags>
<status status="PASS" critical="yes" endtime="20160118 10:22:49.198" starttime="20160118 10:22:42.619"></status>
</test>
<doc>Testing the prepaid MOC call - NoAnswer

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20160118 10:22:49.201" starttime="20160118 10:22:38.501"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20160118 10:22:49.208" starttime="20160118 10:22:38.485"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoCredit" id="s1-s6" name="MOC PREPAID ONNET-NoCredit">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-NoCredit/MOC_PREPAID_ONNET-NoCredit-robot-suite.txt" id="s1-s6-s1" name="MOC PREPAID ONNET-NoCredit-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20160118 10:22:49.375" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:22:49.380" level="INFO">${date} = Mon Jan 18 10:22:49 CET 2016</msg>
<status status="PASS" endtime="20160118 10:22:49.378" starttime="20160118 10:22:49.370"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:49.384" level="INFO">Date and time: Mon Jan 18 10:22:49 CET 2016</msg>
<status status="PASS" endtime="20160118 10:22:49.385" starttime="20160118 10:22:49.381"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:49.389" level="INFO">Target IN machine: 10.105.119.135</msg>
<status status="PASS" endtime="20160118 10:22:49.390" starttime="20160118 10:22:49.386"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.444" starttime="20160118 10:22:49.442"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:49.508" starttime="20160118 10:22:49.453"></status>
</kw>
<msg timestamp="20160118 10:22:49.509" level="INFO">${ssh_connection} = 21</msg>
<status status="PASS" endtime="20160118 10:22:49.508" starttime="20160118 10:22:49.446"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:22:49.514" level="INFO">Logging into '10.105.119.135:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:22:50.009" level="INFO">Read output: Last login: Mon Jan 18 09:22:39 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:22:50.011" starttime="20160118 10:22:49.513"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:50.012" starttime="20160118 10:22:49.510"></status>
</kw>
<msg timestamp="20160118 10:22:50.014" level="INFO">${ssh_connection} = 21</msg>
<status status="PASS" endtime="20160118 10:22:50.013" starttime="20160118 10:22:49.433"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:22:50.019" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:22:50.018" starttime="20160118 10:22:50.015"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:22:50.021" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20160118 10:22:50.744" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:22:50.745" level="INFO">${output} = I-New MVNA TEMM - Core - Service 1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:22:50.745" starttime="20160118 10:22:50.019"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:50.749" starttime="20160118 10:22:50.747"></status>
</kw>
<msg timestamp="20160118 10:22:50.750" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:22:50.750" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:22:50.749" starttime="20160118 10:22:50.746"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:50.755" starttime="20160118 10:22:50.754"></status>
</kw>
<msg timestamp="20160118 10:22:50.756" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:50.755" starttime="20160118 10:22:50.751"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20160118 10:22:50.758" level="INFO">${version_r} =  1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:22:50.757" starttime="20160118 10:22:50.756"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:22:50.759" level="INFO">${version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:22:50.759" starttime="20160118 10:22:50.758"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:50.761" starttime="20160118 10:22:50.760"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:50.766" starttime="20160118 10:22:50.765"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:22:50.769" starttime="20160118 10:22:50.767"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:50.770" starttime="20160118 10:22:50.762"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:50.774" starttime="20160118 10:22:50.773"></status>
</kw>
<msg timestamp="20160118 10:22:50.775" level="INFO">${ver} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:22:50.774" starttime="20160118 10:22:50.770"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:50.776" starttime="20160118 10:22:50.775"></status>
</kw>
<msg timestamp="20160118 10:22:50.778" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20160118 10:22:50.778" level="INFO">${in_version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:22:50.777" starttime="20160118 10:22:49.408"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:50.803" starttime="20160118 10:22:50.802"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:50.876" starttime="20160118 10:22:50.807"></status>
</kw>
<msg timestamp="20160118 10:22:50.879" level="INFO">${ssh_connection} = 22</msg>
<status status="PASS" endtime="20160118 10:22:50.878" starttime="20160118 10:22:50.804"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:22:50.890" level="INFO">Logging into '10.105.119.171:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:22:51.374" level="INFO">Read output: Last login: Mon Jan 18 09:22:40 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:22:51.375" starttime="20160118 10:22:50.888"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:51.376" starttime="20160118 10:22:50.880"></status>
</kw>
<msg timestamp="20160118 10:22:51.378" level="INFO">${ssh_connection} = 22</msg>
<status status="PASS" endtime="20160118 10:22:51.377" starttime="20160118 10:22:50.798"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:22:51.382" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:22:51.382" starttime="20160118 10:22:51.379"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:22:51.384" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20160118 10:22:51.895" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:22:51.899" level="INFO">${output} = I-New UMS MVNO - XDR - Server 6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:22:51.897" starttime="20160118 10:22:51.383"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:51.907" starttime="20160118 10:22:51.903"></status>
</kw>
<msg timestamp="20160118 10:22:51.909" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:22:51.909" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:22:51.908" starttime="20160118 10:22:51.900"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:51.920" starttime="20160118 10:22:51.918"></status>
</kw>
<msg timestamp="20160118 10:22:51.922" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:51.921" starttime="20160118 10:22:51.911"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20160118 10:22:51.926" level="INFO">${version_r} =  6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:22:51.925" starttime="20160118 10:22:51.923"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:22:51.930" level="INFO">${version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:22:51.930" starttime="20160118 10:22:51.927"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:51.933" starttime="20160118 10:22:51.932"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:51.945" starttime="20160118 10:22:51.943"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:22:51.949" starttime="20160118 10:22:51.947"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:51.952" starttime="20160118 10:22:51.936"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:51.963" starttime="20160118 10:22:51.960"></status>
</kw>
<msg timestamp="20160118 10:22:51.965" level="INFO">${ver} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:22:51.964" starttime="20160118 10:22:51.953"></status>
</kw>
<msg timestamp="20160118 10:22:51.968" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20160118 10:22:51.969" level="INFO">${xdr_version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:22:51.967" starttime="20160118 10:22:50.786"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:52.027" starttime="20160118 10:22:52.025"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:52.092" starttime="20160118 10:22:52.035"></status>
</kw>
<msg timestamp="20160118 10:22:52.094" level="INFO">${ssh_connection} = 23</msg>
<status status="PASS" endtime="20160118 10:22:52.093" starttime="20160118 10:22:52.029"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:22:52.105" level="INFO">Logging into '10.105.119.125:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:22:52.565" level="INFO">Read output: Last login: Mon Jan 18 09:22:41 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@crce01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:22:52.566" starttime="20160118 10:22:52.102"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:52.566" starttime="20160118 10:22:52.095"></status>
</kw>
<msg timestamp="20160118 10:22:52.568" level="INFO">${ssh_connection} = 23</msg>
<status status="PASS" endtime="20160118 10:22:52.567" starttime="20160118 10:22:52.014"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:22:52.572" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:22:52.571" starttime="20160118 10:22:52.568"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:22:52.573" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20160118 10:22:52.782" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:22:52.784" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.1.23.31100
Negret Rating &amp; Charging Engine 6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:22:52.783" starttime="20160118 10:22:52.572"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:52.791" starttime="20160118 10:22:52.788"></status>
</kw>
<msg timestamp="20160118 10:22:52.793" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:22:52.794" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:22:52.792" starttime="20160118 10:22:52.786"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:52.804" starttime="20160118 10:22:52.802"></status>
</kw>
<msg timestamp="20160118 10:22:52.806" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:52.805" starttime="20160118 10:22:52.795"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:22:52.810" level="INFO">${version_r} =  6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:22:52.809" starttime="20160118 10:22:52.807"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:22:52.814" level="INFO">${version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:22:52.813" starttime="20160118 10:22:52.811"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:52.817" starttime="20160118 10:22:52.815"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:52.828" starttime="20160118 10:22:52.826"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:22:52.835" starttime="20160118 10:22:52.830"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:52.836" starttime="20160118 10:22:52.819"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:52.845" starttime="20160118 10:22:52.843"></status>
</kw>
<msg timestamp="20160118 10:22:52.847" level="INFO">${ver} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:22:52.847" starttime="20160118 10:22:52.837"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:52.850" starttime="20160118 10:22:52.848"></status>
</kw>
<msg timestamp="20160118 10:22:52.854" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20160118 10:22:52.855" level="INFO">${crce_version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:22:52.852" starttime="20160118 10:22:51.987"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:52.910" starttime="20160118 10:22:52.907"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:52.968" starttime="20160118 10:22:52.918"></status>
</kw>
<msg timestamp="20160118 10:22:52.971" level="INFO">${ssh_connection} = 24</msg>
<status status="PASS" endtime="20160118 10:22:52.970" starttime="20160118 10:22:52.911"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:22:52.981" level="INFO">Logging into '10.105.119.159:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:22:53.843" level="INFO">Read output: Last login: Mon Jan 18 09:22:42 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@ocs01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:22:53.845" starttime="20160118 10:22:52.979"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:53.848" starttime="20160118 10:22:52.972"></status>
</kw>
<msg timestamp="20160118 10:22:53.850" level="INFO">${ssh_connection} = 24</msg>
<status status="PASS" endtime="20160118 10:22:53.850" starttime="20160118 10:22:52.898"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:22:53.857" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:22:53.856" starttime="20160118 10:22:53.851"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:22:53.860" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20160118 10:22:53.949" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:22:53.951" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:22:53.950" starttime="20160118 10:22:53.858"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:53.958" starttime="20160118 10:22:53.955"></status>
</kw>
<msg timestamp="20160118 10:22:53.960" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:22:53.961" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:22:53.959" starttime="20160118 10:22:53.952"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:53.970" starttime="20160118 10:22:53.969"></status>
</kw>
<msg timestamp="20160118 10:22:53.972" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:53.971" starttime="20160118 10:22:53.962"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:22:53.977" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:22:53.976" starttime="20160118 10:22:53.974"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:22:53.981" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:22:53.980" starttime="20160118 10:22:53.978"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:53.984" starttime="20160118 10:22:53.982"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:53.996" starttime="20160118 10:22:53.993"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.001" starttime="20160118 10:22:53.997"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:54.004" starttime="20160118 10:22:53.986"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.014" starttime="20160118 10:22:54.012"></status>
</kw>
<msg timestamp="20160118 10:22:54.016" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:22:54.015" starttime="20160118 10:22:54.006"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.019" starttime="20160118 10:22:54.017"></status>
</kw>
<msg timestamp="20160118 10:22:54.023" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20160118 10:22:54.023" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:22:54.021" starttime="20160118 10:22:52.872"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:54.027" level="INFO">IN state= OK version= 1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:22:54.028" starttime="20160118 10:22:54.025"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:54.032" level="INFO">XDR state= OK version= 6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:22:54.033" starttime="20160118 10:22:54.030"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:54.037" level="INFO">CRCE state= OK version= 6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:22:54.038" starttime="20160118 10:22:54.034"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:54.042" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:22:54.043" starttime="20160118 10:22:54.039"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20160118 10:22:54.046" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:54.047" starttime="20160118 10:22:54.044"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20160118 10:22:54.051" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:54.052" starttime="20160118 10:22:54.049"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20160118 10:22:54.055" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:54.056" starttime="20160118 10:22:54.053"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20160118 10:22:54.059" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:54.060" starttime="20160118 10:22:54.057"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.074" starttime="20160118 10:22:54.068"></status>
</kw>
<msg timestamp="20160118 10:22:54.076" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:22:54.075" starttime="20160118 10:22:54.062"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.080" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:22:54.080" starttime="20160118 10:22:54.077"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:54.082" starttime="20160118 10:22:49.367"></status>
</kw>
<test id="s1-s6-s1-t1" name="Run MOC NoCredit Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.088" starttime="20160118 10:22:54.087"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<msg timestamp="20160118 10:22:54.090" level="INFO">${INITIAL_BALANCE} = 0</msg>
<status status="PASS" endtime="20160118 10:22:54.090" starttime="20160118 10:22:54.089"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>1</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.098" level="INFO">msg=crce_host=10.105.119.125</msg>
<status status="PASS" endtime="20160118 10:22:54.098" starttime="20160118 10:22:54.097"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.100" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20160118 10:22:54.100" starttime="20160118 10:22:54.099"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.102" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20160118 10:22:54.102" starttime="20160118 10:22:54.101"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.103" level="INFO">msg=amount=1</msg>
<status status="PASS" endtime="20160118 10:22:54.104" starttime="20160118 10:22:54.103"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.105" level="INFO">msg=imsiRangeStart=334030880001000</msg>
<status status="PASS" endtime="20160118 10:22:54.106" starttime="20160118 10:22:54.104"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.107" level="INFO">msg=msisdnRangeStart=525516001000</msg>
<status status="PASS" endtime="20160118 10:22:54.108" starttime="20160118 10:22:54.106"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.109" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:22:54.109" starttime="20160118 10:22:54.108"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.111" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20160118 10:22:54.111" starttime="20160118 10:22:54.110"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.113" level="INFO">msg=tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:22:54.113" starttime="20160118 10:22:54.112"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.115" level="INFO">msg=balance=0</msg>
<status status="PASS" endtime="20160118 10:22:54.115" starttime="20160118 10:22:54.114"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.124" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:54.125" starttime="20160118 10:22:54.120"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:54.126" starttime="20160118 10:22:54.119"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.133" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:54.134" starttime="20160118 10:22:54.130"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:54.135" starttime="20160118 10:22:54.128"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.141" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:54.142" starttime="20160118 10:22:54.138"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:54.144" starttime="20160118 10:22:54.136"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:54.145" starttime="20160118 10:22:54.116"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:22:54.151" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:22:54.152" starttime="20160118 10:22:54.146"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.156" starttime="20160118 10:22:54.154"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.160" starttime="20160118 10:22:54.157"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.164" starttime="20160118 10:22:54.161"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.167" starttime="20160118 10:22:54.165"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.169" starttime="20160118 10:22:54.168"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.173" starttime="20160118 10:22:54.171"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.177" starttime="20160118 10:22:54.175"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.181" starttime="20160118 10:22:54.178"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.184" starttime="20160118 10:22:54.182"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.188" starttime="20160118 10:22:54.185"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.191" starttime="20160118 10:22:54.189"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:54.195" starttime="20160118 10:22:54.193"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:22:54.200" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=0']</msg>
<msg timestamp="20160118 10:22:55.508" level="INFO">10:22:55,506 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:55.508" starttime="20160118 10:22:54.198"></status>
</kw>
<msg timestamp="20160118 10:22:55.510" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:55.511" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:22:55.509" starttime="20160118 10:22:54.196"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:22:55.517" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:22:55.516" starttime="20160118 10:22:55.515"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:55.518" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:22:55.518" starttime="20160118 10:22:55.517"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:22:55.520" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:22:55.520" starttime="20160118 10:22:55.519"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:22:55.523" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:22:55.524" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20160118 10:22:55.524" starttime="20160118 10:22:55.522"></status>
</kw>
<msg timestamp="20160118 10:22:55.525" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:22:55.525" level="INFO">${return_log_entry} = 2016-01-18 10:22:55,506 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:55.525" starttime="20160118 10:22:55.521"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:55.530" starttime="20160118 10:22:55.529"></status>
</kw>
<msg timestamp="20160118 10:22:55.531" level="INFO">${return_log_entry} = 2016-01-18 10:22:55,506 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:55.531" starttime="20160118 10:22:55.526"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:55.535" starttime="20160118 10:22:55.534"></status>
</kw>
<msg timestamp="20160118 10:22:55.536" level="INFO">${return_log_entry} = 2016-01-18 10:22:55,506 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:22:55.536" starttime="20160118 10:22:55.532"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:55.541" starttime="20160118 10:22:55.540"></status>
</kw>
<msg timestamp="20160118 10:22:55.542" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:55.541" starttime="20160118 10:22:55.537"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:55.548" starttime="20160118 10:22:55.547"></status>
</kw>
<msg timestamp="20160118 10:22:55.549" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:55.548" starttime="20160118 10:22:55.542"></status>
</kw>
<msg timestamp="20160118 10:22:55.550" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:22:55.549" starttime="20160118 10:22:55.512"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:55.555" starttime="20160118 10:22:55.554"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:55.556" starttime="20160118 10:22:55.555"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:55.557" starttime="20160118 10:22:55.557"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:22:55.563" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:22:55.564" starttime="20160118 10:22:55.562"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:55.564" starttime="20160118 10:22:55.561"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:55.565" starttime="20160118 10:22:55.558"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:55.565" starttime="20160118 10:22:55.551"></status>
</kw>
<msg timestamp="20160118 10:22:55.567" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20160118 10:22:55.566" starttime="20160118 10:22:54.092"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20160118 10:22:55.569" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:22:55.569" starttime="20160118 10:22:55.568"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:55.570" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20160118 10:22:55.572" starttime="20160118 10:22:55.570"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:55.573" starttime="20160118 10:22:55.572"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the MOC call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:55.575" level="INFO">Running the MOC call...</msg>
<status status="PASS" endtime="20160118 10:22:55.575" starttime="20160118 10:22:55.574"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC Final Rerouting">
<doc>Initiates a MOC session that is expected to do a final reroute to another number</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-subscribers.csv</arg>
</arguments>
<msg timestamp="20160118 10:22:55.583" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-subscribers.csv</msg>
<status status="PASS" endtime="20160118 10:22:55.583" starttime="20160118 10:22:55.582"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-fleXml.csv</arg>
</arguments>
<msg timestamp="20160118 10:22:55.585" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-fleXml.csv</msg>
<status status="PASS" endtime="20160118 10:22:55.585" starttime="20160118 10:22:55.584"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-workspace.ini</arg>
</arguments>
<msg timestamp="20160118 10:22:55.587" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-workspace.ini</msg>
<status status="PASS" endtime="20160118 10:22:55.587" starttime="20160118 10:22:55.586"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc-final-rerouting.cgs</arg>
</arguments>
<msg timestamp="20160118 10:22:55.589" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc-final-rerouting.cgs</msg>
<status status="PASS" endtime="20160118 10:22:55.588" starttime="20160118 10:22:55.587"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:55.590" starttime="20160118 10:22:55.589"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:22:55.593" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:55.593" starttime="20160118 10:22:55.590"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:55.594" starttime="20160118 10:22:55.594"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20160118 10:22:55.596" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:55.597" starttime="20160118 10:22:55.595"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>Mocfinal-rerouting parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:22:55.599" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:55.600" starttime="20160118 10:22:55.597"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:55.601" starttime="20160118 10:22:55.600"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20160118 10:22:55.603" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:55.603" starttime="20160118 10:22:55.601"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20160118 10:22:55.606" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:22:55.607" starttime="20160118 10:22:55.604"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:55.608" starttime="20160118 10:22:55.607"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20160118 10:22:55.615" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc-final-rerouting.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-final-rerouting-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:22:58.850" level="INFO">${rc} = 1</msg>
<status status="PASS" endtime="20160118 10:22:58.849" starttime="20160118 10:22:55.609"></status>
</kw>
<msg timestamp="20160118 10:22:58.852" level="INFO">${rc} = 1</msg>
<status status="PASS" endtime="20160118 10:22:58.851" starttime="20160118 10:22:55.577"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:58.853" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20160118 10:22:58.854" starttime="20160118 10:22:58.852"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20160118 10:22:58.856" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160118 10:22:58.858" level="FAIL">CG Session ended with rc 1: 1.0 != 0.0</msg>
<status status="FAIL" endtime="20160118 10:22:58.858" starttime="20160118 10:22:58.855"></status>
</kw>
<doc>Insufficient funds MOC call

Arguments:
none
Returns:
none
Fails: in case CG session fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>TNZ_supported</tag>
</tags>
<status status="FAIL" critical="yes" endtime="20160118 10:22:58.859" starttime="20160118 10:22:54.083">CG Session ended with rc 1: 1.0 != 0.0</status>
</test>
<doc>Testing the prepaid MOC call from the calling party that has empty account balance. It is expected that calling party will hear
announcement (call is redirected) that it has insufficient funds (call is successful from platform point of view)

============================================================</doc>
<metadata>
</metadata>
<status status="FAIL" endtime="20160118 10:22:58.862" starttime="20160118 10:22:49.228"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="FAIL" endtime="20160118 10:22:58.868" starttime="20160118 10:22:49.213"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration" id="s1-s7" name="MOC PREPAID ONNET-ShortDuration">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/MOC_PREPAID_ONNET-ShortDuration-robot-suite.txt" id="s1-s7-s1" name="MOC PREPAID ONNET-ShortDuration-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20160118 10:22:59.039" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:22:59.043" level="INFO">${date} = Mon Jan 18 10:22:59 CET 2016</msg>
<status status="PASS" endtime="20160118 10:22:59.043" starttime="20160118 10:22:59.036"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:59.045" level="INFO">Date and time: Mon Jan 18 10:22:59 CET 2016</msg>
<status status="PASS" endtime="20160118 10:22:59.045" starttime="20160118 10:22:59.044"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:22:59.047" level="INFO">Target IN machine: 10.105.119.135</msg>
<status status="PASS" endtime="20160118 10:22:59.047" starttime="20160118 10:22:59.046"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:59.072" starttime="20160118 10:22:59.071"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:22:59.138" starttime="20160118 10:22:59.075"></status>
</kw>
<msg timestamp="20160118 10:22:59.140" level="INFO">${ssh_connection} = 25</msg>
<status status="PASS" endtime="20160118 10:22:59.139" starttime="20160118 10:22:59.072"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:22:59.151" level="INFO">Logging into '10.105.119.135:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:22:59.622" level="INFO">Read output: Last login: Mon Jan 18 09:22:49 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:22:59.624" starttime="20160118 10:22:59.149"></status>
</kw>
<status status="PASS" endtime="20160118 10:22:59.625" starttime="20160118 10:22:59.142"></status>
</kw>
<msg timestamp="20160118 10:22:59.628" level="INFO">${ssh_connection} = 25</msg>
<status status="PASS" endtime="20160118 10:22:59.628" starttime="20160118 10:22:59.067"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:22:59.638" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:22:59.637" starttime="20160118 10:22:59.630"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:22:59.642" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20160118 10:23:00.293" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:23:00.297" level="INFO">${output} = I-New MVNA TEMM - Core - Service 1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:23:00.295" starttime="20160118 10:22:59.639"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:00.303" starttime="20160118 10:23:00.300"></status>
</kw>
<msg timestamp="20160118 10:23:00.305" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:23:00.306" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:23:00.305" starttime="20160118 10:23:00.298"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:00.316" starttime="20160118 10:23:00.314"></status>
</kw>
<msg timestamp="20160118 10:23:00.318" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:00.317" starttime="20160118 10:23:00.307"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20160118 10:23:00.322" level="INFO">${version_r} =  1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:23:00.321" starttime="20160118 10:23:00.319"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:23:00.326" level="INFO">${version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:23:00.325" starttime="20160118 10:23:00.323"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:00.329" starttime="20160118 10:23:00.327"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:00.341" starttime="20160118 10:23:00.338"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:23:00.346" starttime="20160118 10:23:00.342"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:00.348" starttime="20160118 10:23:00.331"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:00.357" starttime="20160118 10:23:00.354"></status>
</kw>
<msg timestamp="20160118 10:23:00.358" level="INFO">${ver} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:23:00.358" starttime="20160118 10:23:00.349"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:00.361" starttime="20160118 10:23:00.360"></status>
</kw>
<msg timestamp="20160118 10:23:00.365" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20160118 10:23:00.366" level="INFO">${in_version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:23:00.363" starttime="20160118 10:22:59.055"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:00.418" starttime="20160118 10:23:00.416"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:00.466" starttime="20160118 10:23:00.426"></status>
</kw>
<msg timestamp="20160118 10:23:00.467" level="INFO">${ssh_connection} = 26</msg>
<status status="PASS" endtime="20160118 10:23:00.467" starttime="20160118 10:23:00.420"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:23:00.473" level="INFO">Logging into '10.105.119.171:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:23:00.918" level="INFO">Read output: Last login: Mon Jan 18 09:22:51 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:23:00.919" starttime="20160118 10:23:00.471"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:00.920" starttime="20160118 10:23:00.468"></status>
</kw>
<msg timestamp="20160118 10:23:00.922" level="INFO">${ssh_connection} = 26</msg>
<status status="PASS" endtime="20160118 10:23:00.921" starttime="20160118 10:23:00.407"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:23:00.926" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:23:00.926" starttime="20160118 10:23:00.922"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:23:00.928" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20160118 10:23:01.439" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:23:01.441" level="INFO">${output} = I-New UMS MVNO - XDR - Server 6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:23:01.440" starttime="20160118 10:23:00.927"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:01.444" starttime="20160118 10:23:01.442"></status>
</kw>
<msg timestamp="20160118 10:23:01.445" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:23:01.445" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:23:01.444" starttime="20160118 10:23:01.441"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:01.449" starttime="20160118 10:23:01.449"></status>
</kw>
<msg timestamp="20160118 10:23:01.450" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:01.450" starttime="20160118 10:23:01.446"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20160118 10:23:01.452" level="INFO">${version_r} =  6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:23:01.452" starttime="20160118 10:23:01.451"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:23:01.454" level="INFO">${version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:23:01.454" starttime="20160118 10:23:01.453"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:01.455" starttime="20160118 10:23:01.454"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:01.461" starttime="20160118 10:23:01.460"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:23:01.462" starttime="20160118 10:23:01.461"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:01.465" starttime="20160118 10:23:01.456"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:01.469" starttime="20160118 10:23:01.468"></status>
</kw>
<msg timestamp="20160118 10:23:01.470" level="INFO">${ver} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:23:01.469" starttime="20160118 10:23:01.465"></status>
</kw>
<msg timestamp="20160118 10:23:01.471" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20160118 10:23:01.471" level="INFO">${xdr_version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:23:01.470" starttime="20160118 10:23:00.383"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:01.495" starttime="20160118 10:23:01.494"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:01.557" starttime="20160118 10:23:01.499"></status>
</kw>
<msg timestamp="20160118 10:23:01.559" level="INFO">${ssh_connection} = 27</msg>
<status status="PASS" endtime="20160118 10:23:01.558" starttime="20160118 10:23:01.496"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:23:01.571" level="INFO">Logging into '10.105.119.125:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:23:02.030" level="INFO">Read output: Last login: Mon Jan 18 09:22:52 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@crce01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:23:02.034" starttime="20160118 10:23:01.568"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:02.035" starttime="20160118 10:23:01.560"></status>
</kw>
<msg timestamp="20160118 10:23:02.037" level="INFO">${ssh_connection} = 27</msg>
<status status="PASS" endtime="20160118 10:23:02.036" starttime="20160118 10:23:01.490"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:23:02.041" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:23:02.040" starttime="20160118 10:23:02.037"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:23:02.042" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20160118 10:23:02.280" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:23:02.282" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.1.23.31100
Negret Rating &amp; Charging Engine 6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:23:02.281" starttime="20160118 10:23:02.041"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.289" starttime="20160118 10:23:02.286"></status>
</kw>
<msg timestamp="20160118 10:23:02.291" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:23:02.291" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:23:02.290" starttime="20160118 10:23:02.283"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.301" starttime="20160118 10:23:02.299"></status>
</kw>
<msg timestamp="20160118 10:23:02.303" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:02.302" starttime="20160118 10:23:02.293"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:23:02.307" level="INFO">${version_r} =  6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:23:02.306" starttime="20160118 10:23:02.304"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:23:02.311" level="INFO">${version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:23:02.310" starttime="20160118 10:23:02.308"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.314" starttime="20160118 10:23:02.312"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.325" starttime="20160118 10:23:02.322"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.331" starttime="20160118 10:23:02.326"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:02.333" starttime="20160118 10:23:02.315"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.342" starttime="20160118 10:23:02.340"></status>
</kw>
<msg timestamp="20160118 10:23:02.344" level="INFO">${ver} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:23:02.343" starttime="20160118 10:23:02.334"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.347" starttime="20160118 10:23:02.345"></status>
</kw>
<msg timestamp="20160118 10:23:02.350" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20160118 10:23:02.351" level="INFO">${crce_version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:23:02.348" starttime="20160118 10:23:01.479"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.404" starttime="20160118 10:23:02.402"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.459" starttime="20160118 10:23:02.412"></status>
</kw>
<msg timestamp="20160118 10:23:02.462" level="INFO">${ssh_connection} = 28</msg>
<status status="PASS" endtime="20160118 10:23:02.461" starttime="20160118 10:23:02.406"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:23:02.473" level="INFO">Logging into '10.105.119.159:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:23:02.829" level="INFO">Read output: Last login: Mon Jan 18 09:22:53 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@ocs01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:23:02.831" starttime="20160118 10:23:02.470"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:02.833" starttime="20160118 10:23:02.463"></status>
</kw>
<msg timestamp="20160118 10:23:02.836" level="INFO">${ssh_connection} = 28</msg>
<status status="PASS" endtime="20160118 10:23:02.835" starttime="20160118 10:23:02.393"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:23:02.845" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:23:02.845" starttime="20160118 10:23:02.838"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:23:02.849" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20160118 10:23:02.914" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:23:02.916" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:23:02.915" starttime="20160118 10:23:02.847"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.923" starttime="20160118 10:23:02.920"></status>
</kw>
<msg timestamp="20160118 10:23:02.925" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:23:02.926" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:23:02.924" starttime="20160118 10:23:02.918"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.935" starttime="20160118 10:23:02.933"></status>
</kw>
<msg timestamp="20160118 10:23:02.937" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:02.936" starttime="20160118 10:23:02.927"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:23:02.941" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:23:02.940" starttime="20160118 10:23:02.938"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:23:02.945" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:23:02.944" starttime="20160118 10:23:02.942"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.948" starttime="20160118 10:23:02.946"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.960" starttime="20160118 10:23:02.958"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.964" starttime="20160118 10:23:02.962"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:02.968" starttime="20160118 10:23:02.950"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.978" starttime="20160118 10:23:02.976"></status>
</kw>
<msg timestamp="20160118 10:23:02.979" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:23:02.979" starttime="20160118 10:23:02.970"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:02.982" starttime="20160118 10:23:02.981"></status>
</kw>
<msg timestamp="20160118 10:23:02.985" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20160118 10:23:02.986" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:23:02.984" starttime="20160118 10:23:02.368"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:02.989" level="INFO">IN state= OK version= 1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:23:02.990" starttime="20160118 10:23:02.987"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:02.994" level="INFO">XDR state= OK version= 6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:23:02.995" starttime="20160118 10:23:02.992"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:02.999" level="INFO">CRCE state= OK version= 6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:23:03.000" starttime="20160118 10:23:02.996"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:03.005" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:23:03.006" starttime="20160118 10:23:03.002"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20160118 10:23:03.009" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:23:03.010" starttime="20160118 10:23:03.007"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20160118 10:23:03.014" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:23:03.014" starttime="20160118 10:23:03.011"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20160118 10:23:03.018" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:23:03.019" starttime="20160118 10:23:03.016"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20160118 10:23:03.022" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:23:03.023" starttime="20160118 10:23:03.020"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:03.036" starttime="20160118 10:23:03.030"></status>
</kw>
<msg timestamp="20160118 10:23:03.038" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:23:03.037" starttime="20160118 10:23:03.024"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.042" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:23:03.042" starttime="20160118 10:23:03.039"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:03.044" starttime="20160118 10:22:59.033"></status>
</kw>
<test id="s1-s7-s1-t1" name="Run MOC Short Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:03.057" starttime="20160118 10:23:03.055"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<msg timestamp="20160118 10:23:03.060" level="INFO">${INITIAL_BALANCE} = 10000000</msg>
<status status="PASS" endtime="20160118 10:23:03.060" starttime="20160118 10:23:03.058"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.076" level="INFO">msg=crce_host=10.105.119.125</msg>
<status status="PASS" endtime="20160118 10:23:03.077" starttime="20160118 10:23:03.074"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.080" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20160118 10:23:03.081" starttime="20160118 10:23:03.078"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.085" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20160118 10:23:03.086" starttime="20160118 10:23:03.083"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.089" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20160118 10:23:03.090" starttime="20160118 10:23:03.087"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.093" level="INFO">msg=imsiRangeStart=334030880001000</msg>
<status status="PASS" endtime="20160118 10:23:03.094" starttime="20160118 10:23:03.091"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.097" level="INFO">msg=msisdnRangeStart=525516001000</msg>
<status status="PASS" endtime="20160118 10:23:03.098" starttime="20160118 10:23:03.095"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.101" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:03.102" starttime="20160118 10:23:03.099"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.105" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20160118 10:23:03.106" starttime="20160118 10:23:03.103"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.109" level="INFO">msg=tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:23:03.110" starttime="20160118 10:23:03.107"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.113" level="INFO">msg=balance=10000000</msg>
<status status="PASS" endtime="20160118 10:23:03.114" starttime="20160118 10:23:03.111"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.129" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:03.130" starttime="20160118 10:23:03.125"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:03.131" starttime="20160118 10:23:03.123"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.137" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:03.138" starttime="20160118 10:23:03.134"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:03.139" starttime="20160118 10:23:03.132"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.145" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:03.146" starttime="20160118 10:23:03.142"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:03.147" starttime="20160118 10:23:03.141"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:03.148" starttime="20160118 10:23:03.117"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:23:03.153" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:23:03.154" starttime="20160118 10:23:03.150"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:03.157" starttime="20160118 10:23:03.155"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:03.161" starttime="20160118 10:23:03.159"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:03.164" starttime="20160118 10:23:03.162"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:03.167" starttime="20160118 10:23:03.166"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:03.170" starttime="20160118 10:23:03.168"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:03.174" starttime="20160118 10:23:03.171"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:03.177" starttime="20160118 10:23:03.175"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:03.181" starttime="20160118 10:23:03.178"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:03.184" starttime="20160118 10:23:03.182"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:03.188" starttime="20160118 10:23:03.185"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:03.191" starttime="20160118 10:23:03.189"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:03.195" starttime="20160118 10:23:03.192"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:23:03.199" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000']</msg>
<msg timestamp="20160118 10:23:04.809" level="INFO">10:23:04,807 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:04.810" starttime="20160118 10:23:03.198"></status>
</kw>
<msg timestamp="20160118 10:23:04.812" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:04.812" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:23:04.811" starttime="20160118 10:23:03.196"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:04.818" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:23:04.818" starttime="20160118 10:23:04.816"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:04.820" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:04.820" starttime="20160118 10:23:04.819"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:04.822" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:04.821" starttime="20160118 10:23:04.820"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:04.825" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:04.825" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:04.826" starttime="20160118 10:23:04.823"></status>
</kw>
<msg timestamp="20160118 10:23:04.826" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:04.827" level="INFO">${return_log_entry} = 2016-01-18 10:23:04,807 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:04.826" starttime="20160118 10:23:04.822"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:04.832" starttime="20160118 10:23:04.830"></status>
</kw>
<msg timestamp="20160118 10:23:04.833" level="INFO">${return_log_entry} = 2016-01-18 10:23:04,807 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:04.832" starttime="20160118 10:23:04.827"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:04.837" starttime="20160118 10:23:04.836"></status>
</kw>
<msg timestamp="20160118 10:23:04.838" level="INFO">${return_log_entry} = 2016-01-18 10:23:04,807 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:04.838" starttime="20160118 10:23:04.833"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:04.843" starttime="20160118 10:23:04.842"></status>
</kw>
<msg timestamp="20160118 10:23:04.844" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:04.843" starttime="20160118 10:23:04.839"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:04.850" starttime="20160118 10:23:04.849"></status>
</kw>
<msg timestamp="20160118 10:23:04.851" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:04.851" starttime="20160118 10:23:04.844"></status>
</kw>
<msg timestamp="20160118 10:23:04.852" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:04.852" starttime="20160118 10:23:04.813"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:04.857" starttime="20160118 10:23:04.856"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:04.859" starttime="20160118 10:23:04.858"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:04.860" starttime="20160118 10:23:04.859"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:23:04.866" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:23:04.866" starttime="20160118 10:23:04.864"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:04.867" starttime="20160118 10:23:04.863"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:04.867" starttime="20160118 10:23:04.860"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:04.868" starttime="20160118 10:23:04.853"></status>
</kw>
<msg timestamp="20160118 10:23:04.869" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20160118 10:23:04.869" starttime="20160118 10:23:03.064"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20160118 10:23:04.871" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:23:04.871" starttime="20160118 10:23:04.870"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:04.873" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20160118 10:23:04.873" starttime="20160118 10:23:04.872"></status>
</kw>
<kw type="kw" name="${calling_int} = BuiltIn.Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<msg timestamp="20160118 10:23:04.875" level="INFO">Argument types are:
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160118 10:23:04.876" level="INFO">${calling_int} = 525516001000</msg>
<status status="PASS" endtime="20160118 10:23:04.875" starttime="20160118 10:23:04.874"></status>
</kw>
<kw type="kw" name="${called_party} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${calling_int}+1</arg>
</arguments>
<msg timestamp="20160118 10:23:04.879" level="INFO">${called_party} = 525516001001</msg>
<status status="PASS" endtime="20160118 10:23:04.879" starttime="20160118 10:23:04.876"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC 1s *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:04.881" starttime="20160118 10:23:04.880"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC 1s">
<doc>Runs a standard MOC 1s session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${called_party}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc1s</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20160118 10:23:04.895" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv</msg>
<status status="PASS" endtime="20160118 10:23:04.895" starttime="20160118 10:23:04.894"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20160118 10:23:04.897" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv</msg>
<status status="PASS" endtime="20160118 10:23:04.897" starttime="20160118 10:23:04.896"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20160118 10:23:04.899" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini</msg>
<status status="PASS" endtime="20160118 10:23:04.899" starttime="20160118 10:23:04.898"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20160118 10:23:04.901" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc1s.cgs</msg>
<status status="PASS" endtime="20160118 10:23:04.901" starttime="20160118 10:23:04.900"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:04.902" starttime="20160118 10:23:04.901"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:23:04.905" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:04.905" starttime="20160118 10:23:04.903"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:04.907" starttime="20160118 10:23:04.906"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20160118 10:23:04.909" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:04.909" starttime="20160118 10:23:04.907"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:23:04.912" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:04.913" starttime="20160118 10:23:04.910"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:04.914" starttime="20160118 10:23:04.913"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20160118 10:23:04.916" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:04.916" starttime="20160118 10:23:04.914"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20160118 10:23:04.919" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:04.920" starttime="20160118 10:23:04.917"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:04.921" starttime="20160118 10:23:04.920"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20160118 10:23:04.928" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc1s.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:23:09.999" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:23:09.991" starttime="20160118 10:23:04.922"></status>
</kw>
<msg timestamp="20160118 10:23:10.001" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:23:10.000" starttime="20160118 10:23:04.888"></status>
</kw>
<msg timestamp="20160118 10:23:10.002" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:23:10.001" starttime="20160118 10:23:04.882"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:10.004" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20160118 10:23:10.004" starttime="20160118 10:23:10.003"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.006" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:23:10.007" starttime="20160118 10:23:10.005"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.008" starttime="20160118 10:23:10.008"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.020" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:10.021" starttime="20160118 10:23:10.019"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:10.021" starttime="20160118 10:23:10.018"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.024" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:10.025" starttime="20160118 10:23:10.023"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:10.025" starttime="20160118 10:23:10.022"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.028" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:10.028" starttime="20160118 10:23:10.027"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:10.029" starttime="20160118 10:23:10.026"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:10.029" starttime="20160118 10:23:10.015"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.031" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:23:10.032" starttime="20160118 10:23:10.030"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.033" starttime="20160118 10:23:10.032"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.035" starttime="20160118 10:23:10.034"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.037" starttime="20160118 10:23:10.036"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.038" starttime="20160118 10:23:10.037"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.039" starttime="20160118 10:23:10.039"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.041" starttime="20160118 10:23:10.040"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:23:10.043" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001000']</msg>
<msg timestamp="20160118 10:23:10.199" level="INFO">10:23:10,189 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
10:23:10,191 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
10:23:10,192 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34557
10:23:10,193 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000
10:23:10,194 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
10:23:10,195 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001
10:23:10,196 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID
10:23:10,198 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20160118 10:23:10.200" starttime="20160118 10:23:10.042"></status>
</kw>
<msg timestamp="20160118 10:23:10.201" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:10.201" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:23:10.200" starttime="20160118 10:23:10.042"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:10.207" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:23:10.207" starttime="20160118 10:23:10.206"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.209" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:10.209" starttime="20160118 10:23:10.208"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.211" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:10.211" starttime="20160118 10:23:10.210"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.214" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:10.215" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:10.215" starttime="20160118 10:23:10.213"></status>
</kw>
<msg timestamp="20160118 10:23:10.216" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:10.216" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,189 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:10.215" starttime="20160118 10:23:10.212"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.221" starttime="20160118 10:23:10.220"></status>
</kw>
<msg timestamp="20160118 10:23:10.221" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,189 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:10.221" starttime="20160118 10:23:10.217"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.226" starttime="20160118 10:23:10.225"></status>
</kw>
<msg timestamp="20160118 10:23:10.227" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,189 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:10.226" starttime="20160118 10:23:10.222"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.231" starttime="20160118 10:23:10.230"></status>
</kw>
<msg timestamp="20160118 10:23:10.232" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:10.232" starttime="20160118 10:23:10.227"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.238" starttime="20160118 10:23:10.237"></status>
</kw>
<msg timestamp="20160118 10:23:10.239" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:10.239" starttime="20160118 10:23:10.233"></status>
</kw>
<msg timestamp="20160118 10:23:10.240" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:10.240" starttime="20160118 10:23:10.202"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:10.246" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20160118 10:23:10.245" starttime="20160118 10:23:10.244"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.248" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:10.247" starttime="20160118 10:23:10.246"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.249" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:10.249" starttime="20160118 10:23:10.248"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.252" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:10.253" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:10.253" starttime="20160118 10:23:10.251"></status>
</kw>
<msg timestamp="20160118 10:23:10.254" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:10.254" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,191 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:23:10.254" starttime="20160118 10:23:10.250"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.258" starttime="20160118 10:23:10.257"></status>
</kw>
<msg timestamp="20160118 10:23:10.259" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,191 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:23:10.259" starttime="20160118 10:23:10.255"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.264" starttime="20160118 10:23:10.263"></status>
</kw>
<msg timestamp="20160118 10:23:10.264" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,191 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:23:10.264" starttime="20160118 10:23:10.260"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.269" starttime="20160118 10:23:10.268"></status>
</kw>
<msg timestamp="20160118 10:23:10.270" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160118 10:23:10.269" starttime="20160118 10:23:10.265"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.276" starttime="20160118 10:23:10.275"></status>
</kw>
<msg timestamp="20160118 10:23:10.276" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160118 10:23:10.276" starttime="20160118 10:23:10.270"></status>
</kw>
<msg timestamp="20160118 10:23:10.277" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20160118 10:23:10.277" starttime="20160118 10:23:10.241"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:10.283" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20160118 10:23:10.283" starttime="20160118 10:23:10.282"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.285" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:10.285" starttime="20160118 10:23:10.284"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.287" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:10.286" starttime="20160118 10:23:10.286"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.290" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:10.290" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:10.291" starttime="20160118 10:23:10.288"></status>
</kw>
<msg timestamp="20160118 10:23:10.291" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:10.292" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,193 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:23:10.291" starttime="20160118 10:23:10.287"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.296" starttime="20160118 10:23:10.295"></status>
</kw>
<msg timestamp="20160118 10:23:10.297" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,193 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:23:10.296" starttime="20160118 10:23:10.292"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.332" starttime="20160118 10:23:10.330"></status>
</kw>
<msg timestamp="20160118 10:23:10.333" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,193 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:23:10.333" starttime="20160118 10:23:10.297"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.338" starttime="20160118 10:23:10.337"></status>
</kw>
<msg timestamp="20160118 10:23:10.339" level="INFO">${resultCode} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:23:10.339" starttime="20160118 10:23:10.334"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.345" starttime="20160118 10:23:10.345"></status>
</kw>
<msg timestamp="20160118 10:23:10.346" level="INFO">${resultCode} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:23:10.346" starttime="20160118 10:23:10.340"></status>
</kw>
<msg timestamp="20160118 10:23:10.347" level="INFO">${imsi} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:23:10.347" starttime="20160118 10:23:10.279"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:10.353" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20160118 10:23:10.353" starttime="20160118 10:23:10.352"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.355" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:10.355" starttime="20160118 10:23:10.354"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.357" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:10.357" starttime="20160118 10:23:10.356"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.360" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:10.361" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:10.361" starttime="20160118 10:23:10.359"></status>
</kw>
<msg timestamp="20160118 10:23:10.362" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:10.362" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,192 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34557</msg>
<status status="PASS" endtime="20160118 10:23:10.361" starttime="20160118 10:23:10.358"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.366" starttime="20160118 10:23:10.365"></status>
</kw>
<msg timestamp="20160118 10:23:10.367" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,192 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34557</msg>
<status status="PASS" endtime="20160118 10:23:10.367" starttime="20160118 10:23:10.363"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.371" starttime="20160118 10:23:10.370"></status>
</kw>
<msg timestamp="20160118 10:23:10.372" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,192 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34557</msg>
<status status="PASS" endtime="20160118 10:23:10.372" starttime="20160118 10:23:10.368"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.376" starttime="20160118 10:23:10.375"></status>
</kw>
<msg timestamp="20160118 10:23:10.377" level="INFO">${resultCode} = 34557</msg>
<status status="PASS" endtime="20160118 10:23:10.377" starttime="20160118 10:23:10.373"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.383" starttime="20160118 10:23:10.382"></status>
</kw>
<msg timestamp="20160118 10:23:10.384" level="INFO">${resultCode} = 34557</msg>
<status status="PASS" endtime="20160118 10:23:10.384" starttime="20160118 10:23:10.378"></status>
</kw>
<msg timestamp="20160118 10:23:10.385" level="INFO">${id} = 34557</msg>
<status status="PASS" endtime="20160118 10:23:10.385" starttime="20160118 10:23:10.349"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:10.391" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20160118 10:23:10.390" starttime="20160118 10:23:10.389"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.392" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:10.392" starttime="20160118 10:23:10.391"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.394" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:10.394" starttime="20160118 10:23:10.393"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.397" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:10.398" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:10.398" starttime="20160118 10:23:10.396"></status>
</kw>
<msg timestamp="20160118 10:23:10.399" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:10.399" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,194 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:10.399" starttime="20160118 10:23:10.395"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.403" starttime="20160118 10:23:10.402"></status>
</kw>
<msg timestamp="20160118 10:23:10.404" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,194 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:10.404" starttime="20160118 10:23:10.400"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.408" starttime="20160118 10:23:10.407"></status>
</kw>
<msg timestamp="20160118 10:23:10.409" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,194 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:10.409" starttime="20160118 10:23:10.405"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.415" starttime="20160118 10:23:10.414"></status>
</kw>
<msg timestamp="20160118 10:23:10.416" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:10.416" starttime="20160118 10:23:10.410"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.422" starttime="20160118 10:23:10.421"></status>
</kw>
<msg timestamp="20160118 10:23:10.425" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:10.425" starttime="20160118 10:23:10.417"></status>
</kw>
<msg timestamp="20160118 10:23:10.426" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:10.426" starttime="20160118 10:23:10.386"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:10.432" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20160118 10:23:10.432" starttime="20160118 10:23:10.431"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.434" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:10.433" starttime="20160118 10:23:10.433"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.435" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:10.435" starttime="20160118 10:23:10.434"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.438" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:10.439" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:10.439" starttime="20160118 10:23:10.437"></status>
</kw>
<msg timestamp="20160118 10:23:10.440" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:10.440" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,195 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:23:10.440" starttime="20160118 10:23:10.436"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.444" starttime="20160118 10:23:10.443"></status>
</kw>
<msg timestamp="20160118 10:23:10.445" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,195 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:23:10.445" starttime="20160118 10:23:10.441"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.450" starttime="20160118 10:23:10.448"></status>
</kw>
<msg timestamp="20160118 10:23:10.451" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,195 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:23:10.451" starttime="20160118 10:23:10.446"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.456" starttime="20160118 10:23:10.454"></status>
</kw>
<msg timestamp="20160118 10:23:10.457" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160118 10:23:10.456" starttime="20160118 10:23:10.452"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.463" starttime="20160118 10:23:10.462"></status>
</kw>
<msg timestamp="20160118 10:23:10.464" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160118 10:23:10.463" starttime="20160118 10:23:10.457"></status>
</kw>
<msg timestamp="20160118 10:23:10.465" level="INFO">${tariffId} = 101001</msg>
<status status="PASS" endtime="20160118 10:23:10.464" starttime="20160118 10:23:10.427"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:10.470" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20160118 10:23:10.470" starttime="20160118 10:23:10.469"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.472" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:10.472" starttime="20160118 10:23:10.471"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.474" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:10.473" starttime="20160118 10:23:10.473"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.476" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:10.477" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:10.478" starttime="20160118 10:23:10.475"></status>
</kw>
<msg timestamp="20160118 10:23:10.478" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:10.479" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,196 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:10.478" starttime="20160118 10:23:10.474"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.483" starttime="20160118 10:23:10.482"></status>
</kw>
<msg timestamp="20160118 10:23:10.483" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,196 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:10.483" starttime="20160118 10:23:10.479"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.488" starttime="20160118 10:23:10.487"></status>
</kw>
<msg timestamp="20160118 10:23:10.488" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,196 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:10.488" starttime="20160118 10:23:10.484"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.493" starttime="20160118 10:23:10.492"></status>
</kw>
<msg timestamp="20160118 10:23:10.494" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:10.493" starttime="20160118 10:23:10.489"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.499" starttime="20160118 10:23:10.498"></status>
</kw>
<msg timestamp="20160118 10:23:10.500" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:10.500" starttime="20160118 10:23:10.494"></status>
</kw>
<msg timestamp="20160118 10:23:10.501" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:10.501" starttime="20160118 10:23:10.466"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.506" starttime="20160118 10:23:10.505"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.507" starttime="20160118 10:23:10.506"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.508" starttime="20160118 10:23:10.508"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:23:10.514" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:23:10.514" starttime="20160118 10:23:10.512"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:10.515" starttime="20160118 10:23:10.512"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:10.515" starttime="20160118 10:23:10.509"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:10.516" starttime="20160118 10:23:10.502"></status>
</kw>
<msg timestamp="20160118 10:23:10.518" level="INFO">${rc} = OK</msg>
<msg timestamp="20160118 10:23:10.518" level="INFO">${provId} = 1</msg>
<msg timestamp="20160118 10:23:10.518" level="INFO">${imsi} = 334030880001000</msg>
<msg timestamp="20160118 10:23:10.518" level="INFO">${id} = 34557</msg>
<msg timestamp="20160118 10:23:10.519" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20160118 10:23:10.519" level="INFO">${tariffId} = 101001</msg>
<msg timestamp="20160118 10:23:10.519" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:10.517" starttime="20160118 10:23:10.010"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.530" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:10.531" starttime="20160118 10:23:10.529"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:10.531" starttime="20160118 10:23:10.528"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.536" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:10.536" starttime="20160118 10:23:10.533"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:10.537" starttime="20160118 10:23:10.532"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.539" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:10.540" starttime="20160118 10:23:10.538"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:10.540" starttime="20160118 10:23:10.537"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:10.541" starttime="20160118 10:23:10.525"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.543" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:23:10.543" starttime="20160118 10:23:10.541"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.545" starttime="20160118 10:23:10.543"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.546" starttime="20160118 10:23:10.545"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.548" starttime="20160118 10:23:10.547"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.549" starttime="20160118 10:23:10.548"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.550" starttime="20160118 10:23:10.549"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.552" starttime="20160118 10:23:10.551"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:23:10.554" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=34557']</msg>
<msg timestamp="20160118 10:23:10.711" level="INFO">10:23:10,702 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
10:23:10,704 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34558
10:23:10,705 INFO  [log] LowLevelOps.getMainAccount.output.balance=8000000
10:23:10,706 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
10:23:10,708 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:23:10.711" starttime="20160118 10:23:10.553"></status>
</kw>
<msg timestamp="20160118 10:23:10.713" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:10.713" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:23:10.712" starttime="20160118 10:23:10.552"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:10.723" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:23:10.722" starttime="20160118 10:23:10.720"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.726" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:10.725" starttime="20160118 10:23:10.724"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.729" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:10.728" starttime="20160118 10:23:10.727"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.733" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:10.734" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:10.735" starttime="20160118 10:23:10.731"></status>
</kw>
<msg timestamp="20160118 10:23:10.736" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:10.737" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,702 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:10.736" starttime="20160118 10:23:10.730"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.744" starttime="20160118 10:23:10.742"></status>
</kw>
<msg timestamp="20160118 10:23:10.745" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,702 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:10.745" starttime="20160118 10:23:10.738"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.752" starttime="20160118 10:23:10.750"></status>
</kw>
<msg timestamp="20160118 10:23:10.753" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,702 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:10.753" starttime="20160118 10:23:10.746"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.760" starttime="20160118 10:23:10.759"></status>
</kw>
<msg timestamp="20160118 10:23:10.762" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:10.761" starttime="20160118 10:23:10.754"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.771" starttime="20160118 10:23:10.770"></status>
</kw>
<msg timestamp="20160118 10:23:10.773" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:10.772" starttime="20160118 10:23:10.763"></status>
</kw>
<msg timestamp="20160118 10:23:10.774" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:10.774" starttime="20160118 10:23:10.715"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:10.784" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20160118 10:23:10.783" starttime="20160118 10:23:10.781"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.787" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:10.786" starttime="20160118 10:23:10.785"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.789" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:10.789" starttime="20160118 10:23:10.787"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.794" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:10.795" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:10.795" starttime="20160118 10:23:10.792"></status>
</kw>
<msg timestamp="20160118 10:23:10.797" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:10.797" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,704 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34558</msg>
<status status="PASS" endtime="20160118 10:23:10.796" starttime="20160118 10:23:10.790"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.804" starttime="20160118 10:23:10.802"></status>
</kw>
<msg timestamp="20160118 10:23:10.805" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,704 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34558</msg>
<status status="PASS" endtime="20160118 10:23:10.804" starttime="20160118 10:23:10.798"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.812" starttime="20160118 10:23:10.810"></status>
</kw>
<msg timestamp="20160118 10:23:10.813" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,704 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34558</msg>
<status status="PASS" endtime="20160118 10:23:10.813" starttime="20160118 10:23:10.806"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.820" starttime="20160118 10:23:10.818"></status>
</kw>
<msg timestamp="20160118 10:23:10.822" level="INFO">${resultCode} = 34558</msg>
<status status="PASS" endtime="20160118 10:23:10.821" starttime="20160118 10:23:10.814"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.831" starttime="20160118 10:23:10.830"></status>
</kw>
<msg timestamp="20160118 10:23:10.832" level="INFO">${resultCode} = 34558</msg>
<status status="PASS" endtime="20160118 10:23:10.832" starttime="20160118 10:23:10.823"></status>
</kw>
<msg timestamp="20160118 10:23:10.833" level="INFO">${accountId} = 34558</msg>
<status status="PASS" endtime="20160118 10:23:10.833" starttime="20160118 10:23:10.776"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:10.839" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20160118 10:23:10.839" starttime="20160118 10:23:10.838"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.841" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:10.841" starttime="20160118 10:23:10.840"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.843" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:10.842" starttime="20160118 10:23:10.841"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.845" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:10.846" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:10.846" starttime="20160118 10:23:10.844"></status>
</kw>
<msg timestamp="20160118 10:23:10.847" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:10.847" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,705 INFO  [log] LowLevelOps.getMainAccount.output.balance=8000000</msg>
<status status="PASS" endtime="20160118 10:23:10.847" starttime="20160118 10:23:10.843"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.851" starttime="20160118 10:23:10.851"></status>
</kw>
<msg timestamp="20160118 10:23:10.852" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,705 INFO  [log] LowLevelOps.getMainAccount.output.balance=8000000</msg>
<status status="PASS" endtime="20160118 10:23:10.852" starttime="20160118 10:23:10.848"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.856" starttime="20160118 10:23:10.855"></status>
</kw>
<msg timestamp="20160118 10:23:10.857" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,705 INFO  [log] LowLevelOps.getMainAccount.output.balance=8000000</msg>
<status status="PASS" endtime="20160118 10:23:10.857" starttime="20160118 10:23:10.853"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.862" starttime="20160118 10:23:10.861"></status>
</kw>
<msg timestamp="20160118 10:23:10.862" level="INFO">${resultCode} = 8000000</msg>
<status status="PASS" endtime="20160118 10:23:10.862" starttime="20160118 10:23:10.858"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.868" starttime="20160118 10:23:10.867"></status>
</kw>
<msg timestamp="20160118 10:23:10.869" level="INFO">${resultCode} = 8000000</msg>
<status status="PASS" endtime="20160118 10:23:10.869" starttime="20160118 10:23:10.863"></status>
</kw>
<msg timestamp="20160118 10:23:10.870" level="INFO">${balance} = 8000000</msg>
<status status="PASS" endtime="20160118 10:23:10.870" starttime="20160118 10:23:10.835"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:10.876" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20160118 10:23:10.876" starttime="20160118 10:23:10.874"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.878" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:10.877" starttime="20160118 10:23:10.876"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.879" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:10.879" starttime="20160118 10:23:10.878"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.882" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:10.883" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:10.883" starttime="20160118 10:23:10.881"></status>
</kw>
<msg timestamp="20160118 10:23:10.884" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:10.884" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,706 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:23:10.884" starttime="20160118 10:23:10.880"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.888" starttime="20160118 10:23:10.887"></status>
</kw>
<msg timestamp="20160118 10:23:10.889" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,706 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:23:10.889" starttime="20160118 10:23:10.885"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.893" starttime="20160118 10:23:10.892"></status>
</kw>
<msg timestamp="20160118 10:23:10.894" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,706 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:23:10.894" starttime="20160118 10:23:10.890"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.898" starttime="20160118 10:23:10.897"></status>
</kw>
<msg timestamp="20160118 10:23:10.899" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160118 10:23:10.899" starttime="20160118 10:23:10.895"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.905" starttime="20160118 10:23:10.904"></status>
</kw>
<msg timestamp="20160118 10:23:10.906" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160118 10:23:10.905" starttime="20160118 10:23:10.900"></status>
</kw>
<msg timestamp="20160118 10:23:10.907" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20160118 10:23:10.906" starttime="20160118 10:23:10.871"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:10.913" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20160118 10:23:10.912" starttime="20160118 10:23:10.911"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.914" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:10.914" starttime="20160118 10:23:10.913"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.916" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:10.916" starttime="20160118 10:23:10.915"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.919" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:10.920" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:10.920" starttime="20160118 10:23:10.918"></status>
</kw>
<msg timestamp="20160118 10:23:10.921" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:10.921" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,708 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:23:10.920" starttime="20160118 10:23:10.917"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.925" starttime="20160118 10:23:10.924"></status>
</kw>
<msg timestamp="20160118 10:23:10.926" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,708 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:23:10.926" starttime="20160118 10:23:10.922"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.930" starttime="20160118 10:23:10.929"></status>
</kw>
<msg timestamp="20160118 10:23:10.931" level="INFO">${return_log_entry} = 2016-01-18 10:23:10,708 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:23:10.931" starttime="20160118 10:23:10.927"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.935" starttime="20160118 10:23:10.934"></status>
</kw>
<msg timestamp="20160118 10:23:10.936" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20160118 10:23:10.936" starttime="20160118 10:23:10.931"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.942" starttime="20160118 10:23:10.941"></status>
</kw>
<msg timestamp="20160118 10:23:10.943" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20160118 10:23:10.943" starttime="20160118 10:23:10.937"></status>
</kw>
<msg timestamp="20160118 10:23:10.944" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20160118 10:23:10.944" starttime="20160118 10:23:10.908"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.949" starttime="20160118 10:23:10.948"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.950" starttime="20160118 10:23:10.949"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:10.951" starttime="20160118 10:23:10.951"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:23:10.957" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:23:10.958" starttime="20160118 10:23:10.955"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:10.958" starttime="20160118 10:23:10.954"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:10.958" starttime="20160118 10:23:10.952"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:10.959" starttime="20160118 10:23:10.945"></status>
</kw>
<msg timestamp="20160118 10:23:10.961" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20160118 10:23:10.961" level="INFO">${accId} = 34558</msg>
<msg timestamp="20160118 10:23:10.961" level="INFO">${bal} = 8000000</msg>
<msg timestamp="20160118 10:23:10.961" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20160118 10:23:10.962" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20160118 10:23:10.960" starttime="20160118 10:23:10.521"></status>
</kw>
<kw type="kw" name="${target_bal} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${INITIAL_BALANCE}-${TESTSUBCRIBERS DEFAULT SLICE COSTS}</arg>
</arguments>
<msg timestamp="20160118 10:23:10.965" level="INFO">${target_bal} = 8000000</msg>
<status status="PASS" endtime="20160118 10:23:10.965" starttime="20160118 10:23:10.962"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${target_bal}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<msg timestamp="20160118 10:23:10.967" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:23:10.967" starttime="20160118 10:23:10.966"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check OK!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:10.969" level="INFO">Account balance check OK!</msg>
<status status="PASS" endtime="20160118 10:23:10.969" starttime="20160118 10:23:10.968"></status>
</kw>
<doc>Test will make a MOC call, duration 1s.

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>MTEL_supported</tag>
<tag>SMARTSPACE_supported</tag>
<tag>TNZ_supported</tag>
<tag>VIRGIN_COLUMBIA_supported</tag>
</tags>
<status status="PASS" critical="yes" endtime="20160118 10:23:10.970" starttime="20160118 10:23:03.046"></status>
</test>
<doc>Testing the prepaid MOC call, duration is 1s - shorter than one slice (less than 60s)

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20160118 10:23:10.973" starttime="20160118 10:22:58.894"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20160118 10:23:10.978" starttime="20160118 10:22:58.872"></status>
</suite>
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown" id="s1-s8" name="MOC PREPAID ONNET-ToUnknown">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ToUnknown/MOC_PREPAID_ONNET-ToUnknown-robot-suite.txt" id="s1-s8-s1" name="MOC PREPAID ONNET-ToUnknown-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20160118 10:23:11.139" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:23:11.143" level="INFO">${date} = Mon Jan 18 10:23:11 CET 2016</msg>
<status status="PASS" endtime="20160118 10:23:11.142" starttime="20160118 10:23:11.134"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:11.144" level="INFO">Date and time: Mon Jan 18 10:23:11 CET 2016</msg>
<status status="PASS" endtime="20160118 10:23:11.145" starttime="20160118 10:23:11.143"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:11.146" level="INFO">Target IN machine: 10.105.119.135</msg>
<status status="PASS" endtime="20160118 10:23:11.147" starttime="20160118 10:23:11.145"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:11.169" starttime="20160118 10:23:11.168"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:11.256" starttime="20160118 10:23:11.173"></status>
</kw>
<msg timestamp="20160118 10:23:11.260" level="INFO">${ssh_connection} = 29</msg>
<status status="PASS" endtime="20160118 10:23:11.258" starttime="20160118 10:23:11.170"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:23:11.272" level="INFO">Logging into '10.105.119.135:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:23:11.814" level="INFO">Read output: Last login: Mon Jan 18 09:22:59 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:23:11.815" starttime="20160118 10:23:11.270"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:11.816" starttime="20160118 10:23:11.261"></status>
</kw>
<msg timestamp="20160118 10:23:11.817" level="INFO">${ssh_connection} = 29</msg>
<status status="PASS" endtime="20160118 10:23:11.817" starttime="20160118 10:23:11.165"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:23:11.822" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:23:11.821" starttime="20160118 10:23:11.818"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:23:11.823" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20160118 10:23:12.405" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:23:12.408" level="INFO">${output} = I-New MVNA TEMM - Core - Service 1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:23:12.407" starttime="20160118 10:23:11.822"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:12.416" starttime="20160118 10:23:12.413"></status>
</kw>
<msg timestamp="20160118 10:23:12.418" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:23:12.418" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:23:12.417" starttime="20160118 10:23:12.410"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:12.428" starttime="20160118 10:23:12.426"></status>
</kw>
<msg timestamp="20160118 10:23:12.429" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:12.429" starttime="20160118 10:23:12.419"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20160118 10:23:12.433" level="INFO">${version_r} =  1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160118 10:23:12.433" starttime="20160118 10:23:12.431"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:23:12.437" level="INFO">${version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:23:12.437" starttime="20160118 10:23:12.435"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:12.440" starttime="20160118 10:23:12.439"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:12.452" starttime="20160118 10:23:12.449"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:23:12.458" starttime="20160118 10:23:12.453"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:12.459" starttime="20160118 10:23:12.443"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:12.468" starttime="20160118 10:23:12.466"></status>
</kw>
<msg timestamp="20160118 10:23:12.470" level="INFO">${ver} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:23:12.469" starttime="20160118 10:23:12.461"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:12.473" starttime="20160118 10:23:12.471"></status>
</kw>
<msg timestamp="20160118 10:23:12.476" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20160118 10:23:12.477" level="INFO">${in_version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:23:12.475" starttime="20160118 10:23:11.154"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:12.525" starttime="20160118 10:23:12.523"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:12.576" starttime="20160118 10:23:12.533"></status>
</kw>
<msg timestamp="20160118 10:23:12.578" level="INFO">${ssh_connection} = 30</msg>
<status status="PASS" endtime="20160118 10:23:12.577" starttime="20160118 10:23:12.526"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:23:12.583" level="INFO">Logging into '10.105.119.171:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:23:13.027" level="INFO">Read output: Last login: Mon Jan 18 09:23:00 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:23:13.029" starttime="20160118 10:23:12.582"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:13.031" starttime="20160118 10:23:12.578"></status>
</kw>
<msg timestamp="20160118 10:23:13.035" level="INFO">${ssh_connection} = 30</msg>
<status status="PASS" endtime="20160118 10:23:13.034" starttime="20160118 10:23:12.514"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:23:13.043" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:23:13.043" starttime="20160118 10:23:13.036"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:23:13.047" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20160118 10:23:13.521" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:23:13.522" level="INFO">${output} = I-New UMS MVNO - XDR - Server 6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:23:13.521" starttime="20160118 10:23:13.044"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:13.525" starttime="20160118 10:23:13.523"></status>
</kw>
<msg timestamp="20160118 10:23:13.526" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:23:13.526" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:23:13.525" starttime="20160118 10:23:13.522"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:13.530" starttime="20160118 10:23:13.529"></status>
</kw>
<msg timestamp="20160118 10:23:13.531" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:13.530" starttime="20160118 10:23:13.526"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20160118 10:23:13.533" level="INFO">${version_r} =  6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160118 10:23:13.532" starttime="20160118 10:23:13.531"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:23:13.534" level="INFO">${version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:23:13.534" starttime="20160118 10:23:13.533"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:13.536" starttime="20160118 10:23:13.535"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:13.541" starttime="20160118 10:23:13.540"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:23:13.542" starttime="20160118 10:23:13.542"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:13.544" starttime="20160118 10:23:13.537"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:13.548" starttime="20160118 10:23:13.547"></status>
</kw>
<msg timestamp="20160118 10:23:13.549" level="INFO">${ver} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:23:13.549" starttime="20160118 10:23:13.545"></status>
</kw>
<msg timestamp="20160118 10:23:13.551" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20160118 10:23:13.551" level="INFO">${xdr_version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:23:13.550" starttime="20160118 10:23:12.492"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:13.573" starttime="20160118 10:23:13.572"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:13.620" starttime="20160118 10:23:13.576"></status>
</kw>
<msg timestamp="20160118 10:23:13.621" level="INFO">${ssh_connection} = 31</msg>
<status status="PASS" endtime="20160118 10:23:13.620" starttime="20160118 10:23:13.573"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:23:13.625" level="INFO">Logging into '10.105.119.125:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:23:14.071" level="INFO">Read output: Last login: Mon Jan 18 09:23:01 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@crce01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:23:14.072" starttime="20160118 10:23:13.624"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:14.072" starttime="20160118 10:23:13.621"></status>
</kw>
<msg timestamp="20160118 10:23:14.074" level="INFO">${ssh_connection} = 31</msg>
<status status="PASS" endtime="20160118 10:23:14.074" starttime="20160118 10:23:13.568"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:23:14.078" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:23:14.078" starttime="20160118 10:23:14.075"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:23:14.080" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20160118 10:23:14.324" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:23:14.325" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.1.23.31100
Negret Rating &amp; Charging Engine 6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:23:14.325" starttime="20160118 10:23:14.079"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:14.328" starttime="20160118 10:23:14.327"></status>
</kw>
<msg timestamp="20160118 10:23:14.329" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:23:14.329" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:23:14.329" starttime="20160118 10:23:14.326"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:14.334" starttime="20160118 10:23:14.333"></status>
</kw>
<msg timestamp="20160118 10:23:14.335" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:14.334" starttime="20160118 10:23:14.330"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:23:14.336" level="INFO">${version_r} =  6.1.23.31100 is running (PID:763, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160118 10:23:14.336" starttime="20160118 10:23:14.335"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:23:14.338" level="INFO">${version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:23:14.338" starttime="20160118 10:23:14.337"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:14.339" starttime="20160118 10:23:14.339"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:14.344" starttime="20160118 10:23:14.343"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:23:14.347" starttime="20160118 10:23:14.345"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:14.348" starttime="20160118 10:23:14.340"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:14.352" starttime="20160118 10:23:14.351"></status>
</kw>
<msg timestamp="20160118 10:23:14.352" level="INFO">${ver} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:23:14.352" starttime="20160118 10:23:14.348"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:14.354" starttime="20160118 10:23:14.353"></status>
</kw>
<msg timestamp="20160118 10:23:14.355" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20160118 10:23:14.355" level="INFO">${crce_version} =  6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:23:14.354" starttime="20160118 10:23:13.558"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:14.378" starttime="20160118 10:23:14.377"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:14.419" starttime="20160118 10:23:14.381"></status>
</kw>
<msg timestamp="20160118 10:23:14.421" level="INFO">${ssh_connection} = 32</msg>
<status status="PASS" endtime="20160118 10:23:14.421" starttime="20160118 10:23:14.378"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160118 10:23:14.426" level="INFO">Logging into '10.105.119.159:22' as 'qa_automation'.</msg>
<msg timestamp="20160118 10:23:14.871" level="INFO">Read output: Last login: Mon Jan 18 09:23:02 2016 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@ocs01.tb19 ~]$</msg>
<status status="PASS" endtime="20160118 10:23:14.872" starttime="20160118 10:23:14.424"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:14.872" starttime="20160118 10:23:14.422"></status>
</kw>
<msg timestamp="20160118 10:23:14.874" level="INFO">${ssh_connection} = 32</msg>
<status status="PASS" endtime="20160118 10:23:14.874" starttime="20160118 10:23:14.373"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160118 10:23:14.879" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160118 10:23:14.878" starttime="20160118 10:23:14.875"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160118 10:23:14.880" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20160118 10:23:14.965" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160118 10:23:14.967" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:23:14.966" starttime="20160118 10:23:14.879"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:14.974" starttime="20160118 10:23:14.971"></status>
</kw>
<msg timestamp="20160118 10:23:14.975" level="INFO">${status} = PASS</msg>
<msg timestamp="20160118 10:23:14.976" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160118 10:23:14.975" starttime="20160118 10:23:14.968"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:14.985" starttime="20160118 10:23:14.983"></status>
</kw>
<msg timestamp="20160118 10:23:14.986" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:14.986" starttime="20160118 10:23:14.977"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160118 10:23:14.990" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 21314)</msg>
<status status="PASS" endtime="20160118 10:23:14.990" starttime="20160118 10:23:14.988"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160118 10:23:14.994" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:23:14.993" starttime="20160118 10:23:14.991"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:14.997" starttime="20160118 10:23:14.995"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.009" starttime="20160118 10:23:15.006"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.012" starttime="20160118 10:23:15.010"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:15.016" starttime="20160118 10:23:14.999"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.026" starttime="20160118 10:23:15.024"></status>
</kw>
<msg timestamp="20160118 10:23:15.028" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:23:15.027" starttime="20160118 10:23:15.018"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.031" starttime="20160118 10:23:15.029"></status>
</kw>
<msg timestamp="20160118 10:23:15.034" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20160118 10:23:15.035" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:23:15.033" starttime="20160118 10:23:14.362"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:15.039" level="INFO">IN state= OK version= 1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160118 10:23:15.040" starttime="20160118 10:23:15.036"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:15.043" level="INFO">XDR state= OK version= 6.1.5.27971 </msg>
<status status="PASS" endtime="20160118 10:23:15.044" starttime="20160118 10:23:15.041"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:15.048" level="INFO">CRCE state= OK version= 6.1.23.31100 </msg>
<status status="PASS" endtime="20160118 10:23:15.049" starttime="20160118 10:23:15.045"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:15.052" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160118 10:23:15.054" starttime="20160118 10:23:15.050"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20160118 10:23:15.057" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:23:15.058" starttime="20160118 10:23:15.055"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20160118 10:23:15.061" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:23:15.062" starttime="20160118 10:23:15.059"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20160118 10:23:15.065" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:23:15.066" starttime="20160118 10:23:15.063"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20160118 10:23:15.069" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:23:15.070" starttime="20160118 10:23:15.067"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.083" starttime="20160118 10:23:15.077"></status>
</kw>
<msg timestamp="20160118 10:23:15.085" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:23:15.084" starttime="20160118 10:23:15.071"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.089" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160118 10:23:15.089" starttime="20160118 10:23:15.086"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:15.091" starttime="20160118 10:23:11.131"></status>
</kw>
<test id="s1-s8-s1-t1" name="Run MOC ToUnknown Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.103" starttime="20160118 10:23:15.101"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<msg timestamp="20160118 10:23:15.107" level="INFO">${INITIAL_BALANCE} = 10000000</msg>
<status status="PASS" endtime="20160118 10:23:15.106" starttime="20160118 10:23:15.104"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.122" level="INFO">msg=crce_host=10.105.119.125</msg>
<status status="PASS" endtime="20160118 10:23:15.123" starttime="20160118 10:23:15.120"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.126" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20160118 10:23:15.127" starttime="20160118 10:23:15.124"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.130" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20160118 10:23:15.130" starttime="20160118 10:23:15.128"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.134" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20160118 10:23:15.134" starttime="20160118 10:23:15.132"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.137" level="INFO">msg=imsiRangeStart=334030880001000</msg>
<status status="PASS" endtime="20160118 10:23:15.138" starttime="20160118 10:23:15.135"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.141" level="INFO">msg=msisdnRangeStart=525516001000</msg>
<status status="PASS" endtime="20160118 10:23:15.142" starttime="20160118 10:23:15.139"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.145" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:15.146" starttime="20160118 10:23:15.143"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.149" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20160118 10:23:15.150" starttime="20160118 10:23:15.147"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.153" level="INFO">msg=tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:23:15.153" starttime="20160118 10:23:15.151"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.156" level="INFO">msg=balance=10000000</msg>
<status status="PASS" endtime="20160118 10:23:15.157" starttime="20160118 10:23:15.155"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.172" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:15.172" starttime="20160118 10:23:15.168"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:15.173" starttime="20160118 10:23:15.166"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.179" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:15.180" starttime="20160118 10:23:15.177"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:15.181" starttime="20160118 10:23:15.175"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.187" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:15.188" starttime="20160118 10:23:15.184"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:15.189" starttime="20160118 10:23:15.182"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:15.190" starttime="20160118 10:23:15.160"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:23:15.196" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:23:15.197" starttime="20160118 10:23:15.192"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.200" starttime="20160118 10:23:15.198"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.204" starttime="20160118 10:23:15.201"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.207" starttime="20160118 10:23:15.205"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.208" starttime="20160118 10:23:15.207"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.210" starttime="20160118 10:23:15.209"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.211" starttime="20160118 10:23:15.211"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.213" starttime="20160118 10:23:15.212"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.215" starttime="20160118 10:23:15.214"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.216" starttime="20160118 10:23:15.215"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.218" starttime="20160118 10:23:15.217"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.219" starttime="20160118 10:23:15.218"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:15.221" starttime="20160118 10:23:15.220"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:23:15.223" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000']</msg>
<msg timestamp="20160118 10:23:16.840" level="INFO">10:23:16,837 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:16.841" starttime="20160118 10:23:15.222"></status>
</kw>
<msg timestamp="20160118 10:23:16.842" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:16.843" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:23:16.842" starttime="20160118 10:23:15.221"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:16.849" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:23:16.848" starttime="20160118 10:23:16.847"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:16.850" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:16.850" starttime="20160118 10:23:16.849"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:16.852" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:16.852" starttime="20160118 10:23:16.851"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:16.860" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:16.861" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:16.861" starttime="20160118 10:23:16.854"></status>
</kw>
<msg timestamp="20160118 10:23:16.862" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:16.862" level="INFO">${return_log_entry} = 2016-01-18 10:23:16,837 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:16.862" starttime="20160118 10:23:16.853"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:16.867" starttime="20160118 10:23:16.866"></status>
</kw>
<msg timestamp="20160118 10:23:16.868" level="INFO">${return_log_entry} = 2016-01-18 10:23:16,837 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:16.867" starttime="20160118 10:23:16.863"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:16.872" starttime="20160118 10:23:16.871"></status>
</kw>
<msg timestamp="20160118 10:23:16.873" level="INFO">${return_log_entry} = 2016-01-18 10:23:16,837 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:16.872" starttime="20160118 10:23:16.868"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:16.878" starttime="20160118 10:23:16.876"></status>
</kw>
<msg timestamp="20160118 10:23:16.878" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:16.878" starttime="20160118 10:23:16.874"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:16.884" starttime="20160118 10:23:16.883"></status>
</kw>
<msg timestamp="20160118 10:23:16.885" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:16.885" starttime="20160118 10:23:16.879"></status>
</kw>
<msg timestamp="20160118 10:23:16.886" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:16.886" starttime="20160118 10:23:16.844"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:16.891" starttime="20160118 10:23:16.890"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:16.892" starttime="20160118 10:23:16.891"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:16.893" starttime="20160118 10:23:16.893"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:23:16.899" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:23:16.899" starttime="20160118 10:23:16.897"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:16.900" starttime="20160118 10:23:16.897"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:16.900" starttime="20160118 10:23:16.894"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:16.901" starttime="20160118 10:23:16.887"></status>
</kw>
<msg timestamp="20160118 10:23:16.902" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20160118 10:23:16.901" starttime="20160118 10:23:15.110"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20160118 10:23:16.904" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160118 10:23:16.904" starttime="20160118 10:23:16.903"></status>
</kw>
<kw type="kw" name="${unknown_subscriber} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}+1</arg>
</arguments>
<msg timestamp="20160118 10:23:16.907" level="INFO">${unknown_subscriber} = 525516001001</msg>
<status status="PASS" endtime="20160118 10:23:16.907" starttime="20160118 10:23:16.905"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Unknown subscriber's MSISDN: ${unknown_subscriber}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:16.909" level="INFO">Unknown subscriber's MSISDN: 525516001001</msg>
<status status="PASS" endtime="20160118 10:23:16.909" starttime="20160118 10:23:16.908"></status>
</kw>
<kw type="kw" name="${rc}, ${provcId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${unknown_subscriber}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:16.921" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:16.921" starttime="20160118 10:23:16.919"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:16.922" starttime="20160118 10:23:16.918"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:16.924" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:16.925" starttime="20160118 10:23:16.923"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:16.925" starttime="20160118 10:23:16.922"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:16.943" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:16.944" starttime="20160118 10:23:16.942"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:16.944" starttime="20160118 10:23:16.926"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:16.945" starttime="20160118 10:23:16.915"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:23:16.947" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:23:16.947" starttime="20160118 10:23:16.945"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:16.948" starttime="20160118 10:23:16.947"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:16.950" starttime="20160118 10:23:16.949"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:16.952" starttime="20160118 10:23:16.951"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:16.953" starttime="20160118 10:23:16.952"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:16.955" starttime="20160118 10:23:16.954"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:16.956" starttime="20160118 10:23:16.955"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:23:16.959" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001001']</msg>
<msg timestamp="20160118 10:23:17.239" level="INFO">10:23:17,213 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
10:23:17,216 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
10:23:17,219 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34564
10:23:17,222 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001001
10:23:17,225 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
10:23:17,228 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001
10:23:17,231 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID
10:23:17,234 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20160118 10:23:17.241" starttime="20160118 10:23:16.958"></status>
</kw>
<msg timestamp="20160118 10:23:17.245" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:17.246" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:23:17.243" starttime="20160118 10:23:16.957"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:17.259" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:23:17.258" starttime="20160118 10:23:17.256"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.263" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:17.262" starttime="20160118 10:23:17.260"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.267" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:17.266" starttime="20160118 10:23:17.264"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.273" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:17.274" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:17.275" starttime="20160118 10:23:17.270"></status>
</kw>
<msg timestamp="20160118 10:23:17.277" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:17.278" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,213 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:17.276" starttime="20160118 10:23:17.268"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.288" starttime="20160118 10:23:17.286"></status>
</kw>
<msg timestamp="20160118 10:23:17.290" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,213 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:17.289" starttime="20160118 10:23:17.279"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.299" starttime="20160118 10:23:17.297"></status>
</kw>
<msg timestamp="20160118 10:23:17.301" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,213 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:17.300" starttime="20160118 10:23:17.291"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.311" starttime="20160118 10:23:17.308"></status>
</kw>
<msg timestamp="20160118 10:23:17.313" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:17.312" starttime="20160118 10:23:17.302"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.325" starttime="20160118 10:23:17.323"></status>
</kw>
<msg timestamp="20160118 10:23:17.327" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:17.327" starttime="20160118 10:23:17.314"></status>
</kw>
<msg timestamp="20160118 10:23:17.330" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:17.329" starttime="20160118 10:23:17.249"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:17.338" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20160118 10:23:17.337" starttime="20160118 10:23:17.336"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.339" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:17.339" starttime="20160118 10:23:17.338"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.341" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:17.341" starttime="20160118 10:23:17.340"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.344" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:17.345" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:17.345" starttime="20160118 10:23:17.343"></status>
</kw>
<msg timestamp="20160118 10:23:17.346" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:17.346" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,216 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:23:17.345" starttime="20160118 10:23:17.342"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.351" starttime="20160118 10:23:17.350"></status>
</kw>
<msg timestamp="20160118 10:23:17.352" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,216 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:23:17.351" starttime="20160118 10:23:17.347"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.356" starttime="20160118 10:23:17.355"></status>
</kw>
<msg timestamp="20160118 10:23:17.356" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,216 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:23:17.356" starttime="20160118 10:23:17.352"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.361" starttime="20160118 10:23:17.360"></status>
</kw>
<msg timestamp="20160118 10:23:17.362" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160118 10:23:17.361" starttime="20160118 10:23:17.357"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.368" starttime="20160118 10:23:17.367"></status>
</kw>
<msg timestamp="20160118 10:23:17.368" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160118 10:23:17.368" starttime="20160118 10:23:17.362"></status>
</kw>
<msg timestamp="20160118 10:23:17.370" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20160118 10:23:17.369" starttime="20160118 10:23:17.332"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:17.375" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20160118 10:23:17.375" starttime="20160118 10:23:17.374"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.377" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:17.377" starttime="20160118 10:23:17.376"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.379" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:17.378" starttime="20160118 10:23:17.377"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.381" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:17.382" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:17.382" starttime="20160118 10:23:17.380"></status>
</kw>
<msg timestamp="20160118 10:23:17.383" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:17.383" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,222 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001001</msg>
<status status="PASS" endtime="20160118 10:23:17.383" starttime="20160118 10:23:17.379"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.388" starttime="20160118 10:23:17.387"></status>
</kw>
<msg timestamp="20160118 10:23:17.389" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,222 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001001</msg>
<status status="PASS" endtime="20160118 10:23:17.388" starttime="20160118 10:23:17.384"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.393" starttime="20160118 10:23:17.392"></status>
</kw>
<msg timestamp="20160118 10:23:17.393" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,222 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001001</msg>
<status status="PASS" endtime="20160118 10:23:17.393" starttime="20160118 10:23:17.389"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.398" starttime="20160118 10:23:17.397"></status>
</kw>
<msg timestamp="20160118 10:23:17.399" level="INFO">${resultCode} = 334030880001001</msg>
<status status="PASS" endtime="20160118 10:23:17.398" starttime="20160118 10:23:17.394"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.404" starttime="20160118 10:23:17.404"></status>
</kw>
<msg timestamp="20160118 10:23:17.405" level="INFO">${resultCode} = 334030880001001</msg>
<status status="PASS" endtime="20160118 10:23:17.405" starttime="20160118 10:23:17.399"></status>
</kw>
<msg timestamp="20160118 10:23:17.406" level="INFO">${imsi} = 334030880001001</msg>
<status status="PASS" endtime="20160118 10:23:17.406" starttime="20160118 10:23:17.371"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:17.412" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20160118 10:23:17.411" starttime="20160118 10:23:17.410"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.413" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:17.413" starttime="20160118 10:23:17.412"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.415" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:17.415" starttime="20160118 10:23:17.414"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.418" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:17.419" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:17.419" starttime="20160118 10:23:17.417"></status>
</kw>
<msg timestamp="20160118 10:23:17.420" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:17.420" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,219 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34564</msg>
<status status="PASS" endtime="20160118 10:23:17.419" starttime="20160118 10:23:17.416"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.424" starttime="20160118 10:23:17.423"></status>
</kw>
<msg timestamp="20160118 10:23:17.425" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,219 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34564</msg>
<status status="PASS" endtime="20160118 10:23:17.425" starttime="20160118 10:23:17.421"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.429" starttime="20160118 10:23:17.428"></status>
</kw>
<msg timestamp="20160118 10:23:17.430" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,219 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34564</msg>
<status status="PASS" endtime="20160118 10:23:17.430" starttime="20160118 10:23:17.426"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.435" starttime="20160118 10:23:17.434"></status>
</kw>
<msg timestamp="20160118 10:23:17.436" level="INFO">${resultCode} = 34564</msg>
<status status="PASS" endtime="20160118 10:23:17.435" starttime="20160118 10:23:17.431"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.441" starttime="20160118 10:23:17.440"></status>
</kw>
<msg timestamp="20160118 10:23:17.442" level="INFO">${resultCode} = 34564</msg>
<status status="PASS" endtime="20160118 10:23:17.442" starttime="20160118 10:23:17.436"></status>
</kw>
<msg timestamp="20160118 10:23:17.443" level="INFO">${id} = 34564</msg>
<status status="PASS" endtime="20160118 10:23:17.443" starttime="20160118 10:23:17.407"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:17.449" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20160118 10:23:17.448" starttime="20160118 10:23:17.447"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.450" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:17.450" starttime="20160118 10:23:17.449"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.452" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:17.452" starttime="20160118 10:23:17.451"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.455" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:17.456" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:17.456" starttime="20160118 10:23:17.454"></status>
</kw>
<msg timestamp="20160118 10:23:17.457" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:17.457" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,225 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:17.456" starttime="20160118 10:23:17.453"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.461" starttime="20160118 10:23:17.460"></status>
</kw>
<msg timestamp="20160118 10:23:17.462" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,225 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:17.462" starttime="20160118 10:23:17.458"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.466" starttime="20160118 10:23:17.465"></status>
</kw>
<msg timestamp="20160118 10:23:17.467" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,225 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:17.467" starttime="20160118 10:23:17.463"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.472" starttime="20160118 10:23:17.470"></status>
</kw>
<msg timestamp="20160118 10:23:17.472" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:17.472" starttime="20160118 10:23:17.468"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.479" starttime="20160118 10:23:17.478"></status>
</kw>
<msg timestamp="20160118 10:23:17.480" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:17.480" starttime="20160118 10:23:17.473"></status>
</kw>
<msg timestamp="20160118 10:23:17.481" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:17.481" starttime="20160118 10:23:17.444"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:17.487" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20160118 10:23:17.486" starttime="20160118 10:23:17.485"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.488" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:17.488" starttime="20160118 10:23:17.487"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.490" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:17.490" starttime="20160118 10:23:17.489"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.493" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:17.493" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:17.494" starttime="20160118 10:23:17.491"></status>
</kw>
<msg timestamp="20160118 10:23:17.494" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:17.495" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,228 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:23:17.494" starttime="20160118 10:23:17.491"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.499" starttime="20160118 10:23:17.498"></status>
</kw>
<msg timestamp="20160118 10:23:17.499" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,228 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:23:17.499" starttime="20160118 10:23:17.495"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.504" starttime="20160118 10:23:17.503"></status>
</kw>
<msg timestamp="20160118 10:23:17.504" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,228 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:23:17.504" starttime="20160118 10:23:17.500"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.509" starttime="20160118 10:23:17.508"></status>
</kw>
<msg timestamp="20160118 10:23:17.510" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160118 10:23:17.509" starttime="20160118 10:23:17.505"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.515" starttime="20160118 10:23:17.514"></status>
</kw>
<msg timestamp="20160118 10:23:17.516" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160118 10:23:17.516" starttime="20160118 10:23:17.510"></status>
</kw>
<msg timestamp="20160118 10:23:17.517" level="INFO">${tariffId} = 101001</msg>
<status status="PASS" endtime="20160118 10:23:17.517" starttime="20160118 10:23:17.482"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:17.523" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20160118 10:23:17.522" starttime="20160118 10:23:17.521"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.524" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:17.524" starttime="20160118 10:23:17.523"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.526" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:17.526" starttime="20160118 10:23:17.525"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.529" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:17.529" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:17.530" starttime="20160118 10:23:17.527"></status>
</kw>
<msg timestamp="20160118 10:23:17.530" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:17.531" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,231 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:17.530" starttime="20160118 10:23:17.527"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.535" starttime="20160118 10:23:17.534"></status>
</kw>
<msg timestamp="20160118 10:23:17.535" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,231 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:17.535" starttime="20160118 10:23:17.531"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.540" starttime="20160118 10:23:17.539"></status>
</kw>
<msg timestamp="20160118 10:23:17.540" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,231 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:17.540" starttime="20160118 10:23:17.536"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.545" starttime="20160118 10:23:17.543"></status>
</kw>
<msg timestamp="20160118 10:23:17.545" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:17.545" starttime="20160118 10:23:17.541"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.551" starttime="20160118 10:23:17.550"></status>
</kw>
<msg timestamp="20160118 10:23:17.552" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:17.552" starttime="20160118 10:23:17.546"></status>
</kw>
<msg timestamp="20160118 10:23:17.553" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:17.553" starttime="20160118 10:23:17.518"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.558" starttime="20160118 10:23:17.557"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.559" starttime="20160118 10:23:17.558"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.560" starttime="20160118 10:23:17.559"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:23:17.566" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:23:17.566" starttime="20160118 10:23:17.564"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:17.567" starttime="20160118 10:23:17.563"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:17.567" starttime="20160118 10:23:17.561"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:17.568" starttime="20160118 10:23:17.554"></status>
</kw>
<msg timestamp="20160118 10:23:17.570" level="INFO">${rc} = OK</msg>
<msg timestamp="20160118 10:23:17.570" level="INFO">${provcId} = 1</msg>
<msg timestamp="20160118 10:23:17.570" level="INFO">${imsi} = 334030880001001</msg>
<msg timestamp="20160118 10:23:17.571" level="INFO">${id} = 34564</msg>
<msg timestamp="20160118 10:23:17.571" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20160118 10:23:17.571" level="INFO">${tariffId} = 101001</msg>
<msg timestamp="20160118 10:23:17.571" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:17.569" starttime="20160118 10:23:16.911"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Deleting "unknown" subscriber...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:17.573" level="INFO">Deleting "unknown" subscriber...</msg>
<status status="PASS" endtime="20160118 10:23:17.573" starttime="20160118 10:23:17.572"></status>
</kw>
<kw type="kw" name="${rc} = subscriber-admin-support-resource.CRCE Delete Subscriber">
<doc>This is a delegator to the CRCE webservice operation deleteSubcriber</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.584" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:17.585" starttime="20160118 10:23:17.583"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:17.585" starttime="20160118 10:23:17.582"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.588" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:17.588" starttime="20160118 10:23:17.587"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:17.589" starttime="20160118 10:23:17.586"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.591" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:17.592" starttime="20160118 10:23:17.590"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:17.592" starttime="20160118 10:23:17.589"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:17.593" starttime="20160118 10:23:17.579"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.594" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:23:17.595" starttime="20160118 10:23:17.593"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.596" starttime="20160118 10:23:17.595"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.598" starttime="20160118 10:23:17.597"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.599" starttime="20160118 10:23:17.598"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.600" starttime="20160118 10:23:17.600"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>deleteSubscriber</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.602" starttime="20160118 10:23:17.601"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.deleteSubscriber.input.id=${id}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.603" starttime="20160118 10:23:17.602"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:23:17.605" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001001', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.deleteSubscriber.input.id=34564']</msg>
<msg timestamp="20160118 10:23:17.888" level="INFO">10:23:17,886 INFO  [log] LowLevelOps.deleteSubscriber.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:17.888" starttime="20160118 10:23:17.605"></status>
</kw>
<msg timestamp="20160118 10:23:17.889" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:17.890" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:23:17.889" starttime="20160118 10:23:17.604"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.deleteSubscriber.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:17.895" level="INFO">${return_marker} = LowLevelOps.deleteSubscriber.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:23:17.895" starttime="20160118 10:23:17.894"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.897" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:17.897" starttime="20160118 10:23:17.896"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.899" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:17.898" starttime="20160118 10:23:17.898"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.901" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:17.904" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:17.905" starttime="20160118 10:23:17.900"></status>
</kw>
<msg timestamp="20160118 10:23:17.905" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:17.906" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,886 INFO  [log] LowLevelOps.deleteSubscriber.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:17.905" starttime="20160118 10:23:17.899"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.910" starttime="20160118 10:23:17.909"></status>
</kw>
<msg timestamp="20160118 10:23:17.911" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,886 INFO  [log] LowLevelOps.deleteSubscriber.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:17.911" starttime="20160118 10:23:17.906"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.915" starttime="20160118 10:23:17.914"></status>
</kw>
<msg timestamp="20160118 10:23:17.916" level="INFO">${return_log_entry} = 2016-01-18 10:23:17,886 INFO  [log] LowLevelOps.deleteSubscriber.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:17.915" starttime="20160118 10:23:17.911"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.920" starttime="20160118 10:23:17.919"></status>
</kw>
<msg timestamp="20160118 10:23:17.921" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:17.921" starttime="20160118 10:23:17.916"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.927" starttime="20160118 10:23:17.926"></status>
</kw>
<msg timestamp="20160118 10:23:17.927" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:17.927" starttime="20160118 10:23:17.921"></status>
</kw>
<msg timestamp="20160118 10:23:17.928" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:17.928" starttime="20160118 10:23:17.891"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-DeleteSubscriber</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.933" starttime="20160118 10:23:17.932"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.935" starttime="20160118 10:23:17.934"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.936" starttime="20160118 10:23:17.935"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:23:17.945" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-DeleteSubscriber*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-DeleteSubscriber*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:23:17.946" starttime="20160118 10:23:17.942"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:17.946" starttime="20160118 10:23:17.941"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:17.947" starttime="20160118 10:23:17.938"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:17.947" starttime="20160118 10:23:17.929"></status>
</kw>
<msg timestamp="20160118 10:23:17.948" level="INFO">${rc} = OK</msg>
<status status="PASS" endtime="20160118 10:23:17.948" starttime="20160118 10:23:17.575"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Deleting subscriber returned rc= ${rc}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:17.950" level="INFO">Deleting subscriber returned rc= OK</msg>
<status status="PASS" endtime="20160118 10:23:17.950" starttime="20160118 10:23:17.949"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${rc}'=='OK'</arg>
<arg>Log</arg>
<arg>Test Subscribers prepared!</arg>
<arg>console=yes</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>msg=Subscriber preparation failed!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers prepared!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:17.955" level="INFO">Test Subscribers prepared!</msg>
<status status="PASS" endtime="20160118 10:23:17.955" starttime="20160118 10:23:17.954"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:17.955" starttime="20160118 10:23:17.951"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC 1s to unknown subscriber*******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.957" starttime="20160118 10:23:17.956"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the MOC call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:17.958" level="INFO">Running the MOC call...</msg>
<status status="PASS" endtime="20160118 10:23:17.959" starttime="20160118 10:23:17.958"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC 1s">
<doc>Runs a standard MOC 1s session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${unknown_subscriber}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc1s</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20160118 10:23:17.973" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv</msg>
<status status="PASS" endtime="20160118 10:23:17.972" starttime="20160118 10:23:17.971"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20160118 10:23:17.975" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv</msg>
<status status="PASS" endtime="20160118 10:23:17.974" starttime="20160118 10:23:17.973"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20160118 10:23:17.976" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini</msg>
<status status="PASS" endtime="20160118 10:23:17.976" starttime="20160118 10:23:17.975"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20160118 10:23:17.978" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc1s.cgs</msg>
<status status="PASS" endtime="20160118 10:23:17.978" starttime="20160118 10:23:17.977"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.980" starttime="20160118 10:23:17.979"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:23:17.983" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:17.983" starttime="20160118 10:23:17.980"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.984" starttime="20160118 10:23:17.983"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20160118 10:23:17.986" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:17.987" starttime="20160118 10:23:17.985"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20160118 10:23:17.989" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:17.990" starttime="20160118 10:23:17.987"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:17.991" starttime="20160118 10:23:17.990"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20160118 10:23:17.995" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:17.996" starttime="20160118 10:23:17.991"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20160118 10:23:17.999" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:17.999" starttime="20160118 10:23:17.996"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:18.000" starttime="20160118 10:23:17.999"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20160118 10:23:18.012" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc1s.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20160118 10:23:23.335" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:23:23.332" starttime="20160118 10:23:18.001"></status>
</kw>
<msg timestamp="20160118 10:23:23.339" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:23:23.337" starttime="20160118 10:23:17.966"></status>
</kw>
<msg timestamp="20160118 10:23:23.341" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160118 10:23:23.340" starttime="20160118 10:23:17.960"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CG return code is: ${rc}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:23.345" level="INFO">CG return code is: 0</msg>
<status status="PASS" endtime="20160118 10:23:23.346" starttime="20160118 10:23:23.343"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.371" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:23.372" starttime="20160118 10:23:23.368"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:23.373" starttime="20160118 10:23:23.366"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.379" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:23.380" starttime="20160118 10:23:23.376"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:23.381" starttime="20160118 10:23:23.374"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.387" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:23.387" starttime="20160118 10:23:23.384"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:23.388" starttime="20160118 10:23:23.382"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:23.390" starttime="20160118 10:23:23.360"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.393" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:23:23.394" starttime="20160118 10:23:23.391"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.397" starttime="20160118 10:23:23.395"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.401" starttime="20160118 10:23:23.399"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.404" starttime="20160118 10:23:23.402"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.407" starttime="20160118 10:23:23.405"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.409" starttime="20160118 10:23:23.408"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.413" starttime="20160118 10:23:23.411"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:23:23.417" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001001', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.deleteSubscriber.input.id=34564', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001000']</msg>
<msg timestamp="20160118 10:23:23.635" level="INFO">10:23:23,608 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
10:23:23,611 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
10:23:23,614 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34562
10:23:23,618 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000
10:23:23,621 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
10:23:23,624 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001
10:23:23,627 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID
10:23:23,631 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20160118 10:23:23.636" starttime="20160118 10:23:23.416"></status>
</kw>
<msg timestamp="20160118 10:23:23.638" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:23.639" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:23:23.637" starttime="20160118 10:23:23.414"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:23.651" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:23:23.651" starttime="20160118 10:23:23.648"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.655" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:23.654" starttime="20160118 10:23:23.653"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.659" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:23.658" starttime="20160118 10:23:23.656"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.665" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:23.666" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:23.667" starttime="20160118 10:23:23.662"></status>
</kw>
<msg timestamp="20160118 10:23:23.669" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:23.669" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,608 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:23.668" starttime="20160118 10:23:23.660"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.679" starttime="20160118 10:23:23.677"></status>
</kw>
<msg timestamp="20160118 10:23:23.681" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,608 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:23.680" starttime="20160118 10:23:23.671"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.690" starttime="20160118 10:23:23.688"></status>
</kw>
<msg timestamp="20160118 10:23:23.691" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,608 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:23.691" starttime="20160118 10:23:23.682"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.701" starttime="20160118 10:23:23.698"></status>
</kw>
<msg timestamp="20160118 10:23:23.702" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:23.702" starttime="20160118 10:23:23.693"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.711" starttime="20160118 10:23:23.710"></status>
</kw>
<msg timestamp="20160118 10:23:23.712" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:23.711" starttime="20160118 10:23:23.704"></status>
</kw>
<msg timestamp="20160118 10:23:23.713" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:23.712" starttime="20160118 10:23:23.641"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:23.718" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20160118 10:23:23.718" starttime="20160118 10:23:23.717"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.720" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:23.720" starttime="20160118 10:23:23.719"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.722" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:23.721" starttime="20160118 10:23:23.721"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.725" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:23.725" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:23.726" starttime="20160118 10:23:23.723"></status>
</kw>
<msg timestamp="20160118 10:23:23.727" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:23.727" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,611 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:23:23.726" starttime="20160118 10:23:23.722"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.731" starttime="20160118 10:23:23.730"></status>
</kw>
<msg timestamp="20160118 10:23:23.732" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,611 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:23:23.732" starttime="20160118 10:23:23.727"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.736" starttime="20160118 10:23:23.735"></status>
</kw>
<msg timestamp="20160118 10:23:23.737" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,611 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160118 10:23:23.736" starttime="20160118 10:23:23.732"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.741" starttime="20160118 10:23:23.740"></status>
</kw>
<msg timestamp="20160118 10:23:23.742" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160118 10:23:23.741" starttime="20160118 10:23:23.737"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.795" starttime="20160118 10:23:23.792"></status>
</kw>
<msg timestamp="20160118 10:23:23.797" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160118 10:23:23.796" starttime="20160118 10:23:23.742"></status>
</kw>
<msg timestamp="20160118 10:23:23.800" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20160118 10:23:23.799" starttime="20160118 10:23:23.714"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:23.813" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20160118 10:23:23.812" starttime="20160118 10:23:23.810"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.817" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:23.817" starttime="20160118 10:23:23.815"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.821" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:23.821" starttime="20160118 10:23:23.819"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.827" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:23.829" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:23.830" starttime="20160118 10:23:23.825"></status>
</kw>
<msg timestamp="20160118 10:23:23.832" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:23.832" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,618 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:23:23.831" starttime="20160118 10:23:23.823"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.842" starttime="20160118 10:23:23.839"></status>
</kw>
<msg timestamp="20160118 10:23:23.843" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,618 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:23:23.843" starttime="20160118 10:23:23.834"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.852" starttime="20160118 10:23:23.850"></status>
</kw>
<msg timestamp="20160118 10:23:23.854" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,618 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160118 10:23:23.853" starttime="20160118 10:23:23.845"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.864" starttime="20160118 10:23:23.861"></status>
</kw>
<msg timestamp="20160118 10:23:23.865" level="INFO">${resultCode} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:23:23.865" starttime="20160118 10:23:23.855"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.878" starttime="20160118 10:23:23.876"></status>
</kw>
<msg timestamp="20160118 10:23:23.880" level="INFO">${resultCode} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:23:23.879" starttime="20160118 10:23:23.867"></status>
</kw>
<msg timestamp="20160118 10:23:23.882" level="INFO">${imsi} = 334030880001000</msg>
<status status="PASS" endtime="20160118 10:23:23.881" starttime="20160118 10:23:23.803"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:23.894" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20160118 10:23:23.894" starttime="20160118 10:23:23.891"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.898" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:23.897" starttime="20160118 10:23:23.895"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.902" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:23.901" starttime="20160118 10:23:23.899"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.908" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:23.909" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:23.910" starttime="20160118 10:23:23.905"></status>
</kw>
<msg timestamp="20160118 10:23:23.912" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:23.912" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,614 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34562</msg>
<status status="PASS" endtime="20160118 10:23:23.911" starttime="20160118 10:23:23.903"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.921" starttime="20160118 10:23:23.919"></status>
</kw>
<msg timestamp="20160118 10:23:23.923" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,614 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34562</msg>
<status status="PASS" endtime="20160118 10:23:23.922" starttime="20160118 10:23:23.914"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.932" starttime="20160118 10:23:23.930"></status>
</kw>
<msg timestamp="20160118 10:23:23.934" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,614 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=34562</msg>
<status status="PASS" endtime="20160118 10:23:23.933" starttime="20160118 10:23:23.924"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.943" starttime="20160118 10:23:23.941"></status>
</kw>
<msg timestamp="20160118 10:23:23.945" level="INFO">${resultCode} = 34562</msg>
<status status="PASS" endtime="20160118 10:23:23.944" starttime="20160118 10:23:23.935"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.957" starttime="20160118 10:23:23.956"></status>
</kw>
<msg timestamp="20160118 10:23:23.958" level="INFO">${resultCode} = 34562</msg>
<status status="PASS" endtime="20160118 10:23:23.958" starttime="20160118 10:23:23.946"></status>
</kw>
<msg timestamp="20160118 10:23:23.959" level="INFO">${id} = 34562</msg>
<status status="PASS" endtime="20160118 10:23:23.959" starttime="20160118 10:23:23.884"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:23.965" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20160118 10:23:23.964" starttime="20160118 10:23:23.963"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.966" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:23.966" starttime="20160118 10:23:23.965"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.968" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:23.968" starttime="20160118 10:23:23.967"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:23.971" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:23.971" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:23.972" starttime="20160118 10:23:23.970"></status>
</kw>
<msg timestamp="20160118 10:23:23.973" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:23.973" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,621 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:23.972" starttime="20160118 10:23:23.969"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.977" starttime="20160118 10:23:23.976"></status>
</kw>
<msg timestamp="20160118 10:23:23.978" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,621 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:23.978" starttime="20160118 10:23:23.973"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.982" starttime="20160118 10:23:23.981"></status>
</kw>
<msg timestamp="20160118 10:23:23.983" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,621 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:23.982" starttime="20160118 10:23:23.978"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.987" starttime="20160118 10:23:23.986"></status>
</kw>
<msg timestamp="20160118 10:23:23.988" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:23.988" starttime="20160118 10:23:23.983"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:23.994" starttime="20160118 10:23:23.993"></status>
</kw>
<msg timestamp="20160118 10:23:23.994" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:23.994" starttime="20160118 10:23:23.988"></status>
</kw>
<msg timestamp="20160118 10:23:23.995" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20160118 10:23:23.995" starttime="20160118 10:23:23.960"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:24.001" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20160118 10:23:24.001" starttime="20160118 10:23:24.000"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.003" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:24.003" starttime="20160118 10:23:24.002"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.005" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:24.005" starttime="20160118 10:23:24.004"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.008" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:24.008" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:24.009" starttime="20160118 10:23:24.006"></status>
</kw>
<msg timestamp="20160118 10:23:24.009" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:24.010" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,624 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:23:24.009" starttime="20160118 10:23:24.005"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.014" starttime="20160118 10:23:24.013"></status>
</kw>
<msg timestamp="20160118 10:23:24.015" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,624 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:23:24.014" starttime="20160118 10:23:24.010"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.019" starttime="20160118 10:23:24.018"></status>
</kw>
<msg timestamp="20160118 10:23:24.020" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,624 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160118 10:23:24.019" starttime="20160118 10:23:24.015"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.024" starttime="20160118 10:23:24.023"></status>
</kw>
<msg timestamp="20160118 10:23:24.025" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160118 10:23:24.024" starttime="20160118 10:23:24.020"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.031" starttime="20160118 10:23:24.030"></status>
</kw>
<msg timestamp="20160118 10:23:24.031" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160118 10:23:24.031" starttime="20160118 10:23:24.025"></status>
</kw>
<msg timestamp="20160118 10:23:24.033" level="INFO">${tariffId} = 101001</msg>
<status status="PASS" endtime="20160118 10:23:24.032" starttime="20160118 10:23:23.996"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:24.038" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20160118 10:23:24.038" starttime="20160118 10:23:24.037"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.040" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:24.040" starttime="20160118 10:23:24.039"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.042" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:24.041" starttime="20160118 10:23:24.041"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.045" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:24.045" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:24.046" starttime="20160118 10:23:24.043"></status>
</kw>
<msg timestamp="20160118 10:23:24.047" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:24.047" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,627 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:24.046" starttime="20160118 10:23:24.042"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.051" starttime="20160118 10:23:24.050"></status>
</kw>
<msg timestamp="20160118 10:23:24.052" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,627 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:24.051" starttime="20160118 10:23:24.047"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.056" starttime="20160118 10:23:24.055"></status>
</kw>
<msg timestamp="20160118 10:23:24.057" level="INFO">${return_log_entry} = 2016-01-18 10:23:23,627 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:24.056" starttime="20160118 10:23:24.052"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.061" starttime="20160118 10:23:24.060"></status>
</kw>
<msg timestamp="20160118 10:23:24.062" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:24.061" starttime="20160118 10:23:24.057"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.068" starttime="20160118 10:23:24.067"></status>
</kw>
<msg timestamp="20160118 10:23:24.068" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:24.068" starttime="20160118 10:23:24.062"></status>
</kw>
<msg timestamp="20160118 10:23:24.069" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:24.069" starttime="20160118 10:23:24.034"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.074" starttime="20160118 10:23:24.073"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.075" starttime="20160118 10:23:24.075"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.077" starttime="20160118 10:23:24.076"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:23:24.082" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:23:24.083" starttime="20160118 10:23:24.081"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:24.083" starttime="20160118 10:23:24.080"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:24.084" starttime="20160118 10:23:24.077"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:24.084" starttime="20160118 10:23:24.070"></status>
</kw>
<msg timestamp="20160118 10:23:24.086" level="INFO">${rc} = OK</msg>
<msg timestamp="20160118 10:23:24.087" level="INFO">${provId} = 1</msg>
<msg timestamp="20160118 10:23:24.087" level="INFO">${imsi} = 334030880001000</msg>
<msg timestamp="20160118 10:23:24.087" level="INFO">${id} = 34562</msg>
<msg timestamp="20160118 10:23:24.087" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20160118 10:23:24.088" level="INFO">${tariffId} = 101001</msg>
<msg timestamp="20160118 10:23:24.088" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160118 10:23:24.086" starttime="20160118 10:23:23.350"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.099" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:24.100" starttime="20160118 10:23:24.098"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:24.100" starttime="20160118 10:23:24.097"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.103" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:24.103" starttime="20160118 10:23:24.102"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:24.104" starttime="20160118 10:23:24.101"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.106" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160118 10:23:24.107" starttime="20160118 10:23:24.105"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:24.107" starttime="20160118 10:23:24.104"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:24.108" starttime="20160118 10:23:24.094"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.110" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160118 10:23:24.110" starttime="20160118 10:23:24.108"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.111" starttime="20160118 10:23:24.110"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.113" starttime="20160118 10:23:24.112"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.114" starttime="20160118 10:23:24.113"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.116" starttime="20160118 10:23:24.115"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.117" starttime="20160118 10:23:24.116"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.118" starttime="20160118 10:23:24.117"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160118 10:23:24.120" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001001', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.deleteSubscriber.input.id=34564', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=34562']</msg>
<msg timestamp="20160118 10:23:24.287" level="INFO">10:23:24,278 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
10:23:24,280 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34563
10:23:24,281 INFO  [log] LowLevelOps.getMainAccount.output.balance=8000000
10:23:24,283 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
10:23:24,284 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:23:24.287" starttime="20160118 10:23:24.120"></status>
</kw>
<msg timestamp="20160118 10:23:24.288" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:24.288" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160118 10:23:24.288" starttime="20160118 10:23:24.119"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:24.294" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20160118 10:23:24.294" starttime="20160118 10:23:24.293"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.296" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:24.296" starttime="20160118 10:23:24.295"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.298" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:24.297" starttime="20160118 10:23:24.296"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.300" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:24.301" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:24.301" starttime="20160118 10:23:24.299"></status>
</kw>
<msg timestamp="20160118 10:23:24.302" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:24.302" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,278 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:24.302" starttime="20160118 10:23:24.298"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.307" starttime="20160118 10:23:24.306"></status>
</kw>
<msg timestamp="20160118 10:23:24.307" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,278 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:24.307" starttime="20160118 10:23:24.303"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.311" starttime="20160118 10:23:24.310"></status>
</kw>
<msg timestamp="20160118 10:23:24.312" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,278 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160118 10:23:24.312" starttime="20160118 10:23:24.308"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.317" starttime="20160118 10:23:24.315"></status>
</kw>
<msg timestamp="20160118 10:23:24.317" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:24.317" starttime="20160118 10:23:24.313"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.323" starttime="20160118 10:23:24.322"></status>
</kw>
<msg timestamp="20160118 10:23:24.324" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:24.324" starttime="20160118 10:23:24.318"></status>
</kw>
<msg timestamp="20160118 10:23:24.325" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160118 10:23:24.325" starttime="20160118 10:23:24.289"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:24.331" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20160118 10:23:24.330" starttime="20160118 10:23:24.329"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.333" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:24.332" starttime="20160118 10:23:24.331"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.334" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:24.334" starttime="20160118 10:23:24.333"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.337" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:24.338" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:24.338" starttime="20160118 10:23:24.336"></status>
</kw>
<msg timestamp="20160118 10:23:24.339" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:24.341" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,280 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34563</msg>
<status status="PASS" endtime="20160118 10:23:24.339" starttime="20160118 10:23:24.335"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.345" starttime="20160118 10:23:24.344"></status>
</kw>
<msg timestamp="20160118 10:23:24.346" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,280 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34563</msg>
<status status="PASS" endtime="20160118 10:23:24.346" starttime="20160118 10:23:24.342"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.350" starttime="20160118 10:23:24.349"></status>
</kw>
<msg timestamp="20160118 10:23:24.351" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,280 INFO  [log] LowLevelOps.getMainAccount.output.accountId=34563</msg>
<status status="PASS" endtime="20160118 10:23:24.351" starttime="20160118 10:23:24.347"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.355" starttime="20160118 10:23:24.354"></status>
</kw>
<msg timestamp="20160118 10:23:24.356" level="INFO">${resultCode} = 34563</msg>
<status status="PASS" endtime="20160118 10:23:24.356" starttime="20160118 10:23:24.351"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.362" starttime="20160118 10:23:24.361"></status>
</kw>
<msg timestamp="20160118 10:23:24.363" level="INFO">${resultCode} = 34563</msg>
<status status="PASS" endtime="20160118 10:23:24.362" starttime="20160118 10:23:24.357"></status>
</kw>
<msg timestamp="20160118 10:23:24.363" level="INFO">${accountId} = 34563</msg>
<status status="PASS" endtime="20160118 10:23:24.363" starttime="20160118 10:23:24.326"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:24.369" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20160118 10:23:24.369" starttime="20160118 10:23:24.368"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.371" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:24.370" starttime="20160118 10:23:24.370"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.372" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:24.372" starttime="20160118 10:23:24.371"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.375" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:24.376" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:24.376" starttime="20160118 10:23:24.374"></status>
</kw>
<msg timestamp="20160118 10:23:24.377" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:24.377" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,281 INFO  [log] LowLevelOps.getMainAccount.output.balance=8000000</msg>
<status status="PASS" endtime="20160118 10:23:24.377" starttime="20160118 10:23:24.373"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.381" starttime="20160118 10:23:24.380"></status>
</kw>
<msg timestamp="20160118 10:23:24.382" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,281 INFO  [log] LowLevelOps.getMainAccount.output.balance=8000000</msg>
<status status="PASS" endtime="20160118 10:23:24.382" starttime="20160118 10:23:24.378"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.386" starttime="20160118 10:23:24.385"></status>
</kw>
<msg timestamp="20160118 10:23:24.387" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,281 INFO  [log] LowLevelOps.getMainAccount.output.balance=8000000</msg>
<status status="PASS" endtime="20160118 10:23:24.386" starttime="20160118 10:23:24.382"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.391" starttime="20160118 10:23:24.390"></status>
</kw>
<msg timestamp="20160118 10:23:24.392" level="INFO">${resultCode} = 8000000</msg>
<status status="PASS" endtime="20160118 10:23:24.392" starttime="20160118 10:23:24.387"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.398" starttime="20160118 10:23:24.397"></status>
</kw>
<msg timestamp="20160118 10:23:24.398" level="INFO">${resultCode} = 8000000</msg>
<status status="PASS" endtime="20160118 10:23:24.398" starttime="20160118 10:23:24.392"></status>
</kw>
<msg timestamp="20160118 10:23:24.399" level="INFO">${balance} = 8000000</msg>
<status status="PASS" endtime="20160118 10:23:24.399" starttime="20160118 10:23:24.365"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:24.405" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20160118 10:23:24.405" starttime="20160118 10:23:24.404"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.407" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:24.407" starttime="20160118 10:23:24.406"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.409" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:24.408" starttime="20160118 10:23:24.407"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.411" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:24.412" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:24.412" starttime="20160118 10:23:24.410"></status>
</kw>
<msg timestamp="20160118 10:23:24.413" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:24.413" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,283 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:23:24.413" starttime="20160118 10:23:24.409"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.417" starttime="20160118 10:23:24.416"></status>
</kw>
<msg timestamp="20160118 10:23:24.418" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,283 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:23:24.418" starttime="20160118 10:23:24.414"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.422" starttime="20160118 10:23:24.421"></status>
</kw>
<msg timestamp="20160118 10:23:24.423" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,283 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160118 10:23:24.423" starttime="20160118 10:23:24.419"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.427" starttime="20160118 10:23:24.426"></status>
</kw>
<msg timestamp="20160118 10:23:24.428" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160118 10:23:24.428" starttime="20160118 10:23:24.424"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.434" starttime="20160118 10:23:24.433"></status>
</kw>
<msg timestamp="20160118 10:23:24.435" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160118 10:23:24.434" starttime="20160118 10:23:24.429"></status>
</kw>
<msg timestamp="20160118 10:23:24.436" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20160118 10:23:24.435" starttime="20160118 10:23:24.401"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160118 10:23:24.441" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20160118 10:23:24.441" starttime="20160118 10:23:24.440"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.443" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160118 10:23:24.443" starttime="20160118 10:23:24.442"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.445" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160118 10:23:24.444" starttime="20160118 10:23:24.444"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160118 10:23:24.447" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160118 10:23:24.448" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160118 10:23:24.448" starttime="20160118 10:23:24.446"></status>
</kw>
<msg timestamp="20160118 10:23:24.449" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160118 10:23:24.449" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,284 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:23:24.449" starttime="20160118 10:23:24.445"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.453" starttime="20160118 10:23:24.452"></status>
</kw>
<msg timestamp="20160118 10:23:24.454" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,284 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:23:24.454" starttime="20160118 10:23:24.450"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.458" starttime="20160118 10:23:24.458"></status>
</kw>
<msg timestamp="20160118 10:23:24.459" level="INFO">${return_log_entry} = 2016-01-18 10:23:24,284 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160118 10:23:24.459" starttime="20160118 10:23:24.455"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.463" starttime="20160118 10:23:24.462"></status>
</kw>
<msg timestamp="20160118 10:23:24.464" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20160118 10:23:24.464" starttime="20160118 10:23:24.460"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.470" starttime="20160118 10:23:24.469"></status>
</kw>
<msg timestamp="20160118 10:23:24.471" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20160118 10:23:24.470" starttime="20160118 10:23:24.465"></status>
</kw>
<msg timestamp="20160118 10:23:24.472" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20160118 10:23:24.472" starttime="20160118 10:23:24.437"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.477" starttime="20160118 10:23:24.476"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.478" starttime="20160118 10:23:24.477"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160118 10:23:24.479" starttime="20160118 10:23:24.478"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160118 10:23:24.484" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160118 10:23:24.485" starttime="20160118 10:23:24.483"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:24.485" starttime="20160118 10:23:24.482"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:24.486" starttime="20160118 10:23:24.480"></status>
</kw>
<status status="PASS" endtime="20160118 10:23:24.486" starttime="20160118 10:23:24.473"></status>
</kw>
<msg timestamp="20160118 10:23:24.488" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20160118 10:23:24.488" level="INFO">${accId} = 34563</msg>
<msg timestamp="20160118 10:23:24.488" level="INFO">${bal} = 8000000</msg>
<msg timestamp="20160118 10:23:24.489" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20160118 10:23:24.489" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20160118 10:23:24.487" starttime="20160118 10:23:24.090"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Balance of the calling party is: ${bal}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160118 10:23:24.490" level="INFO">Balance of the calling party is: 8000000</msg>
<status status="PASS" endtime="20160118 10:23:24.491" starttime="20160118 10:23:24.490"></status>
</kw>
<doc>Test will make a MOC call to unknown subscriber

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
</tags>
<status status="PASS" critical="yes" endtime="20160118 10:23:24.492" starttime="20160118 10:23:15.093"></status>
</test>
<doc>Testing the prepaid MOC call to the unknown subscriber

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20160118 10:23:24.494" starttime="20160118 10:23:10.997"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20160118 10:23:24.500" starttime="20160118 10:23:10.982"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="FAIL" endtime="20160118 10:23:24.515" starttime="20160118 10:20:45.897"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="3">Critical Tests</stat>
<stat pass="5" fail="3">All Tests</stat>
</total>
<tag>
<stat pass="5" info="" doc="" combined="" fail="3" links="">matko.sanseovic</stat>
<stat pass="5" info="" doc="" combined="" fail="3" links="">MOC_only</stat>
<stat pass="1" info="" doc="" combined="" fail="1" links="">MTEL_supported</stat>
<stat pass="1" info="" doc="" combined="" fail="1" links="">SMARTSPACE_supported</stat>
<stat pass="3" info="" doc="" combined="" fail="2" links="">TNZ_supported</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">VIRGIN_COLUMBIA_supported</stat>
</tag>
<suite>
<stat pass="5" id="s1" fail="3" name="OnNet">OnNet</stat>
<stat pass="1" id="s1-s1" fail="0" name="MOC PREPAID ONNET-Abandon">OnNet.MOC PREPAID ONNET-Abandon</stat>
<stat pass="1" id="s1-s1-s1" fail="0" name="MOC PREPAID ONNET-Abandon-robot-suite">OnNet.MOC PREPAID ONNET-Abandon.MOC PREPAID ONNET-Abandon-robot-suite</stat>
<stat pass="1" id="s1-s2" fail="0" name="MOC PREPAID ONNET-Busy">OnNet.MOC PREPAID ONNET-Busy</stat>
<stat pass="1" id="s1-s2-s1" fail="0" name="MOC PREPAID ONNET-Busy-robot-suite">OnNet.MOC PREPAID ONNET-Busy.MOC PREPAID ONNET-Busy-robot-suite</stat>
<stat pass="0" id="s1-s3" fail="1" name="MOC PREPAID ONNET-LongDuration136s">OnNet.MOC PREPAID ONNET-LongDuration136s</stat>
<stat pass="0" id="s1-s3-s1" fail="1" name="MOC PREPAID ONNET-LongDuration136s-robot-suite">OnNet.MOC PREPAID ONNET-LongDuration136s.MOC PREPAID ONNET-LongDuration136s-robot-suite</stat>
<stat pass="0" id="s1-s4" fail="1" name="MOC PREPAID ONNET-LongDuration196s">OnNet.MOC PREPAID ONNET-LongDuration196s</stat>
<stat pass="0" id="s1-s4-s1" fail="1" name="MOC PREPAID ONNET-LongDuration196s-robot-suite">OnNet.MOC PREPAID ONNET-LongDuration196s.MOC PREPAID ONNET-LongDuration196s-robot-suite</stat>
<stat pass="1" id="s1-s5" fail="0" name="MOC PREPAID ONNET-NoAnswer">OnNet.MOC PREPAID ONNET-NoAnswer</stat>
<stat pass="1" id="s1-s5-s1" fail="0" name="MOC PREPAID ONNET-NoAnswer-robot-suite">OnNet.MOC PREPAID ONNET-NoAnswer.MOC PREPAID ONNET-NoAnswer-robot-suite</stat>
<stat pass="0" id="s1-s6" fail="1" name="MOC PREPAID ONNET-NoCredit">OnNet.MOC PREPAID ONNET-NoCredit</stat>
<stat pass="0" id="s1-s6-s1" fail="1" name="MOC PREPAID ONNET-NoCredit-robot-suite">OnNet.MOC PREPAID ONNET-NoCredit.MOC PREPAID ONNET-NoCredit-robot-suite</stat>
<stat pass="1" id="s1-s7" fail="0" name="MOC PREPAID ONNET-ShortDuration">OnNet.MOC PREPAID ONNET-ShortDuration</stat>
<stat pass="1" id="s1-s7-s1" fail="0" name="MOC PREPAID ONNET-ShortDuration-robot-suite">OnNet.MOC PREPAID ONNET-ShortDuration.MOC PREPAID ONNET-ShortDuration-robot-suite</stat>
<stat pass="1" id="s1-s8" fail="0" name="MOC PREPAID ONNET-ToUnknown">OnNet.MOC PREPAID ONNET-ToUnknown</stat>
<stat pass="1" id="s1-s8-s1" fail="0" name="MOC PREPAID ONNET-ToUnknown-robot-suite">OnNet.MOC PREPAID ONNET-ToUnknown.MOC PREPAID ONNET-ToUnknown-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
