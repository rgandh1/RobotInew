<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20160122 12:02:14.166">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/MOC_PREPAID_ONNET-ShortDuration-robot-suite.txt" id="s1" name="MOC PREPAID ONNET-ShortDuration-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20160122 12:02:16.343" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20160122 12:02:16.346" level="INFO">${date} = Fri Jan 22 12:02:16 CET 2016</msg>
<status status="PASS" endtime="20160122 12:02:16.345" starttime="20160122 12:02:16.328"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 12:02:16.353" level="INFO">Date and time: Fri Jan 22 12:02:16 CET 2016</msg>
<status status="PASS" endtime="20160122 12:02:16.354" starttime="20160122 12:02:16.349"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 12:02:16.360" level="INFO">Target IN machine: 10.105.119.135</msg>
<status status="PASS" endtime="20160122 12:02:16.361" starttime="20160122 12:02:16.356"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:16.469" starttime="20160122 12:02:16.467"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:16.685" starttime="20160122 12:02:16.486"></status>
</kw>
<msg timestamp="20160122 12:02:16.687" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20160122 12:02:16.687" starttime="20160122 12:02:16.471"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160122 12:02:16.698" level="INFO">Logging into '10.105.119.135:22' as 'qa_automation'.</msg>
<msg timestamp="20160122 12:02:18.446" level="INFO">Read output: Last login: Fri Jan 22 10:29:54 2016 from 10.105.101.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb19 ~]$</msg>
<status status="PASS" endtime="20160122 12:02:18.448" starttime="20160122 12:02:16.695"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:18.450" starttime="20160122 12:02:16.689"></status>
</kw>
<msg timestamp="20160122 12:02:18.454" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20160122 12:02:18.453" starttime="20160122 12:02:16.445"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160122 12:02:18.462" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160122 12:02:18.461" starttime="20160122 12:02:18.456"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160122 12:02:18.465" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20160122 12:02:19.723" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160122 12:02:19.726" level="INFO">${output} = I-New MVNA TEMM - Core - Service 1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160122 12:02:19.725" starttime="20160122 12:02:18.463"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:19.734" starttime="20160122 12:02:19.731"></status>
</kw>
<msg timestamp="20160122 12:02:19.735" level="INFO">${status} = PASS</msg>
<msg timestamp="20160122 12:02:19.736" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160122 12:02:19.735" starttime="20160122 12:02:19.728"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:19.745" starttime="20160122 12:02:19.743"></status>
</kw>
<msg timestamp="20160122 12:02:19.746" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 12:02:19.746" starttime="20160122 12:02:19.737"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20160122 12:02:19.750" level="INFO">${version_r} =  1.0.0 2015.09.28-13:45:14 is running PID: 11380 </msg>
<status status="PASS" endtime="20160122 12:02:19.750" starttime="20160122 12:02:19.748"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160122 12:02:19.754" level="INFO">${version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160122 12:02:19.754" starttime="20160122 12:02:19.752"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:19.758" starttime="20160122 12:02:19.756"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:19.771" starttime="20160122 12:02:19.769"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160122 12:02:19.775" starttime="20160122 12:02:19.773"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:19.777" starttime="20160122 12:02:19.759"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:19.784" starttime="20160122 12:02:19.782"></status>
</kw>
<msg timestamp="20160122 12:02:19.786" level="INFO">${ver} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160122 12:02:19.785" starttime="20160122 12:02:19.778"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:19.789" starttime="20160122 12:02:19.787"></status>
</kw>
<msg timestamp="20160122 12:02:19.791" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20160122 12:02:19.792" level="INFO">${in_version} =  1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160122 12:02:19.790" starttime="20160122 12:02:16.393"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:19.845" starttime="20160122 12:02:19.843"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:19.914" starttime="20160122 12:02:19.851"></status>
</kw>
<msg timestamp="20160122 12:02:19.917" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20160122 12:02:19.916" starttime="20160122 12:02:19.846"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160122 12:02:19.936" level="INFO">Logging into '10.105.119.171:22' as 'qa_automation'.</msg>
<msg timestamp="20160122 12:02:20.537" level="INFO">Read output: Last login: Fri Jan 22 10:29:55 2016 from 10.105.101.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb19 ~]$</msg>
<status status="PASS" endtime="20160122 12:02:20.538" starttime="20160122 12:02:19.932"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:20.540" starttime="20160122 12:02:19.920"></status>
</kw>
<msg timestamp="20160122 12:02:20.543" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20160122 12:02:20.542" starttime="20160122 12:02:19.832"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160122 12:02:20.549" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160122 12:02:20.549" starttime="20160122 12:02:20.545"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160122 12:02:20.552" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20160122 12:02:21.091" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160122 12:02:21.096" level="INFO">${output} = I-New UMS MVNO - XDR - Server 6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160122 12:02:21.093" starttime="20160122 12:02:20.551"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:21.109" starttime="20160122 12:02:21.103"></status>
</kw>
<msg timestamp="20160122 12:02:21.112" level="INFO">${status} = PASS</msg>
<msg timestamp="20160122 12:02:21.114" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160122 12:02:21.111" starttime="20160122 12:02:21.099"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:21.130" starttime="20160122 12:02:21.127"></status>
</kw>
<msg timestamp="20160122 12:02:21.133" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 12:02:21.132" starttime="20160122 12:02:21.116"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20160122 12:02:21.141" level="INFO">${version_r} =  6.1.5.27971 is running PID: 29486 </msg>
<status status="PASS" endtime="20160122 12:02:21.140" starttime="20160122 12:02:21.136"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160122 12:02:21.149" level="INFO">${version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160122 12:02:21.148" starttime="20160122 12:02:21.144"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:21.155" starttime="20160122 12:02:21.152"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:21.180" starttime="20160122 12:02:21.175"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160122 12:02:21.187" starttime="20160122 12:02:21.182"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:21.189" starttime="20160122 12:02:21.158"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:21.206" starttime="20160122 12:02:21.202"></status>
</kw>
<msg timestamp="20160122 12:02:21.209" level="INFO">${ver} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160122 12:02:21.208" starttime="20160122 12:02:21.192"></status>
</kw>
<msg timestamp="20160122 12:02:21.215" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20160122 12:02:21.216" level="INFO">${xdr_version} =  6.1.5.27971 </msg>
<status status="PASS" endtime="20160122 12:02:21.212" starttime="20160122 12:02:19.807"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:21.279" starttime="20160122 12:02:21.277"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:21.332" starttime="20160122 12:02:21.285"></status>
</kw>
<msg timestamp="20160122 12:02:21.334" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20160122 12:02:21.333" starttime="20160122 12:02:21.280"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160122 12:02:21.359" level="INFO">Logging into '10.105.119.125:22' as 'qa_automation'.</msg>
<msg timestamp="20160122 12:02:21.891" level="INFO">Read output: Last login: Fri Jan 22 10:29:57 2016 from 10.105.101.196
id: cannot find name for group ID 20007
[1m[qa_automation@crce01.tb19 ~]$</msg>
<status status="PASS" endtime="20160122 12:02:21.892" starttime="20160122 12:02:21.356"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:21.893" starttime="20160122 12:02:21.335"></status>
</kw>
<msg timestamp="20160122 12:02:21.895" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20160122 12:02:21.895" starttime="20160122 12:02:21.266"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160122 12:02:21.902" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160122 12:02:21.901" starttime="20160122 12:02:21.896"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160122 12:02:21.905" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20160122 12:02:22.139" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160122 12:02:22.141" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.1.24.31533
Negret Rating &amp; Charging Engine 6.1.24.31533 is running (PID:9357, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160122 12:02:22.140" starttime="20160122 12:02:21.903"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:22.148" starttime="20160122 12:02:22.145"></status>
</kw>
<msg timestamp="20160122 12:02:22.149" level="INFO">${status} = PASS</msg>
<msg timestamp="20160122 12:02:22.149" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160122 12:02:22.148" starttime="20160122 12:02:22.143"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:22.157" starttime="20160122 12:02:22.155"></status>
</kw>
<msg timestamp="20160122 12:02:22.158" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 12:02:22.158" starttime="20160122 12:02:22.151"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160122 12:02:22.165" level="INFO">${version_r} =  6.1.24.31533 is running (PID:9357, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160122 12:02:22.164" starttime="20160122 12:02:22.159"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160122 12:02:22.168" level="INFO">${version} =  6.1.24.31533 </msg>
<status status="PASS" endtime="20160122 12:02:22.168" starttime="20160122 12:02:22.166"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:22.171" starttime="20160122 12:02:22.169"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:22.192" starttime="20160122 12:02:22.187"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160122 12:02:22.199" starttime="20160122 12:02:22.194"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:22.201" starttime="20160122 12:02:22.172"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:22.217" starttime="20160122 12:02:22.213"></status>
</kw>
<msg timestamp="20160122 12:02:22.220" level="INFO">${ver} =  6.1.24.31533 </msg>
<status status="PASS" endtime="20160122 12:02:22.219" starttime="20160122 12:02:22.204"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:22.226" starttime="20160122 12:02:22.222"></status>
</kw>
<msg timestamp="20160122 12:02:22.232" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20160122 12:02:22.233" level="INFO">${crce_version} =  6.1.24.31533 </msg>
<status status="PASS" endtime="20160122 12:02:22.230" starttime="20160122 12:02:21.243"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:22.337" starttime="20160122 12:02:22.333"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:22.403" starttime="20160122 12:02:22.350"></status>
</kw>
<msg timestamp="20160122 12:02:22.405" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20160122 12:02:22.404" starttime="20160122 12:02:22.339"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160122 12:02:22.413" level="INFO">Logging into '10.105.119.159:22' as 'qa_automation'.</msg>
<msg timestamp="20160122 12:02:22.934" level="INFO">Read output: Last login: Fri Jan 22 10:29:58 2016 from 10.105.101.196
id: cannot find name for group ID 20007
[1m[qa_automation@ocs01.tb19 ~]$</msg>
<status status="PASS" endtime="20160122 12:02:22.936" starttime="20160122 12:02:22.411"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:22.937" starttime="20160122 12:02:22.406"></status>
</kw>
<msg timestamp="20160122 12:02:22.939" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20160122 12:02:22.938" starttime="20160122 12:02:22.312"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160122 12:02:22.945" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160122 12:02:22.944" starttime="20160122 12:02:22.940"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160122 12:02:22.948" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20160122 12:02:23.013" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160122 12:02:23.017" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 32521)</msg>
<status status="PASS" endtime="20160122 12:02:23.015" starttime="20160122 12:02:22.946"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.030" starttime="20160122 12:02:23.024"></status>
</kw>
<msg timestamp="20160122 12:02:23.033" level="INFO">${status} = PASS</msg>
<msg timestamp="20160122 12:02:23.035" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160122 12:02:23.032" starttime="20160122 12:02:23.020"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.050" starttime="20160122 12:02:23.047"></status>
</kw>
<msg timestamp="20160122 12:02:23.053" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 12:02:23.052" starttime="20160122 12:02:23.037"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160122 12:02:23.061" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp is running (PID: 32521)</msg>
<status status="PASS" endtime="20160122 12:02:23.059" starttime="20160122 12:02:23.055"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160122 12:02:23.068" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160122 12:02:23.067" starttime="20160122 12:02:23.063"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.074" starttime="20160122 12:02:23.071"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.098" starttime="20160122 12:02:23.094"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.106" starttime="20160122 12:02:23.100"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:23.108" starttime="20160122 12:02:23.077"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.122" starttime="20160122 12:02:23.119"></status>
</kw>
<msg timestamp="20160122 12:02:23.125" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160122 12:02:23.124" starttime="20160122 12:02:23.111"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.131" starttime="20160122 12:02:23.127"></status>
</kw>
<msg timestamp="20160122 12:02:23.136" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20160122 12:02:23.137" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160122 12:02:23.133" starttime="20160122 12:02:22.263"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 12:02:23.143" level="INFO">IN state= OK version= 1.0.0 2015.09.28-13:45:14 </msg>
<status status="PASS" endtime="20160122 12:02:23.145" starttime="20160122 12:02:23.139"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 12:02:23.151" level="INFO">XDR state= OK version= 6.1.5.27971 </msg>
<status status="PASS" endtime="20160122 12:02:23.153" starttime="20160122 12:02:23.147"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 12:02:23.159" level="INFO">CRCE state= OK version= 6.1.24.31533 </msg>
<status status="PASS" endtime="20160122 12:02:23.161" starttime="20160122 12:02:23.155"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 12:02:23.167" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2044
GyApp </msg>
<status status="PASS" endtime="20160122 12:02:23.169" starttime="20160122 12:02:23.163"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20160122 12:02:23.175" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 12:02:23.176" starttime="20160122 12:02:23.171"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20160122 12:02:23.182" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 12:02:23.183" starttime="20160122 12:02:23.178"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20160122 12:02:23.189" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 12:02:23.190" starttime="20160122 12:02:23.185"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20160122 12:02:23.196" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 12:02:23.198" starttime="20160122 12:02:23.192"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.216" starttime="20160122 12:02:23.208"></status>
</kw>
<msg timestamp="20160122 12:02:23.219" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160122 12:02:23.218" starttime="20160122 12:02:23.200"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.225" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160122 12:02:23.227" starttime="20160122 12:02:23.221"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:23.228" starttime="20160122 12:02:16.313"></status>
</kw>
<test id="s1-t1" name="Run MOC Short Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.246" starttime="20160122 12:02:23.245"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<msg timestamp="20160122 12:02:23.249" level="INFO">${INITIAL_BALANCE} = 10000000</msg>
<status status="PASS" endtime="20160122 12:02:23.249" starttime="20160122 12:02:23.247"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.265" level="INFO">msg=crce_host=10.105.119.125</msg>
<status status="PASS" endtime="20160122 12:02:23.266" starttime="20160122 12:02:23.263"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.268" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20160122 12:02:23.269" starttime="20160122 12:02:23.267"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.271" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20160122 12:02:23.272" starttime="20160122 12:02:23.270"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.275" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20160122 12:02:23.275" starttime="20160122 12:02:23.273"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.278" level="INFO">msg=imsiRangeStart=334030880001000</msg>
<status status="PASS" endtime="20160122 12:02:23.279" starttime="20160122 12:02:23.276"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.281" level="INFO">msg=msisdnRangeStart=525516001000</msg>
<status status="PASS" endtime="20160122 12:02:23.282" starttime="20160122 12:02:23.279"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.284" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20160122 12:02:23.285" starttime="20160122 12:02:23.283"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.288" level="INFO">msg=languageid=3</msg>
<status status="PASS" endtime="20160122 12:02:23.288" starttime="20160122 12:02:23.286"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.291" level="INFO">msg=tariffId=101001</msg>
<status status="PASS" endtime="20160122 12:02:23.291" starttime="20160122 12:02:23.289"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.294" level="INFO">msg=balance=10000000</msg>
<status status="PASS" endtime="20160122 12:02:23.294" starttime="20160122 12:02:23.292"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.308" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 12:02:23.309" starttime="20160122 12:02:23.305"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:23.309" starttime="20160122 12:02:23.303"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.314" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 12:02:23.315" starttime="20160122 12:02:23.312"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:23.316" starttime="20160122 12:02:23.310"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.321" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 12:02:23.321" starttime="20160122 12:02:23.318"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:23.322" starttime="20160122 12:02:23.317"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:23.323" starttime="20160122 12:02:23.297"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160122 12:02:23.327" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160122 12:02:23.328" starttime="20160122 12:02:23.324"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.330" starttime="20160122 12:02:23.329"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.333" starttime="20160122 12:02:23.331"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.336" starttime="20160122 12:02:23.334"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.338" starttime="20160122 12:02:23.337"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.341" starttime="20160122 12:02:23.339"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.343" starttime="20160122 12:02:23.342"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.346" starttime="20160122 12:02:23.344"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.349" starttime="20160122 12:02:23.347"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.352" starttime="20160122 12:02:23.350"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.354" starttime="20160122 12:02:23.352"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.357" starttime="20160122 12:02:23.355"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:23.360" starttime="20160122 12:02:23.358"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160122 12:02:23.364" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=3', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000']</msg>
<msg timestamp="20160122 12:02:29.784" level="INFO">12:02:23,531 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/ext] for external libraries
12:02:23,531 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
12:02:25,403 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/crce-subscriberadmin/robot_crce_bridge-soapui-project.xml]
12:02:25,412 INFO  [SoapUITestCaseRunner] Setting project property [crceHost] to [10.105.119.125]
12:02:25,413 INFO  [SoapUITestCaseRunner] Setting project property [crcePort] to [8080]
12:02:25,413 INFO  [SoapUITestCaseRunner] Setting project property [crceWebservicesBasePath] to [/inew-mvno-crce-webservices/]
12:02:25,413 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.amount] to [2]
12:02:25,413 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.imsiRangeStart] to [334030880001000]
12:02:25,413 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.msisdnRangeStart] to [525516001000]
12:02:25,413 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.type] to [PREPAID]
12:02:25,413 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.languageid] to [3]
12:02:25,414 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.tariffId] to [101001]
12:02:25,414 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.balance] to [10000000]
12:02:25,414 INFO  [SoapUITestCaseRunner] Running SoapUI tests in project [Robotframework_CRCE-Bridge]
12:02:25,414 INFO  [SoapUITestCaseRunner] Running TestCase [createTestSubscribers]
12:02:25,423 INFO  [SoapUITestCaseRunner] Running SoapUI testcase [createTestSubscribers]
12:02:25,428 INFO  [SoapUITestCaseRunner] running step [init_repeat_counter]
12:02:25,839 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
12:02:25,900 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
12:02:26,082 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
12:02:26,082 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
12:02:26,209 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
12:02:26,216 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
12:02:26,380 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
12:02:26,380 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
12:02:26,380 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
12:02:26,380 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
12:02:26,444 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
12:02:26,710 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
12:02:26,736 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
12:02:26,738 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
12:02:26,740 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
12:02:26,740 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
12:02:27,117 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
12:02:27,118 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
12:02:27,125 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
12:02:27,126 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
12:02:27,126 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
12:02:27,126 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
12:02:27,195 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
12:02:27,201 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
12:02:27,243 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
12:02:27,245 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
12:02:27,247 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
12:02:27,247 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
12:02:27,343 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
12:02:27,343 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
12:02:27,346 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
12:02:27,346 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
12:02:27,346 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
12:02:27,346 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
12:02:27,395 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
12:02:27,406 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
12:02:27,449 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
12:02:27,453 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
12:02:27,454 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
12:02:27,455 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
12:02:27,703 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
12:02:27,704 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
12:02:27,711 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
12:02:27,711 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
12:02:27,711 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
12:02:27,711 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
12:02:27,776 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
12:02:27,781 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
12:02:27,822 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
12:02:27,825 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
12:02:27,827 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
12:02:27,827 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
12:02:28,038 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
12:02:28,038 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
12:02:28,052 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
12:02:28,052 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
12:02:28,053 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
12:02:28,053 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
12:02:28,169 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
12:02:28,190 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
12:02:28,233 INFO  [SoapUITestCaseRunner] running step [setBalance]
12:02:28,236 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
12:02:28,238 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
12:02:28,239 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
12:02:28,397 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
12:02:28,397 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
12:02:28,409 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
12:02:28,410 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
12:02:28,410 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
12:02:28,410 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
12:02:28,473 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
12:02:28,483 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
12:02:28,526 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
12:02:28,586 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
12:02:28,591 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
12:02:28,593 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
12:02:28,595 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
12:02:28,595 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
12:02:28,623 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
12:02:28,623 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
12:02:28,639 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
12:02:28,640 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
12:02:28,640 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
12:02:28,640 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
12:02:28,640 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
12:02:28,666 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
12:02:28,667 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
12:02:28,669 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
12:02:28,671 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
12:02:28,671 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
12:02:28,927 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
12:02:28,927 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
12:02:28,933 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
12:02:28,933 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
12:02:28,933 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
12:02:28,934 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
12:02:28,934 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
12:02:28,940 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
12:02:28,941 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
12:02:28,944 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
12:02:28,945 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
12:02:28,946 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
12:02:29,008 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
12:02:29,008 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
12:02:29,014 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
12:02:29,014 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
12:02:29,014 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
12:02:29,015 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
12:02:29,015 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
12:02:29,025 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
12:02:29,026 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
12:02:29,028 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
12:02:29,030 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
12:02:29,030 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
12:02:29,343 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
12:02:29,344 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
12:02:29,350 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
12:02:29,350 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
12:02:29,350 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
12:02:29,350 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
12:02:29,351 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
12:02:29,356 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
12:02:29,357 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
12:02:29,359 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
12:02:29,361 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
12:02:29,361 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
12:02:29,509 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
12:02:29,510 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
12:02:29,522 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
12:02:29,522 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
12:02:29,522 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
12:02:29,522 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
12:02:29,523 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
12:02:29,544 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
12:02:29,545 INFO  [SoapUITestCaseRunner] running step [setBalance]
12:02:29,547 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
12:02:29,549 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
12:02:29,549 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
12:02:29,681 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
12:02:29,681 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
12:02:29,693 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
12:02:29,693 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
12:02:29,693 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
12:02:29,693 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
12:02:29,694 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
12:02:29,702 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
12:02:29,703 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
12:02:29,705 INFO  [SoapUITestCaseRunner] running step [finish_successful]
12:02:29,773 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK
12:02:29,774 INFO  [SoapUITestCaseRunner] Finished running SoapUI testcase [createTestSubscribers], time taken: 4290ms, status: FINISHED
12:02:29,775 INFO  [SoapUITestCaseRunner] TestCase [createTestSubscribers] finished with status [FINISHED] in 4290ms</msg>
<status status="PASS" endtime="20160122 12:02:29.794" starttime="20160122 12:02:23.362"></status>
</kw>
<msg timestamp="20160122 12:02:29.803" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:29.804" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160122 12:02:29.798" starttime="20160122 12:02:23.361"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 12:02:29.840" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20160122 12:02:29.839" starttime="20160122 12:02:29.834"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:29.848" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 12:02:29.847" starttime="20160122 12:02:29.843"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:29.857" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 12:02:29.855" starttime="20160122 12:02:29.851"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 12:02:29.867" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 12:02:29.874" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20160122 12:02:29.874" starttime="20160122 12:02:29.864"></status>
</kw>
<msg timestamp="20160122 12:02:29.876" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:29.877" level="INFO">${return_log_entry} = 2016-01-22 12:02:29,773 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 12:02:29.875" starttime="20160122 12:02:29.860"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:29.886" starttime="20160122 12:02:29.884"></status>
</kw>
<msg timestamp="20160122 12:02:29.887" level="INFO">${return_log_entry} = 2016-01-22 12:02:29,773 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 12:02:29.887" starttime="20160122 12:02:29.878"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:29.895" starttime="20160122 12:02:29.893"></status>
</kw>
<msg timestamp="20160122 12:02:29.896" level="INFO">${return_log_entry} = 2016-01-22 12:02:29,773 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 12:02:29.895" starttime="20160122 12:02:29.888"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:29.904" starttime="20160122 12:02:29.902"></status>
</kw>
<msg timestamp="20160122 12:02:29.906" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 12:02:29.905" starttime="20160122 12:02:29.897"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:29.916" starttime="20160122 12:02:29.914"></status>
</kw>
<msg timestamp="20160122 12:02:29.917" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 12:02:29.916" starttime="20160122 12:02:29.907"></status>
</kw>
<msg timestamp="20160122 12:02:29.919" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 12:02:29.918" starttime="20160122 12:02:29.810"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:29.930" starttime="20160122 12:02:29.929"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:29.933" starttime="20160122 12:02:29.931"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:29.935" starttime="20160122 12:02:29.934"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160122 12:02:29.949" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160122 12:02:29.950" starttime="20160122 12:02:29.943"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:29.950" starttime="20160122 12:02:29.941"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:29.951" starttime="20160122 12:02:29.936"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:29.952" starttime="20160122 12:02:29.920"></status>
</kw>
<msg timestamp="20160122 12:02:29.954" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20160122 12:02:29.953" starttime="20160122 12:02:23.252"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20160122 12:02:29.957" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 12:02:29.958" starttime="20160122 12:02:29.956"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 12:02:29.961" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20160122 12:02:29.961" starttime="20160122 12:02:29.959"></status>
</kw>
<kw type="kw" name="${calling_int} = BuiltIn.Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<msg timestamp="20160122 12:02:29.964" level="INFO">Argument types are:
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160122 12:02:29.965" level="INFO">${calling_int} = 525516001000</msg>
<status status="PASS" endtime="20160122 12:02:29.965" starttime="20160122 12:02:29.962"></status>
</kw>
<kw type="kw" name="${called_party} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${calling_int}+1</arg>
</arguments>
<msg timestamp="20160122 12:02:29.971" level="INFO">${called_party} = 525516001001</msg>
<status status="PASS" endtime="20160122 12:02:29.971" starttime="20160122 12:02:29.967"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC 1s *******</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:29.974" starttime="20160122 12:02:29.972"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC 1s">
<doc>Runs a standard MOC 1s session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${called_party}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc1s</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20160122 12:02:30.007" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv</msg>
<status status="PASS" endtime="20160122 12:02:30.007" starttime="20160122 12:02:30.005"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20160122 12:02:30.011" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv</msg>
<status status="PASS" endtime="20160122 12:02:30.010" starttime="20160122 12:02:30.008"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20160122 12:02:30.014" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini</msg>
<status status="PASS" endtime="20160122 12:02:30.013" starttime="20160122 12:02:30.012"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20160122 12:02:30.017" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc1s.cgs</msg>
<status status="PASS" endtime="20160122 12:02:30.017" starttime="20160122 12:02:30.015"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:30.019" starttime="20160122 12:02:30.018"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20160122 12:02:30.024" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 12:02:30.024" starttime="20160122 12:02:30.020"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:30.027" starttime="20160122 12:02:30.025"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20160122 12:02:30.030" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 12:02:30.031" starttime="20160122 12:02:30.028"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20160122 12:02:30.035" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 12:02:30.036" starttime="20160122 12:02:30.032"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:30.038" starttime="20160122 12:02:30.037"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20160122 12:02:30.042" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 12:02:30.042" starttime="20160122 12:02:30.039"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20160122 12:02:30.047" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 12:02:30.048" starttime="20160122 12:02:30.043"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:30.050" starttime="20160122 12:02:30.049"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20160122 12:02:30.061" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc1s.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20160122 12:02:35.036" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160122 12:02:35.033" starttime="20160122 12:02:30.051"></status>
</kw>
<msg timestamp="20160122 12:02:35.041" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160122 12:02:35.039" starttime="20160122 12:02:29.992"></status>
</kw>
<msg timestamp="20160122 12:02:35.045" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160122 12:02:35.043" starttime="20160122 12:02:29.976"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 12:02:35.051" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20160122 12:02:35.053" starttime="20160122 12:02:35.048"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.060" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 12:02:35.062" starttime="20160122 12:02:35.055"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.067" starttime="20160122 12:02:35.064"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.116" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 12:02:35.117" starttime="20160122 12:02:35.111"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:35.119" starttime="20160122 12:02:35.107"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.129" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 12:02:35.130" starttime="20160122 12:02:35.124"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:35.132" starttime="20160122 12:02:35.121"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.142" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 12:02:35.143" starttime="20160122 12:02:35.137"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:35.145" starttime="20160122 12:02:35.134"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:35.147" starttime="20160122 12:02:35.093"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.154" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160122 12:02:35.155" starttime="20160122 12:02:35.148"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.161" starttime="20160122 12:02:35.157"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.166" starttime="20160122 12:02:35.163"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.172" starttime="20160122 12:02:35.168"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.177" starttime="20160122 12:02:35.174"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.182" starttime="20160122 12:02:35.179"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.188" starttime="20160122 12:02:35.184"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160122 12:02:35.196" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=3', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001000']</msg>
<msg timestamp="20160122 12:02:35.617" level="INFO">12:02:35,611 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
12:02:35,612 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
12:02:35,613 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=35082
12:02:35,614 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000
12:02:35,614 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
12:02:35,615 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001
12:02:35,615 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID
12:02:35,615 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=3</msg>
<status status="PASS" endtime="20160122 12:02:35.617" starttime="20160122 12:02:35.193"></status>
</kw>
<msg timestamp="20160122 12:02:35.619" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:35.619" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160122 12:02:35.618" starttime="20160122 12:02:35.190"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 12:02:35.630" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20160122 12:02:35.630" starttime="20160122 12:02:35.628"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.634" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 12:02:35.633" starttime="20160122 12:02:35.631"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.637" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 12:02:35.636" starttime="20160122 12:02:35.634"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.641" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 12:02:35.646" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 12:02:35.646" starttime="20160122 12:02:35.639"></status>
</kw>
<msg timestamp="20160122 12:02:35.648" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:35.648" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,611 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 12:02:35.647" starttime="20160122 12:02:35.638"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.655" starttime="20160122 12:02:35.654"></status>
</kw>
<msg timestamp="20160122 12:02:35.657" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,611 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 12:02:35.656" starttime="20160122 12:02:35.649"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.664" starttime="20160122 12:02:35.662"></status>
</kw>
<msg timestamp="20160122 12:02:35.665" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,611 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 12:02:35.665" starttime="20160122 12:02:35.658"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.673" starttime="20160122 12:02:35.671"></status>
</kw>
<msg timestamp="20160122 12:02:35.674" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 12:02:35.674" starttime="20160122 12:02:35.666"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.683" starttime="20160122 12:02:35.682"></status>
</kw>
<msg timestamp="20160122 12:02:35.685" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 12:02:35.684" starttime="20160122 12:02:35.675"></status>
</kw>
<msg timestamp="20160122 12:02:35.686" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 12:02:35.686" starttime="20160122 12:02:35.621"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 12:02:35.697" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20160122 12:02:35.697" starttime="20160122 12:02:35.695"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.701" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 12:02:35.700" starttime="20160122 12:02:35.698"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.704" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 12:02:35.703" starttime="20160122 12:02:35.701"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.708" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 12:02:35.712" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 12:02:35.713" starttime="20160122 12:02:35.706"></status>
</kw>
<msg timestamp="20160122 12:02:35.714" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:35.714" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,612 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160122 12:02:35.713" starttime="20160122 12:02:35.705"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.722" starttime="20160122 12:02:35.720"></status>
</kw>
<msg timestamp="20160122 12:02:35.723" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,612 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160122 12:02:35.722" starttime="20160122 12:02:35.715"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.730" starttime="20160122 12:02:35.728"></status>
</kw>
<msg timestamp="20160122 12:02:35.731" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,612 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160122 12:02:35.730" starttime="20160122 12:02:35.724"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.739" starttime="20160122 12:02:35.736"></status>
</kw>
<msg timestamp="20160122 12:02:35.740" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160122 12:02:35.739" starttime="20160122 12:02:35.732"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.749" starttime="20160122 12:02:35.748"></status>
</kw>
<msg timestamp="20160122 12:02:35.751" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160122 12:02:35.750" starttime="20160122 12:02:35.741"></status>
</kw>
<msg timestamp="20160122 12:02:35.752" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20160122 12:02:35.752" starttime="20160122 12:02:35.688"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 12:02:35.763" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20160122 12:02:35.763" starttime="20160122 12:02:35.761"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.766" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 12:02:35.766" starttime="20160122 12:02:35.764"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.769" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 12:02:35.769" starttime="20160122 12:02:35.767"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.774" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 12:02:35.777" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 12:02:35.778" starttime="20160122 12:02:35.772"></status>
</kw>
<msg timestamp="20160122 12:02:35.779" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:35.780" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,614 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160122 12:02:35.779" starttime="20160122 12:02:35.770"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.787" starttime="20160122 12:02:35.785"></status>
</kw>
<msg timestamp="20160122 12:02:35.788" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,614 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160122 12:02:35.788" starttime="20160122 12:02:35.781"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.795" starttime="20160122 12:02:35.793"></status>
</kw>
<msg timestamp="20160122 12:02:35.796" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,614 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=334030880001000</msg>
<status status="PASS" endtime="20160122 12:02:35.796" starttime="20160122 12:02:35.789"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.805" starttime="20160122 12:02:35.803"></status>
</kw>
<msg timestamp="20160122 12:02:35.807" level="INFO">${resultCode} = 334030880001000</msg>
<status status="PASS" endtime="20160122 12:02:35.806" starttime="20160122 12:02:35.797"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.816" starttime="20160122 12:02:35.814"></status>
</kw>
<msg timestamp="20160122 12:02:35.817" level="INFO">${resultCode} = 334030880001000</msg>
<status status="PASS" endtime="20160122 12:02:35.817" starttime="20160122 12:02:35.808"></status>
</kw>
<msg timestamp="20160122 12:02:35.819" level="INFO">${imsi} = 334030880001000</msg>
<status status="PASS" endtime="20160122 12:02:35.818" starttime="20160122 12:02:35.754"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 12:02:35.830" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20160122 12:02:35.829" starttime="20160122 12:02:35.827"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.833" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 12:02:35.832" starttime="20160122 12:02:35.831"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.836" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 12:02:35.835" starttime="20160122 12:02:35.834"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.841" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 12:02:35.844" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 12:02:35.845" starttime="20160122 12:02:35.838"></status>
</kw>
<msg timestamp="20160122 12:02:35.846" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:35.847" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,613 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=35082</msg>
<status status="PASS" endtime="20160122 12:02:35.846" starttime="20160122 12:02:35.837"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.854" starttime="20160122 12:02:35.852"></status>
</kw>
<msg timestamp="20160122 12:02:35.855" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,613 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=35082</msg>
<status status="PASS" endtime="20160122 12:02:35.854" starttime="20160122 12:02:35.848"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.862" starttime="20160122 12:02:35.860"></status>
</kw>
<msg timestamp="20160122 12:02:35.863" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,613 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=35082</msg>
<status status="PASS" endtime="20160122 12:02:35.862" starttime="20160122 12:02:35.856"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.870" starttime="20160122 12:02:35.868"></status>
</kw>
<msg timestamp="20160122 12:02:35.871" level="INFO">${resultCode} = 35082</msg>
<status status="PASS" endtime="20160122 12:02:35.871" starttime="20160122 12:02:35.864"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.880" starttime="20160122 12:02:35.879"></status>
</kw>
<msg timestamp="20160122 12:02:35.882" level="INFO">${resultCode} = 35082</msg>
<status status="PASS" endtime="20160122 12:02:35.881" starttime="20160122 12:02:35.872"></status>
</kw>
<msg timestamp="20160122 12:02:35.883" level="INFO">${id} = 35082</msg>
<status status="PASS" endtime="20160122 12:02:35.883" starttime="20160122 12:02:35.820"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 12:02:35.894" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20160122 12:02:35.893" starttime="20160122 12:02:35.891"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.897" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 12:02:35.896" starttime="20160122 12:02:35.895"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.899" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 12:02:35.899" starttime="20160122 12:02:35.897"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.904" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 12:02:35.908" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 12:02:35.909" starttime="20160122 12:02:35.902"></status>
</kw>
<msg timestamp="20160122 12:02:35.910" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:35.911" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,614 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160122 12:02:35.910" starttime="20160122 12:02:35.900"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.918" starttime="20160122 12:02:35.916"></status>
</kw>
<msg timestamp="20160122 12:02:35.919" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,614 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160122 12:02:35.919" starttime="20160122 12:02:35.912"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.926" starttime="20160122 12:02:35.924"></status>
</kw>
<msg timestamp="20160122 12:02:35.927" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,614 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160122 12:02:35.927" starttime="20160122 12:02:35.920"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.934" starttime="20160122 12:02:35.932"></status>
</kw>
<msg timestamp="20160122 12:02:35.936" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160122 12:02:35.935" starttime="20160122 12:02:35.928"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.944" starttime="20160122 12:02:35.943"></status>
</kw>
<msg timestamp="20160122 12:02:35.946" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160122 12:02:35.945" starttime="20160122 12:02:35.936"></status>
</kw>
<msg timestamp="20160122 12:02:35.947" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20160122 12:02:35.947" starttime="20160122 12:02:35.885"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 12:02:35.957" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20160122 12:02:35.957" starttime="20160122 12:02:35.955"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.960" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 12:02:35.960" starttime="20160122 12:02:35.958"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.963" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 12:02:35.962" starttime="20160122 12:02:35.961"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 12:02:35.968" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 12:02:35.971" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 12:02:35.972" starttime="20160122 12:02:35.965"></status>
</kw>
<msg timestamp="20160122 12:02:35.973" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:35.973" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,615 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160122 12:02:35.972" starttime="20160122 12:02:35.964"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.980" starttime="20160122 12:02:35.978"></status>
</kw>
<msg timestamp="20160122 12:02:35.981" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,615 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160122 12:02:35.981" starttime="20160122 12:02:35.974"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.988" starttime="20160122 12:02:35.986"></status>
</kw>
<msg timestamp="20160122 12:02:35.989" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,615 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160122 12:02:35.989" starttime="20160122 12:02:35.982"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:35.997" starttime="20160122 12:02:35.995"></status>
</kw>
<msg timestamp="20160122 12:02:35.998" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160122 12:02:35.998" starttime="20160122 12:02:35.990"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.008" starttime="20160122 12:02:36.006"></status>
</kw>
<msg timestamp="20160122 12:02:36.010" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160122 12:02:36.008" starttime="20160122 12:02:35.999"></status>
</kw>
<msg timestamp="20160122 12:02:36.011" level="INFO">${tariffId} = 101001</msg>
<status status="PASS" endtime="20160122 12:02:36.011" starttime="20160122 12:02:35.949"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 12:02:36.021" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20160122 12:02:36.021" starttime="20160122 12:02:36.019"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.024" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 12:02:36.023" starttime="20160122 12:02:36.022"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.027" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 12:02:36.026" starttime="20160122 12:02:36.025"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.033" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 12:02:36.036" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 12:02:36.037" starttime="20160122 12:02:36.029"></status>
</kw>
<msg timestamp="20160122 12:02:36.038" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:36.039" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,615 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160122 12:02:36.038" starttime="20160122 12:02:36.028"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.045" starttime="20160122 12:02:36.044"></status>
</kw>
<msg timestamp="20160122 12:02:36.046" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,615 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160122 12:02:36.046" starttime="20160122 12:02:36.039"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.053" starttime="20160122 12:02:36.051"></status>
</kw>
<msg timestamp="20160122 12:02:36.054" level="INFO">${return_log_entry} = 2016-01-22 12:02:35,615 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160122 12:02:36.054" starttime="20160122 12:02:36.047"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.061" starttime="20160122 12:02:36.059"></status>
</kw>
<msg timestamp="20160122 12:02:36.062" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160122 12:02:36.062" starttime="20160122 12:02:36.055"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.071" starttime="20160122 12:02:36.069"></status>
</kw>
<msg timestamp="20160122 12:02:36.072" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160122 12:02:36.071" starttime="20160122 12:02:36.063"></status>
</kw>
<msg timestamp="20160122 12:02:36.073" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160122 12:02:36.073" starttime="20160122 12:02:36.013"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.082" starttime="20160122 12:02:36.080"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.084" starttime="20160122 12:02:36.082"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.086" starttime="20160122 12:02:36.084"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160122 12:02:36.096" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160122 12:02:36.097" starttime="20160122 12:02:36.092"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:36.098" starttime="20160122 12:02:36.090"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:36.099" starttime="20160122 12:02:36.087"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:36.099" starttime="20160122 12:02:36.075"></status>
</kw>
<msg timestamp="20160122 12:02:36.102" level="INFO">${rc} = OK</msg>
<msg timestamp="20160122 12:02:36.103" level="INFO">${provId} = 1</msg>
<msg timestamp="20160122 12:02:36.103" level="INFO">${imsi} = 334030880001000</msg>
<msg timestamp="20160122 12:02:36.104" level="INFO">${id} = 35082</msg>
<msg timestamp="20160122 12:02:36.104" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20160122 12:02:36.105" level="INFO">${tariffId} = 101001</msg>
<msg timestamp="20160122 12:02:36.105" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160122 12:02:36.101" starttime="20160122 12:02:35.073"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.171" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 12:02:36.172" starttime="20160122 12:02:36.169"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:36.172" starttime="20160122 12:02:36.167"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.177" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 12:02:36.177" starttime="20160122 12:02:36.175"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:36.178" starttime="20160122 12:02:36.173"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.183" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 12:02:36.183" starttime="20160122 12:02:36.181"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:36.184" starttime="20160122 12:02:36.179"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:36.185" starttime="20160122 12:02:36.162"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.188" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160122 12:02:36.188" starttime="20160122 12:02:36.185"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.190" starttime="20160122 12:02:36.189"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.193" starttime="20160122 12:02:36.191"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.196" starttime="20160122 12:02:36.194"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.198" starttime="20160122 12:02:36.197"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.200" starttime="20160122 12:02:36.199"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.203" starttime="20160122 12:02:36.201"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160122 12:02:36.206" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=334030880001000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=525516001000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=3', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=525516001000', u'crceHost=10.105.119.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=35082']</msg>
<msg timestamp="20160122 12:02:36.528" level="INFO">12:02:36,525 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
12:02:36,526 INFO  [log] LowLevelOps.getMainAccount.output.accountId=35083
12:02:36,526 INFO  [log] LowLevelOps.getMainAccount.output.balance=8000000
12:02:36,527 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
12:02:36,527 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160122 12:02:36.529" starttime="20160122 12:02:36.205"></status>
</kw>
<msg timestamp="20160122 12:02:36.530" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:36.531" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160122 12:02:36.530" starttime="20160122 12:02:36.203"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 12:02:36.540" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20160122 12:02:36.540" starttime="20160122 12:02:36.538"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.543" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 12:02:36.543" starttime="20160122 12:02:36.541"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.546" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 12:02:36.546" starttime="20160122 12:02:36.544"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.551" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 12:02:36.554" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 12:02:36.554" starttime="20160122 12:02:36.549"></status>
</kw>
<msg timestamp="20160122 12:02:36.556" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:36.556" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,525 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 12:02:36.555" starttime="20160122 12:02:36.547"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.570" starttime="20160122 12:02:36.567"></status>
</kw>
<msg timestamp="20160122 12:02:36.573" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,525 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 12:02:36.572" starttime="20160122 12:02:36.557"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.587" starttime="20160122 12:02:36.583"></status>
</kw>
<msg timestamp="20160122 12:02:36.589" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,525 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 12:02:36.588" starttime="20160122 12:02:36.575"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.604" starttime="20160122 12:02:36.600"></status>
</kw>
<msg timestamp="20160122 12:02:36.607" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 12:02:36.606" starttime="20160122 12:02:36.591"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.622" starttime="20160122 12:02:36.619"></status>
</kw>
<msg timestamp="20160122 12:02:36.624" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 12:02:36.623" starttime="20160122 12:02:36.609"></status>
</kw>
<msg timestamp="20160122 12:02:36.627" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 12:02:36.626" starttime="20160122 12:02:36.532"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 12:02:36.642" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20160122 12:02:36.642" starttime="20160122 12:02:36.639"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.647" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 12:02:36.646" starttime="20160122 12:02:36.644"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.651" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 12:02:36.651" starttime="20160122 12:02:36.648"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.661" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 12:02:36.668" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 12:02:36.670" starttime="20160122 12:02:36.657"></status>
</kw>
<msg timestamp="20160122 12:02:36.672" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:36.672" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,526 INFO  [log] LowLevelOps.getMainAccount.output.accountId=35083</msg>
<status status="PASS" endtime="20160122 12:02:36.671" starttime="20160122 12:02:36.654"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.683" starttime="20160122 12:02:36.680"></status>
</kw>
<msg timestamp="20160122 12:02:36.685" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,526 INFO  [log] LowLevelOps.getMainAccount.output.accountId=35083</msg>
<status status="PASS" endtime="20160122 12:02:36.684" starttime="20160122 12:02:36.674"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.695" starttime="20160122 12:02:36.692"></status>
</kw>
<msg timestamp="20160122 12:02:36.697" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,526 INFO  [log] LowLevelOps.getMainAccount.output.accountId=35083</msg>
<status status="PASS" endtime="20160122 12:02:36.696" starttime="20160122 12:02:36.686"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.708" starttime="20160122 12:02:36.705"></status>
</kw>
<msg timestamp="20160122 12:02:36.710" level="INFO">${resultCode} = 35083</msg>
<status status="PASS" endtime="20160122 12:02:36.709" starttime="20160122 12:02:36.698"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.725" starttime="20160122 12:02:36.722"></status>
</kw>
<msg timestamp="20160122 12:02:36.726" level="INFO">${resultCode} = 35083</msg>
<status status="PASS" endtime="20160122 12:02:36.726" starttime="20160122 12:02:36.712"></status>
</kw>
<msg timestamp="20160122 12:02:36.729" level="INFO">${accountId} = 35083</msg>
<status status="PASS" endtime="20160122 12:02:36.728" starttime="20160122 12:02:36.629"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 12:02:36.745" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20160122 12:02:36.744" starttime="20160122 12:02:36.741"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.749" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 12:02:36.749" starttime="20160122 12:02:36.746"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.753" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 12:02:36.753" starttime="20160122 12:02:36.751"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.760" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 12:02:36.765" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 12:02:36.766" starttime="20160122 12:02:36.757"></status>
</kw>
<msg timestamp="20160122 12:02:36.767" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:36.768" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,526 INFO  [log] LowLevelOps.getMainAccount.output.balance=8000000</msg>
<status status="PASS" endtime="20160122 12:02:36.767" starttime="20160122 12:02:36.755"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.778" starttime="20160122 12:02:36.776"></status>
</kw>
<msg timestamp="20160122 12:02:36.780" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,526 INFO  [log] LowLevelOps.getMainAccount.output.balance=8000000</msg>
<status status="PASS" endtime="20160122 12:02:36.779" starttime="20160122 12:02:36.769"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.789" starttime="20160122 12:02:36.787"></status>
</kw>
<msg timestamp="20160122 12:02:36.791" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,526 INFO  [log] LowLevelOps.getMainAccount.output.balance=8000000</msg>
<status status="PASS" endtime="20160122 12:02:36.790" starttime="20160122 12:02:36.781"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.802" starttime="20160122 12:02:36.799"></status>
</kw>
<msg timestamp="20160122 12:02:36.803" level="INFO">${resultCode} = 8000000</msg>
<status status="PASS" endtime="20160122 12:02:36.803" starttime="20160122 12:02:36.792"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.817" starttime="20160122 12:02:36.814"></status>
</kw>
<msg timestamp="20160122 12:02:36.818" level="INFO">${resultCode} = 8000000</msg>
<status status="PASS" endtime="20160122 12:02:36.818" starttime="20160122 12:02:36.805"></status>
</kw>
<msg timestamp="20160122 12:02:36.821" level="INFO">${balance} = 8000000</msg>
<status status="PASS" endtime="20160122 12:02:36.820" starttime="20160122 12:02:36.731"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 12:02:36.835" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20160122 12:02:36.834" starttime="20160122 12:02:36.831"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.839" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 12:02:36.838" starttime="20160122 12:02:36.836"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.843" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 12:02:36.842" starttime="20160122 12:02:36.840"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.849" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 12:02:36.854" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 12:02:36.855" starttime="20160122 12:02:36.846"></status>
</kw>
<msg timestamp="20160122 12:02:36.856" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:36.857" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,527 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160122 12:02:36.856" starttime="20160122 12:02:36.844"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.866" starttime="20160122 12:02:36.864"></status>
</kw>
<msg timestamp="20160122 12:02:36.867" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,527 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160122 12:02:36.866" starttime="20160122 12:02:36.858"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.873" starttime="20160122 12:02:36.871"></status>
</kw>
<msg timestamp="20160122 12:02:36.874" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,527 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160122 12:02:36.873" starttime="20160122 12:02:36.868"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.880" starttime="20160122 12:02:36.879"></status>
</kw>
<msg timestamp="20160122 12:02:36.881" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160122 12:02:36.881" starttime="20160122 12:02:36.875"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.890" starttime="20160122 12:02:36.888"></status>
</kw>
<msg timestamp="20160122 12:02:36.891" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160122 12:02:36.890" starttime="20160122 12:02:36.882"></status>
</kw>
<msg timestamp="20160122 12:02:36.892" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20160122 12:02:36.892" starttime="20160122 12:02:36.823"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 12:02:36.901" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20160122 12:02:36.901" starttime="20160122 12:02:36.899"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.904" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 12:02:36.904" starttime="20160122 12:02:36.902"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.907" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 12:02:36.906" starttime="20160122 12:02:36.905"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.911" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 12:02:36.914" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 12:02:36.915" starttime="20160122 12:02:36.909"></status>
</kw>
<msg timestamp="20160122 12:02:36.916" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 12:02:36.916" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,527 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160122 12:02:36.915" starttime="20160122 12:02:36.908"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.922" starttime="20160122 12:02:36.921"></status>
</kw>
<msg timestamp="20160122 12:02:36.923" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,527 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160122 12:02:36.923" starttime="20160122 12:02:36.917"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.929" starttime="20160122 12:02:36.928"></status>
</kw>
<msg timestamp="20160122 12:02:36.931" level="INFO">${return_log_entry} = 2016-01-22 12:02:36,527 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20160122 12:02:36.930" starttime="20160122 12:02:36.924"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.937" starttime="20160122 12:02:36.935"></status>
</kw>
<msg timestamp="20160122 12:02:36.938" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20160122 12:02:36.938" starttime="20160122 12:02:36.931"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.946" starttime="20160122 12:02:36.945"></status>
</kw>
<msg timestamp="20160122 12:02:36.947" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20160122 12:02:36.947" starttime="20160122 12:02:36.939"></status>
</kw>
<msg timestamp="20160122 12:02:36.949" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20160122 12:02:36.948" starttime="20160122 12:02:36.894"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.957" starttime="20160122 12:02:36.955"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.959" starttime="20160122 12:02:36.957"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 12:02:36.961" starttime="20160122 12:02:36.959"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160122 12:02:36.971" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-ShortDuration/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160122 12:02:36.971" starttime="20160122 12:02:36.967"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:36.972" starttime="20160122 12:02:36.965"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:36.973" starttime="20160122 12:02:36.962"></status>
</kw>
<status status="PASS" endtime="20160122 12:02:36.973" starttime="20160122 12:02:36.950"></status>
</kw>
<msg timestamp="20160122 12:02:36.976" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20160122 12:02:36.976" level="INFO">${accId} = 35083</msg>
<msg timestamp="20160122 12:02:36.976" level="INFO">${bal} = 8000000</msg>
<msg timestamp="20160122 12:02:36.977" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20160122 12:02:36.977" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20160122 12:02:36.975" starttime="20160122 12:02:36.107"></status>
</kw>
<kw type="kw" name="${target_bal} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${INITIAL_BALANCE}-${TESTSUBCRIBERS DEFAULT SLICE COSTS}</arg>
</arguments>
<msg timestamp="20160122 12:02:36.982" level="INFO">${target_bal} = 8000000</msg>
<status status="PASS" endtime="20160122 12:02:36.981" starttime="20160122 12:02:36.978"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${target_bal}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<msg timestamp="20160122 12:02:36.984" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 12:02:36.985" starttime="20160122 12:02:36.983"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check OK!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 12:02:36.987" level="INFO">Account balance check OK!</msg>
<status status="PASS" endtime="20160122 12:02:36.988" starttime="20160122 12:02:36.986"></status>
</kw>
<doc>Test will make a MOC call, duration 1s.

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>MTEL_supported</tag>
<tag>MVNA_MEX_supported</tag>
<tag>SMARTSPACE_supported</tag>
<tag>TNZ_supported</tag>
<tag>VIRGIN_COLUMBIA_supported</tag>
</tags>
<status status="PASS" critical="yes" endtime="20160122 12:02:36.990" starttime="20160122 12:02:23.232"></status>
</test>
<doc>Testing the prepaid MOC call, duration is 1s - shorter than one slice (less than 60s)

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20160122 12:02:36.994" starttime="20160122 12:02:14.172"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" info="" doc="" combined="" fail="0" links="">matko.sanseovic</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">MOC_only</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">MTEL_supported</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">MVNA_MEX_supported</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">SMARTSPACE_supported</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">TNZ_supported</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">VIRGIN_COLUMBIA_supported</stat>
</tag>
<suite>
<stat pass="1" id="s1" fail="0" name="MOC PREPAID ONNET-ShortDuration-robot-suite">MOC PREPAID ONNET-ShortDuration-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
