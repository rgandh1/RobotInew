<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20160122 15:41:13.661">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/MOC_PREPAID_ONNET-LongDuration136s-robot-suite.txt" id="s1" name="MOC PREPAID ONNET-LongDuration136s-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20160122 15:41:15.833" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20160122 15:41:15.836" level="INFO">${date} = Fri Jan 22 15:41:15 CET 2016</msg>
<status status="PASS" endtime="20160122 15:41:15.835" starttime="20160122 15:41:15.821"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:41:15.841" level="INFO">Date and time: Fri Jan 22 15:41:15 CET 2016</msg>
<status status="PASS" endtime="20160122 15:41:15.842" starttime="20160122 15:41:15.838"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:41:15.847" level="INFO">Target IN machine: 10.105.113.135</msg>
<status status="PASS" endtime="20160122 15:41:15.848" starttime="20160122 15:41:15.844"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:15.936" starttime="20160122 15:41:15.934"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:16.155" starttime="20160122 15:41:15.951"></status>
</kw>
<msg timestamp="20160122 15:41:16.159" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20160122 15:41:16.157" starttime="20160122 15:41:15.938"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160122 15:41:16.171" level="INFO">Logging into '10.105.113.135:22' as 'qa_automation'.</msg>
<msg timestamp="20160122 15:41:17.365" level="INFO">Read output: Last login: Fri Jan 22 13:14:02 2016 from 10.105.101.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb13 ~]$</msg>
<status status="PASS" endtime="20160122 15:41:17.366" starttime="20160122 15:41:16.168"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:17.368" starttime="20160122 15:41:16.161"></status>
</kw>
<msg timestamp="20160122 15:41:17.372" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20160122 15:41:17.371" starttime="20160122 15:41:15.916"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160122 15:41:17.379" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160122 15:41:17.378" starttime="20160122 15:41:17.373"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160122 15:41:17.382" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-3.0.1 status'.</msg>
<msg timestamp="20160122 15:41:17.847" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160122 15:41:17.849" level="INFO">${output} = I-New MVNA TNZ - Core - Service 3.0.1 2015.03.26-15:26:48 is running PID: 24871 </msg>
<status status="PASS" endtime="20160122 15:41:17.848" starttime="20160122 15:41:17.380"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:17.856" starttime="20160122 15:41:17.853"></status>
</kw>
<msg timestamp="20160122 15:41:17.858" level="INFO">${status} = PASS</msg>
<msg timestamp="20160122 15:41:17.858" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160122 15:41:17.857" starttime="20160122 15:41:17.850"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:17.867" starttime="20160122 15:41:17.865"></status>
</kw>
<msg timestamp="20160122 15:41:17.869" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:41:17.868" starttime="20160122 15:41:17.860"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20160122 15:41:17.873" level="INFO">${version_r} =  3.0.1 2015.03.26-15:26:48 is running PID: 24871 </msg>
<status status="PASS" endtime="20160122 15:41:17.872" starttime="20160122 15:41:17.870"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160122 15:41:17.877" level="INFO">${version} =  3.0.1 2015.03.26-15:26:48 </msg>
<status status="PASS" endtime="20160122 15:41:17.877" starttime="20160122 15:41:17.874"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:17.881" starttime="20160122 15:41:17.879"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:17.896" starttime="20160122 15:41:17.894"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160122 15:41:17.900" starttime="20160122 15:41:17.897"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:17.903" starttime="20160122 15:41:17.883"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:17.912" starttime="20160122 15:41:17.910"></status>
</kw>
<msg timestamp="20160122 15:41:17.913" level="INFO">${ver} =  3.0.1 2015.03.26-15:26:48 </msg>
<status status="PASS" endtime="20160122 15:41:17.913" starttime="20160122 15:41:17.904"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:17.917" starttime="20160122 15:41:17.915"></status>
</kw>
<msg timestamp="20160122 15:41:17.920" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20160122 15:41:17.920" level="INFO">${in_version} =  3.0.1 2015.03.26-15:26:48 </msg>
<status status="PASS" endtime="20160122 15:41:17.919" starttime="20160122 15:41:15.874"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:17.984" starttime="20160122 15:41:17.982"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:18.036" starttime="20160122 15:41:17.991"></status>
</kw>
<msg timestamp="20160122 15:41:18.039" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20160122 15:41:18.038" starttime="20160122 15:41:17.985"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160122 15:41:18.086" level="INFO">Logging into '10.105.113.171:22' as 'qa_automation'.</msg>
<msg timestamp="20160122 15:41:19.238" level="INFO">Read output: Last login: Fri Jan 22 13:16:55 2016 from 10.105.101.196
[1m[qa_automation@xdr01.tb13 ~]$</msg>
<status status="PASS" endtime="20160122 15:41:19.239" starttime="20160122 15:41:18.049"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:19.241" starttime="20160122 15:41:18.040"></status>
</kw>
<msg timestamp="20160122 15:41:19.245" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20160122 15:41:19.244" starttime="20160122 15:41:17.969"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160122 15:41:19.252" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160122 15:41:19.251" starttime="20160122 15:41:19.246"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160122 15:41:19.255" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20160122 15:41:19.732" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160122 15:41:19.734" level="INFO">${output} = I-New UMS MVNO - XDR - Server 5.3.1.25016 is running PID: 3345 </msg>
<status status="PASS" endtime="20160122 15:41:19.733" starttime="20160122 15:41:19.253"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:19.741" starttime="20160122 15:41:19.738"></status>
</kw>
<msg timestamp="20160122 15:41:19.742" level="INFO">${status} = PASS</msg>
<msg timestamp="20160122 15:41:19.743" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160122 15:41:19.741" starttime="20160122 15:41:19.735"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:19.750" starttime="20160122 15:41:19.749"></status>
</kw>
<msg timestamp="20160122 15:41:19.752" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:41:19.751" starttime="20160122 15:41:19.744"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20160122 15:41:19.756" level="INFO">${version_r} =  5.3.1.25016 is running PID: 3345 </msg>
<status status="PASS" endtime="20160122 15:41:19.755" starttime="20160122 15:41:19.753"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160122 15:41:19.759" level="INFO">${version} =  5.3.1.25016 </msg>
<status status="PASS" endtime="20160122 15:41:19.759" starttime="20160122 15:41:19.757"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:19.762" starttime="20160122 15:41:19.760"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:19.775" starttime="20160122 15:41:19.773"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160122 15:41:19.780" starttime="20160122 15:41:19.776"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:19.781" starttime="20160122 15:41:19.764"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:19.788" starttime="20160122 15:41:19.786"></status>
</kw>
<msg timestamp="20160122 15:41:19.790" level="INFO">${ver} =  5.3.1.25016 </msg>
<status status="PASS" endtime="20160122 15:41:19.789" starttime="20160122 15:41:19.782"></status>
</kw>
<msg timestamp="20160122 15:41:19.792" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20160122 15:41:19.793" level="INFO">${xdr_version} =  5.3.1.25016 </msg>
<status status="PASS" endtime="20160122 15:41:19.791" starttime="20160122 15:41:17.939"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:19.847" starttime="20160122 15:41:19.845"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:19.896" starttime="20160122 15:41:19.853"></status>
</kw>
<msg timestamp="20160122 15:41:19.897" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20160122 15:41:19.897" starttime="20160122 15:41:19.848"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160122 15:41:19.906" level="INFO">Logging into '10.105.113.125:22' as 'qa_automation'.</msg>
<msg timestamp="20160122 15:41:20.403" level="INFO">Read output: Last login: Fri Jan 22 13:14:04 2016 from 10.105.101.196
id: cannot find name for group ID 20007
[1m[qa_automation@crce01.tb13 ~]$</msg>
<status status="PASS" endtime="20160122 15:41:20.407" starttime="20160122 15:41:19.904"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:20.410" starttime="20160122 15:41:19.899"></status>
</kw>
<msg timestamp="20160122 15:41:20.416" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20160122 15:41:20.414" starttime="20160122 15:41:19.835"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160122 15:41:20.431" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160122 15:41:20.429" starttime="20160122 15:41:20.419"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160122 15:41:20.438" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20160122 15:41:20.626" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160122 15:41:20.629" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 5.3.16.29968
Negret Rating &amp; Charging Engine 5.3.16.29968 is running (PID:21403, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160122 15:41:20.628" starttime="20160122 15:41:20.433"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:20.642" starttime="20160122 15:41:20.637"></status>
</kw>
<msg timestamp="20160122 15:41:20.645" level="INFO">${status} = PASS</msg>
<msg timestamp="20160122 15:41:20.647" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160122 15:41:20.644" starttime="20160122 15:41:20.632"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:20.663" starttime="20160122 15:41:20.660"></status>
</kw>
<msg timestamp="20160122 15:41:20.666" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:41:20.665" starttime="20160122 15:41:20.649"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160122 15:41:20.674" level="INFO">${version_r} =  5.3.16.29968 is running (PID:21403, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20160122 15:41:20.673" starttime="20160122 15:41:20.669"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160122 15:41:20.683" level="INFO">${version} =  5.3.16.29968 </msg>
<status status="PASS" endtime="20160122 15:41:20.681" starttime="20160122 15:41:20.677"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:20.688" starttime="20160122 15:41:20.685"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:20.714" starttime="20160122 15:41:20.710"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160122 15:41:20.722" starttime="20160122 15:41:20.717"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:20.724" starttime="20160122 15:41:20.692"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:20.739" starttime="20160122 15:41:20.735"></status>
</kw>
<msg timestamp="20160122 15:41:20.743" level="INFO">${ver} =  5.3.16.29968 </msg>
<status status="PASS" endtime="20160122 15:41:20.741" starttime="20160122 15:41:20.726"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:20.746" starttime="20160122 15:41:20.744"></status>
</kw>
<msg timestamp="20160122 15:41:20.748" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20160122 15:41:20.749" level="INFO">${crce_version} =  5.3.16.29968 </msg>
<status status="PASS" endtime="20160122 15:41:20.747" starttime="20160122 15:41:19.809"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:20.799" starttime="20160122 15:41:20.797"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:20.860" starttime="20160122 15:41:20.805"></status>
</kw>
<msg timestamp="20160122 15:41:20.864" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20160122 15:41:20.862" starttime="20160122 15:41:20.800"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20160122 15:41:20.882" level="INFO">Logging into '10.105.113.159:22' as 'qa_automation'.</msg>
<msg timestamp="20160122 15:41:21.511" level="INFO">Read output: Last login: Fri Jan 22 13:14:05 2016 from 10.105.101.196
id: cannot find name for group ID 20007
[1m[qa_automation@ocs01.tb13 ~]$</msg>
<status status="PASS" endtime="20160122 15:41:21.512" starttime="20160122 15:41:20.877"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:21.513" starttime="20160122 15:41:20.866"></status>
</kw>
<msg timestamp="20160122 15:41:21.516" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20160122 15:41:21.515" starttime="20160122 15:41:20.787"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20160122 15:41:21.522" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20160122 15:41:21.522" starttime="20160122 15:41:21.517"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20160122 15:41:21.525" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20160122 15:41:21.766" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20160122 15:41:21.770" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 5.3.2.1853
GyApp is running (PID: 14305)</msg>
<status status="PASS" endtime="20160122 15:41:21.768" starttime="20160122 15:41:21.523"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:21.803" starttime="20160122 15:41:21.777"></status>
</kw>
<msg timestamp="20160122 15:41:21.808" level="INFO">${status} = PASS</msg>
<msg timestamp="20160122 15:41:21.809" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20160122 15:41:21.806" starttime="20160122 15:41:21.772"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:21.828" starttime="20160122 15:41:21.824"></status>
</kw>
<msg timestamp="20160122 15:41:21.831" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:41:21.829" starttime="20160122 15:41:21.812"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20160122 15:41:21.839" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 5.3.2.1853
GyApp is running (PID: 14305)</msg>
<status status="PASS" endtime="20160122 15:41:21.838" starttime="20160122 15:41:21.833"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20160122 15:41:21.847" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 5.3.2.1853
GyApp </msg>
<status status="PASS" endtime="20160122 15:41:21.846" starttime="20160122 15:41:21.842"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:21.853" starttime="20160122 15:41:21.850"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:21.879" starttime="20160122 15:41:21.875"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20160122 15:41:21.885" starttime="20160122 15:41:21.882"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:21.890" starttime="20160122 15:41:21.856"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:21.904" starttime="20160122 15:41:21.900"></status>
</kw>
<msg timestamp="20160122 15:41:21.907" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 5.3.2.1853
GyApp </msg>
<status status="PASS" endtime="20160122 15:41:21.906" starttime="20160122 15:41:21.892"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:21.914" starttime="20160122 15:41:21.910"></status>
</kw>
<msg timestamp="20160122 15:41:21.919" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20160122 15:41:21.920" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 5.3.2.1853
GyApp </msg>
<status status="PASS" endtime="20160122 15:41:21.917" starttime="20160122 15:41:20.763"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:41:21.927" level="INFO">IN state= OK version= 3.0.1 2015.03.26-15:26:48 </msg>
<status status="PASS" endtime="20160122 15:41:21.929" starttime="20160122 15:41:21.923"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:41:21.936" level="INFO">XDR state= OK version= 5.3.1.25016 </msg>
<status status="PASS" endtime="20160122 15:41:21.938" starttime="20160122 15:41:21.931"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:41:21.945" level="INFO">CRCE state= OK version= 5.3.16.29968 </msg>
<status status="PASS" endtime="20160122 15:41:21.947" starttime="20160122 15:41:21.940"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:41:21.954" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 5.3.2.1853
GyApp </msg>
<status status="PASS" endtime="20160122 15:41:21.956" starttime="20160122 15:41:21.949"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20160122 15:41:21.962" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 15:41:21.964" starttime="20160122 15:41:21.958"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20160122 15:41:21.970" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 15:41:21.972" starttime="20160122 15:41:21.966"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20160122 15:41:21.978" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 15:41:21.979" starttime="20160122 15:41:21.974"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20160122 15:41:21.986" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 15:41:21.987" starttime="20160122 15:41:21.982"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:22.000" starttime="20160122 15:41:21.996"></status>
</kw>
<msg timestamp="20160122 15:41:22.002" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160122 15:41:22.001" starttime="20160122 15:41:21.990"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.005" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/CG_unified_workspace</msg>
<status status="PASS" endtime="20160122 15:41:22.006" starttime="20160122 15:41:22.003"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:22.007" starttime="20160122 15:41:15.809"></status>
</kw>
<test id="s1-t1" name="Run MOC 136s Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:22.019" starttime="20160122 15:41:22.018"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100000000</arg>
</arguments>
<msg timestamp="20160122 15:41:22.022" level="INFO">${INITIAL_BALANCE} = 100000000</msg>
<status status="PASS" endtime="20160122 15:41:22.022" starttime="20160122 15:41:22.021"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.039" level="INFO">msg=crce_host=10.105.113.125</msg>
<status status="PASS" endtime="20160122 15:41:22.039" starttime="20160122 15:41:22.037"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.042" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20160122 15:41:22.043" starttime="20160122 15:41:22.040"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.045" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20160122 15:41:22.046" starttime="20160122 15:41:22.044"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.049" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20160122 15:41:22.049" starttime="20160122 15:41:22.047"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.052" level="INFO">msg=imsiRangeStart=530052041010000</msg>
<status status="PASS" endtime="20160122 15:41:22.052" starttime="20160122 15:41:22.050"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.055" level="INFO">msg=msisdnRangeStart=642041010000</msg>
<status status="PASS" endtime="20160122 15:41:22.056" starttime="20160122 15:41:22.053"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.058" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20160122 15:41:22.059" starttime="20160122 15:41:22.057"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.061" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20160122 15:41:22.062" starttime="20160122 15:41:22.060"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.065" level="INFO">msg=tariffId=101001</msg>
<status status="PASS" endtime="20160122 15:41:22.065" starttime="20160122 15:41:22.063"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.068" level="INFO">msg=balance=100000000</msg>
<status status="PASS" endtime="20160122 15:41:22.069" starttime="20160122 15:41:22.066"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.083" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:41:22.084" starttime="20160122 15:41:22.080"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:22.085" starttime="20160122 15:41:22.078"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.090" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:41:22.091" starttime="20160122 15:41:22.088"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:22.092" starttime="20160122 15:41:22.086"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.097" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:41:22.097" starttime="20160122 15:41:22.094"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:22.098" starttime="20160122 15:41:22.093"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:22.099" starttime="20160122 15:41:22.071"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160122 15:41:22.103" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160122 15:41:22.104" starttime="20160122 15:41:22.100"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:22.107" starttime="20160122 15:41:22.105"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:22.109" starttime="20160122 15:41:22.108"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:22.112" starttime="20160122 15:41:22.110"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:22.115" starttime="20160122 15:41:22.113"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:22.117" starttime="20160122 15:41:22.116"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:22.120" starttime="20160122 15:41:22.118"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:22.123" starttime="20160122 15:41:22.121"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:22.125" starttime="20160122 15:41:22.124"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:22.128" starttime="20160122 15:41:22.126"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:22.131" starttime="20160122 15:41:22.129"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:22.134" starttime="20160122 15:41:22.132"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:22.136" starttime="20160122 15:41:22.135"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160122 15:41:22.140" level="INFO">Running with the following project properties set: [u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=100000000']</msg>
<msg timestamp="20160122 15:41:27.282" level="INFO">15:41:22,308 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/ext] for external libraries
15:41:22,308 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
15:41:24,428 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/crce-subscriberadmin/robot_crce_bridge-soapui-project.xml]
15:41:24,446 INFO  [SoapUITestCaseRunner] Setting project property [crceHost] to [10.105.113.125]
15:41:24,446 INFO  [SoapUITestCaseRunner] Setting project property [crcePort] to [8080]
15:41:24,446 INFO  [SoapUITestCaseRunner] Setting project property [crceWebservicesBasePath] to [/inew-mvno-crce-webservices/]
15:41:24,446 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.amount] to [2]
15:41:24,446 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.imsiRangeStart] to [530052041010000]
15:41:24,447 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.msisdnRangeStart] to [642041010000]
15:41:24,447 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.type] to [PREPAID]
15:41:24,447 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.languageid] to [1]
15:41:24,447 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.tariffId] to [101001]
15:41:24,447 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.balance] to [100000000]
15:41:24,447 INFO  [SoapUITestCaseRunner] Running SoapUI tests in project [Robotframework_CRCE-Bridge]
15:41:24,448 INFO  [SoapUITestCaseRunner] Running TestCase [createTestSubscribers]
15:41:24,457 INFO  [SoapUITestCaseRunner] Running SoapUI testcase [createTestSubscribers]
15:41:24,463 INFO  [SoapUITestCaseRunner] running step [init_repeat_counter]
15:41:24,923 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
15:41:24,984 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
15:41:25,161 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:41:25,162 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:41:25,188 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:41:25,194 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:41:25,369 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:41:25,370 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:41:25,370 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:41:25,370 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
15:41:25,431 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
15:41:25,699 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
15:41:25,725 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
15:41:25,727 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:41:25,729 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:41:25,729 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:41:25,920 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:41:25,920 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:41:25,927 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:41:25,927 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:41:25,927 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:41:25,928 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
15:41:26,036 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
15:41:26,042 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
15:41:26,092 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
15:41:26,096 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:41:26,098 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:41:26,098 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:41:26,121 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:41:26,122 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:41:26,128 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:41:26,128 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:41:26,128 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:41:26,128 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
15:41:26,195 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
15:41:26,206 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
15:41:26,252 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
15:41:26,256 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:41:26,258 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:41:26,258 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:41:26,318 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:41:26,319 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:41:26,325 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:41:26,325 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:41:26,325 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:41:26,325 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
15:41:26,391 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
15:41:26,397 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
15:41:26,439 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
15:41:26,442 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:41:26,444 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:41:26,444 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
15:41:26,465 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:41:26,465 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:41:26,478 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:41:26,479 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:41:26,479 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:41:26,479 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
15:41:26,543 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
15:41:26,564 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
15:41:26,607 INFO  [SoapUITestCaseRunner] running step [setBalance]
15:41:26,610 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:41:26,612 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:41:26,613 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
15:41:26,665 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:41:26,665 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:41:26,671 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:41:26,671 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:41:26,671 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:41:26,671 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
15:41:26,701 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
15:41:26,705 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
15:41:26,726 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
15:41:26,760 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
15:41:26,764 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
15:41:26,765 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:41:26,767 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:41:26,767 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:41:26,779 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:41:26,780 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:41:26,791 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:41:26,791 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:41:26,791 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:41:26,791 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
15:41:26,792 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
15:41:26,810 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
15:41:26,810 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
15:41:26,812 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:41:26,814 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:41:26,814 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:41:26,921 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:41:26,921 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:41:26,927 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:41:26,927 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:41:26,927 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:41:26,927 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
15:41:26,928 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
15:41:26,933 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
15:41:26,934 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
15:41:26,937 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:41:26,939 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:41:26,939 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:41:26,964 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:41:26,964 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:41:26,970 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:41:26,970 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:41:26,970 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:41:26,970 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
15:41:26,971 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
15:41:26,981 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
15:41:26,981 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
15:41:26,984 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:41:26,986 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:41:26,986 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:41:27,049 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:41:27,049 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:41:27,055 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:41:27,055 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:41:27,055 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:41:27,056 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
15:41:27,056 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
15:41:27,061 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
15:41:27,062 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
15:41:27,064 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:41:27,066 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:41:27,066 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
15:41:27,089 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:41:27,089 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:41:27,100 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:41:27,100 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:41:27,101 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:41:27,101 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
15:41:27,101 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
15:41:27,122 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
15:41:27,123 INFO  [SoapUITestCaseRunner] running step [setBalance]
15:41:27,125 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:41:27,126 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:41:27,127 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
15:41:27,177 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:41:27,178 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:41:27,189 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:41:27,189 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:41:27,189 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:41:27,189 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
15:41:27,190 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
15:41:27,198 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
15:41:27,199 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
15:41:27,201 INFO  [SoapUITestCaseRunner] running step [finish_successful]
15:41:27,271 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK
15:41:27,272 INFO  [SoapUITestCaseRunner] Finished running SoapUI testcase [createTestSubscribers], time taken: 2761ms, status: FINISHED
15:41:27,272 INFO  [SoapUITestCaseRunner] TestCase [createTestSubscribers] finished with status [FINISHED] in 2761ms</msg>
<status status="PASS" endtime="20160122 15:41:27.293" starttime="20160122 15:41:22.139"></status>
</kw>
<msg timestamp="20160122 15:41:27.300" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:41:27.301" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160122 15:41:27.296" starttime="20160122 15:41:22.137"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:41:27.338" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20160122 15:41:27.337" starttime="20160122 15:41:27.331"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:41:27.346" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:41:27.345" starttime="20160122 15:41:27.341"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:41:27.355" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:41:27.354" starttime="20160122 15:41:27.349"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:41:27.371" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:41:27.382" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20160122 15:41:27.384" starttime="20160122 15:41:27.364"></status>
</kw>
<msg timestamp="20160122 15:41:27.387" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:41:27.388" level="INFO">${return_log_entry} = 2016-01-22 15:41:27,271 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:41:27.386" starttime="20160122 15:41:27.359"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:27.408" starttime="20160122 15:41:27.404"></status>
</kw>
<msg timestamp="20160122 15:41:27.411" level="INFO">${return_log_entry} = 2016-01-22 15:41:27,271 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:41:27.410" starttime="20160122 15:41:27.391"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:27.428" starttime="20160122 15:41:27.424"></status>
</kw>
<msg timestamp="20160122 15:41:27.431" level="INFO">${return_log_entry} = 2016-01-22 15:41:27,271 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:41:27.430" starttime="20160122 15:41:27.414"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:27.450" starttime="20160122 15:41:27.444"></status>
</kw>
<msg timestamp="20160122 15:41:27.453" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:41:27.452" starttime="20160122 15:41:27.434"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:27.475" starttime="20160122 15:41:27.471"></status>
</kw>
<msg timestamp="20160122 15:41:27.478" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:41:27.477" starttime="20160122 15:41:27.455"></status>
</kw>
<msg timestamp="20160122 15:41:27.483" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:41:27.481" starttime="20160122 15:41:27.307"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:27.501" starttime="20160122 15:41:27.499"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:27.503" starttime="20160122 15:41:27.502"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:27.506" starttime="20160122 15:41:27.504"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160122 15:41:27.519" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160122 15:41:27.519" starttime="20160122 15:41:27.513"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:27.520" starttime="20160122 15:41:27.511"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:27.521" starttime="20160122 15:41:27.507"></status>
</kw>
<status status="PASS" endtime="20160122 15:41:27.522" starttime="20160122 15:41:27.486"></status>
</kw>
<msg timestamp="20160122 15:41:27.524" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20160122 15:41:27.523" starttime="20160122 15:41:22.025"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20160122 15:41:27.527" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 15:41:27.528" starttime="20160122 15:41:27.526"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:41:27.530" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20160122 15:41:27.531" starttime="20160122 15:41:27.529"></status>
</kw>
<kw type="kw" name="${calling_int} = BuiltIn.Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<msg timestamp="20160122 15:41:27.534" level="INFO">Argument types are:
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160122 15:41:27.535" level="INFO">${calling_int} = 642041010000</msg>
<status status="PASS" endtime="20160122 15:41:27.535" starttime="20160122 15:41:27.532"></status>
</kw>
<kw type="kw" name="${called_party} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${calling_int}+1</arg>
</arguments>
<msg timestamp="20160122 15:41:27.540" level="INFO">${called_party} = 642041010001</msg>
<status status="PASS" endtime="20160122 15:41:27.540" starttime="20160122 15:41:27.536"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC 1s *******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:27.543" starttime="20160122 15:41:27.541"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the MOC call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:41:27.545" level="INFO">Running the MOC call...</msg>
<status status="PASS" endtime="20160122 15:41:27.546" starttime="20160122 15:41:27.544"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC 136s">
<doc>Runs a standard MOC 136s session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${called_party}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc136s</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20160122 15:41:27.577" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv</msg>
<status status="PASS" endtime="20160122 15:41:27.577" starttime="20160122 15:41:27.575"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20160122 15:41:27.580" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv</msg>
<status status="PASS" endtime="20160122 15:41:27.580" starttime="20160122 15:41:27.578"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20160122 15:41:27.584" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini</msg>
<status status="PASS" endtime="20160122 15:41:27.583" starttime="20160122 15:41:27.581"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20160122 15:41:27.587" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc136s.cgs</msg>
<status status="PASS" endtime="20160122 15:41:27.586" starttime="20160122 15:41:27.585"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:27.589" starttime="20160122 15:41:27.588"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20160122 15:41:27.593" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:41:27.594" starttime="20160122 15:41:27.590"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:27.596" starttime="20160122 15:41:27.595"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20160122 15:41:27.600" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:41:27.600" starttime="20160122 15:41:27.597"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20160122 15:41:27.604" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:41:27.605" starttime="20160122 15:41:27.601"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:27.607" starttime="20160122 15:41:27.606"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20160122 15:41:27.611" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:41:27.612" starttime="20160122 15:41:27.608"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20160122 15:41:27.616" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:41:27.617" starttime="20160122 15:41:27.613"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:41:27.619" starttime="20160122 15:41:27.618"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20160122 15:41:27.630" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc136s.cgs /opt/robot/robotworkspace/external_tests/CG_unified_workspace -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc136s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20160122 15:43:48.018" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160122 15:43:48.009" starttime="20160122 15:41:27.620"></status>
</kw>
<msg timestamp="20160122 15:43:48.031" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160122 15:43:48.029" starttime="20160122 15:41:27.562"></status>
</kw>
<msg timestamp="20160122 15:43:48.036" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20160122 15:43:48.034" starttime="20160122 15:41:27.548"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:43:48.043" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20160122 15:43:48.045" starttime="20160122 15:43:48.039"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.052" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 15:43:48.055" starttime="20160122 15:43:48.047"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.060" starttime="20160122 15:43:48.057"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.120" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:43:48.122" starttime="20160122 15:43:48.115"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:48.124" starttime="20160122 15:43:48.110"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.135" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:43:48.136" starttime="20160122 15:43:48.130"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:48.138" starttime="20160122 15:43:48.127"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.149" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:43:48.150" starttime="20160122 15:43:48.144"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:48.152" starttime="20160122 15:43:48.140"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:48.154" starttime="20160122 15:43:48.094"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.162" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160122 15:43:48.163" starttime="20160122 15:43:48.156"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.169" starttime="20160122 15:43:48.165"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.175" starttime="20160122 15:43:48.171"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.181" starttime="20160122 15:43:48.177"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.186" starttime="20160122 15:43:48.183"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.191" starttime="20160122 15:43:48.188"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.197" starttime="20160122 15:43:48.194"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160122 15:43:48.206" level="INFO">Running with the following project properties set: [u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=100000000', u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=642041010000']</msg>
<msg timestamp="20160122 15:43:48.481" level="INFO">15:43:48,477 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
15:43:48,477 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
15:43:48,478 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=2418307
15:43:48,478 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=530052041010000
15:43:48,478 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
15:43:48,479 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001
15:43:48,479 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID
15:43:48,480 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20160122 15:43:48.482" starttime="20160122 15:43:48.203"></status>
</kw>
<msg timestamp="20160122 15:43:48.483" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:43:48.484" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160122 15:43:48.482" starttime="20160122 15:43:48.200"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:43:48.497" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20160122 15:43:48.496" starttime="20160122 15:43:48.494"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.500" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:43:48.499" starttime="20160122 15:43:48.498"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.503" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:43:48.502" starttime="20160122 15:43:48.501"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.508" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:43:48.512" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 15:43:48.513" starttime="20160122 15:43:48.506"></status>
</kw>
<msg timestamp="20160122 15:43:48.514" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:43:48.515" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,477 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:43:48.514" starttime="20160122 15:43:48.504"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.523" starttime="20160122 15:43:48.521"></status>
</kw>
<msg timestamp="20160122 15:43:48.524" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,477 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:43:48.524" starttime="20160122 15:43:48.516"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.531" starttime="20160122 15:43:48.530"></status>
</kw>
<msg timestamp="20160122 15:43:48.533" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,477 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:43:48.532" starttime="20160122 15:43:48.525"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.541" starttime="20160122 15:43:48.538"></status>
</kw>
<msg timestamp="20160122 15:43:48.542" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:43:48.541" starttime="20160122 15:43:48.534"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.552" starttime="20160122 15:43:48.550"></status>
</kw>
<msg timestamp="20160122 15:43:48.553" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:43:48.553" starttime="20160122 15:43:48.543"></status>
</kw>
<msg timestamp="20160122 15:43:48.555" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:43:48.554" starttime="20160122 15:43:48.486"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:43:48.567" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20160122 15:43:48.567" starttime="20160122 15:43:48.565"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.570" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:43:48.570" starttime="20160122 15:43:48.568"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.574" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:43:48.573" starttime="20160122 15:43:48.571"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.579" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:43:48.583" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 15:43:48.584" starttime="20160122 15:43:48.577"></status>
</kw>
<msg timestamp="20160122 15:43:48.585" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:43:48.586" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,477 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160122 15:43:48.585" starttime="20160122 15:43:48.575"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.593" starttime="20160122 15:43:48.592"></status>
</kw>
<msg timestamp="20160122 15:43:48.595" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,477 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160122 15:43:48.594" starttime="20160122 15:43:48.587"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.602" starttime="20160122 15:43:48.600"></status>
</kw>
<msg timestamp="20160122 15:43:48.603" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,477 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20160122 15:43:48.603" starttime="20160122 15:43:48.596"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.611" starttime="20160122 15:43:48.609"></status>
</kw>
<msg timestamp="20160122 15:43:48.612" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160122 15:43:48.612" starttime="20160122 15:43:48.604"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.623" starttime="20160122 15:43:48.621"></status>
</kw>
<msg timestamp="20160122 15:43:48.624" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160122 15:43:48.624" starttime="20160122 15:43:48.613"></status>
</kw>
<msg timestamp="20160122 15:43:48.626" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20160122 15:43:48.625" starttime="20160122 15:43:48.557"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:43:48.638" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20160122 15:43:48.638" starttime="20160122 15:43:48.635"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.642" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:43:48.641" starttime="20160122 15:43:48.639"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.645" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:43:48.645" starttime="20160122 15:43:48.643"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.651" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:43:48.655" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 15:43:48.655" starttime="20160122 15:43:48.648"></status>
</kw>
<msg timestamp="20160122 15:43:48.657" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:43:48.657" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,478 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=530052041010000</msg>
<status status="PASS" endtime="20160122 15:43:48.656" starttime="20160122 15:43:48.646"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.665" starttime="20160122 15:43:48.663"></status>
</kw>
<msg timestamp="20160122 15:43:48.666" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,478 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=530052041010000</msg>
<status status="PASS" endtime="20160122 15:43:48.665" starttime="20160122 15:43:48.658"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.673" starttime="20160122 15:43:48.671"></status>
</kw>
<msg timestamp="20160122 15:43:48.675" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,478 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=530052041010000</msg>
<status status="PASS" endtime="20160122 15:43:48.674" starttime="20160122 15:43:48.667"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.682" starttime="20160122 15:43:48.680"></status>
</kw>
<msg timestamp="20160122 15:43:48.684" level="INFO">${resultCode} = 530052041010000</msg>
<status status="PASS" endtime="20160122 15:43:48.683" starttime="20160122 15:43:48.676"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.694" starttime="20160122 15:43:48.692"></status>
</kw>
<msg timestamp="20160122 15:43:48.695" level="INFO">${resultCode} = 530052041010000</msg>
<status status="PASS" endtime="20160122 15:43:48.694" starttime="20160122 15:43:48.685"></status>
</kw>
<msg timestamp="20160122 15:43:48.697" level="INFO">${imsi} = 530052041010000</msg>
<status status="PASS" endtime="20160122 15:43:48.696" starttime="20160122 15:43:48.628"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:43:48.710" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20160122 15:43:48.709" starttime="20160122 15:43:48.707"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.713" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:43:48.713" starttime="20160122 15:43:48.711"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.716" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:43:48.716" starttime="20160122 15:43:48.714"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.722" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:43:48.726" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 15:43:48.726" starttime="20160122 15:43:48.719"></status>
</kw>
<msg timestamp="20160122 15:43:48.728" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:43:48.728" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,478 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=2418307</msg>
<status status="PASS" endtime="20160122 15:43:48.727" starttime="20160122 15:43:48.717"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.735" starttime="20160122 15:43:48.734"></status>
</kw>
<msg timestamp="20160122 15:43:48.737" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,478 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=2418307</msg>
<status status="PASS" endtime="20160122 15:43:48.736" starttime="20160122 15:43:48.729"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.744" starttime="20160122 15:43:48.742"></status>
</kw>
<msg timestamp="20160122 15:43:48.745" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,478 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=2418307</msg>
<status status="PASS" endtime="20160122 15:43:48.745" starttime="20160122 15:43:48.738"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.753" starttime="20160122 15:43:48.751"></status>
</kw>
<msg timestamp="20160122 15:43:48.755" level="INFO">${resultCode} = 2418307</msg>
<status status="PASS" endtime="20160122 15:43:48.754" starttime="20160122 15:43:48.746"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.765" starttime="20160122 15:43:48.764"></status>
</kw>
<msg timestamp="20160122 15:43:48.767" level="INFO">${resultCode} = 2418307</msg>
<status status="PASS" endtime="20160122 15:43:48.766" starttime="20160122 15:43:48.756"></status>
</kw>
<msg timestamp="20160122 15:43:48.768" level="INFO">${id} = 2418307</msg>
<status status="PASS" endtime="20160122 15:43:48.768" starttime="20160122 15:43:48.699"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:43:48.780" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20160122 15:43:48.780" starttime="20160122 15:43:48.778"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.784" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:43:48.783" starttime="20160122 15:43:48.781"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.787" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:43:48.786" starttime="20160122 15:43:48.785"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.793" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:43:48.797" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 15:43:48.797" starttime="20160122 15:43:48.790"></status>
</kw>
<msg timestamp="20160122 15:43:48.799" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:43:48.799" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,478 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160122 15:43:48.798" starttime="20160122 15:43:48.788"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.807" starttime="20160122 15:43:48.805"></status>
</kw>
<msg timestamp="20160122 15:43:48.809" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,478 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160122 15:43:48.808" starttime="20160122 15:43:48.800"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.817" starttime="20160122 15:43:48.815"></status>
</kw>
<msg timestamp="20160122 15:43:48.818" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,478 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20160122 15:43:48.817" starttime="20160122 15:43:48.810"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.827" starttime="20160122 15:43:48.824"></status>
</kw>
<msg timestamp="20160122 15:43:48.828" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160122 15:43:48.828" starttime="20160122 15:43:48.819"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.838" starttime="20160122 15:43:48.837"></status>
</kw>
<msg timestamp="20160122 15:43:48.839" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20160122 15:43:48.839" starttime="20160122 15:43:48.829"></status>
</kw>
<msg timestamp="20160122 15:43:48.841" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20160122 15:43:48.841" starttime="20160122 15:43:48.770"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:43:48.853" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20160122 15:43:48.852" starttime="20160122 15:43:48.850"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.856" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:43:48.856" starttime="20160122 15:43:48.854"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.859" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:43:48.859" starttime="20160122 15:43:48.857"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.864" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:43:48.868" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 15:43:48.869" starttime="20160122 15:43:48.862"></status>
</kw>
<msg timestamp="20160122 15:43:48.870" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:43:48.871" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,479 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160122 15:43:48.870" starttime="20160122 15:43:48.860"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.878" starttime="20160122 15:43:48.877"></status>
</kw>
<msg timestamp="20160122 15:43:48.880" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,479 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160122 15:43:48.879" starttime="20160122 15:43:48.872"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.887" starttime="20160122 15:43:48.885"></status>
</kw>
<msg timestamp="20160122 15:43:48.888" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,479 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20160122 15:43:48.887" starttime="20160122 15:43:48.881"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.896" starttime="20160122 15:43:48.893"></status>
</kw>
<msg timestamp="20160122 15:43:48.897" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160122 15:43:48.896" starttime="20160122 15:43:48.889"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.907" starttime="20160122 15:43:48.905"></status>
</kw>
<msg timestamp="20160122 15:43:48.908" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20160122 15:43:48.908" starttime="20160122 15:43:48.898"></status>
</kw>
<msg timestamp="20160122 15:43:48.910" level="INFO">${tariffId} = 101001</msg>
<status status="PASS" endtime="20160122 15:43:48.910" starttime="20160122 15:43:48.843"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:43:48.923" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20160122 15:43:48.923" starttime="20160122 15:43:48.920"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.927" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:43:48.926" starttime="20160122 15:43:48.924"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.930" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:43:48.930" starttime="20160122 15:43:48.928"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:43:48.935" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:43:48.939" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20160122 15:43:48.939" starttime="20160122 15:43:48.933"></status>
</kw>
<msg timestamp="20160122 15:43:48.940" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:43:48.941" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,479 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160122 15:43:48.940" starttime="20160122 15:43:48.931"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.947" starttime="20160122 15:43:48.946"></status>
</kw>
<msg timestamp="20160122 15:43:48.948" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,479 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160122 15:43:48.948" starttime="20160122 15:43:48.942"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.954" starttime="20160122 15:43:48.953"></status>
</kw>
<msg timestamp="20160122 15:43:48.956" level="INFO">${return_log_entry} = 2016-01-22 15:43:48,479 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20160122 15:43:48.955" starttime="20160122 15:43:48.949"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.963" starttime="20160122 15:43:48.961"></status>
</kw>
<msg timestamp="20160122 15:43:48.965" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160122 15:43:48.964" starttime="20160122 15:43:48.957"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.973" starttime="20160122 15:43:48.972"></status>
</kw>
<msg timestamp="20160122 15:43:48.974" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20160122 15:43:48.974" starttime="20160122 15:43:48.965"></status>
</kw>
<msg timestamp="20160122 15:43:48.976" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160122 15:43:48.975" starttime="20160122 15:43:48.912"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.986" starttime="20160122 15:43:48.984"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.988" starttime="20160122 15:43:48.987"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:48.990" starttime="20160122 15:43:48.989"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160122 15:43:49.002" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160122 15:43:49.003" starttime="20160122 15:43:48.998"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:49.004" starttime="20160122 15:43:48.996"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:49.005" starttime="20160122 15:43:48.991"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:49.006" starttime="20160122 15:43:48.977"></status>
</kw>
<msg timestamp="20160122 15:43:49.011" level="INFO">${rc} = OK</msg>
<msg timestamp="20160122 15:43:49.012" level="INFO">${provId} = 1</msg>
<msg timestamp="20160122 15:43:49.012" level="INFO">${imsi} = 530052041010000</msg>
<msg timestamp="20160122 15:43:49.013" level="INFO">${id} = 2418307</msg>
<msg timestamp="20160122 15:43:49.013" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20160122 15:43:49.014" level="INFO">${tariffId} = 101001</msg>
<msg timestamp="20160122 15:43:49.014" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20160122 15:43:49.010" starttime="20160122 15:43:48.067"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.036" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:43:49.037" starttime="20160122 15:43:49.034"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:49.037" starttime="20160122 15:43:49.032"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.041" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:43:49.042" starttime="20160122 15:43:49.040"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:49.043" starttime="20160122 15:43:49.038"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.047" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160122 15:43:49.047" starttime="20160122 15:43:49.045"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:49.048" starttime="20160122 15:43:49.044"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:49.049" starttime="20160122 15:43:49.025"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.052" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160122 15:43:49.052" starttime="20160122 15:43:49.050"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.055" starttime="20160122 15:43:49.053"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.058" starttime="20160122 15:43:49.056"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.060" starttime="20160122 15:43:49.059"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.063" starttime="20160122 15:43:49.061"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.065" starttime="20160122 15:43:49.064"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.067" starttime="20160122 15:43:49.066"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160122 15:43:49.071" level="INFO">Running with the following project properties set: [u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=530052041010000', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=642041010000', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=100000000', u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=642041010000', u'crceHost=10.105.113.125', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=2418307']</msg>
<msg timestamp="20160122 15:43:49.244" level="INFO">15:43:49,240 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
15:43:49,241 INFO  [log] LowLevelOps.getMainAccount.output.accountId=2418308
15:43:49,241 INFO  [log] LowLevelOps.getMainAccount.output.balance=99940000
15:43:49,242 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
15:43:49,242 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20160122 15:43:49.244" starttime="20160122 15:43:49.069"></status>
</kw>
<msg timestamp="20160122 15:43:49.246" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:43:49.246" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160122 15:43:49.245" starttime="20160122 15:43:49.068"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:43:49.257" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20160122 15:43:49.256" starttime="20160122 15:43:49.253"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.260" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:43:49.259" starttime="20160122 15:43:49.258"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.262" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:43:49.262" starttime="20160122 15:43:49.261"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.267" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:43:49.270" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 15:43:49.270" starttime="20160122 15:43:49.265"></status>
</kw>
<msg timestamp="20160122 15:43:49.272" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:43:49.272" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,240 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:43:49.271" starttime="20160122 15:43:49.263"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.279" starttime="20160122 15:43:49.277"></status>
</kw>
<msg timestamp="20160122 15:43:49.280" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,240 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:43:49.279" starttime="20160122 15:43:49.273"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.286" starttime="20160122 15:43:49.285"></status>
</kw>
<msg timestamp="20160122 15:43:49.288" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,240 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20160122 15:43:49.287" starttime="20160122 15:43:49.281"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.294" starttime="20160122 15:43:49.293"></status>
</kw>
<msg timestamp="20160122 15:43:49.295" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:43:49.295" starttime="20160122 15:43:49.288"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.304" starttime="20160122 15:43:49.303"></status>
</kw>
<msg timestamp="20160122 15:43:49.305" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:43:49.305" starttime="20160122 15:43:49.296"></status>
</kw>
<msg timestamp="20160122 15:43:49.307" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160122 15:43:49.306" starttime="20160122 15:43:49.248"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:43:49.316" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20160122 15:43:49.316" starttime="20160122 15:43:49.314"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.319" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:43:49.318" starttime="20160122 15:43:49.317"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.321" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:43:49.321" starttime="20160122 15:43:49.320"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.326" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:43:49.329" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 15:43:49.329" starttime="20160122 15:43:49.324"></status>
</kw>
<msg timestamp="20160122 15:43:49.330" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:43:49.331" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,241 INFO  [log] LowLevelOps.getMainAccount.output.accountId=2418308</msg>
<status status="PASS" endtime="20160122 15:43:49.330" starttime="20160122 15:43:49.322"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.337" starttime="20160122 15:43:49.336"></status>
</kw>
<msg timestamp="20160122 15:43:49.338" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,241 INFO  [log] LowLevelOps.getMainAccount.output.accountId=2418308</msg>
<status status="PASS" endtime="20160122 15:43:49.338" starttime="20160122 15:43:49.332"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.345" starttime="20160122 15:43:49.344"></status>
</kw>
<msg timestamp="20160122 15:43:49.346" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,241 INFO  [log] LowLevelOps.getMainAccount.output.accountId=2418308</msg>
<status status="PASS" endtime="20160122 15:43:49.346" starttime="20160122 15:43:49.339"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.353" starttime="20160122 15:43:49.352"></status>
</kw>
<msg timestamp="20160122 15:43:49.354" level="INFO">${resultCode} = 2418308</msg>
<status status="PASS" endtime="20160122 15:43:49.354" starttime="20160122 15:43:49.347"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.363" starttime="20160122 15:43:49.361"></status>
</kw>
<msg timestamp="20160122 15:43:49.364" level="INFO">${resultCode} = 2418308</msg>
<status status="PASS" endtime="20160122 15:43:49.363" starttime="20160122 15:43:49.355"></status>
</kw>
<msg timestamp="20160122 15:43:49.365" level="INFO">${accountId} = 2418308</msg>
<status status="PASS" endtime="20160122 15:43:49.365" starttime="20160122 15:43:49.308"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:43:49.375" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20160122 15:43:49.374" starttime="20160122 15:43:49.373"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.378" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:43:49.377" starttime="20160122 15:43:49.376"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.380" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:43:49.380" starttime="20160122 15:43:49.378"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.384" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:43:49.387" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 15:43:49.388" starttime="20160122 15:43:49.383"></status>
</kw>
<msg timestamp="20160122 15:43:49.389" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:43:49.389" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,241 INFO  [log] LowLevelOps.getMainAccount.output.balance=99940000</msg>
<status status="PASS" endtime="20160122 15:43:49.388" starttime="20160122 15:43:49.381"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.395" starttime="20160122 15:43:49.394"></status>
</kw>
<msg timestamp="20160122 15:43:49.396" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,241 INFO  [log] LowLevelOps.getMainAccount.output.balance=99940000</msg>
<status status="PASS" endtime="20160122 15:43:49.396" starttime="20160122 15:43:49.390"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.402" starttime="20160122 15:43:49.400"></status>
</kw>
<msg timestamp="20160122 15:43:49.403" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,241 INFO  [log] LowLevelOps.getMainAccount.output.balance=99940000</msg>
<status status="PASS" endtime="20160122 15:43:49.402" starttime="20160122 15:43:49.397"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.409" starttime="20160122 15:43:49.407"></status>
</kw>
<msg timestamp="20160122 15:43:49.410" level="INFO">${resultCode} = 99940000</msg>
<status status="PASS" endtime="20160122 15:43:49.410" starttime="20160122 15:43:49.404"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.418" starttime="20160122 15:43:49.416"></status>
</kw>
<msg timestamp="20160122 15:43:49.419" level="INFO">${resultCode} = 99940000</msg>
<status status="PASS" endtime="20160122 15:43:49.418" starttime="20160122 15:43:49.411"></status>
</kw>
<msg timestamp="20160122 15:43:49.420" level="INFO">${balance} = 99940000</msg>
<status status="PASS" endtime="20160122 15:43:49.420" starttime="20160122 15:43:49.367"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:43:49.429" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20160122 15:43:49.429" starttime="20160122 15:43:49.427"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.431" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:43:49.431" starttime="20160122 15:43:49.430"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.434" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:43:49.434" starttime="20160122 15:43:49.432"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.438" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:43:49.441" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 15:43:49.441" starttime="20160122 15:43:49.436"></status>
</kw>
<msg timestamp="20160122 15:43:49.442" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:43:49.443" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,242 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160122 15:43:49.442" starttime="20160122 15:43:49.435"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.448" starttime="20160122 15:43:49.447"></status>
</kw>
<msg timestamp="20160122 15:43:49.449" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,242 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160122 15:43:49.449" starttime="20160122 15:43:49.443"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.455" starttime="20160122 15:43:49.454"></status>
</kw>
<msg timestamp="20160122 15:43:49.456" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,242 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20160122 15:43:49.456" starttime="20160122 15:43:49.450"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.493" starttime="20160122 15:43:49.490"></status>
</kw>
<msg timestamp="20160122 15:43:49.494" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160122 15:43:49.494" starttime="20160122 15:43:49.457"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.504" starttime="20160122 15:43:49.502"></status>
</kw>
<msg timestamp="20160122 15:43:49.505" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20160122 15:43:49.504" starttime="20160122 15:43:49.495"></status>
</kw>
<msg timestamp="20160122 15:43:49.506" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20160122 15:43:49.506" starttime="20160122 15:43:49.422"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160122 15:43:49.516" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20160122 15:43:49.516" starttime="20160122 15:43:49.514"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.519" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160122 15:43:49.519" starttime="20160122 15:43:49.517"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.522" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160122 15:43:49.521" starttime="20160122 15:43:49.520"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.525" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160122 15:43:49.528" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20160122 15:43:49.529" starttime="20160122 15:43:49.524"></status>
</kw>
<msg timestamp="20160122 15:43:49.530" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160122 15:43:49.530" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,242 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20160122 15:43:49.529" starttime="20160122 15:43:49.522"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.536" starttime="20160122 15:43:49.535"></status>
</kw>
<msg timestamp="20160122 15:43:49.537" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,242 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20160122 15:43:49.537" starttime="20160122 15:43:49.531"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.543" starttime="20160122 15:43:49.541"></status>
</kw>
<msg timestamp="20160122 15:43:49.544" level="INFO">${return_log_entry} = 2016-01-22 15:43:49,242 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=1</msg>
<status status="PASS" endtime="20160122 15:43:49.543" starttime="20160122 15:43:49.538"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.550" starttime="20160122 15:43:49.549"></status>
</kw>
<msg timestamp="20160122 15:43:49.551" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160122 15:43:49.551" starttime="20160122 15:43:49.545"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.559" starttime="20160122 15:43:49.557"></status>
</kw>
<msg timestamp="20160122 15:43:49.560" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20160122 15:43:49.559" starttime="20160122 15:43:49.552"></status>
</kw>
<msg timestamp="20160122 15:43:49.561" level="INFO">${currencyId} = 1</msg>
<status status="PASS" endtime="20160122 15:43:49.561" starttime="20160122 15:43:49.509"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.568" starttime="20160122 15:43:49.566"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.569" starttime="20160122 15:43:49.568"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160122 15:43:49.571" starttime="20160122 15:43:49.570"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160122 15:43:49.580" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PrePaid/MOC/OnNet/MOC_PREPAID_ONNET-LongDuration136s/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160122 15:43:49.581" starttime="20160122 15:43:49.577"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:49.582" starttime="20160122 15:43:49.576"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:49.582" starttime="20160122 15:43:49.572"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:49.583" starttime="20160122 15:43:49.562"></status>
</kw>
<msg timestamp="20160122 15:43:49.585" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20160122 15:43:49.585" level="INFO">${accId} = 2418308</msg>
<msg timestamp="20160122 15:43:49.586" level="INFO">${bal} = 99940000</msg>
<msg timestamp="20160122 15:43:49.586" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20160122 15:43:49.586" level="INFO">${curr} = 1</msg>
<status status="PASS" endtime="20160122 15:43:49.584" starttime="20160122 15:43:49.017"></status>
</kw>
<kw type="kw" name="${target_bal} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${INITIAL_BALANCE}-3*${TESTSUBCRIBERS DEFAULT SLICE COSTS}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.591" level="INFO">${target_bal} = 99940000</msg>
<status status="PASS" endtime="20160122 15:43:49.591" starttime="20160122 15:43:49.587"></status>
</kw>
<kw type="kw" name="${target_bal_mex} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${INITIAL_BALANCE}-6*${TESTSUBCRIBERS DEFAULT SLICE COSTS}</arg>
</arguments>
<msg timestamp="20160122 15:43:49.595" level="INFO">${target_bal_mex} = 99880000</msg>
<status status="PASS" endtime="20160122 15:43:49.594" starttime="20160122 15:43:49.592"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='VIRGIN_COLUMBIA'</arg>
<arg>Should Be Equal As Numbers</arg>
<arg>${bal}</arg>
<arg>99920080</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
<arg>ELSE IF</arg>
<arg>'${SUT PROJECT TAG PREFIX}'=='MVNA_MEX'</arg>
<arg>Should Be Equal As Numbers</arg>
<arg>${bal}</arg>
<arg>${target_bal_mex}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Numbers</arg>
<arg>${target_bal}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${target_bal}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<msg timestamp="20160122 15:43:49.604" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160122 15:43:49.604" starttime="20160122 15:43:49.602"></status>
</kw>
<status status="PASS" endtime="20160122 15:43:49.605" starttime="20160122 15:43:49.596"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check OK!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160122 15:43:49.607" level="INFO">Account balance check OK!</msg>
<status status="PASS" endtime="20160122 15:43:49.608" starttime="20160122 15:43:49.606"></status>
</kw>
<doc>Test will make a MOC call, duration 136s.

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>SMARTSPACE_supported</tag>
<tag>TNZ_supported</tag>
</tags>
<status status="PASS" critical="yes" endtime="20160122 15:43:49.609" starttime="20160122 15:41:22.009"></status>
</test>
<doc>Testing the prepaid MOC call, duration is 136s - longer than one slice (more than 60s)

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20160122 15:43:49.613" starttime="20160122 15:41:13.668"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" info="" doc="" combined="" fail="0" links="">matko.sanseovic</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">MOC_only</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">SMARTSPACE_supported</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">TNZ_supported</stat>
</tag>
<suite>
<stat pass="1" id="s1" fail="0" name="MOC PREPAID ONNET-LongDuration136s-robot-suite">MOC PREPAID ONNET-LongDuration136s-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
