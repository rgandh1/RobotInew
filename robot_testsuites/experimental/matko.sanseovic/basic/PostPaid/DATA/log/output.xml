<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20151202 15:29:09.924">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/postpaid-data-regression-suite.txt" id="s1" name="Postpaid-Data-Regression-Suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20151202 15:29:12.359" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20151202 15:29:12.362" level="INFO">${date} = Wed Dec  2 15:29:12 CET 2015</msg>
<status status="PASS" endtime="20151202 15:29:12.361" starttime="20151202 15:29:12.344"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:12.368" level="INFO">Date and time: Wed Dec  2 15:29:12 CET 2015</msg>
<status status="PASS" endtime="20151202 15:29:12.370" starttime="20151202 15:29:12.365"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:12.375" level="INFO">Target IN machine: 10.105.125.135</msg>
<status status="PASS" endtime="20151202 15:29:12.376" starttime="20151202 15:29:12.372"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:12.462" starttime="20151202 15:29:12.460"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:12.726" starttime="20151202 15:29:12.475"></status>
</kw>
<msg timestamp="20151202 15:29:12.730" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20151202 15:29:12.729" starttime="20151202 15:29:12.464"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151202 15:29:12.753" level="INFO">Logging into '10.105.125.135:22' as 'qa_automation'.</msg>
<msg timestamp="20151202 15:29:12.959" level="INFO">Read output: Last login: Wed Dec  2 14:25:48 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb25 ~]$</msg>
<status status="PASS" endtime="20151202 15:29:12.962" starttime="20151202 15:29:12.747"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:12.964" starttime="20151202 15:29:12.734"></status>
</kw>
<msg timestamp="20151202 15:29:12.970" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20151202 15:29:12.968" starttime="20151202 15:29:12.443"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151202 15:29:12.984" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151202 15:29:12.983" starttime="20151202 15:29:12.973"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151202 15:29:12.992" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20151202 15:29:13.286" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151202 15:29:13.292" level="INFO">${output} = I-New MVNA MTel - Core - Service 1.0.0 2015.11.12-14:31:57 is running PID: 12768 </msg>
<status status="PASS" endtime="20151202 15:29:13.289" starttime="20151202 15:29:12.987"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:13.308" starttime="20151202 15:29:13.301"></status>
</kw>
<msg timestamp="20151202 15:29:13.312" level="INFO">${status} = PASS</msg>
<msg timestamp="20151202 15:29:13.313" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151202 15:29:13.310" starttime="20151202 15:29:13.295"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:13.332" starttime="20151202 15:29:13.328"></status>
</kw>
<msg timestamp="20151202 15:29:13.335" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:13.334" starttime="20151202 15:29:13.316"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20151202 15:29:13.345" level="INFO">${version_r} =  1.0.0 2015.11.12-14:31:57 is running PID: 12768 </msg>
<status status="PASS" endtime="20151202 15:29:13.343" starttime="20151202 15:29:13.338"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151202 15:29:13.354" level="INFO">${version} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151202 15:29:13.353" starttime="20151202 15:29:13.348"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:13.362" starttime="20151202 15:29:13.358"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:13.396" starttime="20151202 15:29:13.391"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151202 15:29:13.407" starttime="20151202 15:29:13.399"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:13.410" starttime="20151202 15:29:13.366"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:13.427" starttime="20151202 15:29:13.422"></status>
</kw>
<msg timestamp="20151202 15:29:13.430" level="INFO">${ver} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151202 15:29:13.429" starttime="20151202 15:29:13.413"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:13.438" starttime="20151202 15:29:13.433"></status>
</kw>
<msg timestamp="20151202 15:29:13.444" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20151202 15:29:13.445" level="INFO">${in_version} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151202 15:29:13.441" starttime="20151202 15:29:12.403"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:13.540" starttime="20151202 15:29:13.538"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:13.593" starttime="20151202 15:29:13.546"></status>
</kw>
<msg timestamp="20151202 15:29:13.596" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20151202 15:29:13.595" starttime="20151202 15:29:13.541"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151202 15:29:13.617" level="INFO">Logging into '10.105.125.171:22' as 'qa_automation'.</msg>
<msg timestamp="20151202 15:29:13.895" level="INFO">Read output: Last login: Wed Dec  2 14:25:49 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb25 ~]$</msg>
<status status="PASS" endtime="20151202 15:29:13.897" starttime="20151202 15:29:13.611"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:13.900" starttime="20151202 15:29:13.599"></status>
</kw>
<msg timestamp="20151202 15:29:13.904" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20151202 15:29:13.903" starttime="20151202 15:29:13.526"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151202 15:29:13.918" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151202 15:29:13.916" starttime="20151202 15:29:13.907"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151202 15:29:13.925" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20151202 15:29:14.105" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151202 15:29:14.110" level="INFO">${output} = I-New UMS MVNO - XDR 6.2.0 is running PID: 5581 </msg>
<status status="PASS" endtime="20151202 15:29:14.107" starttime="20151202 15:29:13.921"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:14.125" starttime="20151202 15:29:14.119"></status>
</kw>
<msg timestamp="20151202 15:29:14.129" level="INFO">${status} = PASS</msg>
<msg timestamp="20151202 15:29:14.130" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151202 15:29:14.127" starttime="20151202 15:29:14.113"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:14.149" starttime="20151202 15:29:14.145"></status>
</kw>
<msg timestamp="20151202 15:29:14.152" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:14.151" starttime="20151202 15:29:14.133"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20151202 15:29:14.161" level="INFO">${version_r} = I-New UMS MVNO - XDR 6.2.0 is running PID: 5581 </msg>
<status status="PASS" endtime="20151202 15:29:14.160" starttime="20151202 15:29:14.155"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151202 15:29:14.170" level="INFO">${version} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151202 15:29:14.169" starttime="20151202 15:29:14.164"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:14.176" starttime="20151202 15:29:14.173"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:14.206" starttime="20151202 15:29:14.202"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151202 15:29:14.215" starttime="20151202 15:29:14.209"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:14.218" starttime="20151202 15:29:14.180"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:14.237" starttime="20151202 15:29:14.233"></status>
</kw>
<msg timestamp="20151202 15:29:14.240" level="INFO">${ver} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151202 15:29:14.239" starttime="20151202 15:29:14.221"></status>
</kw>
<msg timestamp="20151202 15:29:14.246" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20151202 15:29:14.248" level="INFO">${xdr_version} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151202 15:29:14.244" starttime="20151202 15:29:13.483"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:14.702" starttime="20151202 15:29:14.372"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:14.782" starttime="20151202 15:29:14.724"></status>
</kw>
<msg timestamp="20151202 15:29:14.785" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20151202 15:29:14.784" starttime="20151202 15:29:14.709"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151202 15:29:14.805" level="INFO">Logging into '10.105.125.159:22' as 'qa_automation'.</msg>
<msg timestamp="20151202 15:29:15.023" level="INFO">Read output: Last login: Wed Dec  2 14:25:50 2015 from 10.105.80.196
[1m[qa_automation@ocs01.tb25 ~]$</msg>
<status status="PASS" endtime="20151202 15:29:15.026" starttime="20151202 15:29:14.800"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:15.029" starttime="20151202 15:29:14.788"></status>
</kw>
<msg timestamp="20151202 15:29:15.036" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20151202 15:29:15.033" starttime="20151202 15:29:14.347"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151202 15:29:15.049" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151202 15:29:15.048" starttime="20151202 15:29:15.039"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151202 15:29:15.057" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20151202 15:29:15.232" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151202 15:29:15.235" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.2.0.30830
Negret Rating &amp; Charging Engine 6.2.0.30830 is running (PID:28716, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20151202 15:29:15.234" starttime="20151202 15:29:15.052"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.250" starttime="20151202 15:29:15.244"></status>
</kw>
<msg timestamp="20151202 15:29:15.254" level="INFO">${status} = PASS</msg>
<msg timestamp="20151202 15:29:15.255" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151202 15:29:15.252" starttime="20151202 15:29:15.239"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.273" starttime="20151202 15:29:15.270"></status>
</kw>
<msg timestamp="20151202 15:29:15.277" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:15.275" starttime="20151202 15:29:15.258"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20151202 15:29:15.286" level="INFO">${version_r} =  6.2.0.30830 is running (PID:28716, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20151202 15:29:15.284" starttime="20151202 15:29:15.280"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151202 15:29:15.294" level="INFO">${version} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151202 15:29:15.293" starttime="20151202 15:29:15.289"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.301" starttime="20151202 15:29:15.297"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.330" starttime="20151202 15:29:15.326"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.339" starttime="20151202 15:29:15.333"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:15.341" starttime="20151202 15:29:15.304"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.358" starttime="20151202 15:29:15.354"></status>
</kw>
<msg timestamp="20151202 15:29:15.361" level="INFO">${ver} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151202 15:29:15.360" starttime="20151202 15:29:15.344"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.368" starttime="20151202 15:29:15.364"></status>
</kw>
<msg timestamp="20151202 15:29:15.375" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20151202 15:29:15.376" level="INFO">${crce_version} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151202 15:29:15.372" starttime="20151202 15:29:14.286"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.435" starttime="20151202 15:29:15.433"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.521" starttime="20151202 15:29:15.441"></status>
</kw>
<msg timestamp="20151202 15:29:15.525" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20151202 15:29:15.523" starttime="20151202 15:29:15.436"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151202 15:29:15.545" level="INFO">Logging into '10.105.125.159:22' as 'qa_automation'.</msg>
<msg timestamp="20151202 15:29:15.691" level="INFO">Read output: Last login: Wed Dec  2 14:29:14 2015 from 10.105.80.196
[1m[qa_automation@ocs01.tb25 ~]$</msg>
<status status="PASS" endtime="20151202 15:29:15.693" starttime="20151202 15:29:15.540"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:15.695" starttime="20151202 15:29:15.528"></status>
</kw>
<msg timestamp="20151202 15:29:15.699" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20151202 15:29:15.698" starttime="20151202 15:29:15.422"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151202 15:29:15.713" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151202 15:29:15.711" starttime="20151202 15:29:15.702"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151202 15:29:15.720" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20151202 15:29:15.800" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151202 15:29:15.803" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp is running (PID: 6110)</msg>
<status status="PASS" endtime="20151202 15:29:15.802" starttime="20151202 15:29:15.715"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.818" starttime="20151202 15:29:15.812"></status>
</kw>
<msg timestamp="20151202 15:29:15.821" level="INFO">${status} = PASS</msg>
<msg timestamp="20151202 15:29:15.823" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151202 15:29:15.820" starttime="20151202 15:29:15.806"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.840" starttime="20151202 15:29:15.836"></status>
</kw>
<msg timestamp="20151202 15:29:15.843" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:15.842" starttime="20151202 15:29:15.826"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20151202 15:29:15.852" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp is running (PID: 6110)</msg>
<status status="PASS" endtime="20151202 15:29:15.851" starttime="20151202 15:29:15.846"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151202 15:29:15.860" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151202 15:29:15.859" starttime="20151202 15:29:15.855"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.867" starttime="20151202 15:29:15.863"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.895" starttime="20151202 15:29:15.890"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.904" starttime="20151202 15:29:15.897"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:15.906" starttime="20151202 15:29:15.870"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.923" starttime="20151202 15:29:15.919"></status>
</kw>
<msg timestamp="20151202 15:29:15.926" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151202 15:29:15.925" starttime="20151202 15:29:15.909"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:15.934" starttime="20151202 15:29:15.929"></status>
</kw>
<msg timestamp="20151202 15:29:15.938" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20151202 15:29:15.939" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151202 15:29:15.937" starttime="20151202 15:29:15.396"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:15.947" level="INFO">IN state= OK version= 1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151202 15:29:15.949" starttime="20151202 15:29:15.942"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:15.957" level="INFO">XDR state= OK version=I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151202 15:29:15.959" starttime="20151202 15:29:15.952"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:15.967" level="INFO">CRCE state= OK version= 6.2.0.30830 </msg>
<status status="PASS" endtime="20151202 15:29:15.969" starttime="20151202 15:29:15.961"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:15.976" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151202 15:29:15.978" starttime="20151202 15:29:15.971"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20151202 15:29:15.986" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 15:29:15.987" starttime="20151202 15:29:15.981"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20151202 15:29:15.994" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 15:29:15.996" starttime="20151202 15:29:15.990"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20151202 15:29:16.004" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 15:29:16.005" starttime="20151202 15:29:15.999"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20151202 15:29:16.014" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 15:29:16.016" starttime="20151202 15:29:16.009"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.029" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes</msg>
<status status="PASS" endtime="20151202 15:29:16.028" starttime="20151202 15:29:16.018"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.038" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes</msg>
<status status="PASS" endtime="20151202 15:29:16.039" starttime="20151202 15:29:16.032"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:16.041" starttime="20151202 15:29:12.329"></status>
</kw>
<test id="s1-t1" name="Single Data Session 767b">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:16.074" starttime="20151202 15:29:16.071"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<msg timestamp="20151202 15:29:16.082" level="INFO">${INITIAL_BALANCE} = 0</msg>
<status status="PASS" endtime="20151202 15:29:16.081" starttime="20151202 15:29:16.077"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>1</arg>
<arg>${TESTSUBCRIBERS PP IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
<arg>POSTPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS PP DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.121" level="INFO">msg=crce_host=10.105.125.159</msg>
<status status="PASS" endtime="20151202 15:29:16.123" starttime="20151202 15:29:16.117"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.129" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20151202 15:29:16.130" starttime="20151202 15:29:16.125"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.136" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20151202 15:29:16.136" starttime="20151202 15:29:16.133"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.139" level="INFO">msg=amount=1</msg>
<status status="PASS" endtime="20151202 15:29:16.140" starttime="20151202 15:29:16.137"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.143" level="INFO">msg=imsiRangeStart=232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:16.143" starttime="20151202 15:29:16.141"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.146" level="INFO">msg=msisdnRangeStart=43667725500</msg>
<status status="PASS" endtime="20151202 15:29:16.147" starttime="20151202 15:29:16.144"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.150" level="INFO">msg=type=POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:16.150" starttime="20151202 15:29:16.148"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.153" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20151202 15:29:16.154" starttime="20151202 15:29:16.152"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.157" level="INFO">msg=tariffId=101004</msg>
<status status="PASS" endtime="20151202 15:29:16.158" starttime="20151202 15:29:16.155"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.160" level="INFO">msg=balance=0</msg>
<status status="PASS" endtime="20151202 15:29:16.161" starttime="20151202 15:29:16.159"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.177" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:16.177" starttime="20151202 15:29:16.173"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:16.178" starttime="20151202 15:29:16.171"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.183" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:16.184" starttime="20151202 15:29:16.181"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:16.185" starttime="20151202 15:29:16.179"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.190" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:16.191" starttime="20151202 15:29:16.188"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:16.192" starttime="20151202 15:29:16.186"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:16.193" starttime="20151202 15:29:16.163"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 15:29:16.198" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 15:29:16.198" starttime="20151202 15:29:16.194"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:16.201" starttime="20151202 15:29:16.199"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:16.204" starttime="20151202 15:29:16.202"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:16.207" starttime="20151202 15:29:16.205"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:16.210" starttime="20151202 15:29:16.208"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:16.212" starttime="20151202 15:29:16.211"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:16.215" starttime="20151202 15:29:16.214"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:16.218" starttime="20151202 15:29:16.217"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:16.222" starttime="20151202 15:29:16.220"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:16.225" starttime="20151202 15:29:16.223"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:16.228" starttime="20151202 15:29:16.226"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:16.231" starttime="20151202 15:29:16.229"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:16.234" starttime="20151202 15:29:16.232"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 15:29:16.238" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0']</msg>
<msg timestamp="20151202 15:29:20.614" level="INFO">15:29:16,429 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/ext] for external libraries
15:29:16,430 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
15:29:18,248 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/crce-subscriberadmin/robot_crce_bridge-soapui-project.xml]
15:29:18,267 INFO  [SoapUITestCaseRunner] Setting project property [crceHost] to [10.105.125.159]
15:29:18,267 INFO  [SoapUITestCaseRunner] Setting project property [crcePort] to [8080]
15:29:18,267 INFO  [SoapUITestCaseRunner] Setting project property [crceWebservicesBasePath] to [/inew-mvno-crce-webservices/]
15:29:18,267 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.amount] to [1]
15:29:18,268 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.imsiRangeStart] to [232201667725500]
15:29:18,268 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.msisdnRangeStart] to [43667725500]
15:29:18,268 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.type] to [POSTPAID]
15:29:18,268 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.languageid] to [1]
15:29:18,268 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.tariffId] to [101004]
15:29:18,268 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.balance] to [0]
15:29:18,269 INFO  [SoapUITestCaseRunner] Running SoapUI tests in project [Robotframework_CRCE-Bridge]
15:29:18,269 INFO  [SoapUITestCaseRunner] Running TestCase [createTestSubscribers]
15:29:18,280 INFO  [SoapUITestCaseRunner] Running SoapUI testcase [createTestSubscribers]
15:29:18,287 INFO  [SoapUITestCaseRunner] running step [init_repeat_counter]
15:29:18,728 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
15:29:18,789 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
15:29:19,007 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:29:19,008 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:29:19,034 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:29:19,041 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:29:19,236 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:29:19,237 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:29:19,237 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:29:19,237 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
15:29:19,307 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
15:29:19,565 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
15:29:19,591 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
15:29:19,593 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:29:19,594 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:29:19,594 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:29:19,673 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:29:19,674 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:29:19,681 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:29:19,682 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:29:19,682 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:29:19,682 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
15:29:19,752 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
15:29:19,760 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
15:29:19,810 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
15:29:19,814 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:29:19,816 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:29:19,816 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:29:19,829 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:29:19,829 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:29:19,836 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:29:19,836 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:29:19,836 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:29:19,836 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
15:29:19,904 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
15:29:19,915 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
15:29:19,957 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
15:29:19,960 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:29:19,962 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:29:19,962 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:29:20,019 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:29:20,020 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:29:20,026 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:29:20,026 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:29:20,027 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:29:20,027 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
15:29:20,091 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
15:29:20,097 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
15:29:20,140 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
15:29:20,143 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:29:20,145 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:29:20,145 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
15:29:20,169 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:29:20,170 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:29:20,183 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:29:20,183 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:29:20,183 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:29:20,183 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
15:29:20,246 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
15:29:20,267 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
15:29:20,310 INFO  [SoapUITestCaseRunner] running step [setBalance]
15:29:20,314 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:29:20,316 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:29:20,316 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
15:29:20,351 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:29:20,351 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:29:20,363 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:29:20,363 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:29:20,363 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:29:20,364 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
15:29:20,428 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
15:29:20,438 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
15:29:20,480 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
15:29:20,538 INFO  [SoapUITestCaseRunner] running step [finish_successful]
15:29:20,606 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK
15:29:20,607 INFO  [SoapUITestCaseRunner] Finished running SoapUI testcase [createTestSubscribers], time taken: 2288ms, status: FINISHED
15:29:20,607 INFO  [SoapUITestCaseRunner] TestCase [createTestSubscribers] finished with status [FINISHED] in 2288ms</msg>
<status status="PASS" endtime="20151202 15:29:20.623" starttime="20151202 15:29:16.236"></status>
</kw>
<msg timestamp="20151202 15:29:20.630" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:20.632" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 15:29:20.627" starttime="20151202 15:29:16.235"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:20.668" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20151202 15:29:20.666" starttime="20151202 15:29:20.660"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:20.677" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:20.675" starttime="20151202 15:29:20.671"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:20.686" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:20.684" starttime="20151202 15:29:20.680"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:20.700" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:20.712" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:20.714" starttime="20151202 15:29:20.694"></status>
</kw>
<msg timestamp="20151202 15:29:20.717" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:20.719" level="INFO">${return_log_entry} = 2015-12-02 15:29:20,606 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:20.716" starttime="20151202 15:29:20.689"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:20.739" starttime="20151202 15:29:20.735"></status>
</kw>
<msg timestamp="20151202 15:29:20.743" level="INFO">${return_log_entry} = 2015-12-02 15:29:20,606 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:20.741" starttime="20151202 15:29:20.722"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:20.760" starttime="20151202 15:29:20.756"></status>
</kw>
<msg timestamp="20151202 15:29:20.761" level="INFO">${return_log_entry} = 2015-12-02 15:29:20,606 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:20.761" starttime="20151202 15:29:20.745"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:20.770" starttime="20151202 15:29:20.768"></status>
</kw>
<msg timestamp="20151202 15:29:20.772" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:20.771" starttime="20151202 15:29:20.763"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:20.801" starttime="20151202 15:29:20.799"></status>
</kw>
<msg timestamp="20151202 15:29:20.803" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:20.802" starttime="20151202 15:29:20.773"></status>
</kw>
<msg timestamp="20151202 15:29:20.804" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:20.804" starttime="20151202 15:29:20.638"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:20.817" starttime="20151202 15:29:20.815"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:20.820" starttime="20151202 15:29:20.818"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:20.823" starttime="20151202 15:29:20.821"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 15:29:20.837" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 15:29:20.838" starttime="20151202 15:29:20.831"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:20.839" starttime="20151202 15:29:20.829"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:20.840" starttime="20151202 15:29:20.824"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:20.841" starttime="20151202 15:29:20.807"></status>
</kw>
<msg timestamp="20151202 15:29:20.843" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20151202 15:29:20.842" starttime="20151202 15:29:16.088"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20151202 15:29:20.846" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 15:29:20.847" starttime="20151202 15:29:20.844"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:20.850" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20151202 15:29:20.851" starttime="20151202 15:29:20.848"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run Data Session *******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:20.853" starttime="20151202 15:29:20.852"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the data session...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:20.856" level="INFO">Running the data session...</msg>
<status status="PASS" endtime="20151202 15:29:20.857" starttime="20151202 15:29:20.854"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Short 767b Data Session">
<doc>Runs a standard data session in total of 767B (CCRi - CCRt)</doc>
<arguments>
<arg>${TESTSUBCRIBERS PP IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
<arg>${DIAM HPLMN LOCATION}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${DIAM GW HOST}</arg>
<arg>${DIAM GW PORT}</arg>
<arg>${DIAM GW REALM}</arg>
<arg>${DIAM GGSN FQDN}</arg>
<arg>${DIAM GGSN REALM}</arg>
<arg>${DIAM GGSN VENDORID}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard Data CGS">
<doc>Runs a standard Data session (meaning a session that needs only location as parameter) for the passed cgs file</doc>
<arguments>
<arg>data767b</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${location}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${diam_host}</arg>
<arg>${diam_port}</arg>
<arg>${diam_gw_realm}</arg>
<arg>${diam_ggsn_fqdn}</arg>
<arg>${diam_ggsn_realm}</arg>
<arg>${diam_ggsn_vendorid}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20151202 15:29:20.891" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-subscribers.csv</msg>
<status status="PASS" endtime="20151202 15:29:20.890" starttime="20151202 15:29:20.888"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20151202 15:29:20.894" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-fleXml.csv</msg>
<status status="PASS" endtime="20151202 15:29:20.894" starttime="20151202 15:29:20.892"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20151202 15:29:20.898" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-workspace.ini</msg>
<status status="PASS" endtime="20151202 15:29:20.897" starttime="20151202 15:29:20.895"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20151202 15:29:20.901" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/data767b.cgs</msg>
<status status="PASS" endtime="20151202 15:29:20.901" starttime="20151202 15:29:20.899"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:20.904" starttime="20151202 15:29:20.902"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20151202 15:29:20.909" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:20.910" starttime="20151202 15:29:20.905"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:20.912" starttime="20151202 15:29:20.911"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;location\n</arg>
</arguments>
<msg timestamp="20151202 15:29:20.916" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:20.917" starttime="20151202 15:29:20.913"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${location}\n</arg>
</arguments>
<msg timestamp="20151202 15:29:20.921" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:20.921" starttime="20151202 15:29:20.918"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:20.924" starttime="20151202 15:29:20.922"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20151202 15:29:20.929" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:20.929" starttime="20151202 15:29:20.925"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ndiamGwHost=${diam_host} \ndiamGwPort=${diam_port} \ndiamGwRealm=${diam_gw_realm} \ndiamGgsnFqdn=${diam_ggsn_fqdn} \ndiamGgsnRealm=${diam_ggsn_realm} \ndiamGgsnVendorId=${diam_ggsn_vendorid} \ndiamGwConnectTimeoutSecs=20</arg>
</arguments>
<msg timestamp="20151202 15:29:20.935" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:20.936" starttime="20151202 15:29:20.930"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:20.939" starttime="20151202 15:29:20.937"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20151202 15:29:20.950" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/data767b.cgs /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20151202 15:29:29.890" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151202 15:29:29.886" starttime="20151202 15:29:20.940"></status>
</kw>
<msg timestamp="20151202 15:29:29.895" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151202 15:29:29.893" starttime="20151202 15:29:20.875"></status>
</kw>
<msg timestamp="20151202 15:29:29.900" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151202 15:29:29.898" starttime="20151202 15:29:20.859"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:29.906" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20151202 15:29:29.908" starttime="20151202 15:29:29.902"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20151202 15:29:29.916" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 15:29:29.918" starttime="20151202 15:29:29.911"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:29.924" starttime="20151202 15:29:29.921"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:29.978" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:29.980" starttime="20151202 15:29:29.972"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:29.981" starttime="20151202 15:29:29.968"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:29.992" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:29.994" starttime="20151202 15:29:29.988"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:29.996" starttime="20151202 15:29:29.984"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.008" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:30.009" starttime="20151202 15:29:30.003"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:30.010" starttime="20151202 15:29:29.998"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:30.012" starttime="20151202 15:29:29.953"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.016" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 15:29:30.016" starttime="20151202 15:29:30.013"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.019" starttime="20151202 15:29:30.017"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.022" starttime="20151202 15:29:30.020"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.025" starttime="20151202 15:29:30.023"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.027" starttime="20151202 15:29:30.026"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.030" starttime="20151202 15:29:30.028"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.033" starttime="20151202 15:29:30.031"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 15:29:30.037" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725500']</msg>
<msg timestamp="20151202 15:29:30.402" level="INFO">15:29:30,397 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
15:29:30,397 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
15:29:30,398 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166349
15:29:30,398 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500
15:29:30,399 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
15:29:30,399 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004
15:29:30,400 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID
15:29:30,400 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20151202 15:29:30.403" starttime="20151202 15:29:30.035"></status>
</kw>
<msg timestamp="20151202 15:29:30.404" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:30.405" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 15:29:30.404" starttime="20151202 15:29:30.034"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:30.417" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20151202 15:29:30.417" starttime="20151202 15:29:30.415"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.421" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:30.420" starttime="20151202 15:29:30.419"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.424" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:30.424" starttime="20151202 15:29:30.422"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.429" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:30.434" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:30.435" starttime="20151202 15:29:30.427"></status>
</kw>
<msg timestamp="20151202 15:29:30.436" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:30.436" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,397 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:30.435" starttime="20151202 15:29:30.425"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.444" starttime="20151202 15:29:30.443"></status>
</kw>
<msg timestamp="20151202 15:29:30.446" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,397 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:30.445" starttime="20151202 15:29:30.438"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.454" starttime="20151202 15:29:30.452"></status>
</kw>
<msg timestamp="20151202 15:29:30.455" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,397 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:30.454" starttime="20151202 15:29:30.447"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.463" starttime="20151202 15:29:30.461"></status>
</kw>
<msg timestamp="20151202 15:29:30.464" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:30.464" starttime="20151202 15:29:30.456"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.475" starttime="20151202 15:29:30.473"></status>
</kw>
<msg timestamp="20151202 15:29:30.476" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:30.476" starttime="20151202 15:29:30.466"></status>
</kw>
<msg timestamp="20151202 15:29:30.478" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:30.477" starttime="20151202 15:29:30.407"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:30.491" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20151202 15:29:30.490" starttime="20151202 15:29:30.488"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.494" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:30.493" starttime="20151202 15:29:30.492"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.497" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:30.497" starttime="20151202 15:29:30.495"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.502" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:30.507" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:30.508" starttime="20151202 15:29:30.500"></status>
</kw>
<msg timestamp="20151202 15:29:30.509" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:30.510" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,397 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 15:29:30.508" starttime="20151202 15:29:30.498"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.517" starttime="20151202 15:29:30.516"></status>
</kw>
<msg timestamp="20151202 15:29:30.519" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,397 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 15:29:30.518" starttime="20151202 15:29:30.511"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.527" starttime="20151202 15:29:30.525"></status>
</kw>
<msg timestamp="20151202 15:29:30.528" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,397 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 15:29:30.527" starttime="20151202 15:29:30.520"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.536" starttime="20151202 15:29:30.534"></status>
</kw>
<msg timestamp="20151202 15:29:30.538" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151202 15:29:30.537" starttime="20151202 15:29:30.529"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.548" starttime="20151202 15:29:30.546"></status>
</kw>
<msg timestamp="20151202 15:29:30.549" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151202 15:29:30.549" starttime="20151202 15:29:30.539"></status>
</kw>
<msg timestamp="20151202 15:29:30.551" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20151202 15:29:30.550" starttime="20151202 15:29:30.480"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:30.563" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20151202 15:29:30.563" starttime="20151202 15:29:30.560"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.566" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:30.566" starttime="20151202 15:29:30.564"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.569" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:30.569" starttime="20151202 15:29:30.567"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.575" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:30.579" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:30.580" starttime="20151202 15:29:30.573"></status>
</kw>
<msg timestamp="20151202 15:29:30.581" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:30.581" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,398 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:30.580" starttime="20151202 15:29:30.571"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.589" starttime="20151202 15:29:30.587"></status>
</kw>
<msg timestamp="20151202 15:29:30.591" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,398 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:30.590" starttime="20151202 15:29:30.583"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.598" starttime="20151202 15:29:30.596"></status>
</kw>
<msg timestamp="20151202 15:29:30.599" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,398 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:30.599" starttime="20151202 15:29:30.592"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.608" starttime="20151202 15:29:30.605"></status>
</kw>
<msg timestamp="20151202 15:29:30.609" level="INFO">${resultCode} = 232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:30.608" starttime="20151202 15:29:30.600"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.619" starttime="20151202 15:29:30.617"></status>
</kw>
<msg timestamp="20151202 15:29:30.620" level="INFO">${resultCode} = 232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:30.620" starttime="20151202 15:29:30.610"></status>
</kw>
<msg timestamp="20151202 15:29:30.622" level="INFO">${imsi} = 232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:30.622" starttime="20151202 15:29:30.553"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:30.634" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20151202 15:29:30.634" starttime="20151202 15:29:30.631"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.638" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:30.637" starttime="20151202 15:29:30.636"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.642" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:30.641" starttime="20151202 15:29:30.640"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.647" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:30.651" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:30.652" starttime="20151202 15:29:30.645"></status>
</kw>
<msg timestamp="20151202 15:29:30.653" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:30.654" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,398 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166349</msg>
<status status="PASS" endtime="20151202 15:29:30.653" starttime="20151202 15:29:30.643"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.661" starttime="20151202 15:29:30.660"></status>
</kw>
<msg timestamp="20151202 15:29:30.663" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,398 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166349</msg>
<status status="PASS" endtime="20151202 15:29:30.662" starttime="20151202 15:29:30.655"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.670" starttime="20151202 15:29:30.668"></status>
</kw>
<msg timestamp="20151202 15:29:30.671" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,398 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166349</msg>
<status status="PASS" endtime="20151202 15:29:30.671" starttime="20151202 15:29:30.664"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.679" starttime="20151202 15:29:30.677"></status>
</kw>
<msg timestamp="20151202 15:29:30.680" level="INFO">${resultCode} = 166349</msg>
<status status="PASS" endtime="20151202 15:29:30.680" starttime="20151202 15:29:30.672"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.690" starttime="20151202 15:29:30.688"></status>
</kw>
<msg timestamp="20151202 15:29:30.691" level="INFO">${resultCode} = 166349</msg>
<status status="PASS" endtime="20151202 15:29:30.691" starttime="20151202 15:29:30.681"></status>
</kw>
<msg timestamp="20151202 15:29:30.693" level="INFO">${id} = 166349</msg>
<status status="PASS" endtime="20151202 15:29:30.693" starttime="20151202 15:29:30.624"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:30.704" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20151202 15:29:30.704" starttime="20151202 15:29:30.702"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.707" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:30.707" starttime="20151202 15:29:30.705"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.710" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:30.710" starttime="20151202 15:29:30.708"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.715" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:30.720" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:30.720" starttime="20151202 15:29:30.713"></status>
</kw>
<msg timestamp="20151202 15:29:30.722" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:30.722" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,399 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 15:29:30.721" starttime="20151202 15:29:30.712"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.730" starttime="20151202 15:29:30.728"></status>
</kw>
<msg timestamp="20151202 15:29:30.731" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,399 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 15:29:30.730" starttime="20151202 15:29:30.723"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.738" starttime="20151202 15:29:30.736"></status>
</kw>
<msg timestamp="20151202 15:29:30.739" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,399 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 15:29:30.739" starttime="20151202 15:29:30.732"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.786" starttime="20151202 15:29:30.779"></status>
</kw>
<msg timestamp="20151202 15:29:30.789" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151202 15:29:30.788" starttime="20151202 15:29:30.740"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.816" starttime="20151202 15:29:30.812"></status>
</kw>
<msg timestamp="20151202 15:29:30.819" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151202 15:29:30.817" starttime="20151202 15:29:30.792"></status>
</kw>
<msg timestamp="20151202 15:29:30.822" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20151202 15:29:30.821" starttime="20151202 15:29:30.695"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:30.848" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20151202 15:29:30.846" starttime="20151202 15:29:30.841"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.854" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:30.853" starttime="20151202 15:29:30.850"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.861" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:30.860" starttime="20151202 15:29:30.857"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:30.872" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:30.881" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:30.882" starttime="20151202 15:29:30.867"></status>
</kw>
<msg timestamp="20151202 15:29:30.886" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:30.887" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,399 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 15:29:30.885" starttime="20151202 15:29:30.863"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.902" starttime="20151202 15:29:30.898"></status>
</kw>
<msg timestamp="20151202 15:29:30.905" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,399 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 15:29:30.904" starttime="20151202 15:29:30.889"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.921" starttime="20151202 15:29:30.917"></status>
</kw>
<msg timestamp="20151202 15:29:30.924" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,399 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 15:29:30.922" starttime="20151202 15:29:30.907"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.940" starttime="20151202 15:29:30.936"></status>
</kw>
<msg timestamp="20151202 15:29:30.943" level="INFO">${resultCode} = 101004</msg>
<status status="PASS" endtime="20151202 15:29:30.942" starttime="20151202 15:29:30.926"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:30.964" starttime="20151202 15:29:30.961"></status>
</kw>
<msg timestamp="20151202 15:29:30.967" level="INFO">${resultCode} = 101004</msg>
<status status="PASS" endtime="20151202 15:29:30.966" starttime="20151202 15:29:30.946"></status>
</kw>
<msg timestamp="20151202 15:29:30.971" level="INFO">${tariffId} = 101004</msg>
<status status="PASS" endtime="20151202 15:29:30.970" starttime="20151202 15:29:30.827"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:30.994" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20151202 15:29:30.993" starttime="20151202 15:29:30.989"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.003" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:31.000" starttime="20151202 15:29:30.997"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.009" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:31.008" starttime="20151202 15:29:31.005"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.014" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:31.018" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:31.019" starttime="20151202 15:29:31.012"></status>
</kw>
<msg timestamp="20151202 15:29:31.020" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:31.021" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,400 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:31.020" starttime="20151202 15:29:31.010"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.028" starttime="20151202 15:29:31.026"></status>
</kw>
<msg timestamp="20151202 15:29:31.029" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,400 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:31.028" starttime="20151202 15:29:31.022"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.037" starttime="20151202 15:29:31.035"></status>
</kw>
<msg timestamp="20151202 15:29:31.038" level="INFO">${return_log_entry} = 2015-12-02 15:29:30,400 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:31.037" starttime="20151202 15:29:31.030"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.045" starttime="20151202 15:29:31.043"></status>
</kw>
<msg timestamp="20151202 15:29:31.047" level="INFO">${resultCode} = POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:31.046" starttime="20151202 15:29:31.039"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.056" starttime="20151202 15:29:31.054"></status>
</kw>
<msg timestamp="20151202 15:29:31.057" level="INFO">${resultCode} = POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:31.057" starttime="20151202 15:29:31.048"></status>
</kw>
<msg timestamp="20151202 15:29:31.059" level="INFO">${type} = POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:31.059" starttime="20151202 15:29:30.974"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.069" starttime="20151202 15:29:31.067"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.071" starttime="20151202 15:29:31.069"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.073" starttime="20151202 15:29:31.072"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 15:29:31.084" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 15:29:31.085" starttime="20151202 15:29:31.080"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:31.088" starttime="20151202 15:29:31.078"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:31.091" starttime="20151202 15:29:31.074"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:31.093" starttime="20151202 15:29:31.061"></status>
</kw>
<msg timestamp="20151202 15:29:31.103" level="INFO">${rc} = OK</msg>
<msg timestamp="20151202 15:29:31.104" level="INFO">${provId} = 1</msg>
<msg timestamp="20151202 15:29:31.105" level="INFO">${imsi} = 232201667725500</msg>
<msg timestamp="20151202 15:29:31.106" level="INFO">${id} = 166349</msg>
<msg timestamp="20151202 15:29:31.107" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20151202 15:29:31.109" level="INFO">${tariffId} = 101004</msg>
<msg timestamp="20151202 15:29:31.110" level="INFO">${type} = POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:31.099" starttime="20151202 15:29:29.930"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.153" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:31.154" starttime="20151202 15:29:31.148"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:31.156" starttime="20151202 15:29:31.144"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.166" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:31.167" starttime="20151202 15:29:31.161"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:31.169" starttime="20151202 15:29:31.158"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.179" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:31.180" starttime="20151202 15:29:31.174"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:31.182" starttime="20151202 15:29:31.171"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:31.183" starttime="20151202 15:29:31.131"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.191" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 15:29:31.191" starttime="20151202 15:29:31.185"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.197" starttime="20151202 15:29:31.193"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.202" starttime="20151202 15:29:31.198"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.206" starttime="20151202 15:29:31.203"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.210" starttime="20151202 15:29:31.207"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.213" starttime="20151202 15:29:31.211"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.217" starttime="20151202 15:29:31.215"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 15:29:31.224" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725500', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=166349']</msg>
<msg timestamp="20151202 15:29:31.589" level="INFO">15:29:31,583 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
15:29:31,584 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166350
15:29:31,585 INFO  [log] LowLevelOps.getMainAccount.output.balance=3662
15:29:31,586 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
15:29:31,587 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 15:29:31.591" starttime="20151202 15:29:31.221"></status>
</kw>
<msg timestamp="20151202 15:29:31.594" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:31.595" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 15:29:31.593" starttime="20151202 15:29:31.219"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:31.618" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20151202 15:29:31.617" starttime="20151202 15:29:31.613"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.625" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:31.624" starttime="20151202 15:29:31.621"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.632" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:31.630" starttime="20151202 15:29:31.627"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.642" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:31.650" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:31.651" starttime="20151202 15:29:31.638"></status>
</kw>
<msg timestamp="20151202 15:29:31.654" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:31.655" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,583 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:31.653" starttime="20151202 15:29:31.634"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.670" starttime="20151202 15:29:31.667"></status>
</kw>
<msg timestamp="20151202 15:29:31.673" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,583 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:31.672" starttime="20151202 15:29:31.657"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.689" starttime="20151202 15:29:31.685"></status>
</kw>
<msg timestamp="20151202 15:29:31.691" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,583 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:31.690" starttime="20151202 15:29:31.675"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.707" starttime="20151202 15:29:31.703"></status>
</kw>
<msg timestamp="20151202 15:29:31.710" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:31.709" starttime="20151202 15:29:31.694"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.731" starttime="20151202 15:29:31.727"></status>
</kw>
<msg timestamp="20151202 15:29:31.733" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:31.732" starttime="20151202 15:29:31.712"></status>
</kw>
<msg timestamp="20151202 15:29:31.737" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:31.736" starttime="20151202 15:29:31.599"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:31.760" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20151202 15:29:31.759" starttime="20151202 15:29:31.755"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.763" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:31.762" starttime="20151202 15:29:31.761"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.766" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:31.765" starttime="20151202 15:29:31.764"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.771" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:31.774" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:31.775" starttime="20151202 15:29:31.768"></status>
</kw>
<msg timestamp="20151202 15:29:31.776" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:31.776" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,584 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166350</msg>
<status status="PASS" endtime="20151202 15:29:31.775" starttime="20151202 15:29:31.767"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.784" starttime="20151202 15:29:31.782"></status>
</kw>
<msg timestamp="20151202 15:29:31.785" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,584 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166350</msg>
<status status="PASS" endtime="20151202 15:29:31.784" starttime="20151202 15:29:31.777"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.792" starttime="20151202 15:29:31.790"></status>
</kw>
<msg timestamp="20151202 15:29:31.793" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,584 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166350</msg>
<status status="PASS" endtime="20151202 15:29:31.792" starttime="20151202 15:29:31.786"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.800" starttime="20151202 15:29:31.798"></status>
</kw>
<msg timestamp="20151202 15:29:31.802" level="INFO">${resultCode} = 166350</msg>
<status status="PASS" endtime="20151202 15:29:31.801" starttime="20151202 15:29:31.794"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.811" starttime="20151202 15:29:31.809"></status>
</kw>
<msg timestamp="20151202 15:29:31.812" level="INFO">${resultCode} = 166350</msg>
<status status="PASS" endtime="20151202 15:29:31.812" starttime="20151202 15:29:31.802"></status>
</kw>
<msg timestamp="20151202 15:29:31.814" level="INFO">${accountId} = 166350</msg>
<status status="PASS" endtime="20151202 15:29:31.813" starttime="20151202 15:29:31.740"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:31.824" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20151202 15:29:31.824" starttime="20151202 15:29:31.822"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.827" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:31.827" starttime="20151202 15:29:31.825"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.830" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:31.830" starttime="20151202 15:29:31.828"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.838" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:31.842" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:31.842" starttime="20151202 15:29:31.835"></status>
</kw>
<msg timestamp="20151202 15:29:31.844" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:31.844" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,585 INFO  [log] LowLevelOps.getMainAccount.output.balance=3662</msg>
<status status="PASS" endtime="20151202 15:29:31.843" starttime="20151202 15:29:31.833"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.851" starttime="20151202 15:29:31.850"></status>
</kw>
<msg timestamp="20151202 15:29:31.852" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,585 INFO  [log] LowLevelOps.getMainAccount.output.balance=3662</msg>
<status status="PASS" endtime="20151202 15:29:31.852" starttime="20151202 15:29:31.845"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.859" starttime="20151202 15:29:31.857"></status>
</kw>
<msg timestamp="20151202 15:29:31.860" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,585 INFO  [log] LowLevelOps.getMainAccount.output.balance=3662</msg>
<status status="PASS" endtime="20151202 15:29:31.860" starttime="20151202 15:29:31.853"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.867" starttime="20151202 15:29:31.865"></status>
</kw>
<msg timestamp="20151202 15:29:31.869" level="INFO">${resultCode} = 3662</msg>
<status status="PASS" endtime="20151202 15:29:31.868" starttime="20151202 15:29:31.861"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.878" starttime="20151202 15:29:31.876"></status>
</kw>
<msg timestamp="20151202 15:29:31.879" level="INFO">${resultCode} = 3662</msg>
<status status="PASS" endtime="20151202 15:29:31.878" starttime="20151202 15:29:31.870"></status>
</kw>
<msg timestamp="20151202 15:29:31.880" level="INFO">${balance} = 3662</msg>
<status status="PASS" endtime="20151202 15:29:31.880" starttime="20151202 15:29:31.815"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:31.892" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20151202 15:29:31.891" starttime="20151202 15:29:31.889"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.895" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:31.894" starttime="20151202 15:29:31.893"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.898" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:31.897" starttime="20151202 15:29:31.896"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.902" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:31.908" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:31.909" starttime="20151202 15:29:31.900"></status>
</kw>
<msg timestamp="20151202 15:29:31.910" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:31.911" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,586 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 15:29:31.910" starttime="20151202 15:29:31.899"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.918" starttime="20151202 15:29:31.916"></status>
</kw>
<msg timestamp="20151202 15:29:31.919" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,586 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 15:29:31.919" starttime="20151202 15:29:31.912"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.926" starttime="20151202 15:29:31.924"></status>
</kw>
<msg timestamp="20151202 15:29:31.927" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,586 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 15:29:31.926" starttime="20151202 15:29:31.920"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.934" starttime="20151202 15:29:31.932"></status>
</kw>
<msg timestamp="20151202 15:29:31.935" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151202 15:29:31.935" starttime="20151202 15:29:31.928"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.944" starttime="20151202 15:29:31.942"></status>
</kw>
<msg timestamp="20151202 15:29:31.945" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151202 15:29:31.944" starttime="20151202 15:29:31.936"></status>
</kw>
<msg timestamp="20151202 15:29:31.946" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20151202 15:29:31.946" starttime="20151202 15:29:31.882"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:31.957" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20151202 15:29:31.956" starttime="20151202 15:29:31.954"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.960" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:31.959" starttime="20151202 15:29:31.958"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.962" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:31.962" starttime="20151202 15:29:31.960"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:31.968" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:31.972" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:31.972" starttime="20151202 15:29:31.966"></status>
</kw>
<msg timestamp="20151202 15:29:31.974" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:31.974" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,587 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 15:29:31.973" starttime="20151202 15:29:31.963"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.981" starttime="20151202 15:29:31.979"></status>
</kw>
<msg timestamp="20151202 15:29:31.982" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,587 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 15:29:31.982" starttime="20151202 15:29:31.975"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:31.989" starttime="20151202 15:29:31.987"></status>
</kw>
<msg timestamp="20151202 15:29:31.990" level="INFO">${return_log_entry} = 2015-12-02 15:29:31,587 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 15:29:31.989" starttime="20151202 15:29:31.983"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.047" starttime="20151202 15:29:32.040"></status>
</kw>
<msg timestamp="20151202 15:29:32.051" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151202 15:29:32.049" starttime="20151202 15:29:31.991"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.071" starttime="20151202 15:29:32.068"></status>
</kw>
<msg timestamp="20151202 15:29:32.074" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151202 15:29:32.073" starttime="20151202 15:29:32.053"></status>
</kw>
<msg timestamp="20151202 15:29:32.078" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20151202 15:29:32.076" starttime="20151202 15:29:31.948"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.098" starttime="20151202 15:29:32.095"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.103" starttime="20151202 15:29:32.100"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.108" starttime="20151202 15:29:32.105"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 15:29:32.128" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 15:29:32.130" starttime="20151202 15:29:32.121"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:32.131" starttime="20151202 15:29:32.117"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:32.132" starttime="20151202 15:29:32.110"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:32.133" starttime="20151202 15:29:32.082"></status>
</kw>
<msg timestamp="20151202 15:29:32.139" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20151202 15:29:32.140" level="INFO">${accId} = 166350</msg>
<msg timestamp="20151202 15:29:32.141" level="INFO">${bal} = 3662</msg>
<msg timestamp="20151202 15:29:32.142" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20151202 15:29:32.143" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20151202 15:29:32.137" starttime="20151202 15:29:31.116"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account: ${bal}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:32.148" level="INFO">Account: 3662</msg>
<status status="PASS" endtime="20151202 15:29:32.150" starttime="20151202 15:29:32.145"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Should Be Equal As Numbers</arg>
<arg>${TESTSUBCRIBERS PP DEFAULT SLICE COSTS}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and actual balance mismatch!</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.156" starttime="20151202 15:29:32.152"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check OK!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:32.160" level="INFO">Account balance check OK!</msg>
<status status="PASS" endtime="20151202 15:29:32.162" starttime="20151202 15:29:32.158"></status>
</kw>
<doc>Test will make a postpaid subscriber's short data session in total of 767 bytes

Arguments:
none
Returns:
none
Fails: in case CG session fails

=================================================================================</doc>
<tags>
<tag>DATA_only</tag>
<tag>matko.sanseovic</tag>
<tag>mTel_PPLIGHT_TB25_supported</tag>
</tags>
<status status="PASS" critical="yes" endtime="20151202 15:29:32.164" starttime="20151202 15:29:16.046"></status>
</test>
<test id="s1-t2" name="CG Short Multislice Data Session">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.192" starttime="20151202 15:29:32.189"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<msg timestamp="20151202 15:29:32.198" level="INFO">${INITIAL_BALANCE} = 0</msg>
<status status="PASS" endtime="20151202 15:29:32.197" starttime="20151202 15:29:32.194"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>1</arg>
<arg>${TESTSUBCRIBERS PP IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
<arg>POSTPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS PP DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20151202 15:29:32.225" level="INFO">msg=crce_host=10.105.125.159</msg>
<status status="PASS" endtime="20151202 15:29:32.226" starttime="20151202 15:29:32.222"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20151202 15:29:32.231" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20151202 15:29:32.232" starttime="20151202 15:29:32.228"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20151202 15:29:32.237" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20151202 15:29:32.239" starttime="20151202 15:29:32.234"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20151202 15:29:32.243" level="INFO">msg=amount=1</msg>
<status status="PASS" endtime="20151202 15:29:32.244" starttime="20151202 15:29:32.240"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20151202 15:29:32.249" level="INFO">msg=imsiRangeStart=232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:32.250" starttime="20151202 15:29:32.246"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20151202 15:29:32.255" level="INFO">msg=msisdnRangeStart=43667725500</msg>
<status status="PASS" endtime="20151202 15:29:32.256" starttime="20151202 15:29:32.252"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20151202 15:29:32.260" level="INFO">msg=type=POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:32.261" starttime="20151202 15:29:32.258"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20151202 15:29:32.263" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20151202 15:29:32.263" starttime="20151202 15:29:32.261"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20151202 15:29:32.265" level="INFO">msg=tariffId=101004</msg>
<status status="PASS" endtime="20151202 15:29:32.266" starttime="20151202 15:29:32.264"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20151202 15:29:32.268" level="INFO">msg=balance=0</msg>
<status status="PASS" endtime="20151202 15:29:32.268" starttime="20151202 15:29:32.267"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:32.280" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:32.280" starttime="20151202 15:29:32.277"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:32.281" starttime="20151202 15:29:32.276"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:32.285" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:32.286" starttime="20151202 15:29:32.283"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:32.286" starttime="20151202 15:29:32.282"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:32.291" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:32.291" starttime="20151202 15:29:32.289"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:32.292" starttime="20151202 15:29:32.287"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:32.293" starttime="20151202 15:29:32.270"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 15:29:32.296" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 15:29:32.296" starttime="20151202 15:29:32.294"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.299" starttime="20151202 15:29:32.297"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.301" starttime="20151202 15:29:32.300"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.304" starttime="20151202 15:29:32.302"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.306" starttime="20151202 15:29:32.304"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.308" starttime="20151202 15:29:32.306"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.310" starttime="20151202 15:29:32.308"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.312" starttime="20151202 15:29:32.311"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.315" starttime="20151202 15:29:32.313"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.317" starttime="20151202 15:29:32.316"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.320" starttime="20151202 15:29:32.318"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.322" starttime="20151202 15:29:32.320"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:32.324" starttime="20151202 15:29:32.323"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 15:29:32.328" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0']</msg>
<msg timestamp="20151202 15:29:33.451" level="INFO">15:29:33,448 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:33.453" starttime="20151202 15:29:32.326"></status>
</kw>
<msg timestamp="20151202 15:29:33.459" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:33.460" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 15:29:33.456" starttime="20151202 15:29:32.325"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:33.479" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20151202 15:29:33.478" starttime="20151202 15:29:33.473"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:33.484" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:33.483" starttime="20151202 15:29:33.480"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:33.490" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:33.489" starttime="20151202 15:29:33.486"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:33.500" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:33.501" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:33.503" starttime="20151202 15:29:33.495"></status>
</kw>
<msg timestamp="20151202 15:29:33.505" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:33.506" level="INFO">${return_log_entry} = 2015-12-02 15:29:33,448 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:33.504" starttime="20151202 15:29:33.492"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:33.514" starttime="20151202 15:29:33.513"></status>
</kw>
<msg timestamp="20151202 15:29:33.516" level="INFO">${return_log_entry} = 2015-12-02 15:29:33,448 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:33.515" starttime="20151202 15:29:33.508"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:33.522" starttime="20151202 15:29:33.520"></status>
</kw>
<msg timestamp="20151202 15:29:33.523" level="INFO">${return_log_entry} = 2015-12-02 15:29:33,448 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:33.523" starttime="20151202 15:29:33.516"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:33.530" starttime="20151202 15:29:33.528"></status>
</kw>
<msg timestamp="20151202 15:29:33.531" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:33.531" starttime="20151202 15:29:33.524"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:33.539" starttime="20151202 15:29:33.538"></status>
</kw>
<msg timestamp="20151202 15:29:33.540" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:33.540" starttime="20151202 15:29:33.532"></status>
</kw>
<msg timestamp="20151202 15:29:33.542" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:33.541" starttime="20151202 15:29:33.463"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:33.549" starttime="20151202 15:29:33.547"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:33.551" starttime="20151202 15:29:33.550"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:33.553" starttime="20151202 15:29:33.552"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 15:29:33.561" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 15:29:33.562" starttime="20151202 15:29:33.559"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:33.562" starttime="20151202 15:29:33.558"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:33.563" starttime="20151202 15:29:33.554"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:33.564" starttime="20151202 15:29:33.543"></status>
</kw>
<msg timestamp="20151202 15:29:33.565" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20151202 15:29:33.564" starttime="20151202 15:29:32.203"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20151202 15:29:33.568" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 15:29:33.568" starttime="20151202 15:29:33.566"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:33.571" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20151202 15:29:33.571" starttime="20151202 15:29:33.569"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run Data Session *******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:33.573" starttime="20151202 15:29:33.572"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the data session...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:33.575" level="INFO">Running the data session...</msg>
<status status="PASS" endtime="20151202 15:29:33.576" starttime="20151202 15:29:33.574"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Short Multislice Data Session">
<doc>Runs a standard data session with two session updates before session is closed (CCRi - CCRu - CCRu - CCRt)</doc>
<arguments>
<arg>${TESTSUBCRIBERS PP IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
<arg>${DIAM HPLMN LOCATION}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${DIAM GW HOST}</arg>
<arg>${DIAM GW PORT}</arg>
<arg>${DIAM GW REALM}</arg>
<arg>${DIAM GGSN FQDN}</arg>
<arg>${DIAM GGSN REALM}</arg>
<arg>${DIAM GGSN VENDORID}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard Data CGS">
<doc>Runs a standard Data session (meaning a session that needs only location as parameter) for the passed cgs file</doc>
<arguments>
<arg>dataSessionUpdate</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${location}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${diam_host}</arg>
<arg>${diam_port}</arg>
<arg>${diam_gw_realm}</arg>
<arg>${diam_ggsn_fqdn}</arg>
<arg>${diam_ggsn_realm}</arg>
<arg>${diam_ggsn_vendorid}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20151202 15:29:33.598" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-subscribers.csv</msg>
<status status="PASS" endtime="20151202 15:29:33.597" starttime="20151202 15:29:33.596"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20151202 15:29:33.600" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-fleXml.csv</msg>
<status status="PASS" endtime="20151202 15:29:33.600" starttime="20151202 15:29:33.598"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20151202 15:29:33.603" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-workspace.ini</msg>
<status status="PASS" endtime="20151202 15:29:33.603" starttime="20151202 15:29:33.601"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20151202 15:29:33.606" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/dataSessionUpdate.cgs</msg>
<status status="PASS" endtime="20151202 15:29:33.606" starttime="20151202 15:29:33.604"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:33.608" starttime="20151202 15:29:33.607"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20151202 15:29:33.612" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:33.612" starttime="20151202 15:29:33.609"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:33.614" starttime="20151202 15:29:33.613"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;location\n</arg>
</arguments>
<msg timestamp="20151202 15:29:33.617" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:33.618" starttime="20151202 15:29:33.615"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${location}\n</arg>
</arguments>
<msg timestamp="20151202 15:29:33.621" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:33.621" starttime="20151202 15:29:33.618"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:33.623" starttime="20151202 15:29:33.622"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20151202 15:29:33.626" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:33.627" starttime="20151202 15:29:33.624"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ndiamGwHost=${diam_host} \ndiamGwPort=${diam_port} \ndiamGwRealm=${diam_gw_realm} \ndiamGgsnFqdn=${diam_ggsn_fqdn} \ndiamGgsnRealm=${diam_ggsn_realm} \ndiamGgsnVendorId=${diam_ggsn_vendorid} \ndiamGwConnectTimeoutSecs=20</arg>
</arguments>
<msg timestamp="20151202 15:29:33.632" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:33.633" starttime="20151202 15:29:33.628"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:33.635" starttime="20151202 15:29:33.633"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20151202 15:29:33.645" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/dataSessionUpdate.cgs /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/dataSessionUpdate-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20151202 15:29:57.841" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151202 15:29:57.835" starttime="20151202 15:29:33.636"></status>
</kw>
<msg timestamp="20151202 15:29:57.851" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151202 15:29:57.850" starttime="20151202 15:29:33.588"></status>
</kw>
<msg timestamp="20151202 15:29:57.856" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151202 15:29:57.854" starttime="20151202 15:29:33.578"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:57.861" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20151202 15:29:57.863" starttime="20151202 15:29:57.858"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20151202 15:29:57.869" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 15:29:57.870" starttime="20151202 15:29:57.865"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:57.875" starttime="20151202 15:29:57.872"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:57.967" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:57.969" starttime="20151202 15:29:57.961"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:57.971" starttime="20151202 15:29:57.957"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:57.981" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:57.982" starttime="20151202 15:29:57.976"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:57.984" starttime="20151202 15:29:57.973"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:57.993" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:57.994" starttime="20151202 15:29:57.989"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:57.996" starttime="20151202 15:29:57.986"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:57.997" starttime="20151202 15:29:57.894"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.004" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 15:29:58.005" starttime="20151202 15:29:57.999"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.011" starttime="20151202 15:29:58.007"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.016" starttime="20151202 15:29:58.013"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.022" starttime="20151202 15:29:58.019"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.026" starttime="20151202 15:29:58.024"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.031" starttime="20151202 15:29:58.028"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.036" starttime="20151202 15:29:58.032"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 15:29:58.043" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725500']</msg>
<msg timestamp="20151202 15:29:58.351" level="INFO">15:29:58,338 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
15:29:58,339 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
15:29:58,341 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166352
15:29:58,342 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500
15:29:58,343 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
15:29:58,344 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004
15:29:58,345 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID
15:29:58,346 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20151202 15:29:58.352" starttime="20151202 15:29:58.041"></status>
</kw>
<msg timestamp="20151202 15:29:58.355" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:58.356" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 15:29:58.354" starttime="20151202 15:29:58.038"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:58.376" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20151202 15:29:58.375" starttime="20151202 15:29:58.369"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.382" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:58.381" starttime="20151202 15:29:58.378"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.386" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:58.386" starttime="20151202 15:29:58.384"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.390" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:58.391" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:58.392" starttime="20151202 15:29:58.388"></status>
</kw>
<msg timestamp="20151202 15:29:58.393" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:58.393" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,338 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:58.392" starttime="20151202 15:29:58.387"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.401" starttime="20151202 15:29:58.399"></status>
</kw>
<msg timestamp="20151202 15:29:58.402" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,338 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:58.401" starttime="20151202 15:29:58.394"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.407" starttime="20151202 15:29:58.406"></status>
</kw>
<msg timestamp="20151202 15:29:58.409" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,338 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:58.408" starttime="20151202 15:29:58.403"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.415" starttime="20151202 15:29:58.413"></status>
</kw>
<msg timestamp="20151202 15:29:58.416" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:58.415" starttime="20151202 15:29:58.409"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.424" starttime="20151202 15:29:58.422"></status>
</kw>
<msg timestamp="20151202 15:29:58.425" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:58.425" starttime="20151202 15:29:58.417"></status>
</kw>
<msg timestamp="20151202 15:29:58.426" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:58.426" starttime="20151202 15:29:58.360"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:58.434" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20151202 15:29:58.434" starttime="20151202 15:29:58.432"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.437" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:58.436" starttime="20151202 15:29:58.435"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.439" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:58.439" starttime="20151202 15:29:58.438"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.443" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:58.445" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:58.445" starttime="20151202 15:29:58.442"></status>
</kw>
<msg timestamp="20151202 15:29:58.446" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:58.447" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,339 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 15:29:58.446" starttime="20151202 15:29:58.440"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.453" starttime="20151202 15:29:58.451"></status>
</kw>
<msg timestamp="20151202 15:29:58.454" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,339 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 15:29:58.453" starttime="20151202 15:29:58.448"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.460" starttime="20151202 15:29:58.459"></status>
</kw>
<msg timestamp="20151202 15:29:58.461" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,339 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 15:29:58.461" starttime="20151202 15:29:58.455"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.467" starttime="20151202 15:29:58.466"></status>
</kw>
<msg timestamp="20151202 15:29:58.468" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151202 15:29:58.468" starttime="20151202 15:29:58.462"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.476" starttime="20151202 15:29:58.475"></status>
</kw>
<msg timestamp="20151202 15:29:58.477" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151202 15:29:58.477" starttime="20151202 15:29:58.469"></status>
</kw>
<msg timestamp="20151202 15:29:58.479" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20151202 15:29:58.478" starttime="20151202 15:29:58.428"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:58.486" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20151202 15:29:58.486" starttime="20151202 15:29:58.484"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.489" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:58.488" starttime="20151202 15:29:58.487"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.491" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:58.491" starttime="20151202 15:29:58.490"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.495" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:58.496" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:58.497" starttime="20151202 15:29:58.493"></status>
</kw>
<msg timestamp="20151202 15:29:58.498" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:58.498" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,342 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:58.497" starttime="20151202 15:29:58.492"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.504" starttime="20151202 15:29:58.502"></status>
</kw>
<msg timestamp="20151202 15:29:58.505" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,342 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:58.504" starttime="20151202 15:29:58.499"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.511" starttime="20151202 15:29:58.509"></status>
</kw>
<msg timestamp="20151202 15:29:58.512" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,342 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:58.511" starttime="20151202 15:29:58.506"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.517" starttime="20151202 15:29:58.516"></status>
</kw>
<msg timestamp="20151202 15:29:58.518" level="INFO">${resultCode} = 232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:58.518" starttime="20151202 15:29:58.512"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.526" starttime="20151202 15:29:58.525"></status>
</kw>
<msg timestamp="20151202 15:29:58.527" level="INFO">${resultCode} = 232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:58.527" starttime="20151202 15:29:58.519"></status>
</kw>
<msg timestamp="20151202 15:29:58.528" level="INFO">${imsi} = 232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:58.528" starttime="20151202 15:29:58.480"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:58.536" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20151202 15:29:58.535" starttime="20151202 15:29:58.534"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.538" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:58.538" starttime="20151202 15:29:58.537"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.541" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:58.540" starttime="20151202 15:29:58.539"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.545" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:58.546" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:58.546" starttime="20151202 15:29:58.543"></status>
</kw>
<msg timestamp="20151202 15:29:58.547" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:58.548" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,341 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166352</msg>
<status status="PASS" endtime="20151202 15:29:58.547" starttime="20151202 15:29:58.542"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.553" starttime="20151202 15:29:58.552"></status>
</kw>
<msg timestamp="20151202 15:29:58.554" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,341 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166352</msg>
<status status="PASS" endtime="20151202 15:29:58.554" starttime="20151202 15:29:58.548"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.560" starttime="20151202 15:29:58.558"></status>
</kw>
<msg timestamp="20151202 15:29:58.561" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,341 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166352</msg>
<status status="PASS" endtime="20151202 15:29:58.560" starttime="20151202 15:29:58.555"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.567" starttime="20151202 15:29:58.565"></status>
</kw>
<msg timestamp="20151202 15:29:58.568" level="INFO">${resultCode} = 166352</msg>
<status status="PASS" endtime="20151202 15:29:58.567" starttime="20151202 15:29:58.562"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.575" starttime="20151202 15:29:58.574"></status>
</kw>
<msg timestamp="20151202 15:29:58.576" level="INFO">${resultCode} = 166352</msg>
<status status="PASS" endtime="20151202 15:29:58.576" starttime="20151202 15:29:58.568"></status>
</kw>
<msg timestamp="20151202 15:29:58.577" level="INFO">${id} = 166352</msg>
<status status="PASS" endtime="20151202 15:29:58.577" starttime="20151202 15:29:58.530"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:58.585" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20151202 15:29:58.584" starttime="20151202 15:29:58.583"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.587" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:58.587" starttime="20151202 15:29:58.586"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.589" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:58.589" starttime="20151202 15:29:58.588"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.593" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:58.594" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:58.595" starttime="20151202 15:29:58.592"></status>
</kw>
<msg timestamp="20151202 15:29:58.596" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:58.596" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,343 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 15:29:58.595" starttime="20151202 15:29:58.590"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.601" starttime="20151202 15:29:58.600"></status>
</kw>
<msg timestamp="20151202 15:29:58.602" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,343 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 15:29:58.602" starttime="20151202 15:29:58.597"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.608" starttime="20151202 15:29:58.607"></status>
</kw>
<msg timestamp="20151202 15:29:58.609" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,343 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 15:29:58.609" starttime="20151202 15:29:58.603"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.615" starttime="20151202 15:29:58.613"></status>
</kw>
<msg timestamp="20151202 15:29:58.616" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151202 15:29:58.615" starttime="20151202 15:29:58.610"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.623" starttime="20151202 15:29:58.622"></status>
</kw>
<msg timestamp="20151202 15:29:58.624" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151202 15:29:58.624" starttime="20151202 15:29:58.617"></status>
</kw>
<msg timestamp="20151202 15:29:58.625" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20151202 15:29:58.625" starttime="20151202 15:29:58.579"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:58.633" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20151202 15:29:58.632" starttime="20151202 15:29:58.631"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.635" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:58.635" starttime="20151202 15:29:58.634"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.638" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:58.637" starttime="20151202 15:29:58.636"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.641" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:58.642" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:58.643" starttime="20151202 15:29:58.640"></status>
</kw>
<msg timestamp="20151202 15:29:58.644" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:58.644" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,344 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 15:29:58.643" starttime="20151202 15:29:58.639"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.649" starttime="20151202 15:29:58.648"></status>
</kw>
<msg timestamp="20151202 15:29:58.650" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,344 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 15:29:58.650" starttime="20151202 15:29:58.645"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.656" starttime="20151202 15:29:58.654"></status>
</kw>
<msg timestamp="20151202 15:29:58.657" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,344 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 15:29:58.656" starttime="20151202 15:29:58.651"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.662" starttime="20151202 15:29:58.661"></status>
</kw>
<msg timestamp="20151202 15:29:58.663" level="INFO">${resultCode} = 101004</msg>
<status status="PASS" endtime="20151202 15:29:58.663" starttime="20151202 15:29:58.658"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.671" starttime="20151202 15:29:58.669"></status>
</kw>
<msg timestamp="20151202 15:29:58.672" level="INFO">${resultCode} = 101004</msg>
<status status="PASS" endtime="20151202 15:29:58.671" starttime="20151202 15:29:58.664"></status>
</kw>
<msg timestamp="20151202 15:29:58.673" level="INFO">${tariffId} = 101004</msg>
<status status="PASS" endtime="20151202 15:29:58.672" starttime="20151202 15:29:58.627"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:58.680" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20151202 15:29:58.680" starttime="20151202 15:29:58.678"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.683" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:58.682" starttime="20151202 15:29:58.681"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.685" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:58.684" starttime="20151202 15:29:58.683"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.688" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:58.689" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:58.690" starttime="20151202 15:29:58.687"></status>
</kw>
<msg timestamp="20151202 15:29:58.691" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:58.691" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,345 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:58.690" starttime="20151202 15:29:58.686"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.696" starttime="20151202 15:29:58.695"></status>
</kw>
<msg timestamp="20151202 15:29:58.697" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,345 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:58.697" starttime="20151202 15:29:58.692"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.703" starttime="20151202 15:29:58.701"></status>
</kw>
<msg timestamp="20151202 15:29:58.704" level="INFO">${return_log_entry} = 2015-12-02 15:29:58,345 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:58.703" starttime="20151202 15:29:58.698"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.710" starttime="20151202 15:29:58.709"></status>
</kw>
<msg timestamp="20151202 15:29:58.711" level="INFO">${resultCode} = POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:58.711" starttime="20151202 15:29:58.704"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.718" starttime="20151202 15:29:58.717"></status>
</kw>
<msg timestamp="20151202 15:29:58.720" level="INFO">${resultCode} = POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:58.719" starttime="20151202 15:29:58.712"></status>
</kw>
<msg timestamp="20151202 15:29:58.721" level="INFO">${type} = POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:58.720" starttime="20151202 15:29:58.674"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.727" starttime="20151202 15:29:58.726"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.729" starttime="20151202 15:29:58.728"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.731" starttime="20151202 15:29:58.730"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 15:29:58.738" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 15:29:58.738" starttime="20151202 15:29:58.736"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:58.739" starttime="20151202 15:29:58.735"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:58.739" starttime="20151202 15:29:58.731"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:58.740" starttime="20151202 15:29:58.722"></status>
</kw>
<msg timestamp="20151202 15:29:58.743" level="INFO">${rc} = OK</msg>
<msg timestamp="20151202 15:29:58.743" level="INFO">${provId} = 1</msg>
<msg timestamp="20151202 15:29:58.743" level="INFO">${imsi} = 232201667725500</msg>
<msg timestamp="20151202 15:29:58.744" level="INFO">${id} = 166352</msg>
<msg timestamp="20151202 15:29:58.744" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20151202 15:29:58.744" level="INFO">${tariffId} = 101004</msg>
<msg timestamp="20151202 15:29:58.745" level="INFO">${type} = POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:58.742" starttime="20151202 15:29:57.880"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.759" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:58.760" starttime="20151202 15:29:58.757"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:58.761" starttime="20151202 15:29:58.756"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.764" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:58.765" starttime="20151202 15:29:58.762"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:58.765" starttime="20151202 15:29:58.761"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.770" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:58.770" starttime="20151202 15:29:58.768"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:58.771" starttime="20151202 15:29:58.766"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:58.772" starttime="20151202 15:29:58.753"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 15:29:58.774" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 15:29:58.775" starttime="20151202 15:29:58.772"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.777" starttime="20151202 15:29:58.775"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.779" starttime="20151202 15:29:58.777"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.781" starttime="20151202 15:29:58.779"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.782" starttime="20151202 15:29:58.781"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.784" starttime="20151202 15:29:58.783"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:58.786" starttime="20151202 15:29:58.785"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 15:29:58.789" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725500', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=166352']</msg>
<msg timestamp="20151202 15:29:59.037" level="INFO">15:29:59,030 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
15:29:59,031 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166353
15:29:59,032 INFO  [log] LowLevelOps.getMainAccount.output.balance=732400
15:29:59,033 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
15:29:59,034 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 15:29:59.039" starttime="20151202 15:29:58.788"></status>
</kw>
<msg timestamp="20151202 15:29:59.043" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:59.044" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 15:29:59.041" starttime="20151202 15:29:58.787"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:59.060" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20151202 15:29:59.059" starttime="20151202 15:29:59.056"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.064" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:59.064" starttime="20151202 15:29:59.061"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.069" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:59.068" starttime="20151202 15:29:59.066"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.075" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:59.076" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:59.077" starttime="20151202 15:29:59.072"></status>
</kw>
<msg timestamp="20151202 15:29:59.079" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:59.080" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,030 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:59.078" starttime="20151202 15:29:59.070"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.090" starttime="20151202 15:29:59.087"></status>
</kw>
<msg timestamp="20151202 15:29:59.091" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,030 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:59.091" starttime="20151202 15:29:59.081"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.100" starttime="20151202 15:29:59.098"></status>
</kw>
<msg timestamp="20151202 15:29:59.102" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,030 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:29:59.101" starttime="20151202 15:29:59.093"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.111" starttime="20151202 15:29:59.109"></status>
</kw>
<msg timestamp="20151202 15:29:59.113" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:59.113" starttime="20151202 15:29:59.103"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.125" starttime="20151202 15:29:59.123"></status>
</kw>
<msg timestamp="20151202 15:29:59.127" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:59.126" starttime="20151202 15:29:59.114"></status>
</kw>
<msg timestamp="20151202 15:29:59.129" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:29:59.128" starttime="20151202 15:29:59.048"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:59.139" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20151202 15:29:59.138" starttime="20151202 15:29:59.137"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.141" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:59.141" starttime="20151202 15:29:59.139"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.143" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:59.143" starttime="20151202 15:29:59.142"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.147" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:59.147" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:59.148" starttime="20151202 15:29:59.145"></status>
</kw>
<msg timestamp="20151202 15:29:59.149" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:59.149" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,031 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166353</msg>
<status status="PASS" endtime="20151202 15:29:59.149" starttime="20151202 15:29:59.144"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.154" starttime="20151202 15:29:59.153"></status>
</kw>
<msg timestamp="20151202 15:29:59.155" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,031 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166353</msg>
<status status="PASS" endtime="20151202 15:29:59.155" starttime="20151202 15:29:59.150"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.161" starttime="20151202 15:29:59.159"></status>
</kw>
<msg timestamp="20151202 15:29:59.162" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,031 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166353</msg>
<status status="PASS" endtime="20151202 15:29:59.161" starttime="20151202 15:29:59.156"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.167" starttime="20151202 15:29:59.166"></status>
</kw>
<msg timestamp="20151202 15:29:59.168" level="INFO">${resultCode} = 166353</msg>
<status status="PASS" endtime="20151202 15:29:59.168" starttime="20151202 15:29:59.162"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.175" starttime="20151202 15:29:59.174"></status>
</kw>
<msg timestamp="20151202 15:29:59.178" level="INFO">${resultCode} = 166353</msg>
<status status="PASS" endtime="20151202 15:29:59.177" starttime="20151202 15:29:59.169"></status>
</kw>
<msg timestamp="20151202 15:29:59.179" level="INFO">${accountId} = 166353</msg>
<status status="PASS" endtime="20151202 15:29:59.178" starttime="20151202 15:29:59.131"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:59.186" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20151202 15:29:59.186" starttime="20151202 15:29:59.184"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.188" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:59.188" starttime="20151202 15:29:59.187"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.191" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:59.190" starttime="20151202 15:29:59.189"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.194" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:59.195" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:59.195" starttime="20151202 15:29:59.193"></status>
</kw>
<msg timestamp="20151202 15:29:59.196" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:59.197" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,032 INFO  [log] LowLevelOps.getMainAccount.output.balance=732400</msg>
<status status="PASS" endtime="20151202 15:29:59.196" starttime="20151202 15:29:59.191"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.202" starttime="20151202 15:29:59.201"></status>
</kw>
<msg timestamp="20151202 15:29:59.203" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,032 INFO  [log] LowLevelOps.getMainAccount.output.balance=732400</msg>
<status status="PASS" endtime="20151202 15:29:59.202" starttime="20151202 15:29:59.197"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.208" starttime="20151202 15:29:59.207"></status>
</kw>
<msg timestamp="20151202 15:29:59.209" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,032 INFO  [log] LowLevelOps.getMainAccount.output.balance=732400</msg>
<status status="PASS" endtime="20151202 15:29:59.208" starttime="20151202 15:29:59.203"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.215" starttime="20151202 15:29:59.213"></status>
</kw>
<msg timestamp="20151202 15:29:59.216" level="INFO">${resultCode} = 732400</msg>
<status status="PASS" endtime="20151202 15:29:59.215" starttime="20151202 15:29:59.210"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.222" starttime="20151202 15:29:59.221"></status>
</kw>
<msg timestamp="20151202 15:29:59.223" level="INFO">${resultCode} = 732400</msg>
<status status="PASS" endtime="20151202 15:29:59.223" starttime="20151202 15:29:59.216"></status>
</kw>
<msg timestamp="20151202 15:29:59.225" level="INFO">${balance} = 732400</msg>
<status status="PASS" endtime="20151202 15:29:59.224" starttime="20151202 15:29:59.180"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:59.236" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20151202 15:29:59.235" starttime="20151202 15:29:59.230"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.242" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:59.241" starttime="20151202 15:29:59.238"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.247" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:59.246" starttime="20151202 15:29:59.244"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.254" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:59.256" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:59.257" starttime="20151202 15:29:59.251"></status>
</kw>
<msg timestamp="20151202 15:29:59.260" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:59.261" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,033 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 15:29:59.258" starttime="20151202 15:29:59.249"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.272" starttime="20151202 15:29:59.269"></status>
</kw>
<msg timestamp="20151202 15:29:59.274" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,033 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 15:29:59.273" starttime="20151202 15:29:59.262"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.285" starttime="20151202 15:29:59.282"></status>
</kw>
<msg timestamp="20151202 15:29:59.287" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,033 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 15:29:59.286" starttime="20151202 15:29:59.276"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.299" starttime="20151202 15:29:59.296"></status>
</kw>
<msg timestamp="20151202 15:29:59.301" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151202 15:29:59.300" starttime="20151202 15:29:59.289"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.316" starttime="20151202 15:29:59.314"></status>
</kw>
<msg timestamp="20151202 15:29:59.319" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151202 15:29:59.318" starttime="20151202 15:29:59.303"></status>
</kw>
<msg timestamp="20151202 15:29:59.321" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20151202 15:29:59.320" starttime="20151202 15:29:59.226"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:29:59.339" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20151202 15:29:59.338" starttime="20151202 15:29:59.333"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.344" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:29:59.344" starttime="20151202 15:29:59.341"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.349" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:29:59.348" starttime="20151202 15:29:59.346"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.357" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:29:59.359" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:29:59.360" starttime="20151202 15:29:59.354"></status>
</kw>
<msg timestamp="20151202 15:29:59.362" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:29:59.363" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,034 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 15:29:59.361" starttime="20151202 15:29:59.351"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.374" starttime="20151202 15:29:59.372"></status>
</kw>
<msg timestamp="20151202 15:29:59.377" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,034 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 15:29:59.376" starttime="20151202 15:29:59.365"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.386" starttime="20151202 15:29:59.385"></status>
</kw>
<msg timestamp="20151202 15:29:59.387" level="INFO">${return_log_entry} = 2015-12-02 15:29:59,034 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 15:29:59.386" starttime="20151202 15:29:59.378"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.392" starttime="20151202 15:29:59.391"></status>
</kw>
<msg timestamp="20151202 15:29:59.393" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151202 15:29:59.392" starttime="20151202 15:29:59.387"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.400" starttime="20151202 15:29:59.399"></status>
</kw>
<msg timestamp="20151202 15:29:59.401" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151202 15:29:59.400" starttime="20151202 15:29:59.394"></status>
</kw>
<msg timestamp="20151202 15:29:59.402" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20151202 15:29:59.401" starttime="20151202 15:29:59.324"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.408" starttime="20151202 15:29:59.407"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.410" starttime="20151202 15:29:59.409"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.411" starttime="20151202 15:29:59.410"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 15:29:59.418" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 15:29:59.418" starttime="20151202 15:29:59.416"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:59.419" starttime="20151202 15:29:59.415"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:59.420" starttime="20151202 15:29:59.412"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:59.420" starttime="20151202 15:29:59.403"></status>
</kw>
<msg timestamp="20151202 15:29:59.422" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20151202 15:29:59.423" level="INFO">${accId} = 166353</msg>
<msg timestamp="20151202 15:29:59.423" level="INFO">${bal} = 732400</msg>
<msg timestamp="20151202 15:29:59.423" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20151202 15:29:59.424" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20151202 15:29:59.421" starttime="20151202 15:29:58.747"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account: ${bal}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:59.426" level="INFO">Account: 732400</msg>
<status status="PASS" endtime="20151202 15:29:59.426" starttime="20151202 15:29:59.424"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Should Be Equal As Numbers</arg>
<arg>${TESTSUBCRIBERS PP DEFAULT SLICE COSTS}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and actual balance mismatch!</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.428" starttime="20151202 15:29:59.427"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check OK!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:29:59.430" level="INFO">Account balance check OK!</msg>
<status status="PASS" endtime="20151202 15:29:59.430" starttime="20151202 15:29:59.429"></status>
</kw>
<doc>Test creates the data session, sends two updates of the session and finally closes the session. Session consumes 9.77 MB

Arguments:
none
Returns:
none
Fails: in case CG session fails

=================================================================================</doc>
<tags>
<tag>DATA_only</tag>
<tag>matko.sanseovic</tag>
<tag>mTel_PPLIGHT_TB25_supported</tag>
</tags>
<status status="PASS" critical="yes" endtime="20151202 15:29:59.431" starttime="20151202 15:29:32.169"></status>
</test>
<test id="s1-t3" name="Single NOK UnknownLocation Data Session">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.441" starttime="20151202 15:29:59.440"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<msg timestamp="20151202 15:29:59.443" level="INFO">${INITIAL_BALANCE} = 0</msg>
<status status="PASS" endtime="20151202 15:29:59.442" starttime="20151202 15:29:59.441"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>1</arg>
<arg>${TESTSUBCRIBERS PP IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
<arg>POSTPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS PP DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.456" level="INFO">msg=crce_host=10.105.125.159</msg>
<status status="PASS" endtime="20151202 15:29:59.457" starttime="20151202 15:29:59.455"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.458" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20151202 15:29:59.459" starttime="20151202 15:29:59.457"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.461" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20151202 15:29:59.461" starttime="20151202 15:29:59.459"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.463" level="INFO">msg=amount=1</msg>
<status status="PASS" endtime="20151202 15:29:59.463" starttime="20151202 15:29:59.462"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.465" level="INFO">msg=imsiRangeStart=232201667725500</msg>
<status status="PASS" endtime="20151202 15:29:59.465" starttime="20151202 15:29:59.464"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.467" level="INFO">msg=msisdnRangeStart=43667725500</msg>
<status status="PASS" endtime="20151202 15:29:59.468" starttime="20151202 15:29:59.466"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.469" level="INFO">msg=type=POSTPAID</msg>
<status status="PASS" endtime="20151202 15:29:59.470" starttime="20151202 15:29:59.468"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.471" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20151202 15:29:59.472" starttime="20151202 15:29:59.470"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.473" level="INFO">msg=tariffId=101004</msg>
<status status="PASS" endtime="20151202 15:29:59.474" starttime="20151202 15:29:59.472"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.476" level="INFO">msg=balance=0</msg>
<status status="PASS" endtime="20151202 15:29:59.476" starttime="20151202 15:29:59.475"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.484" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:59.485" starttime="20151202 15:29:59.482"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:59.485" starttime="20151202 15:29:59.481"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.489" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:59.489" starttime="20151202 15:29:59.487"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:59.490" starttime="20151202 15:29:59.486"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.493" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:29:59.493" starttime="20151202 15:29:59.491"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:59.494" starttime="20151202 15:29:59.490"></status>
</kw>
<status status="PASS" endtime="20151202 15:29:59.495" starttime="20151202 15:29:59.478"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 15:29:59.497" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 15:29:59.497" starttime="20151202 15:29:59.495"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.499" starttime="20151202 15:29:59.498"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.501" starttime="20151202 15:29:59.500"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.503" starttime="20151202 15:29:59.502"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.505" starttime="20151202 15:29:59.504"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.506" starttime="20151202 15:29:59.505"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.508" starttime="20151202 15:29:59.507"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.510" starttime="20151202 15:29:59.509"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.512" starttime="20151202 15:29:59.511"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.514" starttime="20151202 15:29:59.513"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.517" starttime="20151202 15:29:59.515"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.521" starttime="20151202 15:29:59.519"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:29:59.524" starttime="20151202 15:29:59.522"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 15:29:59.529" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0']</msg>
<msg timestamp="20151202 15:30:00.639" level="INFO">15:30:00,636 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:30:00.641" starttime="20151202 15:29:59.527"></status>
</kw>
<msg timestamp="20151202 15:30:00.646" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:00.647" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 15:30:00.644" starttime="20151202 15:29:59.526"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:30:00.666" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20151202 15:30:00.665" starttime="20151202 15:30:00.661"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:00.672" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:30:00.671" starttime="20151202 15:30:00.668"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:00.677" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:30:00.676" starttime="20151202 15:30:00.673"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:30:00.684" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:30:00.685" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20151202 15:30:00.686" starttime="20151202 15:30:00.681"></status>
</kw>
<msg timestamp="20151202 15:30:00.689" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:00.690" level="INFO">${return_log_entry} = 2015-12-02 15:30:00,636 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:30:00.688" starttime="20151202 15:30:00.678"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:00.702" starttime="20151202 15:30:00.699"></status>
</kw>
<msg timestamp="20151202 15:30:00.704" level="INFO">${return_log_entry} = 2015-12-02 15:30:00,636 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:30:00.703" starttime="20151202 15:30:00.691"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:00.714" starttime="20151202 15:30:00.712"></status>
</kw>
<msg timestamp="20151202 15:30:00.717" level="INFO">${return_log_entry} = 2015-12-02 15:30:00,636 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:30:00.716" starttime="20151202 15:30:00.705"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:00.728" starttime="20151202 15:30:00.725"></status>
</kw>
<msg timestamp="20151202 15:30:00.730" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:30:00.729" starttime="20151202 15:30:00.718"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:00.745" starttime="20151202 15:30:00.742"></status>
</kw>
<msg timestamp="20151202 15:30:00.747" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:30:00.746" starttime="20151202 15:30:00.732"></status>
</kw>
<msg timestamp="20151202 15:30:00.749" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:30:00.749" starttime="20151202 15:30:00.652"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:00.761" starttime="20151202 15:30:00.759"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:00.762" starttime="20151202 15:30:00.761"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:00.764" starttime="20151202 15:30:00.763"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 15:30:00.770" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 15:30:00.771" starttime="20151202 15:30:00.769"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:00.771" starttime="20151202 15:30:00.767"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:00.772" starttime="20151202 15:30:00.764"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:00.772" starttime="20151202 15:30:00.752"></status>
</kw>
<msg timestamp="20151202 15:30:00.774" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20151202 15:30:00.773" starttime="20151202 15:29:59.445"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20151202 15:30:00.776" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 15:30:00.776" starttime="20151202 15:30:00.775"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:30:00.778" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20151202 15:30:00.779" starttime="20151202 15:30:00.777"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run Data Session *******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:00.780" starttime="20151202 15:30:00.779"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the data session...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:30:00.782" level="INFO">Running the data session...</msg>
<status status="PASS" endtime="20151202 15:30:00.782" starttime="20151202 15:30:00.781"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Short 767b Data Session">
<doc>Runs a standard data session in total of 767B (CCRi - CCRt)</doc>
<arguments>
<arg>${TESTSUBCRIBERS PP IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
<arg>${DIAM HPLMN UNKNOWN LOCATION}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${DIAM GW HOST}</arg>
<arg>${DIAM GW PORT}</arg>
<arg>${DIAM GW REALM}</arg>
<arg>${DIAM GGSN FQDN}</arg>
<arg>${DIAM GGSN REALM}</arg>
<arg>${DIAM GGSN VENDORID}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard Data CGS">
<doc>Runs a standard Data session (meaning a session that needs only location as parameter) for the passed cgs file</doc>
<arguments>
<arg>data767b</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${location}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${diam_host}</arg>
<arg>${diam_port}</arg>
<arg>${diam_gw_realm}</arg>
<arg>${diam_ggsn_fqdn}</arg>
<arg>${diam_ggsn_realm}</arg>
<arg>${diam_ggsn_vendorid}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20151202 15:30:00.800" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-subscribers.csv</msg>
<status status="PASS" endtime="20151202 15:30:00.799" starttime="20151202 15:30:00.798"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20151202 15:30:00.802" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-fleXml.csv</msg>
<status status="PASS" endtime="20151202 15:30:00.801" starttime="20151202 15:30:00.800"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20151202 15:30:00.804" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-workspace.ini</msg>
<status status="PASS" endtime="20151202 15:30:00.804" starttime="20151202 15:30:00.802"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20151202 15:30:00.806" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/data767b.cgs</msg>
<status status="PASS" endtime="20151202 15:30:00.806" starttime="20151202 15:30:00.805"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:00.808" starttime="20151202 15:30:00.807"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20151202 15:30:00.811" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:30:00.811" starttime="20151202 15:30:00.808"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:00.813" starttime="20151202 15:30:00.812"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;location\n</arg>
</arguments>
<msg timestamp="20151202 15:30:00.815" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:30:00.816" starttime="20151202 15:30:00.814"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${location}\n</arg>
</arguments>
<msg timestamp="20151202 15:30:00.819" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:30:00.819" starttime="20151202 15:30:00.817"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:00.821" starttime="20151202 15:30:00.820"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20151202 15:30:00.823" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:30:00.824" starttime="20151202 15:30:00.821"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ndiamGwHost=${diam_host} \ndiamGwPort=${diam_port} \ndiamGwRealm=${diam_gw_realm} \ndiamGgsnFqdn=${diam_ggsn_fqdn} \ndiamGgsnRealm=${diam_ggsn_realm} \ndiamGgsnVendorId=${diam_ggsn_vendorid} \ndiamGwConnectTimeoutSecs=20</arg>
</arguments>
<msg timestamp="20151202 15:30:00.828" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:30:00.828" starttime="20151202 15:30:00.824"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:00.830" starttime="20151202 15:30:00.829"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20151202 15:30:00.838" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/data767b.cgs /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/data767b-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20151202 15:30:08.996" level="INFO">${rc} = 1</msg>
<status status="PASS" endtime="20151202 15:30:08.993" starttime="20151202 15:30:00.831"></status>
</kw>
<msg timestamp="20151202 15:30:08.999" level="INFO">${rc} = 1</msg>
<status status="PASS" endtime="20151202 15:30:08.998" starttime="20151202 15:30:00.792"></status>
</kw>
<msg timestamp="20151202 15:30:09.003" level="INFO">${rc} = 1</msg>
<status status="PASS" endtime="20151202 15:30:09.001" starttime="20151202 15:30:00.785"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:30:09.007" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20151202 15:30:09.008" starttime="20151202 15:30:09.005"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>1</arg>
<arg>msg=CG Session ended with rc=${rc} other than 1!</arg>
</arguments>
<msg timestamp="20151202 15:30:09.014" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 15:30:09.015" starttime="20151202 15:30:09.011"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.019" starttime="20151202 15:30:09.017"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.049" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:30:09.050" starttime="20151202 15:30:09.045"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:09.051" starttime="20151202 15:30:09.042"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.058" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:30:09.059" starttime="20151202 15:30:09.055"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:09.060" starttime="20151202 15:30:09.053"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.067" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:30:09.069" starttime="20151202 15:30:09.064"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:09.070" starttime="20151202 15:30:09.062"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:09.071" starttime="20151202 15:30:09.035"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.076" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 15:30:09.076" starttime="20151202 15:30:09.073"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.080" starttime="20151202 15:30:09.078"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.085" starttime="20151202 15:30:09.082"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.089" starttime="20151202 15:30:09.086"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.092" starttime="20151202 15:30:09.090"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.095" starttime="20151202 15:30:09.093"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.100" starttime="20151202 15:30:09.097"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 15:30:09.107" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725500']</msg>
<msg timestamp="20151202 15:30:09.354" level="INFO">15:30:09,340 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
15:30:09,342 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
15:30:09,343 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166357
15:30:09,345 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500
15:30:09,347 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
15:30:09,348 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004
15:30:09,350 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID
15:30:09,351 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20151202 15:30:09.355" starttime="20151202 15:30:09.104"></status>
</kw>
<msg timestamp="20151202 15:30:09.358" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:09.359" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 15:30:09.357" starttime="20151202 15:30:09.102"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:30:09.373" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20151202 15:30:09.372" starttime="20151202 15:30:09.369"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.378" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:30:09.377" starttime="20151202 15:30:09.375"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.382" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:30:09.381" starttime="20151202 15:30:09.379"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.387" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:30:09.388" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:30:09.388" starttime="20151202 15:30:09.385"></status>
</kw>
<msg timestamp="20151202 15:30:09.389" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:09.389" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,340 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:30:09.389" starttime="20151202 15:30:09.384"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.395" starttime="20151202 15:30:09.394"></status>
</kw>
<msg timestamp="20151202 15:30:09.396" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,340 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:30:09.395" starttime="20151202 15:30:09.390"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.401" starttime="20151202 15:30:09.399"></status>
</kw>
<msg timestamp="20151202 15:30:09.402" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,340 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:30:09.401" starttime="20151202 15:30:09.396"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.407" starttime="20151202 15:30:09.405"></status>
</kw>
<msg timestamp="20151202 15:30:09.407" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:30:09.407" starttime="20151202 15:30:09.402"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.416" starttime="20151202 15:30:09.414"></status>
</kw>
<msg timestamp="20151202 15:30:09.417" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:30:09.416" starttime="20151202 15:30:09.408"></status>
</kw>
<msg timestamp="20151202 15:30:09.418" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:30:09.418" starttime="20151202 15:30:09.362"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:30:09.425" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20151202 15:30:09.424" starttime="20151202 15:30:09.423"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.427" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:30:09.426" starttime="20151202 15:30:09.425"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.429" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:30:09.428" starttime="20151202 15:30:09.427"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.432" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:30:09.433" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:30:09.433" starttime="20151202 15:30:09.431"></status>
</kw>
<msg timestamp="20151202 15:30:09.434" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:09.435" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,342 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 15:30:09.434" starttime="20151202 15:30:09.430"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.440" starttime="20151202 15:30:09.439"></status>
</kw>
<msg timestamp="20151202 15:30:09.441" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,342 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 15:30:09.440" starttime="20151202 15:30:09.435"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.445" starttime="20151202 15:30:09.444"></status>
</kw>
<msg timestamp="20151202 15:30:09.446" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,342 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 15:30:09.446" starttime="20151202 15:30:09.441"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.451" starttime="20151202 15:30:09.450"></status>
</kw>
<msg timestamp="20151202 15:30:09.452" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151202 15:30:09.452" starttime="20151202 15:30:09.447"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.459" starttime="20151202 15:30:09.458"></status>
</kw>
<msg timestamp="20151202 15:30:09.460" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151202 15:30:09.460" starttime="20151202 15:30:09.453"></status>
</kw>
<msg timestamp="20151202 15:30:09.461" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20151202 15:30:09.461" starttime="20151202 15:30:09.419"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:30:09.468" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20151202 15:30:09.467" starttime="20151202 15:30:09.466"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.470" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:30:09.470" starttime="20151202 15:30:09.469"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.472" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:30:09.472" starttime="20151202 15:30:09.471"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.475" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:30:09.476" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:30:09.477" starttime="20151202 15:30:09.474"></status>
</kw>
<msg timestamp="20151202 15:30:09.478" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:09.478" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,345 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 15:30:09.477" starttime="20151202 15:30:09.473"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.483" starttime="20151202 15:30:09.482"></status>
</kw>
<msg timestamp="20151202 15:30:09.484" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,345 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 15:30:09.483" starttime="20151202 15:30:09.479"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.488" starttime="20151202 15:30:09.487"></status>
</kw>
<msg timestamp="20151202 15:30:09.489" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,345 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 15:30:09.489" starttime="20151202 15:30:09.484"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.494" starttime="20151202 15:30:09.493"></status>
</kw>
<msg timestamp="20151202 15:30:09.495" level="INFO">${resultCode} = 232201667725500</msg>
<status status="PASS" endtime="20151202 15:30:09.495" starttime="20151202 15:30:09.490"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.502" starttime="20151202 15:30:09.501"></status>
</kw>
<msg timestamp="20151202 15:30:09.503" level="INFO">${resultCode} = 232201667725500</msg>
<status status="PASS" endtime="20151202 15:30:09.503" starttime="20151202 15:30:09.496"></status>
</kw>
<msg timestamp="20151202 15:30:09.504" level="INFO">${imsi} = 232201667725500</msg>
<status status="PASS" endtime="20151202 15:30:09.504" starttime="20151202 15:30:09.462"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:30:09.511" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20151202 15:30:09.511" starttime="20151202 15:30:09.509"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.513" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:30:09.513" starttime="20151202 15:30:09.512"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.515" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:30:09.515" starttime="20151202 15:30:09.514"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.518" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:30:09.519" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:30:09.520" starttime="20151202 15:30:09.517"></status>
</kw>
<msg timestamp="20151202 15:30:09.521" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:09.521" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,343 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166357</msg>
<status status="PASS" endtime="20151202 15:30:09.520" starttime="20151202 15:30:09.516"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.526" starttime="20151202 15:30:09.525"></status>
</kw>
<msg timestamp="20151202 15:30:09.527" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,343 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166357</msg>
<status status="PASS" endtime="20151202 15:30:09.526" starttime="20151202 15:30:09.522"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.532" starttime="20151202 15:30:09.530"></status>
</kw>
<msg timestamp="20151202 15:30:09.532" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,343 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166357</msg>
<status status="PASS" endtime="20151202 15:30:09.532" starttime="20151202 15:30:09.527"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.537" starttime="20151202 15:30:09.536"></status>
</kw>
<msg timestamp="20151202 15:30:09.538" level="INFO">${resultCode} = 166357</msg>
<status status="PASS" endtime="20151202 15:30:09.538" starttime="20151202 15:30:09.533"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.545" starttime="20151202 15:30:09.544"></status>
</kw>
<msg timestamp="20151202 15:30:09.546" level="INFO">${resultCode} = 166357</msg>
<status status="PASS" endtime="20151202 15:30:09.546" starttime="20151202 15:30:09.539"></status>
</kw>
<msg timestamp="20151202 15:30:09.547" level="INFO">${id} = 166357</msg>
<status status="PASS" endtime="20151202 15:30:09.547" starttime="20151202 15:30:09.505"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:30:09.599" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20151202 15:30:09.598" starttime="20151202 15:30:09.594"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.605" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:30:09.604" starttime="20151202 15:30:09.601"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.610" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:30:09.609" starttime="20151202 15:30:09.606"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.618" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:30:09.621" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:30:09.622" starttime="20151202 15:30:09.615"></status>
</kw>
<msg timestamp="20151202 15:30:09.624" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:09.625" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,347 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 15:30:09.623" starttime="20151202 15:30:09.612"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.637" starttime="20151202 15:30:09.634"></status>
</kw>
<msg timestamp="20151202 15:30:09.639" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,347 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 15:30:09.638" starttime="20151202 15:30:09.626"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.649" starttime="20151202 15:30:09.647"></status>
</kw>
<msg timestamp="20151202 15:30:09.651" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,347 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 15:30:09.651" starttime="20151202 15:30:09.640"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.663" starttime="20151202 15:30:09.660"></status>
</kw>
<msg timestamp="20151202 15:30:09.665" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151202 15:30:09.664" starttime="20151202 15:30:09.653"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.679" starttime="20151202 15:30:09.677"></status>
</kw>
<msg timestamp="20151202 15:30:09.681" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151202 15:30:09.681" starttime="20151202 15:30:09.666"></status>
</kw>
<msg timestamp="20151202 15:30:09.684" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20151202 15:30:09.683" starttime="20151202 15:30:09.548"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:30:09.699" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20151202 15:30:09.698" starttime="20151202 15:30:09.695"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.703" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:30:09.702" starttime="20151202 15:30:09.700"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.708" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:30:09.707" starttime="20151202 15:30:09.705"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.715" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:30:09.717" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:30:09.718" starttime="20151202 15:30:09.712"></status>
</kw>
<msg timestamp="20151202 15:30:09.720" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:09.721" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,348 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 15:30:09.719" starttime="20151202 15:30:09.709"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.731" starttime="20151202 15:30:09.729"></status>
</kw>
<msg timestamp="20151202 15:30:09.734" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,348 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 15:30:09.733" starttime="20151202 15:30:09.722"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.744" starttime="20151202 15:30:09.742"></status>
</kw>
<msg timestamp="20151202 15:30:09.746" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,348 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 15:30:09.745" starttime="20151202 15:30:09.735"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.757" starttime="20151202 15:30:09.755"></status>
</kw>
<msg timestamp="20151202 15:30:09.760" level="INFO">${resultCode} = 101004</msg>
<status status="PASS" endtime="20151202 15:30:09.759" starttime="20151202 15:30:09.748"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.773" starttime="20151202 15:30:09.771"></status>
</kw>
<msg timestamp="20151202 15:30:09.775" level="INFO">${resultCode} = 101004</msg>
<status status="PASS" endtime="20151202 15:30:09.775" starttime="20151202 15:30:09.761"></status>
</kw>
<msg timestamp="20151202 15:30:09.778" level="INFO">${tariffId} = 101004</msg>
<status status="PASS" endtime="20151202 15:30:09.777" starttime="20151202 15:30:09.687"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:30:09.791" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20151202 15:30:09.790" starttime="20151202 15:30:09.787"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.795" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:30:09.794" starttime="20151202 15:30:09.792"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.799" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:30:09.799" starttime="20151202 15:30:09.797"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.806" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:30:09.807" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 15:30:09.808" starttime="20151202 15:30:09.803"></status>
</kw>
<msg timestamp="20151202 15:30:09.810" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:09.811" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,350 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 15:30:09.809" starttime="20151202 15:30:09.801"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.821" starttime="20151202 15:30:09.818"></status>
</kw>
<msg timestamp="20151202 15:30:09.823" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,350 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 15:30:09.822" starttime="20151202 15:30:09.812"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.833" starttime="20151202 15:30:09.830"></status>
</kw>
<msg timestamp="20151202 15:30:09.834" level="INFO">${return_log_entry} = 2015-12-02 15:30:09,350 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 15:30:09.834" starttime="20151202 15:30:09.824"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.845" starttime="20151202 15:30:09.842"></status>
</kw>
<msg timestamp="20151202 15:30:09.847" level="INFO">${resultCode} = POSTPAID</msg>
<status status="PASS" endtime="20151202 15:30:09.846" starttime="20151202 15:30:09.836"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.861" starttime="20151202 15:30:09.858"></status>
</kw>
<msg timestamp="20151202 15:30:09.862" level="INFO">${resultCode} = POSTPAID</msg>
<status status="PASS" endtime="20151202 15:30:09.862" starttime="20151202 15:30:09.848"></status>
</kw>
<msg timestamp="20151202 15:30:09.865" level="INFO">${type} = POSTPAID</msg>
<status status="PASS" endtime="20151202 15:30:09.864" starttime="20151202 15:30:09.780"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.876" starttime="20151202 15:30:09.874"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.879" starttime="20151202 15:30:09.877"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.882" starttime="20151202 15:30:09.881"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 15:30:09.890" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 15:30:09.890" starttime="20151202 15:30:09.888"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:09.891" starttime="20151202 15:30:09.887"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:09.892" starttime="20151202 15:30:09.884"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:09.892" starttime="20151202 15:30:09.867"></status>
</kw>
<msg timestamp="20151202 15:30:09.894" level="INFO">${rc} = OK</msg>
<msg timestamp="20151202 15:30:09.894" level="INFO">${provId} = 1</msg>
<msg timestamp="20151202 15:30:09.895" level="INFO">${imsi} = 232201667725500</msg>
<msg timestamp="20151202 15:30:09.895" level="INFO">${id} = 166357</msg>
<msg timestamp="20151202 15:30:09.895" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20151202 15:30:09.896" level="INFO">${tariffId} = 101004</msg>
<msg timestamp="20151202 15:30:09.896" level="INFO">${type} = POSTPAID</msg>
<status status="PASS" endtime="20151202 15:30:09.894" starttime="20151202 15:30:09.024"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.909" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:30:09.910" starttime="20151202 15:30:09.908"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:09.911" starttime="20151202 15:30:09.906"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.914" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:30:09.915" starttime="20151202 15:30:09.912"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:09.915" starttime="20151202 15:30:09.911"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.918" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 15:30:09.919" starttime="20151202 15:30:09.917"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:09.919" starttime="20151202 15:30:09.916"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:09.920" starttime="20151202 15:30:09.903"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 15:30:09.922" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 15:30:09.922" starttime="20151202 15:30:09.921"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.924" starttime="20151202 15:30:09.923"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.926" starttime="20151202 15:30:09.925"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.928" starttime="20151202 15:30:09.927"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.929" starttime="20151202 15:30:09.929"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.931" starttime="20151202 15:30:09.930"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:09.933" starttime="20151202 15:30:09.932"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 15:30:09.936" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725500', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=166357']</msg>
<msg timestamp="20151202 15:30:10.157" level="INFO">15:30:10,146 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
15:30:10,148 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166358
15:30:10,150 INFO  [log] LowLevelOps.getMainAccount.output.balance=0
15:30:10,152 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
15:30:10,154 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 15:30:10.158" starttime="20151202 15:30:09.935"></status>
</kw>
<msg timestamp="20151202 15:30:10.163" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:10.163" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 15:30:10.161" starttime="20151202 15:30:09.934"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:30:10.178" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20151202 15:30:10.177" starttime="20151202 15:30:10.174"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.182" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:30:10.182" starttime="20151202 15:30:10.179"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.187" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:30:10.186" starttime="20151202 15:30:10.184"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.194" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:30:10.196" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:30:10.197" starttime="20151202 15:30:10.191"></status>
</kw>
<msg timestamp="20151202 15:30:10.199" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:10.200" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,146 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:30:10.198" starttime="20151202 15:30:10.189"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.211" starttime="20151202 15:30:10.208"></status>
</kw>
<msg timestamp="20151202 15:30:10.213" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,146 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:30:10.212" starttime="20151202 15:30:10.201"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.224" starttime="20151202 15:30:10.221"></status>
</kw>
<msg timestamp="20151202 15:30:10.226" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,146 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 15:30:10.225" starttime="20151202 15:30:10.214"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.237" starttime="20151202 15:30:10.234"></status>
</kw>
<msg timestamp="20151202 15:30:10.239" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:30:10.238" starttime="20151202 15:30:10.227"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.253" starttime="20151202 15:30:10.251"></status>
</kw>
<msg timestamp="20151202 15:30:10.256" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:30:10.255" starttime="20151202 15:30:10.240"></status>
</kw>
<msg timestamp="20151202 15:30:10.258" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 15:30:10.257" starttime="20151202 15:30:10.166"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:30:10.266" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20151202 15:30:10.265" starttime="20151202 15:30:10.264"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.268" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:30:10.267" starttime="20151202 15:30:10.266"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.270" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:30:10.269" starttime="20151202 15:30:10.268"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.273" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:30:10.274" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:30:10.274" starttime="20151202 15:30:10.271"></status>
</kw>
<msg timestamp="20151202 15:30:10.275" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:10.276" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,148 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166358</msg>
<status status="PASS" endtime="20151202 15:30:10.275" starttime="20151202 15:30:10.270"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.281" starttime="20151202 15:30:10.280"></status>
</kw>
<msg timestamp="20151202 15:30:10.282" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,148 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166358</msg>
<status status="PASS" endtime="20151202 15:30:10.281" starttime="20151202 15:30:10.276"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.287" starttime="20151202 15:30:10.285"></status>
</kw>
<msg timestamp="20151202 15:30:10.288" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,148 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166358</msg>
<status status="PASS" endtime="20151202 15:30:10.287" starttime="20151202 15:30:10.282"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.293" starttime="20151202 15:30:10.291"></status>
</kw>
<msg timestamp="20151202 15:30:10.294" level="INFO">${resultCode} = 166358</msg>
<status status="PASS" endtime="20151202 15:30:10.293" starttime="20151202 15:30:10.288"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.300" starttime="20151202 15:30:10.299"></status>
</kw>
<msg timestamp="20151202 15:30:10.301" level="INFO">${resultCode} = 166358</msg>
<status status="PASS" endtime="20151202 15:30:10.301" starttime="20151202 15:30:10.294"></status>
</kw>
<msg timestamp="20151202 15:30:10.302" level="INFO">${accountId} = 166358</msg>
<status status="PASS" endtime="20151202 15:30:10.302" starttime="20151202 15:30:10.260"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:30:10.309" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20151202 15:30:10.308" starttime="20151202 15:30:10.307"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.311" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:30:10.311" starttime="20151202 15:30:10.310"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.313" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:30:10.313" starttime="20151202 15:30:10.312"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.316" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:30:10.317" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:30:10.317" starttime="20151202 15:30:10.315"></status>
</kw>
<msg timestamp="20151202 15:30:10.318" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:10.319" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,150 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20151202 15:30:10.318" starttime="20151202 15:30:10.314"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.324" starttime="20151202 15:30:10.322"></status>
</kw>
<msg timestamp="20151202 15:30:10.324" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,150 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20151202 15:30:10.324" starttime="20151202 15:30:10.319"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.329" starttime="20151202 15:30:10.328"></status>
</kw>
<msg timestamp="20151202 15:30:10.330" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,150 INFO  [log] LowLevelOps.getMainAccount.output.balance=0</msg>
<status status="PASS" endtime="20151202 15:30:10.330" starttime="20151202 15:30:10.325"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.335" starttime="20151202 15:30:10.334"></status>
</kw>
<msg timestamp="20151202 15:30:10.336" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20151202 15:30:10.336" starttime="20151202 15:30:10.331"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.344" starttime="20151202 15:30:10.343"></status>
</kw>
<msg timestamp="20151202 15:30:10.345" level="INFO">${resultCode} = 0</msg>
<status status="PASS" endtime="20151202 15:30:10.345" starttime="20151202 15:30:10.337"></status>
</kw>
<msg timestamp="20151202 15:30:10.346" level="INFO">${balance} = 0</msg>
<status status="PASS" endtime="20151202 15:30:10.346" starttime="20151202 15:30:10.304"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:30:10.353" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20151202 15:30:10.353" starttime="20151202 15:30:10.351"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.355" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:30:10.355" starttime="20151202 15:30:10.354"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.357" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:30:10.357" starttime="20151202 15:30:10.356"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.360" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:30:10.361" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:30:10.362" starttime="20151202 15:30:10.359"></status>
</kw>
<msg timestamp="20151202 15:30:10.363" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:10.363" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,152 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 15:30:10.362" starttime="20151202 15:30:10.358"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.368" starttime="20151202 15:30:10.367"></status>
</kw>
<msg timestamp="20151202 15:30:10.369" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,152 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 15:30:10.368" starttime="20151202 15:30:10.364"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.374" starttime="20151202 15:30:10.372"></status>
</kw>
<msg timestamp="20151202 15:30:10.374" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,152 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 15:30:10.374" starttime="20151202 15:30:10.369"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.380" starttime="20151202 15:30:10.378"></status>
</kw>
<msg timestamp="20151202 15:30:10.381" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151202 15:30:10.380" starttime="20151202 15:30:10.375"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.388" starttime="20151202 15:30:10.386"></status>
</kw>
<msg timestamp="20151202 15:30:10.389" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151202 15:30:10.388" starttime="20151202 15:30:10.381"></status>
</kw>
<msg timestamp="20151202 15:30:10.390" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20151202 15:30:10.389" starttime="20151202 15:30:10.348"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 15:30:10.396" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20151202 15:30:10.396" starttime="20151202 15:30:10.395"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.399" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 15:30:10.398" starttime="20151202 15:30:10.397"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.401" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 15:30:10.400" starttime="20151202 15:30:10.399"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 15:30:10.404" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 15:30:10.405" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 15:30:10.405" starttime="20151202 15:30:10.403"></status>
</kw>
<msg timestamp="20151202 15:30:10.406" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 15:30:10.406" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,154 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 15:30:10.406" starttime="20151202 15:30:10.401"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.412" starttime="20151202 15:30:10.411"></status>
</kw>
<msg timestamp="20151202 15:30:10.413" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,154 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 15:30:10.412" starttime="20151202 15:30:10.407"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.418" starttime="20151202 15:30:10.417"></status>
</kw>
<msg timestamp="20151202 15:30:10.419" level="INFO">${return_log_entry} = 2015-12-02 15:30:10,154 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 15:30:10.418" starttime="20151202 15:30:10.413"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.424" starttime="20151202 15:30:10.422"></status>
</kw>
<msg timestamp="20151202 15:30:10.425" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151202 15:30:10.424" starttime="20151202 15:30:10.419"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.432" starttime="20151202 15:30:10.430"></status>
</kw>
<msg timestamp="20151202 15:30:10.432" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151202 15:30:10.432" starttime="20151202 15:30:10.425"></status>
</kw>
<msg timestamp="20151202 15:30:10.434" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20151202 15:30:10.433" starttime="20151202 15:30:10.391"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.439" starttime="20151202 15:30:10.438"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.441" starttime="20151202 15:30:10.440"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.442" starttime="20151202 15:30:10.441"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 15:30:10.449" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/DATA/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 15:30:10.449" starttime="20151202 15:30:10.447"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:10.450" starttime="20151202 15:30:10.446"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:10.450" starttime="20151202 15:30:10.443"></status>
</kw>
<status status="PASS" endtime="20151202 15:30:10.451" starttime="20151202 15:30:10.435"></status>
</kw>
<msg timestamp="20151202 15:30:10.453" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20151202 15:30:10.453" level="INFO">${accId} = 166358</msg>
<msg timestamp="20151202 15:30:10.454" level="INFO">${bal} = 0</msg>
<msg timestamp="20151202 15:30:10.454" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20151202 15:30:10.454" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20151202 15:30:10.452" starttime="20151202 15:30:09.898"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account: ${bal}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:30:10.456" level="INFO">Account: 0</msg>
<status status="PASS" endtime="20151202 15:30:10.457" starttime="20151202 15:30:10.455"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Should Be Equal As Numbers</arg>
<arg>${TESTSUBCRIBERS PP DEFAULT SLICE COSTS}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and actual balance mismatch!</arg>
</arguments>
<status status="PASS" endtime="20151202 15:30:10.458" starttime="20151202 15:30:10.457"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check OK!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 15:30:10.460" level="INFO">Account balance check OK!</msg>
<status status="PASS" endtime="20151202 15:30:10.460" starttime="20151202 15:30:10.459"></status>
</kw>
<doc>Test will attempt to start a simple data session with unknown location. Test should fail

Arguments:
none
Returns:
none
Fails: in case CG session fails

=================================================================================</doc>
<tags>
<tag>DATA_only</tag>
<tag>matko.sanseovic</tag>
<tag>mTel_PPLIGHT_TB25_supported</tag>
</tags>
<status status="PASS" critical="yes" endtime="20151202 15:30:10.461" starttime="20151202 15:29:59.433"></status>
</test>
<doc>Testing the postpaid subscriber's simple data session cases with CG

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20151202 15:30:10.519" starttime="20151202 15:29:09.936"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="3" info="" doc="" combined="" fail="0" links="">DATA_only</stat>
<stat pass="3" info="" doc="" combined="" fail="0" links="">matko.sanseovic</stat>
<stat pass="3" info="" doc="" combined="" fail="0" links="">mTel_PPLIGHT_TB25_supported</stat>
</tag>
<suite>
<stat pass="3" id="s1" fail="0" name="Postpaid-Data-Regression-Suite">Postpaid-Data-Regression-Suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
